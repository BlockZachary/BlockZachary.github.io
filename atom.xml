<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Zachary Blog</title>
  
  
  <link href="https://blockzachary.github.io/atom.xml" rel="self"/>
  
  <link href="https://blockzachary.github.io/"/>
  <updated>2024-08-08T20:46:00.000Z</updated>
  <id>https://blockzachary.github.io/</id>
  
  <author>
    <name>Zachary Block</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Shell</title>
    <link href="https://blockzachary.github.io/2024/08/08/Linux/Shell/"/>
    <id>https://blockzachary.github.io/2024/08/08/Linux/Shell/</id>
    <published>2024-08-08T20:46:00.000Z</published>
    <updated>2024-08-08T20:46:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Shell"><a href="#Shell" class="headerlink" title="Shell"></a>Shell</h1><h1 id="Shell-介绍"><a href="#Shell-介绍" class="headerlink" title="Shell 介绍"></a>Shell 介绍</h1><h2 id="什么是-Shell"><a href="#什么是-Shell" class="headerlink" title="什么是 Shell"></a>什么是 Shell</h2><ol><li>一种脚本语言、命令行解释器：可以将一组命令行打包为一个文件，调用操作系统的内核去执行这些命令</li><li>shell 中也支持条件判断、分支、定义函数、变量等功能</li><li>shell 脚本的扩展名一般以.sh 结尾，但没有强制要求</li></ol><h2 id="Shell-的应用"><a href="#Shell-的应用" class="headerlink" title="Shell 的应用"></a>Shell 的应用</h2><p>Shell 可以做什么呢？</p><ol><li>可以针对批量操作文件提取转换数据、生成报告</li><li>针对项目环境进行初始化</li><li>执行定时任务，巡检系统运行状态</li></ol><h2 id="Shell-解释器的分类"><a href="#Shell-解释器的分类" class="headerlink" title="Shell 解释器的分类"></a>Shell 解释器的分类</h2><p>通常包括</p><ul><li>csh</li><li>ksh</li><li>bash</li><li>zsh</li></ul><h1 id="Shell-查看"><a href="#Shell-查看" class="headerlink" title="Shell 查看"></a>Shell 查看</h1><ul><li>通过<code>cat /etc/shells</code>可以查看系统有哪些 shell 可以用</li><li>通过<code>echo $SHELL</code>可以查看当前使用的 shell</li><li>通过 <code>/bin/[SHELL名称]</code> 可以切换 shell</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1723122418207-69ad9f9b-1758-44e9-b039-fb9b29a4a483.png"></p><h1 id="Shell-变量"><a href="#Shell-变量" class="headerlink" title="Shell 变量"></a>Shell 变量</h1><p>创建一个 test.sh，并使用 VSCode 打开这个文件</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1723122572299-faf00cc1-08c9-4b8a-bbf5-04d3b02cd3df.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1723122579873-30a736b9-ffb6-4ff1-a8bb-96f4eb726475.png"></p><p>第一行需要声明一下这个文件 使用的是哪个解释器</p><p><code>#!/bin/bash</code></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1723122666472-f65c7b41-d792-418c-a166-ab567001b477.png"></p><h2 id="整数、字符串、数组变量"><a href="#整数、字符串、数组变量" class="headerlink" title="整数、字符串、数组变量"></a>整数、字符串、数组变量</h2><p>变量的定义和输出</p><p>整数</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1723122772099-15e13871-1896-479d-8d24-9d1e64140622.png"></p><p>字符串</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1723122794095-7526f6cf-003b-468f-926a-0c6b036e02a0.png"></p><p>数组</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1723122922314-18526296-b598-43ae-9e37-cdcfe953e5ad.png"></p><h2 id="命令行结果转为变量"><a href="#命令行结果转为变量" class="headerlink" title="命令行结果转为变量"></a>命令行结果转为变量</h2><p>打印 ls 命令返回的结果</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">file=$(ls -l)</span><br><span class="line">echo $&#123;file[@]&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1723123109423-7b49aefe-5e43-4f6c-b48a-87f45ffa1918.png"></p><h2 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h2><p>获取外部定义的环境变量</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1723123209608-a52a93b4-bc2b-4544-b815-598770e3319e.png"></p><p>变量的赋值</p><ul><li>:-</li><li>:&#x3D;</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">echo $&#123;VAR1:-&quot;hello VAR1&quot;&#125;</span><br><span class="line">echo $&#123;VAR2:=&quot;hello VAR2&quot;&#125;</span><br><span class="line">echo $VAR1</span><br><span class="line">echo $VAR2</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1723123381050-8ef728a3-91e2-45b3-be59-32a615cdb053.png"></p><h2 id="内置特殊变量"><a href="#内置特殊变量" class="headerlink" title="内置特殊变量"></a>内置特殊变量</h2><p>特殊的一些参数</p><ul><li>$0 代表当前脚本名称</li><li>$1 $2 $3 代表脚本的参数</li><li>$# 代表脚本的参数个数</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1723123553078-eb0998a3-b72c-43a6-be23-27b9721f363b.png"></p><h1 id="控制流"><a href="#控制流" class="headerlink" title="控制流"></a>控制流</h1><h2 id="if"><a href="#if" class="headerlink" title="if"></a>if</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">a=10</span><br><span class="line">b=20</span><br><span class="line"></span><br><span class="line">if [ $a -gt $b ]; then</span><br><span class="line">    echo &quot;$a is greater than $b&quot;</span><br><span class="line">else</span><br><span class="line">    echo &quot;$b is greater than $a&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1723123793041-92bd4c58-376a-42f5-a094-fa83e40af8e3.png"></p><h2 id="for"><a href="#for" class="headerlink" title="for"></a>for</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">for num in 1 2 3 4 5; do</span><br><span class="line">    echo &quot;this number is : $num&quot;</span><br><span class="line">done</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1723123877164-c5db7048-96bc-40a4-836c-f63ca5905fda.png"></p><p>循环遍历 ls 的结果</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">for item in $(ls); do</span><br><span class="line">    echo &quot;this file name is : $item&quot;</span><br><span class="line">done</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1723124025694-815591e0-b876-4c99-94a5-cb9dc34997bb.png"></p><h2 id="while"><a href="#while" class="headerlink" title="while"></a>while</h2><p>每隔一秒打印一个 hello</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">while (true); do</span><br><span class="line">    echo &quot;hello&quot;</span><br><span class="line">    sleep 1</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1723124157818-ce2cb2d9-b42e-4eff-bff3-b43b928a8ef5.png"></p><p>输出 小于 10 的所有正整数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">num=1</span><br><span class="line"></span><br><span class="line">while (($num&lt;10)); do</span><br><span class="line">    echo $num</span><br><span class="line">    let &quot;num++&quot;</span><br><span class="line">done</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1723124350735-b418246a-d4ab-41eb-8559-3cffdf534f21.png"></p><h2 id="switch-case"><a href="#switch-case" class="headerlink" title="switch case"></a>switch case</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">echo &quot;输入1-4之间的数字：&quot;</span><br><span class="line">echo &quot;您输入的数字为：&quot;</span><br><span class="line">read aNum</span><br><span class="line"></span><br><span class="line">case $aNum in</span><br><span class="line">    1)  echo &quot;你选择了 1&quot;;;</span><br><span class="line">    2)  echo &quot;你选择了 2&quot;;;</span><br><span class="line">    3)  echo &quot;你选择了 3&quot;;;</span><br><span class="line">    4)  echo &quot;你选择了 4&quot;;;</span><br><span class="line">    *)  echo &quot;你没有输入 1 到 4 之间的数字&quot;;;</span><br><span class="line">esac</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1723124495038-be27470c-85a7-43f4-88a6-605a3a02f40e.png"></p><h1 id="Shell-函数"><a href="#Shell-函数" class="headerlink" title="Shell 函数"></a>Shell 函数</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">function test() &#123;</span><br><span class="line">    if [ $1 -le $2 ]; then</span><br><span class="line">        echo &quot;$1 is less than or equal to $2&quot;</span><br><span class="line">    else</span><br><span class="line">        echo &quot;$1 is greater than $2&quot;</span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">test 1 2</span><br><span class="line">test 3 1</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1723124718792-165b1e48-0f50-4e98-8789-335e375c1616.png"></p><h1 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h1><p>在 linux 中 每个进程都有三个打开的默认描述符</p><p>0 表示标准输入</p><p>1 表示标准输出</p><p>2 表示标准错误输出</p><ul><li><blockquote><p>将一个 sh 结果输出到文件中</p></blockquote></li><li><blockquote><blockquote><p>以追加的方式输出到文件中</p></blockquote></blockquote></li></ul><p>在 test.sh 中写入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">echo &quot;is a shell&quot;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后命令行执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">➜  Desktop bash test.sh &gt; file.txt</span><br><span class="line">➜  Desktop cat file.txt</span><br><span class="line">is a shell</span><br><span class="line">➜  Desktop bash test.sh &gt;&gt; file.txt</span><br><span class="line">➜  Desktop bash test.sh &gt;&gt; file.txt</span><br><span class="line">➜  Desktop cat file.txt</span><br><span class="line">is a shell</span><br><span class="line">is a shell</span><br><span class="line">is a shell</span><br><span class="line">➜  Desktop</span><br></pre></td></tr></table></figure><p>写一个异常</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">echo &quot;is a shell&quot;</span><br><span class="line">a=1</span><br><span class="line">b=0</span><br><span class="line">((a/b))</span><br></pre></td></tr></table></figure><p>然后输出结果</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">➜  Desktop bash test.sh</span><br><span class="line">is a shell</span><br><span class="line">test.sh: line 6: ((: a/b: division by 0 (error token is &quot;b&quot;)</span><br><span class="line">➜  Desktop bash test.sh 2&gt;&gt; error.log</span><br><span class="line">is a shell</span><br><span class="line">➜  Desktop cat error.log</span><br><span class="line">test.sh: line 6: ((: a/b: division by 0 (error token is &quot;b&quot;)</span><br><span class="line">➜  Desktop</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>把错误的信息输出到标准输出里面</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">➜  Desktop bash test.sh &gt; file.txt 2&gt;&amp;1</span><br><span class="line">➜  Desktop cat file.txt</span><br><span class="line">is a shell</span><br><span class="line">test.sh: line 6: ((: a/b: division by 0 (error token is &quot;b&quot;)</span><br><span class="line">➜  Desktop</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>更新: 2024-08-08 22:02:20<br>原文: <a href="https://www.yuque.com/zacharyblock/cx2om6/kxmxwdhvlqkut570">https://www.yuque.com/zacharyblock/cx2om6/kxmxwdhvlqkut570</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Shell&quot;&gt;&lt;a href=&quot;#Shell&quot; class=&quot;headerlink&quot; title=&quot;Shell&quot;&gt;&lt;/a&gt;Shell&lt;/h1&gt;&lt;h1 id=&quot;Shell-介绍&quot;&gt;&lt;a href=&quot;#Shell-介绍&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="Linux" scheme="https://blockzachary.github.io/categories/Linux/"/>
    
    
    <category term="Linux" scheme="https://blockzachary.github.io/tags/Linux/"/>
    
    <category term="Shell" scheme="https://blockzachary.github.io/tags/Shell/"/>
    
  </entry>
  
  <entry>
    <title>拉一个 docker 的 mysql</title>
    <link href="https://blockzachary.github.io/2024/08/04/Docker/%E6%8B%89%E4%B8%80%E4%B8%AAdocker%E7%9A%84mysql/"/>
    <id>https://blockzachary.github.io/2024/08/04/Docker/%E6%8B%89%E4%B8%80%E4%B8%AAdocker%E7%9A%84mysql/</id>
    <published>2024-08-04T21:36:00.000Z</published>
    <updated>2024-08-04T21:36:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="拉一个-docker-的-mysql"><a href="#拉一个-docker-的-mysql" class="headerlink" title="拉一个 docker 的 mysql"></a>拉一个 docker 的 mysql</h1><p>先创建一个文件夹</p><p>如：</p><p><code>mkdir docker_env</code></p><p>然后进入这个目录</p><p><code>cd docker_env</code></p><p>在这个目录下，创建一个文件</p><p><code>touch docker-compose.yml</code></p><p>然后在这个文件里面编辑</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3.9&quot;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">mysql:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">&quot;mysql:8.0.27&quot;</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">MYSQL_ROOT_PASSWORD:</span> <span class="string">&quot;123456&quot;</span></span><br><span class="line">      <span class="attr">TZ:</span> <span class="string">Asia/Shanghai</span> <span class="comment"># 指定时区</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;3306:3306&quot;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./mysql8:/var/lib/mysql</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">&quot;redis:6.2.6-alpine3.15&quot;</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;6379:6379&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3.9&quot;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">mysql-m1:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">&quot;mysql/mysql-server&quot;</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">MYSQL_ROOT_PASSWORD:</span> <span class="string">&quot;123456&quot;</span></span><br><span class="line">      <span class="attr">TZ:</span> <span class="string">Asia/Shanghai</span> <span class="comment"># 指定时区</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;3306:3306&quot;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./m1-mysql8:/var/lib/mysql</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">&quot;redis:6.2.6-alpine3.15&quot;</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;6379:6379&quot;</span></span><br></pre></td></tr></table></figure><p>接着在这个目录下运行</p><p><code>docker-compose up -d </code></p><p>docker 如果很慢的话 配置一下 docker 应用程序的源</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/1624081/1670246216548-ff0d0ceb-fd81-42e9-9cb2-a302b5e0cf47.png"></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;builder&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;gc&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;defaultKeepStorage&quot;</span><span class="punctuation">:</span> <span class="string">&quot;20GB&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;enabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;experimental&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;features&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;buildkit&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;registry-mirrors&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;https://reg-mirror.qiniu.com/&quot;</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="mysql-远程连接"><a href="#mysql-远程连接" class="headerlink" title="mysql 远程连接"></a>mysql 远程连接</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># https://www.cnblogs.com/niuben/p/11481239.html</span></span><br><span class="line"><span class="string">mysql</span> <span class="string">-uroot</span> <span class="string">-p</span></span><br><span class="line"><span class="string">use</span> <span class="string">mysql;</span></span><br><span class="line"><span class="string">UPDATE</span> <span class="string">user</span> <span class="string">SET</span> <span class="string">host</span> <span class="string">=</span> <span class="string">&#x27;%&#x27;</span> <span class="string">WHERE</span> <span class="string">user</span> <span class="string">=&#x27;root&#x27;;</span></span><br><span class="line"><span class="string">flush</span> <span class="string">privileges;</span> <span class="comment">#</span></span><br></pre></td></tr></table></figure><blockquote><p>更新: 2024-08-04 22:35:33<br>原文: <a href="https://www.yuque.com/zacharyblock/cx2om6/lfugkndghckigub7">https://www.yuque.com/zacharyblock/cx2om6/lfugkndghckigub7</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;拉一个-docker-的-mysql&quot;&gt;&lt;a href=&quot;#拉一个-docker-的-mysql&quot; class=&quot;headerlink&quot; title=&quot;拉一个 docker 的 mysql&quot;&gt;&lt;/a&gt;拉一个 docker 的 mysql&lt;/h1&gt;&lt;p&gt;先创建一个文</summary>
      
    
    
    
    <category term="Docker" scheme="https://blockzachary.github.io/categories/Docker/"/>
    
    
    <category term="Docker" scheme="https://blockzachary.github.io/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Django-Ninja Takeout</title>
    <link href="https://blockzachary.github.io/2024/07/15/PythonWeb/Django-NinjaTakeout/"/>
    <id>https://blockzachary.github.io/2024/07/15/PythonWeb/Django-NinjaTakeout/</id>
    <published>2024-07-15T19:23:00.000Z</published>
    <updated>2024-07-15T19:23:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Django-Ninja-Takeout"><a href="#Django-Ninja-Takeout" class="headerlink" title="Django-Ninja Takeout"></a>Django-Ninja Takeout</h1><p>基于 7y 大佬的项目：<a href="https://www.bilibili.com/video/BV1PX4y1i7nD/?spm_id_from=333.1007.top_right_bar_window_history.content.click&vd_source=4eb61e12ff64fa3d03cfec0f2eb09ce7">Django Ninja 实战外卖项目</a></p><h1 id="项目初始化"><a href="#项目初始化" class="headerlink" title="项目初始化"></a>项目初始化</h1><h2 id="创建-Django-项目"><a href="#创建-Django-项目" class="headerlink" title="创建 Django 项目"></a>创建 Django 项目</h2><p>直接使用 PyCharm 创建一个 Django 项目</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1721042160094-b6a960b2-6527-406f-abd2-40e53816d63e.png"></p><h2 id="创建应用"><a href="#创建应用" class="headerlink" title="创建应用"></a>创建应用</h2><p>这一步创建三个应用<code>user</code>、<code>product</code>、<code>order</code></p><h3 id="普通创建"><a href="#普通创建" class="headerlink" title="普通创建"></a>普通创建</h3><p>通过脚本命令，执行<code>python manage.py startapp [应用名称]</code>来创建</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(venv) ➜  takeout python manage.py startapp user</span><br><span class="line">(venv) ➜  takeout python manage.py startapp product</span><br><span class="line">(venv) ➜  takeout python manage.py startapp order</span><br></pre></td></tr></table></figure><h3 id="专业版创建"><a href="#专业版创建" class="headerlink" title="专业版创建"></a>专业版创建</h3><p>通过 Tools -&gt; Run manage.py Task…打开执行脚本命令行</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1721056233117-29254dcc-8173-46d7-9495-4d93e37dc947.png"></p><p>可以通过带有提示的命令脚本执行 manage 下的脚本命令</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1721056336651-8659dad7-ae1b-4ac6-bea2-3f0227f5957c.png"></p><blockquote><p>创建好三个应用之后，通过在项目目录下创建一个<code>apps</code>的包，将这三个应用移动至 apps 下</p></blockquote><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1721057109665-3522b747-7e98-481d-9ac3-2b3a588a85ad.png"></p><h2 id="注册应用"><a href="#注册应用" class="headerlink" title="注册应用"></a>注册应用</h2><p>在 Django 中需要把上面创建的 app 都注册进去</p><blockquote><p>在&#x2F;takeout&#x2F;takeout&#x2F;settings.py 中修改以下内容</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 解决跨域</span></span><br><span class="line">ALLOWED_HOSTS = [<span class="string">&#x27;*&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Application definition</span></span><br><span class="line"></span><br><span class="line">INSTALLED_APPS = [</span><br><span class="line">    <span class="string">&#x27;django.contrib.admin&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.auth&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.contenttypes&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.sessions&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.messages&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.staticfiles&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;apps.user&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;apps.product&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;apps.order&#x27;</span>,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h2 id="配置-Django-Ninja-依赖"><a href="#配置-Django-Ninja-依赖" class="headerlink" title="配置 Django-Ninja 依赖"></a>配置 Django-Ninja 依赖</h2><blockquote><p>安装 Ninja&amp;pillow</p></blockquote><p><code>pip install django-ninja pillow</code></p><h2 id="配置静态路由"><a href="#配置静态路由" class="headerlink" title="配置静态路由"></a>配置静态路由</h2><p>在&#x2F;apps 下新建一个 api.py 文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> ninja <span class="keyword">import</span> NinjaAPI</span><br><span class="line"></span><br><span class="line">app = NinjaAPI(title=<span class="string">&quot;DjangoNinja-瑞吉外卖H5&quot;</span>,</span><br><span class="line">               description=<span class="string">&quot;使用DjangoNinja实现《瑞吉外卖》项目&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.get(<span class="params"><span class="string">&quot;/index&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>(<span class="params">request</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;Hello Django Ninja&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在&#x2F;takeout&#x2F;urls.py 加入 app 的 url</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> apps.api <span class="keyword">import</span> app</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&#x27;admin/&#x27;</span>, admin.site.urls),</span><br><span class="line">    path(<span class="string">&#x27;&#x27;</span>, app.urls),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>先在<code>manage.py</code>同级目录下创建文件夹<code>/static</code>, <code>/media</code>，再去<code>takeout/takeout/settings.py</code>有的修改、没有的追加</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">DEBUG = <span class="literal">True</span></span><br><span class="line"><span class="comment"># 配置跨域</span></span><br><span class="line">ALLOWED_HOSTS = [<span class="string">&#x27;*&#x27;</span>]</span><br><span class="line"><span class="comment"># 设置语言 -admin</span></span><br><span class="line">LANGUAGE_CODE = <span class="string">&quot;zh-hans&quot;</span></span><br><span class="line"><span class="comment"># 设置时区</span></span><br><span class="line">TIME_ZONE = <span class="string">&quot;Asia/Shanghai&quot;</span></span><br><span class="line"><span class="comment"># 添加static目录将前端工程一到目录下，这一步各位直接github去找static/fonrt</span></span><br><span class="line"><span class="comment"># https://github.com/zy7y/takeout # 追加内容</span></span><br><span class="line">STATIC_ROOT = BASE_DIR / <span class="string">&#x27;static&#x27;</span></span><br><span class="line"></span><br><span class="line">FRONT_URL = <span class="string">&#x27;front/&#x27;</span></span><br><span class="line">FRONT_ROOT = BASE_DIR / <span class="string">&#x27;static/front&#x27;</span></span><br><span class="line"></span><br><span class="line">BACKEND_URL = <span class="string">&#x27;backend/&#x27;</span></span><br><span class="line">BACKEND_ROOT = BASE_DIR / <span class="string">&#x27;static/backend&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 并在takeout 目录下新建media目录 追加内容</span></span><br><span class="line"><span class="comment"># 图片资源访问路径， 注意新建media这个目录</span></span><br><span class="line">MEDIA_URL = <span class="string">&#x27;media/&#x27;</span></span><br><span class="line"><span class="comment"># 图片资源存放路径</span></span><br><span class="line">MEDIA_ROOT =BASE_DIR / <span class="string">&#x27;media&#x27;</span></span><br></pre></td></tr></table></figure><p>添加 static 静态资源路径</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">URL configuration for takeout project.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">The `urlpatterns` list routes URLs to views. For more information please see:</span></span><br><span class="line"><span class="string">    https://docs.djangoproject.com/en/5.0/topics/http/urls/</span></span><br><span class="line"><span class="string">Examples:</span></span><br><span class="line"><span class="string">Function views</span></span><br><span class="line"><span class="string">    1. Add an import:  from my_app import views</span></span><br><span class="line"><span class="string">    2. Add a URL to urlpatterns:  path(&#x27;&#x27;, views.home, name=&#x27;home&#x27;)</span></span><br><span class="line"><span class="string">Class-based views</span></span><br><span class="line"><span class="string">    1. Add an import:  from other_app.views import Home</span></span><br><span class="line"><span class="string">    2. Add a URL to urlpatterns:  path(&#x27;&#x27;, Home.as_view(), name=&#x27;home&#x27;)</span></span><br><span class="line"><span class="string">Including another URLconf</span></span><br><span class="line"><span class="string">    1. Import the include() function: from django.urls import include, path</span></span><br><span class="line"><span class="string">    2. Add a URL to urlpatterns:  path(&#x27;blog/&#x27;, include(&#x27;blog.urls&#x27;))</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">from</span> django.conf.urls.static <span class="keyword">import</span> static</span><br><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path, re_path</span><br><span class="line"><span class="keyword">from</span> django.views.static <span class="keyword">import</span> serve</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> apps.api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> takeout <span class="keyword">import</span> settings</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&#x27;admin/&#x27;</span>, admin.site.urls),</span><br><span class="line">    path(<span class="string">&#x27;&#x27;</span>, app.urls),</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置静态资源访问</span></span><br><span class="line"><span class="keyword">if</span> settings.DEBUG:</span><br><span class="line">    <span class="comment"># H5 页面</span></span><br><span class="line">    urlpatterns += static(settings.FRONT_URL, document_root=settings.FRONT_ROOT)</span><br><span class="line">    urlpatterns += static(settings.BACKEND_URL, document_root=settings.BACKEND_ROOT)</span><br><span class="line">    urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    urlpatterns += [</span><br><span class="line">        re_path(<span class="string">r&#x27;^static/(?P&lt;path&gt;.*)$&#x27;</span>, serve, &#123;<span class="string">&#x27;document_root&#x27;</span>: settings.STATIC_ROOT&#125;, name=<span class="string">&#x27;static&#x27;</span>),</span><br><span class="line">        re_path(<span class="string">r&#x27;^front/(?P&lt;path&gt;.*)$&#x27;</span>, serve, &#123;<span class="string">&#x27;document_root&#x27;</span>: settings.FRONT_ROOT&#125;, name=<span class="string">&#x27;front&#x27;</span>),</span><br><span class="line">        re_path(<span class="string">r&#x27;^backend/(?P&lt;path&gt;.*)$&#x27;</span>, serve, &#123;<span class="string">&#x27;document_root&#x27;</span>: settings.BACKEND_ROOT&#125;, name=<span class="string">&#x27;backend&#x27;</span>),</span><br><span class="line">        <span class="comment"># 上传图片资源</span></span><br><span class="line">        re_path(<span class="string">r&#x27;^media/(?P&lt;path&gt;.*)$&#x27;</span>, serve, &#123;<span class="string">&#x27;document_root&#x27;</span>: settings.MEDIA_ROOT&#125;, name=<span class="string">&#x27;media&#x27;</span>),</span><br><span class="line">    ]</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="运行项目"><a href="#运行项目" class="headerlink" title="运行项目"></a>运行项目</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">生成表</span></span><br><span class="line">python manage.py migrate</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建超级用户 密码随便你们输入</span></span><br><span class="line">python manage.py createsuperuser --username admin</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">收集Django Admin文件</span></span><br><span class="line">python manage.py collectstatic</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动服务</span></span><br><span class="line">python manage.py runserver</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">(venv) ➜  takeout python manage.py migrate</span><br><span class="line">Operations to perform:</span><br><span class="line">  Apply all migrations: admin, auth, contenttypes, sessions</span><br><span class="line">Running migrations:</span><br><span class="line">  Applying contenttypes.0001_initial... OK</span><br><span class="line">  Applying auth.0001_initial... OK</span><br><span class="line">  Applying admin.0001_initial... OK</span><br><span class="line">  Applying admin.0002_logentry_remove_auto_add... OK</span><br><span class="line">  Applying admin.0003_logentry_add_action_flag_choices... OK</span><br><span class="line">  Applying contenttypes.0002_remove_content_type_name... OK</span><br><span class="line">  Applying auth.0002_alter_permission_name_max_length... OK</span><br><span class="line">  Applying auth.0003_alter_user_email_max_length... OK</span><br><span class="line">  Applying auth.0004_alter_user_username_opts... OK</span><br><span class="line">  Applying auth.0005_alter_user_last_login_null... OK</span><br><span class="line">  Applying auth.0006_require_contenttypes_0002... OK</span><br><span class="line">  Applying auth.0007_alter_validators_add_error_messages... OK</span><br><span class="line">  Applying auth.0008_alter_user_username_max_length... OK</span><br><span class="line">  Applying auth.0009_alter_user_last_name_max_length... OK</span><br><span class="line">  Applying auth.0010_alter_group_name_max_length... OK</span><br><span class="line">  Applying auth.0011_update_proxy_permissions... OK</span><br><span class="line">  Applying auth.0012_alter_user_first_name_max_length... OK</span><br><span class="line">  Applying sessions.0001_initial... OK</span><br><span class="line">(venv) ➜  takeout python manage.py createsuperuser --username admin</span><br><span class="line">电子邮件地址:</span><br><span class="line">Password: ruser   -- create a superuser</span><br><span class="line">Password (again):</span><br><span class="line">密码长度太短。密码必须包含至少 8 个字符。</span><br><span class="line">这个密码太常见了。</span><br><span class="line">密码只包含数字。</span><br><span class="line">Bypass password validation and create user anyway? [y/N]: y</span><br><span class="line">Superuser created successfully.</span><br><span class="line">(venv) ➜  takeout python manage.py collectstatic</span><br><span class="line"></span><br><span class="line">You have requested to collect static files at the destination</span><br><span class="line">location as specified in your settings:</span><br><span class="line"></span><br><span class="line">    /Users/zachary/Documents/PythonCode/takeout/static</span><br><span class="line"></span><br><span class="line">This will overwrite existing files!</span><br><span class="line">Are you sure you want to do this?</span><br><span class="line"></span><br><span class="line">Type &#x27;yes&#x27; to continue, or &#x27;no&#x27; to cancel: yes</span><br><span class="line"></span><br><span class="line">126 static files copied to &#x27;/Users/zachary/Documents/PythonCode/takeout/static&#x27;.</span><br><span class="line">(venv) ➜  takeout python manage.py runserver</span><br><span class="line">Watching for file changes with StatReloader</span><br><span class="line">Performing system checks...</span><br><span class="line"></span><br><span class="line">System check identified no issues (0 silenced).</span><br><span class="line">July 16, 2024 - 00:25:44</span><br><span class="line">Django version 5.0.7, using settings &#x27;takeout.settings&#x27;</span><br><span class="line">Starting development server at http://127.0.0.1:8000/</span><br><span class="line">Quit the server with CONTROL-C.</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1721061100760-f694fbb3-2546-4fbf-b627-816c4521e736.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1721061108686-5d36a4c4-56d8-4f6c-be52-bd61f9fa73fc.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1721061206705-81f58a0b-e16a-43da-8b83-77dd7e572cc3.png"></p><h1 id="模型类"><a href="#模型类" class="headerlink" title="模型类"></a>模型类</h1><h2 id="user"><a href="#user" class="headerlink" title="user"></a>user</h2><p>编写用户信息表和地址的模型类</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">User</span>(models.Model):</span><br><span class="line">    <span class="comment"># 不定义主键默认会给一个自增长的 id</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">50</span>, blank=<span class="literal">True</span>, null=<span class="literal">True</span>, db_comment=<span class="string">&#x27;姓名&#x27;</span>, verbose_name=<span class="string">&#x27;姓名&#x27;</span>)</span><br><span class="line">    phone = models.CharField(max_length=<span class="number">100</span>, db_comment=<span class="string">&#x27;手机号&#x27;</span>, verbose_name=<span class="string">&#x27;手机号&#x27;</span>)</span><br><span class="line">    status = models.IntegerField(blank=<span class="literal">True</span>, null=<span class="literal">True</span>, db_comment=<span class="string">&#x27;状态 0:禁用，1:正常&#x27;</span>, verbose_name=<span class="string">&#x27;状态&#x27;</span>)</span><br><span class="line">    create_time = models.DateTimeField(db_comment=<span class="string">&#x27;创建时间&#x27;</span>, auto_now_add=<span class="literal">True</span>)</span><br><span class="line">    update_time = models.DateTimeField(db_comment=<span class="string">&#x27;更新时间&#x27;</span>, auto_now=<span class="literal">True</span>, verbose_name=<span class="string">&#x27;更新时间&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.phone</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Meta</span>:</span><br><span class="line">        <span class="comment"># managed = False</span></span><br><span class="line">        <span class="comment"># 数据库的表名</span></span><br><span class="line">        db_table = <span class="string">&#x27;user&#x27;</span></span><br><span class="line">        <span class="comment"># 数据库表备注</span></span><br><span class="line">        db_table_comment = <span class="string">&#x27;用户信息&#x27;</span></span><br><span class="line">        <span class="comment"># verbose_name django admin 显示的</span></span><br><span class="line">        verbose_name = <span class="string">&#x27;用户&#x27;</span></span><br><span class="line">        verbose_name_plural = <span class="string">&#x27;用户管理&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AddressBook</span>(models.Model):</span><br><span class="line">    <span class="comment"># 数据库层面没绑定物理关系，字段是可空的外键字段，它允许引用的 User 对象不存在，并且在关联的 User 对象被删除时，user_id 字段的值将被设置为 NULL。</span></span><br><span class="line">    <span class="comment"># 数据库寸的字端其实就是user_id， user表的主键</span></span><br><span class="line">    user = models.ForeignKey(User, db_constraint=<span class="literal">False</span>, on_delete=models.SET_NULL, null=<span class="literal">True</span>, verbose_name=<span class="string">&quot;用户&quot;</span>)</span><br><span class="line">    <span class="comment"># user_id = models.BigIntegerField(db_comment=&#x27;用户id&#x27;)</span></span><br><span class="line">    consignee = models.CharField(max_length=<span class="number">50</span>, db_comment=<span class="string">&#x27;收货人&#x27;</span>, verbose_name=<span class="string">&#x27;收货人&#x27;</span>)</span><br><span class="line">    sex = models.IntegerField(db_comment=<span class="string">&#x27;性别 0 女 1 男&#x27;</span>, verbose_name=<span class="string">&#x27;性别&#x27;</span>)</span><br><span class="line">    phone = models.CharField(max_length=<span class="number">11</span>, db_comment=<span class="string">&#x27;手机号&#x27;</span>, verbose_name=<span class="string">&#x27;手机号&#x27;</span>)</span><br><span class="line">    province_code = models.CharField(max_length=<span class="number">12</span>,  blank=<span class="literal">True</span>, null=<span class="literal">True</span>,</span><br><span class="line">                                     db_comment=<span class="string">&#x27;省级区划编号&#x27;</span>)</span><br><span class="line">    province_name = models.CharField(max_length=<span class="number">32</span>,  blank=<span class="literal">True</span>, null=<span class="literal">True</span>,</span><br><span class="line">                                     db_comment=<span class="string">&#x27;省级名称&#x27;</span>)</span><br><span class="line">    city_code = models.CharField(max_length=<span class="number">12</span>,  blank=<span class="literal">True</span>, null=<span class="literal">True</span>,</span><br><span class="line">                                 db_comment=<span class="string">&#x27;市级区划编号&#x27;</span>)</span><br><span class="line">    city_name = models.CharField(max_length=<span class="number">32</span>,  blank=<span class="literal">True</span>, null=<span class="literal">True</span>,</span><br><span class="line">                                 db_comment=<span class="string">&#x27;市级名称&#x27;</span>)</span><br><span class="line">    district_code = models.CharField(max_length=<span class="number">12</span>,  blank=<span class="literal">True</span>, null=<span class="literal">True</span>,</span><br><span class="line">                                     db_comment=<span class="string">&#x27;区级区划编号&#x27;</span>)</span><br><span class="line">    district_name = models.CharField(max_length=<span class="number">32</span>,  blank=<span class="literal">True</span>, null=<span class="literal">True</span>,</span><br><span class="line">                                     db_comment=<span class="string">&#x27;区级名称&#x27;</span>)</span><br><span class="line">    detail = models.CharField(max_length=<span class="number">200</span>,  blank=<span class="literal">True</span>, null=<span class="literal">True</span>,</span><br><span class="line">                              db_comment=<span class="string">&#x27;详细地址&#x27;</span>, verbose_name=<span class="string">&#x27;详细地址&#x27;</span>)</span><br><span class="line">    label = models.CharField(max_length=<span class="number">100</span>,  blank=<span class="literal">True</span>, null=<span class="literal">True</span>,</span><br><span class="line">                             db_comment=<span class="string">&#x27;标签&#x27;</span>, verbose_name=<span class="string">&#x27;标签&#x27;</span>)</span><br><span class="line">    is_default = models.IntegerField(db_comment=<span class="string">&#x27;默认 0 否 1是&#x27;</span>, default=<span class="number">0</span>, verbose_name=<span class="string">&#x27;是否默认&#x27;</span>)</span><br><span class="line">    create_time = models.DateTimeField(db_comment=<span class="string">&#x27;创建时间&#x27;</span>, auto_now_add=<span class="literal">True</span>)</span><br><span class="line">    update_time = models.DateTimeField(db_comment=<span class="string">&#x27;更新时间&#x27;</span>, auto_now=<span class="literal">True</span>, verbose_name=<span class="string">&#x27;更新时间&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.detail</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Meta</span>:</span><br><span class="line">        <span class="comment"># 为False Django 不管理表他的迁移、创建；实际工作中用到的多；我们需要创建表所以注释即可</span></span><br><span class="line">        <span class="comment"># managed = False</span></span><br><span class="line">        db_table = <span class="string">&#x27;address_book&#x27;</span></span><br><span class="line">        db_table_comment = <span class="string">&#x27;地址管理&#x27;</span></span><br><span class="line">        verbose_name = <span class="string">&#x27;地址&#x27;</span></span><br><span class="line">        verbose_name_plural = <span class="string">&#x27;地址管理&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="product"><a href="#product" class="headerlink" title="product"></a>product</h2><p>编写菜品类</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Category</span>(models.Model):</span><br><span class="line">    <span class="comment"># 套餐相关我们不做所以默认1就行了</span></span><br><span class="line">    <span class="built_in">type</span> = models.IntegerField(blank=<span class="literal">True</span>, null=<span class="literal">True</span>, db_comment=<span class="string">&#x27;类型   1 菜品分类 2 套餐分类&#x27;</span>, default=<span class="number">1</span>)</span><br><span class="line">    name = models.CharField(unique=<span class="literal">True</span>, max_length=<span class="number">64</span>, db_comment=<span class="string">&#x27;分类名称&#x27;</span>, verbose_name=<span class="string">&#x27;分类名称&#x27;</span>)</span><br><span class="line">    sort = models.IntegerField(db_comment=<span class="string">&#x27;顺序&#x27;</span>, verbose_name=<span class="string">&#x27;顺序&#x27;</span>)</span><br><span class="line">    create_time = models.DateTimeField(db_comment=<span class="string">&#x27;创建时间&#x27;</span>, auto_now_add=<span class="literal">True</span>)</span><br><span class="line">    update_time = models.DateTimeField(db_comment=<span class="string">&#x27;更新时间&#x27;</span>, auto_now=<span class="literal">True</span>, verbose_name=<span class="string">&#x27;更新时间&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.name</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Meta</span>:</span><br><span class="line">        <span class="comment"># managed = False</span></span><br><span class="line">        db_table = <span class="string">&#x27;category&#x27;</span></span><br><span class="line">        db_table_comment = <span class="string">&#x27;菜品及套餐分类&#x27;</span></span><br><span class="line"></span><br><span class="line">        verbose_name = <span class="string">&#x27;菜品分类&#x27;</span></span><br><span class="line">        verbose_name_plural = <span class="string">&#x27;菜品分类管理&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dish</span>(models.Model):</span><br><span class="line">    name = models.CharField(unique=<span class="literal">True</span>, max_length=<span class="number">64</span>, db_comment=<span class="string">&#x27;菜品名称&#x27;</span>, verbose_name=<span class="string">&quot;菜品名称&quot;</span>)</span><br><span class="line">    <span class="comment"># 1个分类有多个商品</span></span><br><span class="line">    category = models.ForeignKey(Category, db_constraint=<span class="literal">False</span>, on_delete=models.SET_NULL, null=<span class="literal">True</span>,</span><br><span class="line">                                 verbose_name=<span class="string">&quot;菜品分类&quot;</span>)</span><br><span class="line">    <span class="comment"># category_id = models.BigIntegerField(db_comment=&#x27;菜品分类id&#x27;)</span></span><br><span class="line">    price = models.DecimalField(max_digits=<span class="number">10</span>, decimal_places=<span class="number">2</span>, blank=<span class="literal">True</span>, null=<span class="literal">True</span>, db_comment=<span class="string">&#x27;菜品价格&#x27;</span>,</span><br><span class="line">                                verbose_name=<span class="string">&#x27;菜品价格&#x27;</span>)</span><br><span class="line">    code = models.CharField(max_length=<span class="number">64</span>, db_comment=<span class="string">&#x27;商品码&#x27;</span>, verbose_name=<span class="string">&#x27;商品码&#x27;</span>)</span><br><span class="line">    image = models.ImageField(upload_to=<span class="string">&quot;product/&quot;</span>, verbose_name=<span class="string">&#x27;图片&#x27;</span>, db_comment=<span class="string">&#x27;图片&#x27;</span>)</span><br><span class="line">    <span class="comment"># image = models.CharField(max_length=200, db_comment=&#x27;图片&#x27;,)</span></span><br><span class="line">    description = models.CharField(max_length=<span class="number">400</span>, blank=<span class="literal">True</span>, null=<span class="literal">True</span>, db_comment=<span class="string">&#x27;描述信息&#x27;</span>)</span><br><span class="line">    status = models.IntegerField(db_comment=<span class="string">&#x27;0 停售 1 起售&#x27;</span>, verbose_name=<span class="string">&#x27;售卖状态&#x27;</span>)</span><br><span class="line">    sort = models.IntegerField(db_comment=<span class="string">&#x27;顺序&#x27;</span>, verbose_name=<span class="string">&#x27;顺序&#x27;</span>)</span><br><span class="line">    create_time = models.DateTimeField(db_comment=<span class="string">&#x27;创建时间&#x27;</span>, auto_now_add=<span class="literal">True</span>)</span><br><span class="line">    update_time = models.DateTimeField(db_comment=<span class="string">&#x27;更新时间&#x27;</span>, auto_now=<span class="literal">True</span>, verbose_name=<span class="string">&#x27;更新时间&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.name</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Meta</span>:</span><br><span class="line">        <span class="comment"># managed = False</span></span><br><span class="line">        db_table = <span class="string">&#x27;dish&#x27;</span></span><br><span class="line">        db_table_comment = <span class="string">&#x27;菜品管理&#x27;</span></span><br><span class="line"></span><br><span class="line">        verbose_name = <span class="string">&#x27;菜品&#x27;</span></span><br><span class="line">        verbose_name_plural = <span class="string">&#x27;菜品管理&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DishFlavor</span>(models.Model):</span><br><span class="line">    dish = models.ForeignKey(Dish, db_constraint=<span class="literal">False</span>, on_delete=models.SET_NULL, null=<span class="literal">True</span>, db_comment=<span class="string">&#x27;菜品&#x27;</span>,</span><br><span class="line">                             verbose_name=<span class="string">&quot;菜品&quot;</span>)</span><br><span class="line">    name = models.CharField(max_length=<span class="number">64</span>, db_comment=<span class="string">&#x27;口味名称&#x27;</span>, verbose_name=<span class="string">&quot;口味名称&quot;</span>)</span><br><span class="line">    value = models.JSONField(blank=<span class="literal">True</span>, null=<span class="literal">True</span>, db_comment=<span class="string">&#x27;口味数据list&#x27;</span>, verbose_name=<span class="string">&quot;口味详情&quot;</span>)</span><br><span class="line">    create_time = models.DateTimeField(db_comment=<span class="string">&#x27;创建时间&#x27;</span>, auto_now_add=<span class="literal">True</span>)</span><br><span class="line">    update_time = models.DateTimeField(db_comment=<span class="string">&#x27;更新时间&#x27;</span>, auto_now=<span class="literal">True</span>, verbose_name=<span class="string">&#x27;更新时间&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.name</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Meta</span>:</span><br><span class="line">        <span class="comment"># managed = False</span></span><br><span class="line">        db_table = <span class="string">&#x27;dish_flavor&#x27;</span></span><br><span class="line">        db_table_comment = <span class="string">&#x27;菜品口味关系表&#x27;</span></span><br><span class="line"></span><br><span class="line">        verbose_name = <span class="string">&#x27;口味&#x27;</span></span><br><span class="line">        verbose_name_plural = <span class="string">&#x27;口味管理&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="order"><a href="#order" class="headerlink" title="order"></a>order</h2><p>编写订单类</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> apps.product.models <span class="keyword">import</span> Dish</span><br><span class="line"><span class="keyword">from</span> apps.user.models <span class="keyword">import</span> User, AddressBook</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Orders</span>(models.Model):</span><br><span class="line">    number = models.CharField(max_length=<span class="number">50</span>, blank=<span class="literal">True</span>, null=<span class="literal">True</span>, db_comment=<span class="string">&#x27;订单号&#x27;</span>)</span><br><span class="line">    status = models.IntegerField(db_comment=<span class="string">&#x27;订单状态 1待付款，2待派送，3已派送，4已完成，5已取消&#x27;</span>, verbose_name=<span class="string">&#x27;订单状态&#x27;</span>)</span><br><span class="line">    user = models.ForeignKey(User, db_constraint=<span class="literal">False</span>, null=<span class="literal">True</span>, on_delete=models.SET_NULL,</span><br><span class="line">                             db_comment=<span class="string">&#x27;下单用户&#x27;</span>, verbose_name=<span class="string">&quot;用户&quot;</span>)</span><br><span class="line">    address_book = models.ForeignKey(AddressBook, null=<span class="literal">True</span>, db_constraint=<span class="literal">False</span>, on_delete=models.SET_NULL,</span><br><span class="line">                                     db_comment=<span class="string">&#x27;地址id&#x27;</span>, verbose_name=<span class="string">&quot;地址&quot;</span>)</span><br><span class="line">    order_time = models.DateTimeField(db_comment=<span class="string">&#x27;下单时间&#x27;</span>, verbose_name=<span class="string">&quot;下单时间&quot;</span>)</span><br><span class="line">    checkout_time = models.DateTimeField(db_comment=<span class="string">&#x27;结账时间&#x27;</span>, verbose_name=<span class="string">&quot;结账时间&quot;</span>)</span><br><span class="line">    pay_method = models.IntegerField(db_comment=<span class="string">&#x27;支付方式 1微信,2支付宝&#x27;</span>, default=<span class="number">1</span>, verbose_name=<span class="string">&quot;支付方式&quot;</span>)</span><br><span class="line">    amount = models.DecimalField(max_digits=<span class="number">10</span>, decimal_places=<span class="number">2</span>, db_comment=<span class="string">&#x27;实收金额&#x27;</span>, verbose_name=<span class="string">&#x27;实收金额&#x27;</span>)</span><br><span class="line">    remark = models.CharField(max_length=<span class="number">100</span>, blank=<span class="literal">True</span>, null=<span class="literal">True</span>, db_comment=<span class="string">&#x27;备注&#x27;</span>, verbose_name=<span class="string">&#x27;备注&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.number</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Meta</span>:</span><br><span class="line">        db_table = <span class="string">&#x27;orders&#x27;</span></span><br><span class="line">        db_table_comment = <span class="string">&#x27;订单表&#x27;</span></span><br><span class="line"></span><br><span class="line">        verbose_name = <span class="string">&#x27;订单&#x27;</span></span><br><span class="line">        verbose_name_plural = <span class="string">&#x27;订单管理&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">OrderDetail</span>(models.Model):</span><br><span class="line">    order = models.ForeignKey(Orders, db_constraint=<span class="literal">False</span>, on_delete=models.SET_NULL, null=<span class="literal">True</span>,</span><br><span class="line">                              db_comment=<span class="string">&#x27;订单id&#x27;</span>, verbose_name=<span class="string">&#x27;订单&#x27;</span>)</span><br><span class="line">    dish = models.ForeignKey(Dish, db_constraint=<span class="literal">False</span>, on_delete=models.SET_NULL, blank=<span class="literal">True</span>, null=<span class="literal">True</span>,</span><br><span class="line">                             db_comment=<span class="string">&#x27;菜品id&#x27;</span></span><br><span class="line">                             , verbose_name=<span class="string">&#x27;菜品&#x27;</span>)</span><br><span class="line">    dish_flavor = models.CharField(max_length=<span class="number">50</span>, blank=<span class="literal">True</span>, null=<span class="literal">True</span>, db_comment=<span class="string">&#x27;口味&#x27;</span>, verbose_name=<span class="string">&#x27;口味&#x27;</span>)</span><br><span class="line">    number = models.IntegerField(db_comment=<span class="string">&#x27;数量&#x27;</span>, verbose_name=<span class="string">&#x27;数量&#x27;</span>)</span><br><span class="line">    amount = models.DecimalField(max_digits=<span class="number">10</span>, decimal_places=<span class="number">2</span>, db_comment=<span class="string">&#x27;金额&#x27;</span>, verbose_name=<span class="string">&#x27;金额&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>.order:</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">self</span>.order.number</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Meta</span>:</span><br><span class="line">        <span class="comment"># managed = False</span></span><br><span class="line">        db_table = <span class="string">&#x27;order_detail&#x27;</span></span><br><span class="line">        db_table_comment = <span class="string">&#x27;订单明细表&#x27;</span></span><br><span class="line"></span><br><span class="line">        verbose_name = <span class="string">&#x27;订单明细&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ShoppingCart</span>(models.Model):</span><br><span class="line">    user = models.ForeignKey(User, db_constraint=<span class="literal">False</span>, null=<span class="literal">True</span>, on_delete=models.SET_NULL,</span><br><span class="line">                             db_comment=<span class="string">&#x27;用户&#x27;</span>)</span><br><span class="line">    dish = models.ForeignKey(Dish, db_constraint=<span class="literal">False</span>, on_delete=models.SET_NULL, blank=<span class="literal">True</span>, null=<span class="literal">True</span>,</span><br><span class="line">                             db_comment=<span class="string">&#x27;菜品&#x27;</span>)</span><br><span class="line">    dish_flavor = models.CharField(max_length=<span class="number">50</span>, blank=<span class="literal">True</span>, null=<span class="literal">True</span>, db_comment=<span class="string">&#x27;口味&#x27;</span>)</span><br><span class="line">    number = models.IntegerField(db_comment=<span class="string">&#x27;数量&#x27;</span>)</span><br><span class="line">    amount = models.DecimalField(max_digits=<span class="number">10</span>, decimal_places=<span class="number">2</span>, db_comment=<span class="string">&#x27;金额&#x27;</span>)</span><br><span class="line">    create_time = models.DateTimeField(blank=<span class="literal">True</span>, null=<span class="literal">True</span>, db_comment=<span class="string">&#x27;创建时间&#x27;</span>, auto_now_add=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Meta</span>:</span><br><span class="line">        <span class="comment"># 购物车我们不需要后台管理</span></span><br><span class="line">        <span class="comment"># managed = False</span></span><br><span class="line">        db_table = <span class="string">&#x27;shopping_cart&#x27;</span></span><br><span class="line">        db_table_comment = <span class="string">&#x27;购物车&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="迁移并生成表到-SQLite"><a href="#迁移并生成表到-SQLite" class="headerlink" title="迁移并生成表到 SQLite"></a>迁移并生成表到 SQLite</h2><p>执行以下迁移命令即可</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">(venv) ➜  takeout python manage.py makemigrations</span><br><span class="line">Migrations for &#x27;product&#x27;:</span><br><span class="line">  apps/product/migrations/0001_initial.py</span><br><span class="line">    - Create model Category</span><br><span class="line">    - Create model Dish</span><br><span class="line">    - Create model DishFlavor</span><br><span class="line">Migrations for &#x27;user&#x27;:</span><br><span class="line">  apps/user/migrations/0001_initial.py</span><br><span class="line">    - Create model User</span><br><span class="line">    - Create model AddressBook</span><br><span class="line">Migrations for &#x27;order&#x27;:</span><br><span class="line">  apps/order/migrations/0001_initial.py</span><br><span class="line">    - Create model Orders</span><br><span class="line">    - Create model OrderDetail</span><br><span class="line">    - Create model ShoppingCart</span><br><span class="line"></span><br><span class="line">(venv) ➜  takeout python manage.py migrate</span><br><span class="line">System check identified some issues:</span><br><span class="line"></span><br><span class="line">WARNINGS:</span><br><span class="line">order.OrderDetail.amount: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.OrderDetail.dish: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.OrderDetail.dish_flavor: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.OrderDetail.number: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.OrderDetail.order: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.OrderDetail: (models.W046) SQLite does not support comments on tables (db_table_comment).</span><br><span class="line">order.Orders.address_book: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.Orders.amount: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.Orders.checkout_time: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.Orders.number: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.Orders.order_time: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.Orders.pay_method: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.Orders.remark: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.Orders.status: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.Orders.user: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.Orders: (models.W046) SQLite does not support comments on tables (db_table_comment).</span><br><span class="line">order.ShoppingCart.amount: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.ShoppingCart.create_time: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.ShoppingCart.dish: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.ShoppingCart.dish_flavor: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.ShoppingCart.number: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.ShoppingCart.user: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.ShoppingCart: (models.W046) SQLite does not support comments on tables (db_table_comment).</span><br><span class="line">product.Category.create_time: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.Category.name: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.Category.sort: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.Category.type: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.Category.update_time: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.Category: (models.W046) SQLite does not support comments on tables (db_table_comment).</span><br><span class="line">product.Dish.code: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.Dish.create_time: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.Dish.description: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.Dish.image: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.Dish.name: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.Dish.price: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.Dish.sort: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.Dish.status: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.Dish.update_time: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.Dish: (models.W046) SQLite does not support comments on tables (db_table_comment).</span><br><span class="line">product.DishFlavor.create_time: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.DishFlavor.dish: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.DishFlavor.name: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.DishFlavor.update_time: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.DishFlavor.value: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.DishFlavor: (models.W046) SQLite does not support comments on tables (db_table_comment).</span><br><span class="line">user.AddressBook.city_code: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.AddressBook.city_name: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.AddressBook.consignee: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.AddressBook.create_time: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.AddressBook.detail: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.AddressBook.district_code: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.AddressBook.district_name: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.AddressBook.is_default: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.AddressBook.label: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.AddressBook.phone: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.AddressBook.province_code: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.AddressBook.province_name: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.AddressBook.sex: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.AddressBook.update_time: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.AddressBook: (models.W046) SQLite does not support comments on tables (db_table_comment).</span><br><span class="line">user.User.create_time: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.User.name: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.User.phone: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.User.status: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.User.update_time: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.User: (models.W046) SQLite does not support comments on tables (db_table_comment).</span><br><span class="line">Operations to perform:</span><br><span class="line">  Apply all migrations: admin, auth, contenttypes, order, product, sessions, user</span><br><span class="line">Running migrations:</span><br><span class="line">  Applying user.0001_initial... OK</span><br><span class="line">  Applying product.0001_initial... OK</span><br><span class="line">  Applying order.0001_initial... OK</span><br><span class="line">(venv) ➜  takeout</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1721123192988-b230c999-ac71-48c8-97d5-a6ad612ad1b5.png"></p><h1 id="管理后台"><a href="#管理后台" class="headerlink" title="管理后台"></a>管理后台</h1><h2 id="User-管理"><a href="#User-管理" class="headerlink" title="User 管理"></a>User 管理</h2><h3 id="调整-User"><a href="#调整-User" class="headerlink" title="调整 User"></a>调整 User</h3><p>给 status 添加一个选择列表，可以再 admin 管理后台看到</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">User</span>(models.Model):</span><br><span class="line">    <span class="comment"># 不定义主键默认会给一个自增长的 id</span></span><br><span class="line">    <span class="comment"># choices 选择项字段只能在这里面选 前面数字入库，后面表示django admin展示文本</span></span><br><span class="line">    STATUS_CHOICES = (</span><br><span class="line">        (<span class="number">0</span>, <span class="string">&#x27;禁用&#x27;</span>),</span><br><span class="line">        (<span class="number">1</span>, <span class="string">&#x27;正常&#x27;</span>)</span><br><span class="line">    )</span><br><span class="line">    name = models.CharField(</span><br><span class="line">        max_length=<span class="number">50</span>, blank=<span class="literal">True</span>, null=<span class="literal">True</span>, db_comment=<span class="string">&quot;姓名&quot;</span>, verbose_name=<span class="string">&quot;姓名&quot;</span></span><br><span class="line">    )</span><br><span class="line">    phone = models.CharField(max_length=<span class="number">100</span>, db_comment=<span class="string">&quot;手机号&quot;</span>, verbose_name=<span class="string">&quot;手机号&quot;</span>)</span><br><span class="line">    status = models.IntegerField(choices=STATUS_CHOICES,</span><br><span class="line">                                 blank=<span class="literal">True</span>, null=<span class="literal">True</span>, db_comment=<span class="string">&quot;状态 0:禁用，1:正常&quot;</span>, verbose_name=<span class="string">&quot;状态&quot;</span></span><br><span class="line">                                 )</span><br><span class="line">    create_time = models.DateTimeField(db_comment=<span class="string">&quot;创建时间&quot;</span>, auto_now_add=<span class="literal">True</span>)</span><br><span class="line">    update_time = models.DateTimeField(</span><br><span class="line">        db_comment=<span class="string">&quot;更新时间&quot;</span>, auto_now=<span class="literal">True</span>, verbose_name=<span class="string">&quot;更新时间&quot;</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.phone</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Meta</span>:</span><br><span class="line">        <span class="comment"># managed = False</span></span><br><span class="line">        <span class="comment"># 数据库的表名</span></span><br><span class="line">        db_table = <span class="string">&quot;user&quot;</span></span><br><span class="line">        <span class="comment"># 数据库表备注</span></span><br><span class="line">        db_table_comment = <span class="string">&quot;用户信息&quot;</span></span><br><span class="line">        <span class="comment"># verbose_name django admin 显示的</span></span><br><span class="line">        verbose_name = <span class="string">&quot;用户&quot;</span></span><br><span class="line">        verbose_name_plural = <span class="string">&quot;用户管理&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AddressBook</span>(models.Model):</span><br><span class="line">    <span class="comment"># 数据库层面没绑定物理关系，字段是可空的外键字段，它允许引用的 User 对象不存在，并且在关联的 User 对象被删除时，user_id 字段的值将被设置为 NULL。</span></span><br><span class="line">    <span class="comment"># 数据库寸的字端其实就是user_id， user表的主键</span></span><br><span class="line">    user = models.ForeignKey(</span><br><span class="line">        User,</span><br><span class="line">        db_constraint=<span class="literal">False</span>,</span><br><span class="line">        on_delete=models.SET_NULL,</span><br><span class="line">        null=<span class="literal">True</span>,</span><br><span class="line">        verbose_name=<span class="string">&quot;用户&quot;</span>,</span><br><span class="line">    )</span><br><span class="line">    <span class="comment"># user_id = models.BigIntegerField(db_comment=&#x27;用户id&#x27;)</span></span><br><span class="line">    consignee = models.CharField(max_length=<span class="number">50</span>, db_comment=<span class="string">&quot;收货人&quot;</span>, verbose_name=<span class="string">&quot;收货人&quot;</span>)</span><br><span class="line">    sex = models.IntegerField(db_comment=<span class="string">&quot;性别 0 女 1 男&quot;</span>, verbose_name=<span class="string">&quot;性别&quot;</span>)</span><br><span class="line">    phone = models.CharField(max_length=<span class="number">11</span>, db_comment=<span class="string">&quot;手机号&quot;</span>, verbose_name=<span class="string">&quot;手机号&quot;</span>)</span><br><span class="line">    province_code = models.CharField(</span><br><span class="line">        max_length=<span class="number">12</span>, blank=<span class="literal">True</span>, null=<span class="literal">True</span>, db_comment=<span class="string">&quot;省级区划编号&quot;</span></span><br><span class="line">    )</span><br><span class="line">    province_name = models.CharField(</span><br><span class="line">        max_length=<span class="number">32</span>, blank=<span class="literal">True</span>, null=<span class="literal">True</span>, db_comment=<span class="string">&quot;省级名称&quot;</span></span><br><span class="line">    )</span><br><span class="line">    city_code = models.CharField(</span><br><span class="line">        max_length=<span class="number">12</span>, blank=<span class="literal">True</span>, null=<span class="literal">True</span>, db_comment=<span class="string">&quot;市级区划编号&quot;</span></span><br><span class="line">    )</span><br><span class="line">    city_name = models.CharField(</span><br><span class="line">        max_length=<span class="number">32</span>, blank=<span class="literal">True</span>, null=<span class="literal">True</span>, db_comment=<span class="string">&quot;市级名称&quot;</span></span><br><span class="line">    )</span><br><span class="line">    district_code = models.CharField(</span><br><span class="line">        max_length=<span class="number">12</span>, blank=<span class="literal">True</span>, null=<span class="literal">True</span>, db_comment=<span class="string">&quot;区级区划编号&quot;</span></span><br><span class="line">    )</span><br><span class="line">    district_name = models.CharField(</span><br><span class="line">        max_length=<span class="number">32</span>, blank=<span class="literal">True</span>, null=<span class="literal">True</span>, db_comment=<span class="string">&quot;区级名称&quot;</span></span><br><span class="line">    )</span><br><span class="line">    detail = models.CharField(</span><br><span class="line">        max_length=<span class="number">200</span>, blank=<span class="literal">True</span>, null=<span class="literal">True</span>, db_comment=<span class="string">&quot;详细地址&quot;</span>, verbose_name=<span class="string">&quot;详细地址&quot;</span></span><br><span class="line">    )</span><br><span class="line">    label = models.CharField(</span><br><span class="line">        max_length=<span class="number">100</span>, blank=<span class="literal">True</span>, null=<span class="literal">True</span>, db_comment=<span class="string">&quot;标签&quot;</span>, verbose_name=<span class="string">&quot;标签&quot;</span></span><br><span class="line">    )</span><br><span class="line">    is_default = models.IntegerField(</span><br><span class="line">        db_comment=<span class="string">&quot;默认 0 否 1是&quot;</span>, default=<span class="number">0</span>, verbose_name=<span class="string">&quot;是否默认&quot;</span></span><br><span class="line">    )</span><br><span class="line">    create_time = models.DateTimeField(db_comment=<span class="string">&quot;创建时间&quot;</span>, auto_now_add=<span class="literal">True</span>)</span><br><span class="line">    update_time = models.DateTimeField(</span><br><span class="line">        db_comment=<span class="string">&quot;更新时间&quot;</span>, auto_now=<span class="literal">True</span>, verbose_name=<span class="string">&quot;更新时间&quot;</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.detail</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Meta</span>:</span><br><span class="line">        <span class="comment"># 为False Django 不管理表他的迁移、创建；实际工作中用到的多；我们需要创建表所以注释即可</span></span><br><span class="line">        <span class="comment"># managed = False</span></span><br><span class="line">        db_table = <span class="string">&quot;address_book&quot;</span></span><br><span class="line">        db_table_comment = <span class="string">&quot;地址管理&quot;</span></span><br><span class="line">        verbose_name = <span class="string">&quot;地址&quot;</span></span><br><span class="line">        verbose_name_plural = <span class="string">&quot;地址管理&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>修改模型内容后迁移一下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">(venv) ➜  takeout python manage.py makemigrations</span><br><span class="line">Migrations for &#x27;user&#x27;:</span><br><span class="line">  apps/user/migrations/0002_alter_user_status.py</span><br><span class="line">    - Alter field status on user</span><br><span class="line">(venv) ➜  takeout python manage.py migrate</span><br><span class="line">Operations to perform:</span><br><span class="line">  Apply all migrations: admin, auth, contenttypes, order, product, sessions, user</span><br><span class="line">Running migrations:</span><br><span class="line">  Applying user.0002_alter_user_status... OK</span><br></pre></td></tr></table></figure><h3 id="实现用户管理"><a href="#实现用户管理" class="headerlink" title="实现用户管理"></a>实现用户管理</h3><p>修改 app&#x2F;user&#x2F;admin.py 的内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> User, AddressBook</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Register your models here.</span></span><br><span class="line"><span class="meta">@admin.register(<span class="params">User</span>)</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UserManagerAdmin</span>(admin.ModelAdmin):</span><br><span class="line">    <span class="comment"># 列表显示的字段</span></span><br><span class="line">    list_display = (<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;phone&#x27;</span>, <span class="string">&#x27;status&#x27;</span>, <span class="string">&#x27;create_time&#x27;</span>)</span><br><span class="line">    <span class="comment"># 列表筛选</span></span><br><span class="line">    list_filter = (<span class="string">&#x27;status&#x27;</span>,)</span><br><span class="line">    <span class="comment"># 搜索框查询</span></span><br><span class="line">    search_fields = (<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;phone&#x27;</span>)</span><br><span class="line">    search_help_text = <span class="string">&#x27;可输入 name, phone查询（支持模糊查询）&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@admin.register(<span class="params">AddressBook</span>)</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AddressManagerAdmin</span>(admin.ModelAdmin):</span><br><span class="line">    list_display = (<span class="string">&#x27;consignee&#x27;</span>, <span class="string">&#x27;sex&#x27;</span>, <span class="string">&#x27;phone&#x27;</span>, <span class="string">&#x27;province_name&#x27;</span>, <span class="string">&#x27;city_name&#x27;</span>, <span class="string">&#x27;detail&#x27;</span>, <span class="string">&#x27;create_time&#x27;</span>)</span><br><span class="line">    list_filter = (<span class="string">&#x27;sex&#x27;</span>, <span class="string">&#x27;province_name&#x27;</span>, <span class="string">&#x27;city_name&#x27;</span>)</span><br><span class="line">    search_fields = (<span class="string">&#x27;consignee&#x27;</span>, <span class="string">&#x27;phone&#x27;</span>)</span><br><span class="line">    search_help_text = <span class="string">&#x27;可输入 consignee, phone查询（支持模糊查询）&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1721123838028-bc0ad563-d458-4363-b1a8-ce82d779ab1b.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1721124332842-80e115dc-8fed-4dc0-ac35-2b03c16faf4e.png"></p><h2 id="Product-管理"><a href="#Product-管理" class="headerlink" title="Product 管理"></a>Product 管理</h2><h3 id="调整-Product"><a href="#调整-Product" class="headerlink" title="调整 Product"></a>调整 Product</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Category</span>(models.Model):</span><br><span class="line">    TYPE = (</span><br><span class="line">        (<span class="number">1</span>, <span class="string">&#x27;菜品分类&#x27;</span>),</span><br><span class="line">        (<span class="number">2</span>, <span class="string">&#x27;套餐分类&#x27;</span>)</span><br><span class="line">    )</span><br><span class="line">    <span class="comment"># 套餐相关我们不做所以默认1就行了</span></span><br><span class="line">    <span class="built_in">type</span> = models.IntegerField(</span><br><span class="line">        choices=TYPE,</span><br><span class="line">        blank=<span class="literal">True</span>, null=<span class="literal">True</span>, db_comment=<span class="string">&quot;类型   1 菜品分类 2 套餐分类&quot;</span>, default=<span class="number">1</span></span><br><span class="line">    )</span><br><span class="line">    name = models.CharField(</span><br><span class="line">        unique=<span class="literal">True</span>, max_length=<span class="number">64</span>, db_comment=<span class="string">&quot;分类名称&quot;</span>, verbose_name=<span class="string">&quot;分类名称&quot;</span></span><br><span class="line">    )</span><br><span class="line">    sort = models.IntegerField(db_comment=<span class="string">&quot;顺序&quot;</span>, verbose_name=<span class="string">&quot;顺序&quot;</span>)</span><br><span class="line">    create_time = models.DateTimeField(db_comment=<span class="string">&quot;创建时间&quot;</span>, auto_now_add=<span class="literal">True</span>)</span><br><span class="line">    update_time = models.DateTimeField(</span><br><span class="line">        db_comment=<span class="string">&quot;更新时间&quot;</span>, auto_now=<span class="literal">True</span>, verbose_name=<span class="string">&quot;更新时间&quot;</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.name</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Meta</span>:</span><br><span class="line">        <span class="comment"># managed = False</span></span><br><span class="line">        db_table = <span class="string">&quot;category&quot;</span></span><br><span class="line">        db_table_comment = <span class="string">&quot;菜品及套餐分类&quot;</span></span><br><span class="line"></span><br><span class="line">        verbose_name = <span class="string">&quot;菜品分类&quot;</span></span><br><span class="line">        verbose_name_plural = <span class="string">&quot;菜品分类管理&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dish</span>(models.Model):</span><br><span class="line">    STATUS = (</span><br><span class="line">        (<span class="number">0</span>, <span class="string">&#x27;停售&#x27;</span>),</span><br><span class="line">        (<span class="number">1</span>, <span class="string">&#x27;启售&#x27;</span>)</span><br><span class="line">    )</span><br><span class="line">    name = models.CharField(</span><br><span class="line">        unique=<span class="literal">True</span>, max_length=<span class="number">64</span>, db_comment=<span class="string">&quot;菜品名称&quot;</span>, verbose_name=<span class="string">&quot;菜品名称&quot;</span></span><br><span class="line">    )</span><br><span class="line">    <span class="comment"># 1个分类有多个商品</span></span><br><span class="line">    category = models.ForeignKey(</span><br><span class="line">        Category,</span><br><span class="line">        db_constraint=<span class="literal">False</span>,</span><br><span class="line">        on_delete=models.SET_NULL,</span><br><span class="line">        null=<span class="literal">True</span>,</span><br><span class="line">        verbose_name=<span class="string">&quot;菜品分类&quot;</span>,</span><br><span class="line">    )</span><br><span class="line">    <span class="comment"># category_id = models.BigIntegerField(db_comment=&#x27;菜品分类id&#x27;)</span></span><br><span class="line">    price = models.DecimalField(</span><br><span class="line">        max_digits=<span class="number">10</span>,</span><br><span class="line">        decimal_places=<span class="number">2</span>,</span><br><span class="line">        db_comment=<span class="string">&quot;菜品价格&quot;</span>,</span><br><span class="line">        verbose_name=<span class="string">&quot;菜品价格&quot;</span>,</span><br><span class="line">    )</span><br><span class="line">    code = models.CharField(max_length=<span class="number">64</span>, db_comment=<span class="string">&quot;商品码&quot;</span>, verbose_name=<span class="string">&quot;商品码&quot;</span>)</span><br><span class="line">    image = models.ImageField(upload_to=<span class="string">&quot;product/&quot;</span>, verbose_name=<span class="string">&quot;图片&quot;</span>, db_comment=<span class="string">&quot;图片&quot;</span>)</span><br><span class="line">    description = models.CharField(</span><br><span class="line">        max_length=<span class="number">400</span>, blank=<span class="literal">True</span>, null=<span class="literal">True</span>, db_comment=<span class="string">&quot;描述信息&quot;</span></span><br><span class="line">    )</span><br><span class="line">    status = models.IntegerField(choices=STATUS, default=<span class="number">1</span>, db_comment=<span class="string">&quot;0 停售 1 起售&quot;</span>, verbose_name=<span class="string">&quot;售卖状态&quot;</span>)</span><br><span class="line">    sort = models.IntegerField(db_comment=<span class="string">&quot;顺序&quot;</span>, verbose_name=<span class="string">&quot;顺序&quot;</span>)</span><br><span class="line">    create_time = models.DateTimeField(db_comment=<span class="string">&quot;创建时间&quot;</span>, auto_now_add=<span class="literal">True</span>)</span><br><span class="line">    update_time = models.DateTimeField(</span><br><span class="line">        db_comment=<span class="string">&quot;更新时间&quot;</span>, auto_now=<span class="literal">True</span>, verbose_name=<span class="string">&quot;更新时间&quot;</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.name</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Meta</span>:</span><br><span class="line">        <span class="comment"># managed = False</span></span><br><span class="line">        db_table = <span class="string">&quot;dish&quot;</span></span><br><span class="line">        db_table_comment = <span class="string">&quot;菜品管理&quot;</span></span><br><span class="line"></span><br><span class="line">        verbose_name = <span class="string">&quot;菜品&quot;</span></span><br><span class="line">        verbose_name_plural = <span class="string">&quot;菜品管理&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DishFlavor</span>(models.Model):</span><br><span class="line">    dish = models.ForeignKey(</span><br><span class="line">        Dish,</span><br><span class="line">        db_constraint=<span class="literal">False</span>,</span><br><span class="line">        on_delete=models.SET_NULL,</span><br><span class="line">        null=<span class="literal">True</span>,</span><br><span class="line">        db_comment=<span class="string">&quot;菜品&quot;</span>,</span><br><span class="line">        verbose_name=<span class="string">&quot;菜品&quot;</span>,</span><br><span class="line">    )</span><br><span class="line">    name = models.CharField(max_length=<span class="number">64</span>, db_comment=<span class="string">&quot;口味名称&quot;</span>, verbose_name=<span class="string">&quot;口味名称&quot;</span>)</span><br><span class="line">    value = models.JSONField(</span><br><span class="line">        blank=<span class="literal">True</span>, null=<span class="literal">True</span>, db_comment=<span class="string">&quot;口味数据list&quot;</span>, verbose_name=<span class="string">&quot;口味详情&quot;</span></span><br><span class="line">    )</span><br><span class="line">    create_time = models.DateTimeField(db_comment=<span class="string">&quot;创建时间&quot;</span>, auto_now_add=<span class="literal">True</span>)</span><br><span class="line">    update_time = models.DateTimeField(</span><br><span class="line">        db_comment=<span class="string">&quot;更新时间&quot;</span>, auto_now=<span class="literal">True</span>, verbose_name=<span class="string">&quot;更新时间&quot;</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.name</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Meta</span>:</span><br><span class="line">        <span class="comment"># managed = False</span></span><br><span class="line">        db_table = <span class="string">&quot;dish_flavor&quot;</span></span><br><span class="line">        db_table_comment = <span class="string">&quot;菜品口味关系表&quot;</span></span><br><span class="line"></span><br><span class="line">        verbose_name = <span class="string">&quot;口味&quot;</span></span><br><span class="line">        verbose_name_plural = <span class="string">&quot;口味管理&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>修改模型内容后迁移一下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">(venv) ➜  takeout python manage.py makemigrations</span><br><span class="line">It is impossible to change a nullable field &#x27;price&#x27; on dish to non-nullable without providing a default. This is because the database needs something to populate existing rows.</span><br><span class="line">Please select a fix:</span><br><span class="line"> 1) Provide a one-off default now (will be set on all existing rows with a null value for this column)</span><br><span class="line"> 2) Ignore for now. Existing rows that contain NULL values will have to be handled manually, for example with a RunPython or RunSQL operation.</span><br><span class="line"> 3) Quit and manually define a default value in models.py.</span><br><span class="line">Select an option: 2</span><br><span class="line">Migrations for &#x27;product&#x27;:</span><br><span class="line">  apps/product/migrations/0002_alter_category_type_alter_dish_price_and_more.py</span><br><span class="line">    - Alter field type on category</span><br><span class="line">    - Alter field price on dish</span><br><span class="line">    - Alter field status on dish</span><br><span class="line">(venv) ➜  takeout python manage.py migrate</span><br><span class="line">System check identified some issues:</span><br><span class="line"></span><br><span class="line">WARNINGS:</span><br><span class="line">order.OrderDetail.amount: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.OrderDetail.dish: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.OrderDetail.dish_flavor: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.OrderDetail.number: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.OrderDetail.order: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.OrderDetail: (models.W046) SQLite does not support comments on tables (db_table_comment).</span><br><span class="line">order.Orders.address_book: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.Orders.amount: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.Orders.checkout_time: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.Orders.number: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.Orders.order_time: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.Orders.pay_method: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.Orders.remark: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.Orders.status: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.Orders.user: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.Orders: (models.W046) SQLite does not support comments on tables (db_table_comment).</span><br><span class="line">order.ShoppingCart.amount: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.ShoppingCart.create_time: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.ShoppingCart.dish: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.ShoppingCart.dish_flavor: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.ShoppingCart.number: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.ShoppingCart.user: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.ShoppingCart: (models.W046) SQLite does not support comments on tables (db_table_comment).</span><br><span class="line">product.Category.create_time: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.Category.name: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.Category.sort: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.Category.type: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.Category.update_time: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.Category: (models.W046) SQLite does not support comments on tables (db_table_comment).</span><br><span class="line">product.Dish.code: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.Dish.create_time: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.Dish.description: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.Dish.image: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.Dish.name: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.Dish.price: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.Dish.sort: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.Dish.status: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.Dish.update_time: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.Dish: (models.W046) SQLite does not support comments on tables (db_table_comment).</span><br><span class="line">product.DishFlavor.create_time: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.DishFlavor.dish: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.DishFlavor.name: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.DishFlavor.update_time: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.DishFlavor.value: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.DishFlavor: (models.W046) SQLite does not support comments on tables (db_table_comment).</span><br><span class="line">user.AddressBook.city_code: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.AddressBook.city_name: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.AddressBook.consignee: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.AddressBook.create_time: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.AddressBook.detail: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.AddressBook.district_code: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.AddressBook.district_name: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.AddressBook.is_default: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.AddressBook.label: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.AddressBook.phone: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.AddressBook.province_code: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.AddressBook.province_name: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.AddressBook.sex: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.AddressBook.update_time: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.AddressBook: (models.W046) SQLite does not support comments on tables (db_table_comment).</span><br><span class="line">user.User.create_time: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.User.name: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.User.phone: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.User.status: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.User.update_time: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.User: (models.W046) SQLite does not support comments on tables (db_table_comment).</span><br><span class="line">Operations to perform:</span><br><span class="line">  Apply all migrations: admin, auth, contenttypes, order, product, sessions, user</span><br><span class="line">Running migrations:</span><br><span class="line">  Applying product.0002_alter_category_type_alter_dish_price_and_more... OK</span><br><span class="line">(venv) ➜  takeout</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="安装-json-展示插件"><a href="#安装-json-展示插件" class="headerlink" title="安装 json 展示插件"></a>安装 json 展示插件</h3><p>Django-admin 会默认直接展示 json 内容，不直观所以引入该插件</p><p><code>pip install django-jsoneditor</code></p><p>之后还需要在 settings.py 中注册一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line">    <span class="string">&#x27;django.contrib.admin&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.auth&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.contenttypes&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.sessions&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.messages&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.staticfiles&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;apps.user&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;apps.product&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;apps.order&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;jsoneditor&#x27;</span>,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">(venv) ➜  takeout python manage.py collectstatic</span><br><span class="line"></span><br><span class="line">You have requested to collect static files at the destination</span><br><span class="line">location as specified in your settings:</span><br><span class="line"></span><br><span class="line">    /Users/zachary/Documents/PythonCode/takeout/static</span><br><span class="line"></span><br><span class="line">This will overwrite existing files!</span><br><span class="line">Are you sure you want to do this?</span><br><span class="line"></span><br><span class="line">Type &#x27;yes&#x27; to continue, or &#x27;no&#x27; to cancel: yes</span><br><span class="line"></span><br><span class="line">8 static files copied to &#x27;/Users/zachary/Documents/PythonCode/takeout/static&#x27;, 126 unmodified.</span><br><span class="line">(venv) ➜  takeout</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="实现菜品管理"><a href="#实现菜品管理" class="headerlink" title="实现菜品管理"></a>实现菜品管理</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.utils.html <span class="keyword">import</span> format_html</span><br><span class="line"><span class="keyword">from</span> jsoneditor.forms <span class="keyword">import</span> JSONEditor</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Register your models here.</span></span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@admin.register(<span class="params">Category</span>)</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CategoryManagerAdmin</span>(admin.ModelAdmin):</span><br><span class="line">    list_display = (<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;sort&#x27;</span>, <span class="string">&#x27;create_time&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 内联模型 - 嵌套用</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Flavor</span>(admin.StackedInline):</span><br><span class="line">    model = DishFlavor</span><br><span class="line">    extra = <span class="number">1</span></span><br><span class="line">    <span class="comment"># json字段默认展示的是文本框，这里使用对应插件展示成json</span></span><br><span class="line">    formfield_overrides = &#123;</span><br><span class="line">        models.JSONField: &#123;<span class="string">&quot;widget&quot;</span>: JSONEditor&#125;,</span><br><span class="line">    &#125;</span><br><span class="line">    verbose_name_plural = <span class="string">&quot;菜品口味&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@admin.register(<span class="params">Dish</span>)</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DishManagerAdmin</span>(admin.ModelAdmin):</span><br><span class="line">    list_display = (<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;category&#x27;</span>, <span class="string">&#x27;show_img&#x27;</span>, <span class="string">&#x27;price&#x27;</span>, <span class="string">&#x27;status&#x27;</span>, <span class="string">&#x27;create_time&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    search_fields = (<span class="string">&#x27;name&#x27;</span>,)</span><br><span class="line">    search_help_text = <span class="string">&#x27;输入菜品名称进行搜索&#x27;</span></span><br><span class="line"></span><br><span class="line">    list_filter = (<span class="string">&#x27;category&#x27;</span>, <span class="string">&#x27;status&#x27;</span>)</span><br><span class="line">    <span class="comment"># 嵌套子模型 口味， 在添加商品时直接就把口味一起加了</span></span><br><span class="line">    inlines = [Flavor]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 增加一个字段</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">show_img</span>(<span class="params">self, obj</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        :param obj: obj 为 一个Dish 的实例对象</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> obj.image:</span><br><span class="line">            <span class="comment"># obj.image.url 获取从midia的路径 /media/product/Snipaste_2023-07-12_20-31-22.png</span></span><br><span class="line">            <span class="keyword">return</span> format_html(<span class="string">&#x27;&lt;img src=&quot;&#123;&#125;&quot; height=&quot;50&quot;/&gt;&#x27;</span>.<span class="built_in">format</span>(obj.image.url))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 字段列表表头显示</span></span><br><span class="line">    show_img.short_description = <span class="string">&#x27;图片&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1721127243232-99539a22-0543-4274-ad56-c9e7da6471d6.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1721127233312-e35f1c56-8ccf-41f3-8ed2-b60f19266e22.png"></p><h2 id="Order-管理"><a href="#Order-管理" class="headerlink" title="Order 管理"></a>Order 管理</h2><h3 id="调整-Order"><a href="#调整-Order" class="headerlink" title="调整 Order"></a>调整 Order</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> apps.product.models <span class="keyword">import</span> Dish</span><br><span class="line"><span class="keyword">from</span> apps.user.models <span class="keyword">import</span> AddressBook, User</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Orders</span>(models.Model):</span><br><span class="line">    PAY_METHOD_CHOICES = (</span><br><span class="line">        (<span class="number">1</span>, <span class="string">&#x27;微信&#x27;</span>),</span><br><span class="line">        (<span class="number">2</span>, <span class="string">&#x27;支付宝&#x27;</span>)</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    STATUS_CHOICES = (</span><br><span class="line">        (<span class="number">1</span>, <span class="string">&#x27;待付款&#x27;</span>),</span><br><span class="line">        (<span class="number">2</span>, <span class="string">&#x27;待派送&#x27;</span>),</span><br><span class="line">        (<span class="number">3</span>, <span class="string">&#x27;已派送&#x27;</span>),</span><br><span class="line">        (<span class="number">4</span>, <span class="string">&#x27;已完成&#x27;</span>),</span><br><span class="line">        (<span class="number">5</span>, <span class="string">&#x27;已取消&#x27;</span>),</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    number = models.CharField(max_length=<span class="number">50</span>, blank=<span class="literal">True</span>, null=<span class="literal">True</span>, verbose_name=<span class="string">&quot;订单号&quot;</span>)</span><br><span class="line">    status = models.IntegerField(</span><br><span class="line">        choices=STATUS_CHOICES,</span><br><span class="line">        db_comment=<span class="string">&quot;订单状态 1待付款，2待派送，3已派送，4已完成，5已取消&quot;</span>, verbose_name=<span class="string">&quot;订单状态&quot;</span></span><br><span class="line">    )</span><br><span class="line">    user = models.ForeignKey(</span><br><span class="line">        User,</span><br><span class="line">        db_constraint=<span class="literal">False</span>,</span><br><span class="line">        null=<span class="literal">True</span>,</span><br><span class="line">        on_delete=models.SET_NULL,</span><br><span class="line">        db_comment=<span class="string">&quot;下单用户&quot;</span>,</span><br><span class="line">        verbose_name=<span class="string">&quot;用户&quot;</span>,</span><br><span class="line">    )</span><br><span class="line">    address_book = models.ForeignKey(</span><br><span class="line">        AddressBook,</span><br><span class="line">        null=<span class="literal">True</span>,</span><br><span class="line">        db_constraint=<span class="literal">False</span>,</span><br><span class="line">        on_delete=models.SET_NULL,</span><br><span class="line">        db_comment=<span class="string">&quot;地址id&quot;</span>,</span><br><span class="line">        verbose_name=<span class="string">&quot;地址&quot;</span>,</span><br><span class="line">    )</span><br><span class="line">    order_time = models.DateTimeField(db_comment=<span class="string">&quot;下单时间&quot;</span>, verbose_name=<span class="string">&quot;下单时间&quot;</span>)</span><br><span class="line">    checkout_time = models.DateTimeField(db_comment=<span class="string">&quot;结账时间&quot;</span>, verbose_name=<span class="string">&quot;结账时间&quot;</span>)</span><br><span class="line">    pay_method = models.IntegerField(choices=PAY_METHOD_CHOICES, db_comment=<span class="string">&quot;支付方式 1微信,2支付宝&quot;</span>, default=<span class="number">1</span>, verbose_name=<span class="string">&quot;支付方式&quot;</span></span><br><span class="line">    )</span><br><span class="line">    amount = models.DecimalField(</span><br><span class="line">        max_digits=<span class="number">10</span>, decimal_places=<span class="number">2</span>, db_comment=<span class="string">&quot;实收金额&quot;</span>, verbose_name=<span class="string">&quot;实收金额&quot;</span></span><br><span class="line">    )</span><br><span class="line">    remark = models.CharField(</span><br><span class="line">        max_length=<span class="number">100</span>, blank=<span class="literal">True</span>, null=<span class="literal">True</span>, db_comment=<span class="string">&quot;备注&quot;</span>, verbose_name=<span class="string">&quot;备注&quot;</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.number</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Meta</span>:</span><br><span class="line">        db_table = <span class="string">&quot;orders&quot;</span></span><br><span class="line">        db_table_comment = <span class="string">&quot;订单表&quot;</span></span><br><span class="line"></span><br><span class="line">        verbose_name = <span class="string">&quot;订单&quot;</span></span><br><span class="line">        verbose_name_plural = <span class="string">&quot;订单管理&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">OrderDetail</span>(models.Model):</span><br><span class="line">    order = models.ForeignKey(</span><br><span class="line">        Orders,</span><br><span class="line">        db_constraint=<span class="literal">False</span>,</span><br><span class="line">        on_delete=models.SET_NULL,</span><br><span class="line">        null=<span class="literal">True</span>,</span><br><span class="line">        db_comment=<span class="string">&quot;订单id&quot;</span>,</span><br><span class="line">        verbose_name=<span class="string">&quot;订单&quot;</span>,</span><br><span class="line">    )</span><br><span class="line">    dish = models.ForeignKey(</span><br><span class="line">        Dish,</span><br><span class="line">        db_constraint=<span class="literal">False</span>,</span><br><span class="line">        on_delete=models.SET_NULL,</span><br><span class="line">        blank=<span class="literal">True</span>,</span><br><span class="line">        null=<span class="literal">True</span>,</span><br><span class="line">        db_comment=<span class="string">&quot;菜品id&quot;</span>,</span><br><span class="line">        verbose_name=<span class="string">&quot;菜品&quot;</span>,</span><br><span class="line">    )</span><br><span class="line">    dish_flavor = models.CharField(</span><br><span class="line">        max_length=<span class="number">50</span>, blank=<span class="literal">True</span>, null=<span class="literal">True</span>, db_comment=<span class="string">&quot;口味&quot;</span>, verbose_name=<span class="string">&quot;口味&quot;</span></span><br><span class="line">    )</span><br><span class="line">    number = models.IntegerField(db_comment=<span class="string">&quot;数量&quot;</span>, verbose_name=<span class="string">&quot;数量&quot;</span>)</span><br><span class="line">    amount = models.DecimalField(</span><br><span class="line">        max_digits=<span class="number">10</span>, decimal_places=<span class="number">2</span>, db_comment=<span class="string">&quot;金额&quot;</span>, verbose_name=<span class="string">&quot;金额&quot;</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>.order:</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">self</span>.order.number</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Meta</span>:</span><br><span class="line">        <span class="comment"># managed = False</span></span><br><span class="line">        db_table = <span class="string">&quot;order_detail&quot;</span></span><br><span class="line">        db_table_comment = <span class="string">&quot;订单明细表&quot;</span></span><br><span class="line"></span><br><span class="line">        verbose_name = <span class="string">&quot;明细&quot;</span></span><br><span class="line">        verbose_name_plural = <span class="string">&quot;订单明细&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ShoppingCart</span>(models.Model):</span><br><span class="line">    user = models.ForeignKey(</span><br><span class="line">        User, db_constraint=<span class="literal">False</span>, null=<span class="literal">True</span>, on_delete=models.SET_NULL, db_comment=<span class="string">&quot;用户&quot;</span></span><br><span class="line">    )</span><br><span class="line">    dish = models.ForeignKey(</span><br><span class="line">        Dish,</span><br><span class="line">        db_constraint=<span class="literal">False</span>,</span><br><span class="line">        on_delete=models.SET_NULL,</span><br><span class="line">        blank=<span class="literal">True</span>,</span><br><span class="line">        null=<span class="literal">True</span>,</span><br><span class="line">        db_comment=<span class="string">&quot;菜品&quot;</span>,</span><br><span class="line">    )</span><br><span class="line">    dish_flavor = models.CharField(</span><br><span class="line">        max_length=<span class="number">50</span>, blank=<span class="literal">True</span>, null=<span class="literal">True</span>, db_comment=<span class="string">&quot;口味&quot;</span></span><br><span class="line">    )</span><br><span class="line">    number = models.IntegerField(db_comment=<span class="string">&quot;数量&quot;</span>)</span><br><span class="line">    amount = models.DecimalField(max_digits=<span class="number">10</span>, decimal_places=<span class="number">2</span>, db_comment=<span class="string">&quot;金额&quot;</span>)</span><br><span class="line">    create_time = models.DateTimeField(</span><br><span class="line">        blank=<span class="literal">True</span>, null=<span class="literal">True</span>, db_comment=<span class="string">&quot;创建时间&quot;</span>, auto_now_add=<span class="literal">True</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Meta</span>:</span><br><span class="line">        <span class="comment"># 购物车我们不需要后台管理</span></span><br><span class="line">        <span class="comment"># managed = False</span></span><br><span class="line">        db_table = <span class="string">&quot;shopping_cart&quot;</span></span><br><span class="line">        db_table_comment = <span class="string">&quot;购物车&quot;</span></span><br></pre></td></tr></table></figure><p>修改完迁移下模型</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">(venv) ➜  takeout python manage.py makemigrations</span><br><span class="line">Migrations for &#x27;order&#x27;:</span><br><span class="line">  apps/order/migrations/0002_alter_orderdetail_options_alter_orders_number_and_more.py</span><br><span class="line">    - Change Meta options on orderdetail</span><br><span class="line">    - Alter field number on orders</span><br><span class="line">    - Alter field pay_method on orders</span><br><span class="line">    - Alter field status on orders</span><br><span class="line">(venv) ➜  takeout python manage.py migrate</span><br><span class="line">System check identified some issues:</span><br><span class="line"></span><br><span class="line">WARNINGS:</span><br><span class="line">order.OrderDetail.amount: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.OrderDetail.dish: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.OrderDetail.dish_flavor: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.OrderDetail.number: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.OrderDetail.order: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.OrderDetail: (models.W046) SQLite does not support comments on tables (db_table_comment).</span><br><span class="line">order.Orders.address_book: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.Orders.amount: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.Orders.checkout_time: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.Orders.order_time: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.Orders.pay_method: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.Orders.remark: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.Orders.status: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.Orders.user: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.Orders: (models.W046) SQLite does not support comments on tables (db_table_comment).</span><br><span class="line">order.ShoppingCart.amount: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.ShoppingCart.create_time: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.ShoppingCart.dish: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.ShoppingCart.dish_flavor: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.ShoppingCart.number: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.ShoppingCart.user: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">order.ShoppingCart: (models.W046) SQLite does not support comments on tables (db_table_comment).</span><br><span class="line">product.Category.create_time: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.Category.name: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.Category.sort: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.Category.type: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.Category.update_time: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.Category: (models.W046) SQLite does not support comments on tables (db_table_comment).</span><br><span class="line">product.Dish.code: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.Dish.create_time: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.Dish.description: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.Dish.image: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.Dish.name: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.Dish.price: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.Dish.sort: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.Dish.status: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.Dish.update_time: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.Dish: (models.W046) SQLite does not support comments on tables (db_table_comment).</span><br><span class="line">product.DishFlavor.create_time: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.DishFlavor.dish: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.DishFlavor.name: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.DishFlavor.update_time: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.DishFlavor.value: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">product.DishFlavor: (models.W046) SQLite does not support comments on tables (db_table_comment).</span><br><span class="line">user.AddressBook.city_code: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.AddressBook.city_name: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.AddressBook.consignee: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.AddressBook.create_time: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.AddressBook.detail: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.AddressBook.district_code: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.AddressBook.district_name: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.AddressBook.is_default: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.AddressBook.label: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.AddressBook.phone: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.AddressBook.province_code: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.AddressBook.province_name: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.AddressBook.sex: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.AddressBook.update_time: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.AddressBook: (models.W046) SQLite does not support comments on tables (db_table_comment).</span><br><span class="line">user.User.create_time: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.User.name: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.User.phone: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.User.status: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.User.update_time: (fields.W163) SQLite does not support comments on columns (db_comment).</span><br><span class="line">user.User: (models.W046) SQLite does not support comments on tables (db_table_comment).</span><br><span class="line">Operations to perform:</span><br><span class="line">  Apply all migrations: admin, auth, contenttypes, order, product, sessions, user</span><br><span class="line">Running migrations:</span><br><span class="line">  Applying order.0002_alter_orderdetail_options_alter_orders_number_and_more... OK</span><br><span class="line">(venv) ➜  takeout</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="实现订单管理"><a href="#实现订单管理" class="headerlink" title="实现订单管理"></a>实现订单管理</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"></span><br><span class="line"><span class="comment"># Register your models here.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@admin.register(<span class="params">Orders</span>)</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">OrderManagerAdmin</span>(admin.ModelAdmin):</span><br><span class="line">    list_display = (<span class="string">&#x27;number&#x27;</span>, <span class="string">&#x27;status&#x27;</span>, <span class="string">&#x27;user&#x27;</span>, <span class="string">&#x27;address_book&#x27;</span>, <span class="string">&#x27;amount&#x27;</span>)</span><br><span class="line">    list_filter = (<span class="string">&quot;status&quot;</span>, <span class="string">&quot;user&quot;</span>)</span><br><span class="line">    <span class="comment"># 页面可编辑</span></span><br><span class="line">    list_editable = (<span class="string">&quot;status&quot;</span>,)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@admin.register(<span class="params">OrderDetail</span>)</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">OrderManagerAdmin</span>(admin.ModelAdmin):</span><br><span class="line">    list_display = (<span class="string">&quot;order&quot;</span>, <span class="string">&quot;dish&quot;</span>, <span class="string">&quot;dish_flavor&quot;</span>, <span class="string">&quot;number&quot;</span>, <span class="string">&quot;amount&quot;</span>, <span class="string">&quot;user&quot;</span>, <span class="string">&quot;address&quot;</span>, <span class="string">&quot;total&quot;</span>)</span><br><span class="line">    search_fields = (<span class="string">&quot;dish&quot;</span>,)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">user</span>(<span class="params">self, obj</span>):</span><br><span class="line">        <span class="keyword">if</span> obj.order <span class="keyword">and</span> obj.order.user:</span><br><span class="line">            <span class="keyword">return</span> obj.order.user</span><br><span class="line"></span><br><span class="line">    user.short_description = <span class="string">&quot;用户&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">address</span>(<span class="params">self, obj</span>):</span><br><span class="line">        <span class="keyword">if</span> obj.order <span class="keyword">and</span> obj.order.address_book:</span><br><span class="line">            <span class="keyword">return</span> obj.order.address_book</span><br><span class="line"></span><br><span class="line">    address.short_description = <span class="string">&quot;收货地址&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">total</span>(<span class="params">self, obj</span>):</span><br><span class="line">        <span class="keyword">return</span> obj.number * obj.amount</span><br><span class="line"></span><br><span class="line">    total.short_description = <span class="string">&quot;总价&quot;</span></span><br><span class="line"></span><br><span class="line">    list_filter = (<span class="string">&quot;order&quot;</span>, <span class="string">&quot;order__user&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1721129511409-d0c00dbd-0a68-44c5-b7bc-0f243f34b068.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1721129518700-2523d839-4979-4199-950c-49cc5dc8d706.png"></p><h1 id="登录页面接口"><a href="#登录页面接口" class="headerlink" title="登录页面接口"></a>登录页面接口</h1><h2 id="通用响应模型"><a href="#通用响应模型" class="headerlink" title="通用响应模型"></a>通用响应模型</h2><p>在&#x2F;takeout&#x2F;apps 下创建一个 schemas.py 文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">通用Schema</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Generic</span>, TypeVar, <span class="type">Optional</span></span><br><span class="line"><span class="keyword">from</span> pydantic <span class="keyword">import</span> generics</span><br><span class="line"></span><br><span class="line">T = TypeVar(<span class="string">&#x27;T&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 泛型模型：T可以动态变动，运行时加载类型-swagger文档可见</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">R</span>(generics.GenericModel, <span class="type">Generic</span>[T]):</span><br><span class="line">    code: <span class="built_in">int</span> = <span class="number">1</span></span><br><span class="line">    data: <span class="type">Optional</span>[T]</span><br><span class="line">    msg: <span class="built_in">str</span> = <span class="string">&quot;ok&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">ok</span>(<span class="params">cls, data: T = <span class="literal">None</span></span>) -&gt; <span class="string">&quot;R&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> cls(code=<span class="number">1</span>, data=data, msg=<span class="string">&quot;ok&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">fail</span>(<span class="params">cls, msg: <span class="built_in">str</span> = <span class="string">&quot;fail&quot;</span></span>) -&gt; <span class="string">&quot;R&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> cls(code=<span class="number">0</span>, msg=msg)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="获取验证码接口"><a href="#获取验证码接口" class="headerlink" title="获取验证码接口"></a>获取验证码接口</h2><blockquote><p><code>sendMsg</code> <code>POST</code></p></blockquote><p><img src="https://cdn.nlark.com/yuque/0/2023/png/1624081/1689472103776-6610cb40-58d8-486b-8ff1-9f423ec577ef.png"></p><h3 id="接口实现"><a href="#接口实现" class="headerlink" title="接口实现"></a>接口实现</h3><blockquote><p><code>takeout/apps/user/schemas.py</code>定义请求模型</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> ninja <span class="keyword">import</span> Schema, Field</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SendMsgSchema</span>(<span class="title class_ inherited__">Schema</span>):</span><br><span class="line">    phone: <span class="built_in">str</span> = Field(..., description=<span class="string">&quot;手机号&quot;</span>, pattern=<span class="string">r&#x27;^1[3456789]\d&#123;9&#125;$&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SendMsgResultSchema</span>(<span class="title class_ inherited__">Schema</span>):</span><br><span class="line">    code: <span class="built_in">str</span> = Field(..., description=<span class="string">&quot;验证码&quot;</span>)</span><br></pre></td></tr></table></figure><blockquote><p><code>takeout/apps/user/views.py</code></p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your views here.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> ninja <span class="keyword">import</span> Router</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> User</span><br><span class="line"><span class="keyword">from</span> .schemas <span class="keyword">import</span> SendMsgSchema, SendMsgResultSchema</span><br><span class="line"><span class="keyword">from</span> ..schemas <span class="keyword">import</span> R</span><br><span class="line"></span><br><span class="line">router = Router(tags=[<span class="string">&#x27;登录&#x27;</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@router.post(<span class="params"><span class="string">&quot;/sendMsg&quot;</span>, summary=<span class="string">&quot;验证码&quot;</span>, response=R</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">send_msg</span>(<span class="params">request, data: SendMsgSchema</span>):</span><br><span class="line">    <span class="comment"># 4位数，生成验证码</span></span><br><span class="line">    code = <span class="string">&#x27;&#x27;</span>.join(random.choices(<span class="string">&#x27;0123456789&#x27;</span>, k=<span class="number">4</span>))</span><br><span class="line">    <span class="comment"># 验证码存在session中</span></span><br><span class="line">    request.session[data.phone] = code</span><br><span class="line">    request.session.set_expiry(<span class="number">5</span> * <span class="number">60</span>)  <span class="comment"># 缓存5分钟</span></span><br><span class="line">    <span class="comment"># 使用了response R， 这里默认就是 R 中的 data属性</span></span><br><span class="line">    <span class="keyword">return</span> R.ok(data=SendMsgResultSchema(code=code))</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>注册 router <code>takeout/apps/api.py</code></p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> ninja <span class="keyword">import</span> NinjaAPI</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> apps.user.views <span class="keyword">import</span> router <span class="keyword">as</span> user_router</span><br><span class="line"></span><br><span class="line">app = NinjaAPI(title=<span class="string">&quot;DjangoNinja-瑞吉外卖H5&quot;</span>, description=<span class="string">&quot;使用DjangoNinja实现《瑞吉外卖》项目&quot;</span>)</span><br><span class="line"></span><br><span class="line">app.add_router(<span class="string">&quot;/user&quot;</span>, router=user_router)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.get(<span class="params"><span class="string">&quot;/index&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>(<span class="params">request</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;Hello Django Ninja&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1721225107597-b1641ae7-3b00-471b-8af1-78c8a29b8f9e.png"></p><h2 id="登录接口"><a href="#登录接口" class="headerlink" title="登录接口"></a>登录接口</h2><p>如果登录的用户存在 user 表中，则直接登录，否则注册并登录</p><h3 id="请求参数-schemas"><a href="#请求参数-schemas" class="headerlink" title="请求参数 schemas"></a>请求参数 schemas</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> ninja <span class="keyword">import</span> Schema, Field</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SendMsgSchema</span>(<span class="title class_ inherited__">Schema</span>):</span><br><span class="line">    phone: <span class="built_in">str</span> = Field(..., description=<span class="string">&quot;手机号&quot;</span>, pattern=<span class="string">r&#x27;^1[3456789]\d&#123;9&#125;$&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SendMsgResultSchema</span>(<span class="title class_ inherited__">Schema</span>):</span><br><span class="line">    code: <span class="built_in">str</span> = Field(..., description=<span class="string">&quot;验证码&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UserLoginSchema</span>(SendMsgSchema, SendMsgResultSchema):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="接口实现-1"><a href="#接口实现-1" class="headerlink" title="接口实现"></a>接口实现</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your views here.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> ninja <span class="keyword">import</span> Router</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> User</span><br><span class="line"><span class="keyword">from</span> .schemas <span class="keyword">import</span> SendMsgSchema, SendMsgResultSchema, UserLoginSchema</span><br><span class="line"><span class="keyword">from</span> ..schemas <span class="keyword">import</span> R</span><br><span class="line"></span><br><span class="line">router = Router(tags=[<span class="string">&#x27;登录&#x27;</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@router.post(<span class="params"><span class="string">&quot;/sendMsg&quot;</span>, summary=<span class="string">&quot;验证码&quot;</span>, response=R</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">send_msg</span>(<span class="params">request, data: SendMsgSchema</span>):</span><br><span class="line">    <span class="comment"># 4位数，生成验证码</span></span><br><span class="line">    code = <span class="string">&#x27;&#x27;</span>.join(random.choices(<span class="string">&#x27;0123456789&#x27;</span>, k=<span class="number">4</span>))</span><br><span class="line">    <span class="comment"># 验证码存在session中</span></span><br><span class="line">    request.session[data.phone] = code</span><br><span class="line">    request.session.set_expiry(<span class="number">5</span> * <span class="number">60</span>)  <span class="comment"># 缓存5分钟</span></span><br><span class="line">    <span class="comment"># 使用了response R， 这里默认就是 R 中的 data属性</span></span><br><span class="line">    <span class="keyword">return</span> R.ok(data=SendMsgResultSchema(code=code))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@router.post(<span class="params"><span class="string">&quot;/login&quot;</span>, summary=<span class="string">&quot;登录&quot;</span>, response=R</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">user_login</span>(<span class="params">request, data: UserLoginSchema</span>):</span><br><span class="line">    <span class="comment"># 1. 验证码存在?</span></span><br><span class="line">    <span class="keyword">if</span> request.session.get(data.phone) == data.code:</span><br><span class="line">        <span class="comment"># 2. 查不到就创建</span></span><br><span class="line">        user, _ = User.objects.get_or_create(phone=data.phone, status=<span class="number">1</span>)</span><br><span class="line">        <span class="comment"># 3. Java原版这里使用的是存session 为了偷懒-不改动h5 我们也不用JWT了</span></span><br><span class="line">        request.session[<span class="string">&#x27;user&#x27;</span>] = user.<span class="built_in">id</span></span><br><span class="line">        <span class="keyword">return</span> R.ok(data=<span class="literal">None</span>)</span><br><span class="line">    <span class="keyword">return</span> R.fail(<span class="string">&quot;验证码错误&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="退出登录"><a href="#退出登录" class="headerlink" title="退出登录"></a>退出登录</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your views here.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> ninja <span class="keyword">import</span> Router</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> User</span><br><span class="line"><span class="keyword">from</span> .schemas <span class="keyword">import</span> SendMsgSchema, SendMsgResultSchema, UserLoginSchema</span><br><span class="line"><span class="keyword">from</span> ..schemas <span class="keyword">import</span> R</span><br><span class="line"></span><br><span class="line">router = Router(tags=[<span class="string">&#x27;登录&#x27;</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@router.post(<span class="params"><span class="string">&quot;/sendMsg&quot;</span>, summary=<span class="string">&quot;验证码&quot;</span>, response=R</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">send_msg</span>(<span class="params">request, data: SendMsgSchema</span>):</span><br><span class="line">    <span class="comment"># 4位数，生成验证码</span></span><br><span class="line">    code = <span class="string">&#x27;&#x27;</span>.join(random.choices(<span class="string">&#x27;0123456789&#x27;</span>, k=<span class="number">4</span>))</span><br><span class="line">    <span class="comment"># 验证码存在session中</span></span><br><span class="line">    request.session[data.phone] = code</span><br><span class="line">    request.session.set_expiry(<span class="number">5</span> * <span class="number">60</span>)  <span class="comment"># 缓存5分钟</span></span><br><span class="line">    <span class="comment"># 使用了response R， 这里默认就是 R 中的 data属性</span></span><br><span class="line">    <span class="keyword">return</span> R.ok(data=SendMsgResultSchema(code=code))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@router.post(<span class="params"><span class="string">&quot;/login&quot;</span>, summary=<span class="string">&quot;登录&quot;</span>, response=R</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">user_login</span>(<span class="params">request, data: UserLoginSchema</span>):</span><br><span class="line">    <span class="comment"># 1. 验证码存在?</span></span><br><span class="line">    <span class="keyword">if</span> request.session.get(data.phone) == data.code:</span><br><span class="line">        <span class="comment"># 2. 查不到就创建</span></span><br><span class="line">        user, _ = User.objects.get_or_create(phone=data.phone, status=<span class="number">1</span>)</span><br><span class="line">        <span class="comment"># 3. Java原版这里使用的是存session 为了偷懒-不改动h5 我们也不用JWT了</span></span><br><span class="line">        request.session[<span class="string">&#x27;user&#x27;</span>] = user.<span class="built_in">id</span></span><br><span class="line">        <span class="keyword">return</span> R.ok(data=<span class="literal">None</span>)</span><br><span class="line">    <span class="keyword">return</span> R.fail(<span class="string">&quot;验证码错误&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@router.post(<span class="params"><span class="string">&quot;/loginout&quot;</span>, summary=<span class="string">&quot;退出&quot;</span>, response=R</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">user_logout</span>(<span class="params">request</span>):</span><br><span class="line">    <span class="keyword">if</span> request.session.get(<span class="string">&quot;user&quot;</span>):</span><br><span class="line">        request.session.delete(<span class="string">&quot;user&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> R.ok(data=<span class="literal">None</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1721225627552-b0bb3993-1525-41fe-b05e-8c720a474b9e.png"></p><h1 id="首页显示接口"><a href="#首页显示接口" class="headerlink" title="首页显示接口"></a>首页显示接口</h1><blockquote><p><code>takeout/apps/product</code>目录下</p></blockquote><h2 id="Schema"><a href="#Schema" class="headerlink" title="Schema"></a>Schema</h2><blockquote><p><code>takeout/apps/product/schemas.py</code></p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Optional</span>, <span class="type">List</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> ninja <span class="keyword">import</span> ModelSchema, Schema, Field</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pydantic <span class="keyword">import</span> validator</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Category, Dish, DishFlavor</span><br><span class="line"><span class="keyword">from</span> ..order.models <span class="keyword">import</span> ShoppingCart</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CategorySchema</span>(<span class="title class_ inherited__">ModelSchema</span>):</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Config</span>:</span><br><span class="line">        model = Category</span><br><span class="line">        model_fields = <span class="string">&quot;__all__&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DishFilter</span>(<span class="title class_ inherited__">Schema</span>):</span><br><span class="line">    status: <span class="type">Optional</span>[<span class="built_in">int</span>] = Field(..., description=<span class="string">&quot;上架状态&quot;</span>)</span><br><span class="line">    category_id: <span class="type">Optional</span>[<span class="built_in">int</span>] = Field(..., description=<span class="string">&quot;分类ID&quot;</span>, alias=<span class="string">&quot;categoryId&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DishFlavorSchema</span>(<span class="title class_ inherited__">ModelSchema</span>):</span><br><span class="line">    value: <span class="type">List</span>[<span class="built_in">str</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 处理value 是json 数组的情况 最终返回的数据是这个方法处理之后的字符串</span></span><br><span class="line"><span class="meta">    @validator(<span class="params"><span class="string">&quot;value&quot;</span></span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">dumps_value</span>(<span class="params">cls, value</span>):</span><br><span class="line">        <span class="keyword">if</span> value:</span><br><span class="line">            <span class="comment"># 源版中 value 返回的是dumps之后的数组数据</span></span><br><span class="line">            <span class="keyword">return</span> json.dumps(value)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Config</span>:</span><br><span class="line">        model = DishFlavor</span><br><span class="line">        <span class="comment"># model_exclude = [&quot;dish&quot;]</span></span><br><span class="line">        model_fields = <span class="string">&quot;__all__&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DishSchema</span>(<span class="title class_ inherited__">ModelSchema</span>):</span><br><span class="line">    flavors: <span class="type">List</span>[DishFlavorSchema] = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Config</span>:</span><br><span class="line">        model = Dish</span><br><span class="line">        model_fields = <span class="string">&quot;__all__&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ShoppingCartSchema</span>(<span class="title class_ inherited__">ModelSchema</span>):</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Config</span>:</span><br><span class="line">        model = ShoppingCart</span><br><span class="line">        model_fields = <span class="string">&quot;__all__&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="分类列表"><a href="#分类列表" class="headerlink" title="分类列表"></a>分类列表</h2><blockquote><p><code>takeout/apps/product/views.py</code></p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os.path</span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">List</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> FileResponse</span><br><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your views here.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> ninja <span class="keyword">import</span> Router, Query</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> apps.order.models <span class="keyword">import</span> ShoppingCart</span><br><span class="line"><span class="keyword">from</span> apps.product.models <span class="keyword">import</span> Category, Dish</span><br><span class="line"><span class="keyword">from</span> apps.product.schemas <span class="keyword">import</span> CategorySchema, DishSchema, DishFilter, ShoppingCartSchema</span><br><span class="line"><span class="keyword">from</span> apps.schemas <span class="keyword">import</span> R</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> takeout.settings <span class="keyword">import</span> BASE_DIR</span><br><span class="line"></span><br><span class="line">router = Router(tags=[<span class="string">&quot;商品&quot;</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@router.get(<span class="params"><span class="string">&quot;/category/list&quot;</span>, summary=<span class="string">&quot;分类&quot;</span>, response=R</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">category_list</span>(<span class="params">request</span>):</span><br><span class="line">    result = Category.objects.<span class="built_in">all</span>().order_by(<span class="string">&#x27;-sort&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> R.ok(data=<span class="built_in">list</span>(result.values()))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@router.get(<span class="params"><span class="string">&quot;/dish/list&quot;</span>, summary=<span class="string">&quot;食品列表&quot;</span>, response=R</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dish_list</span>(<span class="params">request, data: DishFilter = Query(<span class="params">...</span>)</span>):</span><br><span class="line">    result = Dish.objects.<span class="built_in">filter</span>(**data.<span class="built_in">dict</span>())</span><br><span class="line">    <span class="comment"># 将口味属性加到对象中</span></span><br><span class="line">    <span class="keyword">for</span> obj <span class="keyword">in</span> result:</span><br><span class="line">        <span class="built_in">setattr</span>(obj, <span class="string">&quot;flavors&quot;</span>, obj.dishflavor_set.<span class="built_in">all</span>())</span><br><span class="line">    <span class="keyword">return</span> R.ok(<span class="built_in">list</span>(result.values()))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@router.get(<span class="params"><span class="string">&quot;/common/download&quot;</span>, summary=<span class="string">&quot;图片流&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">download_img</span>(<span class="params">request, name: <span class="built_in">str</span></span>):</span><br><span class="line">    media_path = <span class="string">f&quot;<span class="subst">&#123;BASE_DIR&#125;</span><span class="subst">&#123;name&#125;</span>&quot;</span></span><br><span class="line">    <span class="keyword">if</span> os.path.exists(media_path):</span><br><span class="line">        <span class="keyword">return</span> FileResponse(<span class="built_in">open</span>(media_path, <span class="string">&quot;rb&quot;</span>), content_type=<span class="string">&quot;image/png&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@router.get(<span class="params"><span class="string">&quot;/shoppingCart/list&quot;</span>, tags=[<span class="string">&quot;购物车&quot;</span>], summary=<span class="string">&quot;购物车列表&quot;</span>, response=R</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">cart</span>(<span class="params">request</span>):</span><br><span class="line">    <span class="keyword">if</span> request.session.get(<span class="string">&#x27;user&#x27;</span>):</span><br><span class="line">        result = ShoppingCart.objects.<span class="built_in">filter</span>(user=request.session.get(<span class="string">&quot;user&quot;</span>))</span><br><span class="line">        <span class="keyword">return</span> R.ok(data=<span class="built_in">list</span>(result))</span><br><span class="line">    <span class="keyword">return</span> R.ok(data=[])</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="认证"><a href="#认证" class="headerlink" title="认证"></a>认证</h2><blockquote><p>某些接口需要用户登录之后才能操作，<code>takeout/apps/auth.py</code></p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> ninja.errors <span class="keyword">import</span> AuthenticationError</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> apps.user.models <span class="keyword">import</span> User</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">session_auth</span>(<span class="params">request</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        user_id = request.session[<span class="string">&#x27;user&#x27;</span>]</span><br><span class="line">        user = User.objects.get(<span class="built_in">id</span>=user_id)</span><br><span class="line">        <span class="keyword">return</span> user</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(e)</span><br><span class="line">        <span class="keyword">raise</span> AuthenticationError</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="预览-1"><a href="#预览-1" class="headerlink" title="预览"></a>预览</h2><blockquote><p>H5 商品价格显示问题，修改<code>takeout/static/front/index.html</code></p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- &lt;div class=&quot;divBottom&quot;&gt;&lt;span&gt;￥&lt;/span&gt;&lt;span&gt;&#123;&#123;item.price / 100&#125;&#125;&lt;/span&gt;&lt;/div&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;divBottom&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>￥<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;item.price&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/gif/1624081/1689500323673-a0f0545a-ee7a-4c51-87ed-32ec95652d02.gif"></p><h1 id="暂时到这里"><a href="#暂时到这里" class="headerlink" title="暂时到这里"></a>暂时到这里</h1><blockquote><p>更新: 2024-07-17 22:54:08<br>原文: <a href="https://www.yuque.com/zacharyblock/cx2om6/awbybg98ch6hs25g">https://www.yuque.com/zacharyblock/cx2om6/awbybg98ch6hs25g</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Django-Ninja-Takeout&quot;&gt;&lt;a href=&quot;#Django-Ninja-Takeout&quot; class=&quot;headerlink&quot; title=&quot;Django-Ninja Takeout&quot;&gt;&lt;/a&gt;Django-Ninja Takeout&lt;/h1&gt;&lt;</summary>
      
    
    
    
    <category term="Python Web" scheme="https://blockzachary.github.io/categories/Python-Web/"/>
    
    
    <category term="Python Web" scheme="https://blockzachary.github.io/tags/Python-Web/"/>
    
    <category term="Django-Ninja" scheme="https://blockzachary.github.io/tags/Django-Ninja/"/>
    
  </entry>
  
  <entry>
    <title>Django-Ninja</title>
    <link href="https://blockzachary.github.io/2024/07/12/PythonWeb/DjangoNinja%E5%85%A5%E9%97%A8/"/>
    <id>https://blockzachary.github.io/2024/07/12/PythonWeb/DjangoNinja%E5%85%A5%E9%97%A8/</id>
    <published>2024-07-12T23:22:00.000Z</published>
    <updated>2024-07-12T23:22:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Django-Ninja"><a href="#Django-Ninja" class="headerlink" title="Django-Ninja"></a>Django-Ninja</h1><h1 id="官方文档"><a href="#官方文档" class="headerlink" title="官方文档"></a>官方文档</h1><p>Django-Ninja：<a href="https://django-ninja.dev/">https://django-ninja.dev/</a></p><h1 id="项目初始化"><a href="#项目初始化" class="headerlink" title="项目初始化"></a>项目初始化</h1><h2 id="创建虚拟环境"><a href="#创建虚拟环境" class="headerlink" title="创建虚拟环境"></a>创建虚拟环境</h2><p><code>python3 -m venv venv</code></p><h2 id="激活虚拟环境"><a href="#激活虚拟环境" class="headerlink" title="激活虚拟环境"></a>激活虚拟环境</h2><p>Windows：<code>venv/Script/activate</code></p><p>Mac&#x2F;Linux：<code>source venv/bin/activate</code></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1720865210569-0adb05b0-1902-48b4-90d2-689380ce0d0d.png"></p><h2 id="安装-Django-ninja"><a href="#安装-Django-ninja" class="headerlink" title="安装 Django-ninja"></a>安装 Django-ninja</h2><blockquote><p>在安装 Django-ninja 的时候，其实还会安装 Django</p></blockquote><p><code>pip3 install django-ninja</code></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1720865353261-68f05330-a1bf-4b62-8f0d-cd1792e6062e.png"></p><h2 id="创建-ninja-应用"><a href="#创建-ninja-应用" class="headerlink" title="创建 ninja 应用"></a>创建 ninja 应用</h2><p>使用<code>&lt;font style=&quot;color:rgb(54, 70, 78);background-color:rgb(245, 245, 245);&quot;&gt;django-admin startproject [应用名]&lt;/font&gt;</code><font style="color:rgb(54, 70, 78);background-color:rgb(245, 245, 245);">创建应用</font></p><p><font style="color:rgb(54, 70, 78);background-color:rgb(245, 245, 245);">这里创建了一个名为</font><code>&lt;font style=&quot;color:rgb(54, 70, 78);background-color:rgb(245, 245, 245);&quot;&gt;ninja_server&lt;/font&gt;</code><font style="color:rgb(54, 70, 78);background-color:rgb(245, 245, 245);">的应用</font></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1720865570605-835d4f8c-15ef-4f52-8f25-6df9e35b4966.png"></p><h2 id="打开项目"><a href="#打开项目" class="headerlink" title="打开项目"></a>打开项目</h2><p>使用 PyCharm 打开创建的项目，即直接打开<code>ninja_server</code>即可，然后解释器记得选择创建的虚拟环境下的解释器</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1720865956769-9fb029aa-6a35-454b-8434-fad52f7e4c43.png"></p><h2 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h2><p>在&#x2F;ninja_server 下的 urls.py 后面添加</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">URL configuration for ninja_server project.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">The `urlpatterns` list routes URLs to views. For more information please see:</span></span><br><span class="line"><span class="string">    https://docs.djangoproject.com/en/5.0/topics/http/urls/</span></span><br><span class="line"><span class="string">Examples:</span></span><br><span class="line"><span class="string">Function views</span></span><br><span class="line"><span class="string">    1. Add an import:  from my_app import views</span></span><br><span class="line"><span class="string">    2. Add a URL to urlpatterns:  path(&#x27;&#x27;, views.home, name=&#x27;home&#x27;)</span></span><br><span class="line"><span class="string">Class-based views</span></span><br><span class="line"><span class="string">    1. Add an import:  from other_app.views import Home</span></span><br><span class="line"><span class="string">    2. Add a URL to urlpatterns:  path(&#x27;&#x27;, Home.as_view(), name=&#x27;home&#x27;)</span></span><br><span class="line"><span class="string">Including another URLconf</span></span><br><span class="line"><span class="string">    1. Import the include() function: from django.urls import include, path</span></span><br><span class="line"><span class="string">    2. Add a URL to urlpatterns:  path(&#x27;blog/&#x27;, include(&#x27;blog.urls&#x27;))</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> ninja <span class="keyword">import</span> NinjaAPI</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&#x27;admin/&#x27;</span>, admin.site.urls),</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">api = NinjaAPI()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@api.get(<span class="params"><span class="string">&quot;/hello&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello_world</span>(<span class="params">request</span>):</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&#x27;hello&#x27;</span>: <span class="string">&#x27;world&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">urlpatterns += [path(<span class="string">&#x27;api/&#x27;</span>, api.urls)]</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后启动项目</p><ul><li>命令行启动</li></ul><p><code>python3 manage.py runserver</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">(venv) ➜  ninja_server</span><br><span class="line">(venv) ➜  ninja_server python3 manage.py runserver</span><br><span class="line">Watching for file changes with StatReloader</span><br><span class="line">Performing system checks...</span><br><span class="line"></span><br><span class="line">System check identified no issues (0 silenced).</span><br><span class="line"></span><br><span class="line">You have 18 unapplied migration(s). Your project may not work properly until you apply the migrations for app(s): admin, auth, contenttypes, sessions.</span><br><span class="line">Run &#x27;python manage.py migrate&#x27; to apply them.</span><br><span class="line">July 13, 2024 - 10:26:13</span><br><span class="line">Django version 5.0.7, using settings &#x27;ninja_server.settings&#x27;</span><br><span class="line">Starting development server at http://127.0.0.1:8000/</span><br><span class="line">Quit the server with CONTROL-C.</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>之后在浏览器输入<code>http://127.0.0.1:8000/api/hello</code></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1720866480596-98241c95-6b1d-41ac-8479-27a18a2b9874.png"></p><ul><li>直接启动</li></ul><h1 id="查看文档"><a href="#查看文档" class="headerlink" title="查看文档"></a>查看文档</h1><p>直接通过<code>http://127.0.0.1:8000/api/docs</code>可以查看官方文档</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1720866561421-01edc801-81ab-43c8-ba7f-b08089cfa6a2.png"></p><h1 id="路由、视图、常用请求"><a href="#路由、视图、常用请求" class="headerlink" title="路由、视图、常用请求"></a>路由、视图、常用请求</h1><p>在 Django-ninja 中的路由配置，与 fastapi 类似</p><p>在项目目录下面创建一个 router.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpRequest</span><br><span class="line"><span class="keyword">from</span> ninja <span class="keyword">import</span> Router</span><br><span class="line"></span><br><span class="line">REST = Router(tags=[<span class="string">&quot;REST API&quot;</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@REST.get(<span class="params"><span class="string">&quot;/get&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">http_get</span>(<span class="params">request: HttpRequest</span>):</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&quot;get&quot;</span>: <span class="string">&quot;OK&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@REST.post(<span class="params"><span class="string">&quot;/post&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">http_post</span>(<span class="params">request: HttpRequest</span>):</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&quot;post&quot;</span>: <span class="string">&quot;OK&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@REST.put(<span class="params"><span class="string">&quot;/put&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">http_put</span>(<span class="params">request: HttpRequest</span>):</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&quot;put&quot;</span>: <span class="string">&quot;OK&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@REST.delete(<span class="params"><span class="string">&quot;/delete&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">http_delete</span>(<span class="params">request: HttpRequest</span>):</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&quot;delete&quot;</span>: <span class="string">&quot;OK&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@REST.patch(<span class="params"><span class="string">&quot;/patch&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">http_patch</span>(<span class="params">request: HttpRequest</span>):</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&quot;patch&quot;</span>: <span class="string">&quot;OK&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@REST.api_operation(<span class="params">methods=[<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;POST&quot;</span>], path=<span class="string">&quot;/multi&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">http_multi</span>(<span class="params">request: HttpRequest</span>):</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&quot;GET&quot;</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">elif</span> request.method == <span class="string">&quot;POST&quot;</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">raise</span> Exception</span><br></pre></td></tr></table></figure><p>视图的第一个参数，必须是<code>request: HttpRequest</code></p><p>然后修改 urls.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">URL configuration for ninja_server project.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">The `urlpatterns` list routes URLs to views. For more information please see:</span></span><br><span class="line"><span class="string">    https://docs.djangoproject.com/en/5.0/topics/http/urls/</span></span><br><span class="line"><span class="string">Examples:</span></span><br><span class="line"><span class="string">Function views</span></span><br><span class="line"><span class="string">    1. Add an import:  from my_app import views</span></span><br><span class="line"><span class="string">    2. Add a URL to urlpatterns:  path(&#x27;&#x27;, views.home, name=&#x27;home&#x27;)</span></span><br><span class="line"><span class="string">Class-based views</span></span><br><span class="line"><span class="string">    1. Add an import:  from other_app.views import Home</span></span><br><span class="line"><span class="string">    2. Add a URL to urlpatterns:  path(&#x27;&#x27;, Home.as_view(), name=&#x27;home&#x27;)</span></span><br><span class="line"><span class="string">Including another URLconf</span></span><br><span class="line"><span class="string">    1. Import the include() function: from django.urls import include, path</span></span><br><span class="line"><span class="string">    2. Add a URL to urlpatterns:  path(&#x27;blog/&#x27;, include(&#x27;blog.urls&#x27;))</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> ninja <span class="keyword">import</span> NinjaAPI</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> router <span class="keyword">import</span> REST</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&#x27;admin/&#x27;</span>, admin.site.urls),</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">api = NinjaAPI()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@api.get(<span class="params"><span class="string">&quot;/hello&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello_world</span>(<span class="params">request</span>):</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&#x27;hello&#x27;</span>: <span class="string">&#x27;world&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">api.add_router(prefix=<span class="string">&quot;v1/&quot;</span>, router=REST)</span><br><span class="line"></span><br><span class="line">urlpatterns += [path(<span class="string">&#x27;api/&#x27;</span>, api.urls)]</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1720951173221-eb2289fb-8346-471a-96de-2c968580d810.png"></p><h1 id="常见请求参数"><a href="#常见请求参数" class="headerlink" title="常见请求参数"></a>常见请求参数</h1><p>包括路径参数、查询参数、请求体</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">List</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpRequest</span><br><span class="line"><span class="keyword">from</span> ninja <span class="keyword">import</span> Router, Path, Query, Schema, Field, Form, UploadedFile, File</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">REQ_PARA = Router(tags=[<span class="string">&quot;Request parameter&quot;</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 路径参数</span></span><br><span class="line"><span class="meta">@REQ_PARA.get(<span class="params"><span class="string">&quot;/path/&#123;id&#125;&quot;</span>, summary=<span class="string">&quot;路径参数&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_path</span>(<span class="params">request, <span class="built_in">id</span>: <span class="built_in">int</span></span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@REQ_PARA.get(<span class="params"><span class="string">&quot;/pathV2/&#123;pk&#125;&quot;</span>, summary=<span class="string">&quot;路径参数PATH&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_path_v2</span>(<span class="params">request, pk: <span class="built_in">int</span> = Path(<span class="params"><span class="number">10</span>, title=<span class="string">&quot;主键&quot;</span>, alias=<span class="string">&quot;primary_key&quot;</span></span>)</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;pk&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询参数</span></span><br><span class="line"><span class="meta">@REQ_PARA.get(<span class="params"><span class="string">&quot;/query&quot;</span>, summary=<span class="string">&quot;查询参数&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_query</span>(<span class="params">request, <span class="built_in">id</span>: <span class="built_in">int</span>, age: <span class="built_in">int</span> = <span class="number">10</span></span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;<span class="built_in">id</span>&#125;</span> <span class="subst">&#123;age&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ... 占位符，表示必填字段</span></span><br><span class="line"><span class="meta">@REQ_PARA.get(<span class="params"><span class="string">&quot;/queryV2&quot;</span>, summary=<span class="string">&quot;查询参数Query&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_query_v2</span>(<span class="params">request, name: <span class="built_in">str</span> = Query(<span class="params">..., title=<span class="string">&quot;姓名&quot;</span>, description=<span class="string">&quot;姓名,...为必填项&quot;</span></span>)</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;name&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询参数，使用schema定义模型</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">QueryFilter</span>(<span class="title class_ inherited__">Schema</span>):</span><br><span class="line">    age: <span class="built_in">int</span> = <span class="literal">None</span>  <span class="comment"># 可选项</span></span><br><span class="line">    name: <span class="built_in">str</span> = Field(..., description=<span class="string">&quot;必填项&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 必填项</span></span><br><span class="line"><span class="meta">@REQ_PARA.get(<span class="params"><span class="string">&quot;/queryV3&quot;</span>, summary=<span class="string">&quot;查询参数Query-Schema&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_query_v3</span>(<span class="params">request, data: QueryFilter = Query(<span class="params">...</span>)</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;data&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 表单 - 用得少</span></span><br><span class="line"><span class="meta">@REQ_PARA.post(<span class="params"><span class="string">&quot;/form&quot;</span>, summary=<span class="string">&quot;表单&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">post_form</span>(<span class="params">request, username: <span class="built_in">str</span> = Form(<span class="params">...</span>), password: <span class="built_in">str</span> = Form(<span class="params">...</span>)</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;username&#125;</span> <span class="subst">&#123;password&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Schema标注Form</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">User</span>(<span class="title class_ inherited__">Schema</span>):</span><br><span class="line">    username: <span class="built_in">str</span></span><br><span class="line">    password: <span class="built_in">str</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@REQ_PARA.post(<span class="params"><span class="string">&quot;/formV2&quot;</span>, summary=<span class="string">&quot;表单-Schema&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">post_form2</span>(<span class="params">request, data: User = Form(<span class="params">...</span>)</span>):</span><br><span class="line">    <span class="keyword">return</span> data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 上传文件</span></span><br><span class="line"><span class="meta">@REQ_PARA.post(<span class="params"><span class="string">&quot;/upload&quot;</span>, summary=<span class="string">&quot;上传文件&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">upload</span>(<span class="params">request, file: UploadedFile = File(<span class="params">...</span>)</span>):</span><br><span class="line">    data = file.read()</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="string">&quot;name&quot;</span>: file.name,</span><br><span class="line">        <span class="string">&quot;len&quot;</span>: <span class="built_in">len</span>(data)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 上传多个文件</span></span><br><span class="line"><span class="meta">@REQ_PARA.post(<span class="params"><span class="string">&quot;/upload-multi&quot;</span>, summary=<span class="string">&quot;上传多个文件&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">upload_multi</span>(<span class="params">request, files: <span class="type">List</span>[UploadedFile] = File(<span class="params">...</span>)</span>):</span><br><span class="line">    <span class="keyword">return</span> [file.name <span class="keyword">for</span> file <span class="keyword">in</span> files]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UserDetails</span>(<span class="title class_ inherited__">Schema</span>):</span><br><span class="line">    name: <span class="built_in">str</span></span><br><span class="line">    age: <span class="built_in">int</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@REQ_PARA.post(<span class="params"><span class="string">&quot;/upload-user&quot;</span>, summary=<span class="string">&quot;表单+上传文件&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">upload_user</span>(<span class="params">request, details: UserDetails = Form(<span class="params">...</span>), file: UploadedFile = File(<span class="params">...</span>)</span>):</span><br><span class="line">    <span class="keyword">return</span> [details.<span class="built_in">dict</span>(), file.name]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@REQ_PARA.post(<span class="params"><span class="string">&quot;/upload-userV2&quot;</span>, summary=<span class="string">&quot;表单+上传文件&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">upload_user2</span>(<span class="params">request, details: UserDetails, file: UploadedFile = File(<span class="params">...</span>)</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 请求体</span></span><br><span class="line"><span class="meta">@REQ_PARA.post(<span class="params"><span class="string">&quot;/body&quot;</span>, summary=<span class="string">&quot;请求体&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">user_body</span>(<span class="params">request, user: UserDetails</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1720954000682-3c378e11-ce1d-4889-816d-815690cf2091.png"></p><h1 id="模型序列化"><a href="#模型序列化" class="headerlink" title="模型序列化"></a>模型序列化</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">List</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.contrib.auth.models <span class="keyword">import</span> Group, User</span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpRequest</span><br><span class="line"><span class="keyword">from</span> ninja <span class="keyword">import</span> Router, Path, Query, Schema, Field, Form, UploadedFile, File, ModelSchema</span><br><span class="line"><span class="keyword">from</span> ninja.pagination <span class="keyword">import</span> paginate</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GroupSchema</span>(<span class="title class_ inherited__">ModelSchema</span>):</span><br><span class="line">    user: <span class="string">&quot;UserSchema&quot;</span> = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Config</span>:</span><br><span class="line">        model = Group  <span class="comment"># 指定模型</span></span><br><span class="line">        model_fields = [<span class="string">&#x27;id&#x27;</span>, <span class="string">&#x27;name&#x27;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UserSchema</span>(<span class="title class_ inherited__">ModelSchema</span>):</span><br><span class="line">    groups:<span class="type">List</span>[GroupSchema] = []</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Config</span>:</span><br><span class="line">        model = User</span><br><span class="line">        model_fields = [<span class="string">&#x27;id&#x27;</span>, <span class="string">&#x27;username&#x27;</span>, <span class="string">&#x27;first_name&#x27;</span>, <span class="string">&#x27;last_name&#x27;</span>]</span><br><span class="line">        <span class="comment"># model_fields = &quot;__all__&quot; # 所有字段</span></span><br><span class="line">        model_fields_optional = [<span class="string">&#x27;username&#x27;</span>]  <span class="comment"># 设置字段可不传送</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># UserSchema在GroupSchema后面定义的，所以需要加这个才能正常序列化</span></span><br><span class="line">GroupSchema.update_forward_refs()</span><br><span class="line"></span><br><span class="line">SchemaModel = Router(tags=[<span class="string">&quot;Schema Model&quot;</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># List[UserSchema] 等价 后面那个接口的生成器</span></span><br><span class="line"><span class="meta">@SchemaModel.get(<span class="params"><span class="string">&quot;/schema&quot;</span>, response=<span class="type">List</span>[UserSchema], summary=<span class="string">&quot;Schema model序列化&quot;</span></span>)</span></span><br><span class="line"><span class="meta">@paginate</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">list_users</span>(<span class="params">request</span>):</span><br><span class="line">    <span class="keyword">return</span> User.objects.<span class="built_in">all</span>()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@SchemaModel.get(<span class="params"><span class="string">&quot;/groups&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">list_groups</span>(<span class="params">request</span>):</span><br><span class="line">    <span class="keyword">return</span> [GroupSchema.from_orm(obj) <span class="keyword">for</span> obj <span class="keyword">in</span> Group.objects.<span class="built_in">all</span>()]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@SchemaModel.post(<span class="params"><span class="string">&quot;/group&quot;</span>, response=GroupSchema, summary=<span class="string">&quot;add&quot;</span>, tags=[<span class="string">&quot;group&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">request, group: GroupSchema</span>):</span><br><span class="line">    obj = Group.objects.create(**group.<span class="built_in">dict</span>())</span><br><span class="line">    <span class="keyword">return</span> obj</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>写好代码之后</p><p>执行一下</p><p><code>python manage.py makemigrations</code></p><p>和</p><p><code>python manage.py migrate</code></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">(venv) ➜  ninja_server python manage.py makemigrations</span><br><span class="line">No changes detected</span><br><span class="line">(venv) ➜  ninja_server python manage.py migrate</span><br><span class="line">Operations to perform:</span><br><span class="line">  Apply all migrations: admin, auth, contenttypes, sessions</span><br><span class="line">Running migrations:</span><br><span class="line">  Applying contenttypes.<span class="number">0001</span>_initial... OK</span><br><span class="line">  Applying auth.<span class="number">0001</span>_initial... OK</span><br><span class="line">  Applying admin.<span class="number">0001</span>_initial... OK</span><br><span class="line">  Applying admin.<span class="number">0002</span>_logentry_remove_auto_add... OK</span><br><span class="line">  Applying admin.<span class="number">0003</span>_logentry_add_action_flag_choices... OK</span><br><span class="line">  Applying contenttypes.<span class="number">0002</span>_remove_content_type_name... OK</span><br><span class="line">  Applying auth.<span class="number">0002</span>_alter_permission_name_max_length... OK</span><br><span class="line">  Applying auth.<span class="number">0003</span>_alter_user_email_max_length... OK</span><br><span class="line">  Applying auth.<span class="number">0004</span>_alter_user_username_opts... OK</span><br><span class="line">  Applying auth.<span class="number">0005</span>_alter_user_last_login_null... OK</span><br><span class="line">  Applying auth.<span class="number">0006</span>_require_contenttypes_0002... OK</span><br><span class="line">  Applying auth.<span class="number">0007</span>_alter_validators_add_error_messages... OK</span><br><span class="line">  Applying auth.<span class="number">0008</span>_alter_user_username_max_length... OK</span><br><span class="line">  Applying auth.<span class="number">0009</span>_alter_user_last_name_max_length... OK</span><br><span class="line">  Applying auth.<span class="number">0010</span>_alter_group_name_max_length... OK</span><br><span class="line">  Applying auth.<span class="number">0011</span>_update_proxy_permissions... OK</span><br><span class="line">  Applying auth.<span class="number">0012</span>_alter_user_first_name_max_length... OK</span><br><span class="line">  Applying sessions.<span class="number">0001</span>_initial... OK</span><br><span class="line">(venv) ➜  ninja_server</span><br></pre></td></tr></table></figure><h1 id="JWT-认证"><a href="#JWT-认证" class="headerlink" title="JWT 认证"></a>JWT 认证</h1><p>先安装一下 jwt 依赖</p><p><code>pip3 install python-jose</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">generate_token</span>(<span class="params">username: <span class="built_in">str</span>, expires_delta=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    生成token</span></span><br><span class="line"><span class="string">    :param username:用户名</span></span><br><span class="line"><span class="string">    :param expires_delta:有效时长</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    to_encode = &#123;<span class="string">&quot;sub&quot;</span>: username&#125;.copy()</span><br><span class="line">    <span class="keyword">if</span> expires_delta:</span><br><span class="line">        expire = datetime.utcnow() + expires_delta</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        expire = datetime.utcnow() + timedelta(minutes=<span class="number">1</span>)</span><br><span class="line">    to_encode.update(<span class="built_in">dict</span>(exp=expire))</span><br><span class="line">    encoded_jwt = jwt.encode(to_encode, <span class="string">&quot;SECRET_KEY&quot;</span>, algorithm=<span class="string">&quot;HS256&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> encoded_jwt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TokenAuth</span>(<span class="title class_ inherited__">HttpBearer</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">authenticate</span>(<span class="params">self, request, token</span>):</span><br><span class="line">        <span class="comment"># 解密token</span></span><br><span class="line">        payload = jwt.decode(token, <span class="string">&quot;SECRET_KEY&quot;</span>, algorithms=[<span class="string">&quot;HS256&quot;</span>])</span><br><span class="line">        username: <span class="built_in">str</span> = payload.get(<span class="string">&quot;sub&quot;</span>)</span><br><span class="line">        <span class="comment"># 校验用户是否存在</span></span><br><span class="line">        <span class="keyword">if</span> username == <span class="string">&quot;zachary&quot;</span>:</span><br><span class="line">            request.session[<span class="string">&quot;user&quot;</span>] = username</span><br><span class="line">            <span class="keyword">return</span> username</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> HttpError(<span class="number">404</span>, <span class="string">&quot;user not found&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">TokenRouter = Router(tags=[<span class="string">&quot;Token&quot;</span>], auth=TokenAuth())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@TokenRouter.get(<span class="params"><span class="string">&quot;/token&quot;</span>, summary=<span class="string">&quot;token&quot;</span>, auth=<span class="literal">None</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">token</span>(<span class="params">request, user</span>):</span><br><span class="line">    token = generate_token(user)</span><br><span class="line">    <span class="keyword">return</span> token</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@TokenRouter.get(<span class="params"><span class="string">&quot;/check&quot;</span>, summary=<span class="string">&quot;user&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check</span>(<span class="params">request</span>):</span><br><span class="line">    <span class="keyword">return</span> request.session.get(<span class="string">&quot;user&quot;</span>)</span><br></pre></td></tr></table></figure><h1 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h1><p>写到 urls.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@api.exception_handler(<span class="params">Exception</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">global_exception_handler</span>(<span class="params">request: HttpRequest, exc</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">exec</span>)</span><br><span class="line">    <span class="built_in">print</span>(request.build_absolute_uri())</span><br><span class="line">    <span class="built_in">print</span>(traceback.format_exc())</span><br><span class="line">    <span class="keyword">return</span> JsonResponse(&#123;</span><br><span class="line">        <span class="string">&quot;data&quot;</span>: <span class="literal">None</span>,</span><br><span class="line">        <span class="string">&quot;msg&quot;</span>: <span class="built_in">str</span>(exc),</span><br><span class="line">        <span class="string">&quot;code&quot;</span>: <span class="number">500</span></span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@api.exception_handler(<span class="params">HttpError</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">http_error</span>(<span class="params">request: HttpRequest, exc</span>):</span><br><span class="line">    <span class="keyword">return</span> JsonResponse(&#123;</span><br><span class="line">        <span class="string">&quot;data&quot;</span>: <span class="literal">None</span>,</span><br><span class="line">        <span class="string">&quot;msg&quot;</span>: <span class="built_in">str</span>(exc),</span><br><span class="line">        <span class="string">&quot;code&quot;</span>: exc.status_code</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@api.get(<span class="params"><span class="string">&quot;/hello1&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello</span>(<span class="params">request</span>):</span><br><span class="line">    <span class="number">1</span> / <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@api.get(<span class="params"><span class="string">&quot;/hello2&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello2</span>(<span class="params">request</span>):</span><br><span class="line">    <span class="keyword">raise</span> HttpError(<span class="number">404</span>, <span class="string">&quot;user not found&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@api.get(<span class="params"><span class="string">&quot;/hello3&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello3</span>(<span class="params">request</span>):</span><br><span class="line">    <span class="keyword">raise</span> ValueError(<span class="string">&quot;user not found&quot;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1720961272264-36bbbedd-c5fc-4216-b960-3bea669f1db7.png"></p><blockquote><p>更新: 2024-07-14 20:47:56<br>原文: <a href="https://www.yuque.com/zacharyblock/cx2om6/oukufzfyh2p6vb38">https://www.yuque.com/zacharyblock/cx2om6/oukufzfyh2p6vb38</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Django-Ninja&quot;&gt;&lt;a href=&quot;#Django-Ninja&quot; class=&quot;headerlink&quot; title=&quot;Django-Ninja&quot;&gt;&lt;/a&gt;Django-Ninja&lt;/h1&gt;&lt;h1 id=&quot;官方文档&quot;&gt;&lt;a href=&quot;#官方文档&quot; cla</summary>
      
    
    
    
    <category term="Python Web" scheme="https://blockzachary.github.io/categories/Python-Web/"/>
    
    
    <category term="Python Web" scheme="https://blockzachary.github.io/tags/Python-Web/"/>
    
    <category term="Django-Ninja" scheme="https://blockzachary.github.io/tags/Django-Ninja/"/>
    
  </entry>
  
  <entry>
    <title>Django 实现 RESTful API</title>
    <link href="https://blockzachary.github.io/2024/07/10/PythonWeb/Django%E5%86%99RESTfulAPI/"/>
    <id>https://blockzachary.github.io/2024/07/10/PythonWeb/Django%E5%86%99RESTfulAPI/</id>
    <published>2024-07-10T20:02:00.000Z</published>
    <updated>2024-07-10T20:02:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Django-实现-RESTful-API"><a href="#Django-实现-RESTful-API" class="headerlink" title="Django 实现 RESTful API"></a>Django 实现 RESTful API</h1><p>一个超快、超极速的 Django 入门教程</p><p>直接从 PyCharm 开始就可以</p><h1 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h1><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1720614004639-4039f8f4-4a5c-476e-9a74-a21329a0c224.png"></p><h1 id="目录介绍"><a href="#目录介绍" class="headerlink" title="目录介绍"></a>目录介绍</h1><p>在完成项目依赖的安装和初始化之后，就可以看到以下目录</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1720614289363-b12d9096-0ffd-4538-9e1f-8a51d4c23806.png"></p><ul><li>manage.py 是 Django 提供的命令行操作脚本</li><li>storeProject<ul><li><strong>init</strong>.py 声明了 storeProject 为一个模块</li><li>urls.py 用于配置 url 映射的文件</li><li>settings.py 项目相关应用配置</li><li>asgi.py 与 wsgi.py 是项目部署相关文件</li></ul></li></ul><h1 id="DRF-安装"><a href="#DRF-安装" class="headerlink" title="DRF 安装"></a>DRF 安装</h1><p><code>pip3 install djangorestframework</code></p><p>使用该命令安装 drf 的依赖\库\包</p><h1 id="修改-settings-py"><a href="#修改-settings-py" class="headerlink" title="修改 settings.py"></a>修改 settings.py</h1><p>将 drf 注册到应用里面</p><p>在 settings.py 中找到<code>INSTALLED_APPS</code></p><p>然后添加<code>rest_framework</code>如下即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line">    <span class="string">&#x27;rest_framework&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.admin&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.auth&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.contenttypes&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.sessions&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.messages&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.staticfiles&#x27;</span>,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h1 id="DRF-启动"><a href="#DRF-启动" class="headerlink" title="DRF 启动"></a>DRF 启动</h1><p>启动项目，仅需点击 PyCharm 右上角的运行按钮</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1720614892409-a1835fdb-fc9a-40df-be28-39de345f23b3.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1720614986446-230b95b8-fb2d-4772-933e-932f34304562.png"></p><h1 id="创建-api"><a href="#创建-api" class="headerlink" title="创建 api"></a>创建 api</h1><h2 id="创建视图-views"><a href="#创建视图-views" class="headerlink" title="创建视图 views"></a>创建视图 views</h2><p>在项目目录下，创建一个名为 api 的包，并且再创建一个 views.py 文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> rest_framework.decorators <span class="keyword">import</span> api_view</span><br><span class="line"><span class="keyword">from</span> rest_framework.response <span class="keyword">import</span> Response</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@api_view(<span class="params">[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_data</span>(<span class="params">request</span>):</span><br><span class="line">    goods = &#123;</span><br><span class="line">        <span class="string">&quot;name&quot;</span>: <span class="string">&quot;苹果&quot;</span>,</span><br><span class="line">        <span class="string">&quot;price&quot;</span>: <span class="number">12.0</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> Response(goods)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="创建-urls"><a href="#创建-urls" class="headerlink" title="创建 urls"></a>创建 urls</h2><p>在 api 包下创建一个 urls.py 文件</p><p>编写上面创建的视图的 url 映射</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> views</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&#x27;&#x27;</span>, views.get_data),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h2 id="导入映射"><a href="#导入映射" class="headerlink" title="导入映射"></a>导入映射</h2><p>在项目目录的 storeProject 下找到 urls.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path, include</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&#x27;admin/&#x27;</span>, admin.site.urls),</span><br><span class="line">    path(<span class="string">&#x27;&#x27;</span>, include(<span class="string">&#x27;api.urls&#x27;</span>)),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>重启项目后可以看到以下内容</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1720615834866-665b0f69-c366-48f4-9b89-d8eaf8ecc405.png"></p><h1 id="创建应用"><a href="#创建应用" class="headerlink" title="创建应用"></a>创建应用</h1><p>可以在命令行中通过<code>python manage.py startapp [应用名称]</code>来创建一个新的应用</p><h2 id="创建-goods"><a href="#创建-goods" class="headerlink" title="创建 goods"></a>创建 goods</h2><p><code>python manage.py startapp goods</code></p><p>执行命令之后会发现，目录结构多了一个 goods 包</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1720616042735-dae58d5c-67e7-4305-89c8-773b9968367f.png"></p><h2 id="注册-goods"><a href="#注册-goods" class="headerlink" title="注册 goods"></a>注册 goods</h2><p>在 storeProject 下的 settings.py 下注册下刚才创建的 goods</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line">    <span class="string">&#x27;goods&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;rest_framework&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.admin&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.auth&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.contenttypes&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.sessions&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.messages&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.staticfiles&#x27;</span>,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h2 id="goods-模型"><a href="#goods-模型" class="headerlink" title="goods 模型"></a>goods 模型</h2><p>在新创建的 goods 包下找到 models.py 文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Goods</span>(models.Model):</span><br><span class="line">    name = models.CharField(max_length=<span class="number">100</span>)</span><br><span class="line">    price = models.FloatField()</span><br><span class="line">    description = models.TextField()</span><br><span class="line">    created_at = models.DateTimeField(auto_now_add=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.name</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>创建好之后别忘记执行<code>python manage.py makemigrations</code>迁移命令，更新数据库变化，包括增删表，修改字段等操作，还可以保持数据库字段与类模型的同步；</p><p>之后还需要再次执行一下 migrate 命令，<code>python manage.py migrate</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">(venv) ➜  storeProject python manage.py makemigrations</span><br><span class="line">Migrations for &#x27;goods&#x27;:</span><br><span class="line">  goods/migrations/0001_initial.py</span><br><span class="line">    - Create model Goods</span><br><span class="line">(venv) ➜  storeProject python manage.py migrate</span><br><span class="line">Operations to perform:</span><br><span class="line">  Apply all migrations: admin, auth, contenttypes, goods, sessions</span><br><span class="line">Running migrations:</span><br><span class="line">  Applying contenttypes.0001_initial... OK</span><br><span class="line">  Applying auth.0001_initial... OK</span><br><span class="line">  Applying admin.0001_initial... OK</span><br><span class="line">  Applying admin.0002_logentry_remove_auto_add... OK</span><br><span class="line">  Applying admin.0003_logentry_add_action_flag_choices... OK</span><br><span class="line">  Applying contenttypes.0002_remove_content_type_name... OK</span><br><span class="line">  Applying auth.0002_alter_permission_name_max_length... OK</span><br><span class="line">  Applying auth.0003_alter_user_email_max_length... OK</span><br><span class="line">  Applying auth.0004_alter_user_username_opts... OK</span><br><span class="line">  Applying auth.0005_alter_user_last_login_null... OK</span><br><span class="line">  Applying auth.0006_require_contenttypes_0002... OK</span><br><span class="line">  Applying auth.0007_alter_validators_add_error_messages... OK</span><br><span class="line">  Applying auth.0008_alter_user_username_max_length... OK</span><br><span class="line">  Applying auth.0009_alter_user_last_name_max_length... OK</span><br><span class="line">  Applying auth.0010_alter_group_name_max_length... OK</span><br><span class="line">  Applying auth.0011_update_proxy_permissions... OK</span><br><span class="line">  Applying auth.0012_alter_user_first_name_max_length... OK</span><br><span class="line">  Applying goods.0001_initial... OK</span><br><span class="line">  Applying sessions.0001_initial... OK</span><br><span class="line">(venv) ➜</span><br></pre></td></tr></table></figure><p>至此完成了模型的创建和数据的迁移操作</p><h1 id="添加数据"><a href="#添加数据" class="headerlink" title="添加数据"></a>添加数据</h1><p>接下来使用 admin 控制台来添加数据</p><h2 id="创建超级管理员"><a href="#创建超级管理员" class="headerlink" title="创建超级管理员"></a>创建超级管理员</h2><p>使用命令创建一个超级管理员用户</p><p><code>python manage.py createsuperuser</code></p><p>创建一个名称为：admin，密码为：admin 的超级用户</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">(venv) ➜  storeProject python manage.py createsuperuser</span><br><span class="line">Username (leave blank to use &#x27;zachary&#x27;): admin</span><br><span class="line">Email address:</span><br><span class="line">Password:</span><br><span class="line">Password (again):</span><br><span class="line">The password is too similar to the username.</span><br><span class="line">This password is too short. It must contain at least 8 characters.</span><br><span class="line">This password is too common.</span><br><span class="line">Bypass password validation and create user anyway? [y/N]: y</span><br><span class="line">Superuser created successfully.</span><br></pre></td></tr></table></figure><h2 id="注册数据模型"><a href="#注册数据模型" class="headerlink" title="注册数据模型"></a>注册数据模型</h2><p>在 goods 应用下的 admin.py 中注册 goods 数据模型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="comment"># Register your models here.</span></span><br><span class="line">admin.site.register(models.Goods)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>之后重新启动一下服务</p><h2 id="admin-管理后台"><a href="#admin-管理后台" class="headerlink" title="admin 管理后台"></a>admin 管理后台</h2><p>在浏览器中输入<code>localhost:8000/admin</code>进入 admin 管理后台</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1720617144203-248ad3d3-04b7-41ae-bf4b-3df5c4fa4ee8.png"></p><p>使用上面创建的超级管理员账号密码进行登录</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1720617175721-2cc6a03a-d5c4-4fd1-a594-a2f669a3e9fe.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1720617435234-73d77bfb-e8b2-4523-9611-4302073bb711.png"></p><h2 id="Add-goods"><a href="#Add-goods" class="headerlink" title="Add goods"></a>Add goods</h2><p>点击 GOODS 下的 Goodss 右侧的+Add 按钮</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1720617578298-bbcb5a89-9364-4eb5-b496-154f08f239d7.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1720617613829-ce43db61-45b9-4f84-8c2d-39a10a460651.png"></p><p>然后现在就有两个商品了</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1720617662223-8f69931b-ae90-4177-9107-a060a7084887.png"></p><h1 id="CRUD"><a href="#CRUD" class="headerlink" title="CRUD"></a>CRUD</h1><h2 id="序列化"><a href="#序列化" class="headerlink" title="序列化"></a>序列化</h2><p>先把数据序列化功能实现了，序列化实现了 Python 类与 json 数据的转化</p><p>在项目目录&#x2F;api 下新建一个 serializers.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> serializers</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> goods.models <span class="keyword">import</span> Goods</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GoodsSerializer</span>(serializers.ModelSerializer):</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Meta</span>:</span><br><span class="line">        model = Goods</span><br><span class="line">        fields = <span class="string">&#x27;__all__&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="查询商品列表"><a href="#查询商品列表" class="headerlink" title="查询商品列表"></a>查询商品列表</h2><p>在项目目录&#x2F;api 的 views.py 下修改</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> rest_framework.decorators <span class="keyword">import</span> api_view</span><br><span class="line"><span class="keyword">from</span> rest_framework.response <span class="keyword">import</span> Response</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api.serializers <span class="keyword">import</span> GoodsSerializer</span><br><span class="line"><span class="keyword">from</span> goods.models <span class="keyword">import</span> Goods</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@api_view(<span class="params">[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">goods_list</span>(<span class="params">request</span>):</span><br><span class="line">    goods = Goods.objects.<span class="built_in">all</span>()</span><br><span class="line">    serializer = GoodsSerializer(goods, many=<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">return</span> Response(serializer.data)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>下一步需要修改&#x2F;api 下的 urls.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> views</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&#x27;goods/&#x27;</span>, views.goods_list),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>重启项目后<code>localhost:8000/goods/</code>查看查询结果</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1720618538260-5c327cae-e5c1-4b8b-9ec5-5790a40199a9.png"></p><h2 id="添加商品"><a href="#添加商品" class="headerlink" title="添加商品"></a>添加商品</h2><p>直接在之前的视图上面修改一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> status</span><br><span class="line"><span class="keyword">from</span> rest_framework.decorators <span class="keyword">import</span> api_view</span><br><span class="line"><span class="keyword">from</span> rest_framework.response <span class="keyword">import</span> Response</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api.serializers <span class="keyword">import</span> GoodsSerializer</span><br><span class="line"><span class="keyword">from</span> goods.models <span class="keyword">import</span> Goods</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@api_view(<span class="params">[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">goods_list</span>(<span class="params">request</span>):</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;GET&#x27;</span>:</span><br><span class="line">        goods = Goods.objects.<span class="built_in">all</span>()</span><br><span class="line">        serializer = GoodsSerializer(goods, many=<span class="literal">True</span>)</span><br><span class="line">        <span class="keyword">return</span> Response(serializer.data)</span><br><span class="line">    <span class="keyword">elif</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        serializer = GoodsSerializer(data=request.data)</span><br><span class="line">        <span class="keyword">if</span> serializer.is_valid():</span><br><span class="line">            serializer.save()</span><br><span class="line">            <span class="keyword">return</span> Response(serializer.data, status=status.HTTP_201_CREATED)</span><br></pre></td></tr></table></figure><p>然后这个新增商品的功能用 postman 测一下</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1720619449144-66a2f2d2-0ce7-4c93-830b-116474bf345d.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1720619491536-0d00437d-86e3-433a-8906-049967efc9aa.png"></p><h2 id="查询、修改、删除具体商品"><a href="#查询、修改、删除具体商品" class="headerlink" title="查询、修改、删除具体商品"></a>查询、修改、删除具体商品</h2><p>仍旧是在&#x2F;api 下的 views.py 中添加一个 view 视图</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> status</span><br><span class="line"><span class="keyword">from</span> rest_framework.decorators <span class="keyword">import</span> api_view</span><br><span class="line"><span class="keyword">from</span> rest_framework.response <span class="keyword">import</span> Response</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api.serializers <span class="keyword">import</span> GoodsSerializer</span><br><span class="line"><span class="keyword">from</span> goods.models <span class="keyword">import</span> Goods</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@api_view(<span class="params">[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">goods_list</span>(<span class="params">request</span>):</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;GET&#x27;</span>:</span><br><span class="line">        goods = Goods.objects.<span class="built_in">all</span>()</span><br><span class="line">        serializer = GoodsSerializer(goods, many=<span class="literal">True</span>)</span><br><span class="line">        <span class="keyword">return</span> Response(serializer.data)</span><br><span class="line">    <span class="keyword">elif</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        serializer = GoodsSerializer(data=request.data)</span><br><span class="line">        <span class="keyword">if</span> serializer.is_valid():</span><br><span class="line">            serializer.save()</span><br><span class="line">            <span class="keyword">return</span> Response(serializer.data, status=status.HTTP_201_CREATED)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@api_view(<span class="params">[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;PUT&#x27;</span>, <span class="string">&#x27;DELETE&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">goods_detail</span>(<span class="params">request, <span class="built_in">id</span></span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        goods = Goods.objects.get(<span class="built_in">id</span>=<span class="built_in">id</span>)</span><br><span class="line">    <span class="keyword">except</span> Goods.DoesNotExist:</span><br><span class="line">        <span class="keyword">return</span> Response(status=status.HTTP_404_NOT_FOUND)</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;GET&#x27;</span>:</span><br><span class="line">        serializer = GoodsSerializer(goods)</span><br><span class="line">        <span class="keyword">return</span> Response(serializer.data)</span><br><span class="line">    <span class="keyword">elif</span> request.method == <span class="string">&#x27;PUT&#x27;</span>:</span><br><span class="line">        serializer = GoodsSerializer(goods, data=request.data)</span><br><span class="line">        <span class="keyword">if</span> serializer.is_valid():</span><br><span class="line">            serializer.save()</span><br><span class="line">            <span class="keyword">return</span> Response(serializer.data)</span><br><span class="line">        <span class="keyword">return</span> Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)</span><br><span class="line">    <span class="keyword">elif</span> request.method == <span class="string">&#x27;DELETE&#x27;</span>:</span><br><span class="line">        goods.delete()</span><br><span class="line">        <span class="keyword">return</span> Response(status=status.HTTP_204_NO_CONTENT)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>同样在&#x2F;api 的 urls.py 得添加上新的 url</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> views</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&#x27;goods/&#x27;</span>, views.goods_list),</span><br><span class="line">    path(<span class="string">&#x27;goods/&lt;int:id&gt;&#x27;</span>, views.goods_detail),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><h3 id="查询具体商品"><a href="#查询具体商品" class="headerlink" title="查询具体商品"></a>查询具体商品</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1720620101444-6371c3e6-6ce6-42ca-b52c-079d3898b835.png"></p><h3 id="修改具体商品"><a href="#修改具体商品" class="headerlink" title="修改具体商品"></a>修改具体商品</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1720621977675-5568f7a6-1ca4-4456-96de-7bd1ceb36225.png"></p><h3 id="删除具体商品"><a href="#删除具体商品" class="headerlink" title="删除具体商品"></a>删除具体商品</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1720622031456-573eeee8-d303-4068-bb08-11787731e892.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1720622036282-e61363b5-2990-47d9-9860-8edaf7e00e1a.png"></p><blockquote><p>更新: 2024-07-10 22:34:56<br>原文: <a href="https://www.yuque.com/zacharyblock/cx2om6/dmf3g69cggt8iatm">https://www.yuque.com/zacharyblock/cx2om6/dmf3g69cggt8iatm</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Django-实现-RESTful-API&quot;&gt;&lt;a href=&quot;#Django-实现-RESTful-API&quot; class=&quot;headerlink&quot; title=&quot;Django 实现 RESTful API&quot;&gt;&lt;/a&gt;Django 实现 RESTful API&lt;/</summary>
      
    
    
    
    <category term="Python Web" scheme="https://blockzachary.github.io/categories/Python-Web/"/>
    
    
    <category term="Python Web" scheme="https://blockzachary.github.io/tags/Python-Web/"/>
    
    <category term="RESTful API" scheme="https://blockzachary.github.io/tags/RESTful-API/"/>
    
    <category term="Django" scheme="https://blockzachary.github.io/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>学生成绩管理</title>
    <link href="https://blockzachary.github.io/2024/05/26/FastAPI%E5%85%A5%E9%97%A8/%E5%AD%A6%E7%94%9F%E6%88%90%E7%BB%A9%E7%AE%A1%E7%90%86/"/>
    <id>https://blockzachary.github.io/2024/05/26/FastAPI%E5%85%A5%E9%97%A8/%E5%AD%A6%E7%94%9F%E6%88%90%E7%BB%A9%E7%AE%A1%E7%90%86/</id>
    <published>2024-05-26T21:20:00.000Z</published>
    <updated>2024-05-26T21:20:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="学生成绩管理"><a href="#学生成绩管理" class="headerlink" title="学生成绩管理"></a>学生成绩管理</h1><h2 id="成绩表设计"><a href="#成绩表设计" class="headerlink" title="成绩表设计"></a>成绩表设计</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710672515547-06744996-10e2-4629-895f-049353a26c84.png"></p><h2 id="管理员课程打分"><a href="#管理员课程打分" class="headerlink" title="管理员课程打分"></a>管理员课程打分</h2><h3 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h3><p>添加课程打分弹窗</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.name&quot;</span><br><span class="line">        placeholder=&quot;请输入要查询的课程名称&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;margin-left:10px; width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.number&quot;</span><br><span class="line">        placeholder=&quot;请输入课程编号&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-button type=&quot;info&quot; plain style=&quot;margin: 0 0 0 10px&quot; @click=&quot;reset&quot;</span><br><span class="line">        &gt;重置&lt;/el-button</span><br><span class="line">      &gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-table :data=&quot;data.tableData&quot; stripe style=&quot;width: 100%&quot;&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;id&quot; label=&quot;ID&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;name&quot; label=&quot;课程名称&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;number&quot; label=&quot;课程编号&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;student.name&quot; label=&quot;学生名称&quot; /&gt;</span><br><span class="line">          &lt;el-table-column label=&quot;操作&quot; align=&quot;center&quot; width=&quot;180px&quot;&gt;</span><br><span class="line">            &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">              &lt;el-button</span><br><span class="line">                type=&quot;primary&quot;</span><br><span class="line">                size=&quot;small&quot;</span><br><span class="line">                plain</span><br><span class="line">                @click=&quot;addGrade(scope.row)&quot;</span><br><span class="line">                v-if=&quot;data.user.role === &#x27;ADMIN&#x27;&quot;</span><br><span class="line">                &gt;评分</span><br><span class="line">              &lt;/el-button&gt;</span><br><span class="line">              &lt;el-button</span><br><span class="line">                type=&quot;danger&quot;</span><br><span class="line">                size=&quot;small&quot;</span><br><span class="line">                plain</span><br><span class="line">                @click=&quot;del(scope.row.id)&quot;</span><br><span class="line">                &gt;删除&lt;/el-button</span><br><span class="line">              &gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">          &lt;/el-table-column&gt;</span><br><span class="line">        &lt;/el-table&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot;&gt;</span><br><span class="line">      &lt;el-pagination</span><br><span class="line">        v-model:current-page=&quot;data.pageNum&quot;</span><br><span class="line">        v-model:page-size=&quot;data.pageSize&quot;</span><br><span class="line">        @current-change=&quot;handleCurrentChange&quot;</span><br><span class="line">        background</span><br><span class="line">        layout=&quot;prev, pager, next&quot;</span><br><span class="line">        :total=&quot;data.total&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--    评分表单--&gt;</span><br><span class="line">    &lt;el-dialog v-model=&quot;data.formVisible&quot; title=&quot;成绩信息&quot; width=&quot;35%&quot;&gt;</span><br><span class="line">      &lt;el-form</span><br><span class="line">        :model=&quot;data.gradeForm&quot;</span><br><span class="line">        label-width=&quot;100px&quot;</span><br><span class="line">        label-position=&quot;right&quot;</span><br><span class="line">        style=&quot;padding-right: 40px&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;el-form-item label=&quot;课程名称&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.gradeForm.name&quot; autocomplete=&quot;off&quot; disabled /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;分数&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.gradeForm.score&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;评语&quot;&gt;</span><br><span class="line">          &lt;el-input</span><br><span class="line">            type=&quot;textarea&quot;</span><br><span class="line">            v-model=&quot;data.gradeForm.comment&quot;</span><br><span class="line">            autocomplete=&quot;off&quot;</span><br><span class="line">          /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">      &lt;/el-form&gt;</span><br><span class="line">      &lt;template #footer&gt;</span><br><span class="line">        &lt;span class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">          &lt;el-button plain @click=&quot;data.formVisible = false&quot;&gt;取消&lt;/el-button&gt;</span><br><span class="line">          &lt;el-button type=&quot;primary&quot; plain @click=&quot;save&quot;&gt;保存&lt;/el-button&gt;</span><br><span class="line">        &lt;/span&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line">    &lt;/el-dialog&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; reactive &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; Search &#125; from &quot;@element-plus/icons-vue&quot;;</span><br><span class="line">import request from &quot;@/utils/request&quot;;</span><br><span class="line">import &#123; ElMessage, ElMessageBox &#125; from &quot;element-plus&quot;;</span><br><span class="line"></span><br><span class="line">const data = reactive(&#123;</span><br><span class="line">  name: &quot;&quot;,</span><br><span class="line">  number: &quot;&quot;,</span><br><span class="line">  tableData: [],</span><br><span class="line">  total: 0,</span><br><span class="line">  pageNum: 1,</span><br><span class="line">  pageSize: 10,</span><br><span class="line">  user: JSON.parse(localStorage.getItem(&quot;student-user&quot;) || &quot;&#123;&#125;&quot;),</span><br><span class="line">  gradeForm: &#123;&#125;,</span><br><span class="line">  formVisible: false,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const load = () =&gt; &#123;</span><br><span class="line">  let params = &#123;</span><br><span class="line">    pageNum: data.pageNum,</span><br><span class="line">    pageSize: data.pageSize,</span><br><span class="line">    name: data.name,</span><br><span class="line">    number: data.number,</span><br><span class="line">  &#125;;</span><br><span class="line">  if (data.user.role === &quot;STUDENT&quot;) &#123;</span><br><span class="line">    params.studentId = data.user.id;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  request</span><br><span class="line">    .get(&quot;/studentCourse/selectPage&quot;, &#123;</span><br><span class="line">      params: params,</span><br><span class="line">    &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">        data.tableData = res.data?.list || [];</span><br><span class="line">        data.total = res.data?.total || 0;</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        ElMessage.error(res.msg);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">        localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 加载一次 获取学生选课数据</span><br><span class="line">load();</span><br><span class="line"></span><br><span class="line">const handleCurrentChange = () =&gt; &#123;</span><br><span class="line">  // 当翻页的时候重新加载数据</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const reset = () =&gt; &#123;</span><br><span class="line">  data.name = &quot;&quot;;</span><br><span class="line">  data.number = &quot;&quot;;</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const del = (id) =&gt; &#123;</span><br><span class="line">  ElMessageBox.confirm(&quot;删除后内容将无法恢复，您确认删除嘛？&quot;, &quot;删除确认&quot;, &#123;</span><br><span class="line">    type: &quot;warning&quot;,</span><br><span class="line">  &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      request.delete(&quot;/studentCourse/delete/&quot; + id).then((res) =&gt; &#123;</span><br><span class="line">        if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">          ElMessage.success(&quot;操作成功&quot;);</span><br><span class="line">          load();</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          ElMessage.error(res.msg);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">        localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 打分函数，弹窗</span><br><span class="line">const addGrade = (row) =&gt; &#123;</span><br><span class="line">  // 弹窗</span><br><span class="line">  data.formVisible = true;</span><br><span class="line">  data.gradeForm.name = row.name;</span><br><span class="line">  data.gradeForm.studentId = row.studentId;</span><br><span class="line">  data.gradeForm.courseId = row.courseId;</span><br><span class="line">  data.gradeForm.score = &quot;&quot;;</span><br><span class="line">  data.gradeForm.comment = &quot;&quot;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const save = () =&gt; &#123;</span><br><span class="line">  request</span><br><span class="line">    .post(&quot;/grade/add&quot;, data.gradeForm)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">        ElMessage.success(&quot;操作成功&quot;);</span><br><span class="line">        data.formVisible = false;</span><br><span class="line">        load();</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        ElMessage.error(res.msg);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">        localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h3><p>依次创建上：<code>gradeApi.py</code>、<code>gradeService.py</code>、<code>grade.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> APIRouter, Depends</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> ResultModel, Result</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session, get_db_session</span><br><span class="line"><span class="keyword">from</span> model.grade <span class="keyword">import</span> GradeCreate</span><br><span class="line"><span class="keyword">from</span> service.gradeService <span class="keyword">import</span> GradeService</span><br><span class="line"></span><br><span class="line">grade_router = APIRouter(prefix=<span class="string">&quot;/grade&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@grade_router.post(<span class="params"><span class="string">&quot;/add&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">grade: GradeCreate, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    GradeService.add_grade(grade, db_session)</span><br><span class="line">    <span class="keyword">return</span> Result.success()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.include_router(grade_router)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> FastAPI</span><br><span class="line"><span class="keyword">from</span> starlette.middleware.cors <span class="keyword">import</span> CORSMiddleware</span><br><span class="line"></span><br><span class="line">app = FastAPI()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 跨域问题</span></span><br><span class="line">origins = [<span class="string">&quot;http://localhost:5173&quot;</span>, <span class="string">&quot;http://127.0.0.1:5173&quot;</span>]  <span class="comment"># 替换为你的前端应用的实际地址</span></span><br><span class="line"></span><br><span class="line">app.add_middleware(</span><br><span class="line">    CORSMiddleware,</span><br><span class="line">    allow_origins=origins,  <span class="comment"># 允许跨域访问的来源域名列表</span></span><br><span class="line">    allow_credentials=<span class="literal">True</span>,  <span class="comment"># 是否允许携带cookie</span></span><br><span class="line">    allow_methods=[<span class="string">&quot;*&quot;</span>],  <span class="comment"># 允许的方法，默认包含常见的GET、POST等，&quot;*&quot;表示所有方法</span></span><br><span class="line">    allow_headers=[<span class="string">&quot;*&quot;</span>],  <span class="comment"># 允许的请求头，默认包含常见的Content-Type等，&quot;*&quot;表示所有请求头</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> adminApi, exceptionHandler, courseApi, studentApi, fileApi, studentCourseApi, gradeApi</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi.encoders <span class="keyword">import</span> jsonable_encoder</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> select, and_</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.utils <span class="keyword">import</span> set_attrs</span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> GradeExistException</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session</span><br><span class="line"><span class="keyword">from</span> model.grade <span class="keyword">import</span> GradeCreate, Grade</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GradeService</span>:</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">add_grade</span>(<span class="params">grade: GradeCreate, db_session: Session</span>):</span><br><span class="line">        query = select(Grade).where(</span><br><span class="line">            and_(Grade.studentId == grade.studentId,</span><br><span class="line">                 Grade.courseId == grade.courseId))</span><br><span class="line">        exist_grade: Grade = db_session.execute(query).scalar()</span><br><span class="line">        <span class="keyword">if</span> exist_grade:</span><br><span class="line">            <span class="keyword">raise</span> GradeExistException(<span class="string">&quot;课程已打分&quot;</span>)</span><br><span class="line">        new_grade = Grade()</span><br><span class="line">        set_attrs(new_grade, jsonable_encoder(grade))</span><br><span class="line">        db_session.add(new_grade)</span><br><span class="line">        db_session.commit()</span><br><span class="line">        <span class="keyword">return</span> new_grade</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Optional</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pydantic <span class="keyword">import</span> BaseModel</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> Integer, Double, String</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> Mapped, mapped_column</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Base</span><br><span class="line"><span class="keyword">from</span> model.course <span class="keyword">import</span> Course</span><br><span class="line"><span class="keyword">from</span> model.student <span class="keyword">import</span> Student</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Grade</span>(<span class="title class_ inherited__">Base</span>):</span><br><span class="line">    __tablename__ = <span class="string">&quot;grade&quot;</span></span><br><span class="line">    <span class="built_in">id</span>: Mapped[<span class="built_in">int</span>] = mapped_column(Integer, primary_key=<span class="literal">True</span>, nullable=<span class="literal">False</span>)</span><br><span class="line">    courseId: Mapped[<span class="built_in">int</span>] = mapped_column(<span class="string">&quot;course_id&quot;</span>, Integer, nullable=<span class="literal">False</span>)</span><br><span class="line">    studentId: Mapped[<span class="built_in">int</span>] = mapped_column(<span class="string">&quot;student_id&quot;</span>, Integer, nullable=<span class="literal">False</span>)</span><br><span class="line">    score: Mapped[<span class="built_in">str</span>] = mapped_column(Double, nullable=<span class="literal">False</span>)</span><br><span class="line">    comment: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    feedback: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GradeBase</span>(<span class="title class_ inherited__">BaseModel</span>):</span><br><span class="line">    courseId: <span class="built_in">int</span></span><br><span class="line">    studentId: <span class="built_in">int</span></span><br><span class="line">    score: <span class="type">Optional</span>[<span class="built_in">float</span>] = <span class="literal">None</span></span><br><span class="line">    comment: <span class="type">Optional</span>[<span class="built_in">str</span>] = <span class="literal">None</span></span><br><span class="line">    feedback: <span class="type">Optional</span>[<span class="built_in">str</span>] = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GradeCreate</span>(<span class="title class_ inherited__">GradeBase</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UserNotFoundException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UserExistException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PasswordNotMatchException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TokenException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseExistException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseNotExistException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">FileNotFoundException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentCourseExistException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentCourseNotExistException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GradeExistException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi.encoders <span class="keyword">import</span> jsonable_encoder</span><br><span class="line"><span class="keyword">from</span> starlette.responses <span class="keyword">import</span> JSONResponse</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> Request</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> Result</span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> UserNotFoundException, PasswordNotMatchException, TokenException, \</span><br><span class="line">    CourseExistException, CourseNotExistException, UserExistException, FileNotFoundException, \</span><br><span class="line">    StudentCourseExistException, StudentCourseNotExistException, GradeExistException</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">Exception</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">exception_handler</span>(<span class="params">request: Request, exc: Exception</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;500&quot;</span>, msg=<span class="built_in">str</span>(exc))</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">500</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">UserNotFoundException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">user_not_fount_exception_handler</span>(<span class="params">request: Request, exc: UserNotFoundException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;404&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">404</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">PasswordNotMatchException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">password_not_fount_exception_handler</span>(<span class="params">request: Request, exc: PasswordNotMatchException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;401&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">401</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">TokenException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">token_exception_handler</span>(<span class="params">request: Request, exc: TokenException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;401&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">401</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">CourseExistException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">course_exist_exception_handler</span>(<span class="params">request: Request, exc: CourseExistException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;400&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">400</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">CourseNotExistException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">course_not_exist_exception_handler</span>(<span class="params">request: Request, exc: CourseNotExistException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;404&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">404</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">UserExistException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">user_exist_exception_handler</span>(<span class="params">request: Request, exc: UserExistException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;400&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">400</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">FileNotFoundException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">file_not_found_exception_handler</span>(<span class="params">request: Request, exc: FileNotFoundException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;404&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">404</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">StudentCourseExistException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">student_course_exist_exception_handler</span>(<span class="params">request: Request, exc: StudentCourseExistException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;400&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">400</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">StudentCourseNotExistException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">student_course_not_exist_exception_handler</span>(<span class="params">request: Request, exc: StudentCourseNotExistException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;404&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">404</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">GradeExistException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">grade_exist_exception_handler</span>(<span class="params">request: Request, exc: GradeExistException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;400&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">400</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>管理员评分</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710675251367-8006657d-70b1-4466-827e-8b6b2224e83d.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710675277634-bae53b43-899d-4c13-bbdf-6618caaf77c6.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710675286983-171e5613-910d-43d8-ab55-d340d24eda54.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710675316480-e70f1dc4-2dc2-4d27-8587-9c41b08b2f95.png"></p><h2 id="显示课程分数"><a href="#显示课程分数" class="headerlink" title="显示课程分数"></a>显示课程分数</h2><h3 id="前端-1"><a href="#前端-1" class="headerlink" title="前端"></a>前端</h3><p>复制<code>StudentCourse.vue</code>重命名为<code>Grade.vue</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.courseName&quot;</span><br><span class="line">        placeholder=&quot;请输入要查询的课程名称&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;margin-left:10px; width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.studentName&quot;</span><br><span class="line">        placeholder=&quot;请输入要查询的学生名称&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-button type=&quot;info&quot; plain style=&quot;margin: 0 0 0 10px&quot; @click=&quot;reset&quot;</span><br><span class="line">        &gt;重置&lt;/el-button</span><br><span class="line">      &gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-table :data=&quot;data.tableData&quot; stripe style=&quot;width: 100%&quot;&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;id&quot; label=&quot;ID&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;course.name&quot; label=&quot;课程名称&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;student.name&quot; label=&quot;学生名称&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;score&quot; label=&quot;成绩&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;comment&quot; label=&quot;教师评语&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;feedback&quot; label=&quot;学生评价&quot; /&gt;</span><br><span class="line">          &lt;el-table-column label=&quot;操作&quot; align=&quot;center&quot; width=&quot;180px&quot;&gt;</span><br><span class="line">            &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">              &lt;el-button</span><br><span class="line">                type=&quot;danger&quot;</span><br><span class="line">                size=&quot;small&quot;</span><br><span class="line">                plain</span><br><span class="line">                @click=&quot;del(scope.row.id)&quot;</span><br><span class="line">                v-if=&quot;data.user.role === &#x27;ADMIN&#x27;&quot;</span><br><span class="line">                &gt;删除</span><br><span class="line">              &lt;/el-button&gt;</span><br><span class="line">              &lt;el-button</span><br><span class="line">                type=&quot;primary&quot;</span><br><span class="line">                size=&quot;small&quot;</span><br><span class="line">                plain</span><br><span class="line">                @click=&quot;setFeedback(scope.row)&quot;</span><br><span class="line">                v-if=&quot;data.user.role === &#x27;STUDENT&#x27;&quot;</span><br><span class="line">                &gt;评价</span><br><span class="line">              &lt;/el-button&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">          &lt;/el-table-column&gt;</span><br><span class="line">        &lt;/el-table&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot;&gt;</span><br><span class="line">      &lt;el-pagination</span><br><span class="line">        v-model:current-page=&quot;data.pageNum&quot;</span><br><span class="line">        v-model:page-size=&quot;data.pageSize&quot;</span><br><span class="line">        @current-change=&quot;handleCurrentChange&quot;</span><br><span class="line">        background</span><br><span class="line">        layout=&quot;prev, pager, next&quot;</span><br><span class="line">        :total=&quot;data.total&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--    评分表单--&gt;</span><br><span class="line">    &lt;el-dialog v-model=&quot;data.formVisible&quot; title=&quot;反馈信息&quot; width=&quot;35%&quot;&gt;</span><br><span class="line">      &lt;el-form</span><br><span class="line">        :model=&quot;data.form&quot;</span><br><span class="line">        label-width=&quot;100px&quot;</span><br><span class="line">        label-position=&quot;right&quot;</span><br><span class="line">        style=&quot;padding-right: 40px&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;el-form-item label=&quot;反馈&quot;&gt;</span><br><span class="line">          &lt;el-input</span><br><span class="line">            type=&quot;textarea&quot;</span><br><span class="line">            v-model=&quot;data.form.feedback&quot;</span><br><span class="line">            autocomplete=&quot;off&quot;</span><br><span class="line">          /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">      &lt;/el-form&gt;</span><br><span class="line">      &lt;template #footer&gt;</span><br><span class="line">        &lt;span class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">          &lt;el-button plain @click=&quot;data.formVisible = false&quot;&gt;取消&lt;/el-button&gt;</span><br><span class="line">          &lt;el-button type=&quot;primary&quot; plain @click=&quot;save&quot;&gt;保存&lt;/el-button&gt;</span><br><span class="line">        &lt;/span&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line">    &lt;/el-dialog&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; reactive &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; Search &#125; from &quot;@element-plus/icons-vue&quot;;</span><br><span class="line">import request from &quot;@/utils/request&quot;;</span><br><span class="line">import &#123; ElMessage, ElMessageBox &#125; from &quot;element-plus&quot;;</span><br><span class="line"></span><br><span class="line">const data = reactive(&#123;</span><br><span class="line">  form: &#123;&#125;,</span><br><span class="line">  courseName: &quot;&quot;,</span><br><span class="line">  studentName: &quot;&quot;,</span><br><span class="line">  tableData: [],</span><br><span class="line">  total: 0,</span><br><span class="line">  pageNum: 1,</span><br><span class="line">  pageSize: 10,</span><br><span class="line">  user: JSON.parse(localStorage.getItem(&quot;student-user&quot;) || &quot;&#123;&#125;&quot;),</span><br><span class="line">  formVisible: false,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const load = () =&gt; &#123;</span><br><span class="line">  let params = &#123;</span><br><span class="line">    pageNum: data.pageNum,</span><br><span class="line">    pageSize: data.pageSize,</span><br><span class="line">    courseName: data.courseName,</span><br><span class="line">    studentName: data.studentName,</span><br><span class="line">  &#125;;</span><br><span class="line">  if (data.user.role === &quot;STUDENT&quot;) &#123;</span><br><span class="line">    params.studentId = data.user.id;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  request</span><br><span class="line">    .get(&quot;/grade/selectPage&quot;, &#123;</span><br><span class="line">      params: params,</span><br><span class="line">    &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">        data.tableData = res.data?.list || [];</span><br><span class="line">        data.total = res.data?.total || 0;</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        ElMessage.error(res.msg);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">        localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 加载一次 获取学生选课数据</span><br><span class="line">load();</span><br><span class="line"></span><br><span class="line">const handleCurrentChange = () =&gt; &#123;</span><br><span class="line">  // 当翻页的时候重新加载数据</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const reset = () =&gt; &#123;</span><br><span class="line">  data.courseName = &quot;&quot;;</span><br><span class="line">  data.studentName = &quot;&quot;;</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const del = (id) =&gt; &#123;</span><br><span class="line">  ElMessageBox.confirm(&quot;删除后内容将无法恢复，您确认删除嘛？&quot;, &quot;删除确认&quot;, &#123;</span><br><span class="line">    type: &quot;warning&quot;,</span><br><span class="line">  &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      request.delete(&quot;/studentCourse/delete/&quot; + id).then((res) =&gt; &#123;</span><br><span class="line">        if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">          ElMessage.success(&quot;操作成功&quot;);</span><br><span class="line">          load();</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          ElMessage.error(res.msg);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">        localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 打分</span><br><span class="line">const setFeedback = (row) =&gt; &#123;</span><br><span class="line">  // 弹窗</span><br><span class="line">  data.formVisible = true;</span><br><span class="line">  data.form = JSON.parse(JSON.stringify(row));</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const save = () =&gt; &#123;</span><br><span class="line">  request</span><br><span class="line">    .post(&quot;/grade/update&quot;, data.form)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">        ElMessage.success(&quot;操作成功&quot;);</span><br><span class="line">        data.formVisible = false;</span><br><span class="line">        load();</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        ElMessage.error(res.msg);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">        localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHistory &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">history</span>: <span class="title function_">createWebHistory</span>(<span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">env</span>.<span class="property">BASE_URL</span>),</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;Manager&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/Manager.vue&quot;</span>),</span><br><span class="line">      <span class="attr">redirect</span>: <span class="string">&quot;/home&quot;</span>,</span><br><span class="line">      <span class="attr">children</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;home&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Home&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Home.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;course&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Course&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Course.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;student&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Student&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Student.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;person&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Person&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Person.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;courseList&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;CourseList&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/CourseList.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;studentCourse&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;StudentCourse&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/StudentCourse.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;grade&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Grade&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Grade.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">      ],</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/login&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;Login&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/Login.vue&quot;</span>),</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/register&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;Register&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/Register.vue&quot;</span>),</span><br><span class="line">    &#125;,</span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">beforeEach</span>(<span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> requiresAuth = to.<span class="property">matched</span>.<span class="title function_">some</span>(<span class="function">(<span class="params">record</span>) =&gt;</span> record.<span class="property">meta</span>.<span class="property">requiresAuth</span>);</span><br><span class="line">  <span class="keyword">const</span> user = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;student-user&quot;</span>));</span><br><span class="line">  <span class="keyword">if</span> (requiresAuth &amp;&amp; !user) &#123;</span><br><span class="line">    <span class="comment">// 如果目标路由需要认证,并且用户未登录</span></span><br><span class="line">    <span class="title function_">next</span>(<span class="string">&quot;/login&quot;</span>); <span class="comment">// 跳转到登录页面</span></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">next</span>(); <span class="comment">// 如果目标路由不需要认证,或者用户已登录,则正常导航到目标路由</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div</span><br><span class="line">      style=&quot;height: 60px; background-color: #eae8e8; display: flex; align-items: center; border-bottom: 1px solid #c4c2c2&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;div style=&quot;flex: 1&quot;&gt;</span><br><span class="line">        &lt;div style=&quot;padding-left: 20px; display: flex; align-items: center&quot;&gt;</span><br><span class="line">          &lt;img src=&quot;@/assets/imgs/logo.png&quot; alt=&quot;&quot; style=&quot;width: 40px&quot; /&gt;</span><br><span class="line">          &lt;div style=&quot;font-weight: bold; font-size: 24px; margin-left: 5px&quot;&gt;</span><br><span class="line">            学生信息管理系统</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        style=&quot;width: fit-content; padding-right: 10px; display: flex; align-items: center;&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;img</span><br><span class="line">          :src=&quot;</span><br><span class="line">            user.avatar ||</span><br><span class="line">            &#x27;https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png&#x27;</span><br><span class="line">          &quot;</span><br><span class="line">          alt=&quot;&quot;</span><br><span class="line">          style=&quot;width: 40px; height: 40px; border-radius: 50%&quot;</span><br><span class="line">        /&gt;</span><br><span class="line">        &lt;span style=&quot;margin-left: 5px&quot;&gt;&#123;&#123; user.name &#125;&#125;&lt;/span&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div style=&quot;display: flex&quot;&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        style=&quot;width: 200px; border-right: 1px solid #f3eeee; min-height: calc(100vh - 60px)&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;el-menu</span><br><span class="line">          router</span><br><span class="line">          style=&quot;border: none&quot;</span><br><span class="line">          :default-active=&quot;$route.path&quot;</span><br><span class="line">          :default-openeds=&quot;[&#x27;/home&#x27;, &#x27;2&#x27;, &#x27;3&#x27;, &#x27;4&#x27;]&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          &lt;el-menu-item index=&quot;/home&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;</span><br><span class="line">              &lt;HomeFilled /&gt;</span><br><span class="line">            &lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;系统首页&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line"></span><br><span class="line">          &lt;el-sub-menu index=&quot;2&quot; v-if=&quot;user.role === &#x27;ADMIN&#x27;&quot;&gt;</span><br><span class="line">            &lt;template #title&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;Management /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;学生管理&lt;/span&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">            &lt;el-menu-item index=&quot;/student&quot;&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;UserFilled /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;学生信息&lt;/span&gt;</span><br><span class="line">            &lt;/el-menu-item&gt;</span><br><span class="line">          &lt;/el-sub-menu&gt;</span><br><span class="line"></span><br><span class="line">          &lt;el-sub-menu index=&quot;3&quot;&gt;</span><br><span class="line">            &lt;template #title&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;Memo /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;课程管理&lt;/span&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">            &lt;el-menu-item index=&quot;/course&quot; v-if=&quot;user.role === &#x27;ADMIN&#x27;&quot;&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;Document /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;课程信息&lt;/span&gt;</span><br><span class="line">            &lt;/el-menu-item&gt;</span><br><span class="line">            &lt;el-menu-item index=&quot;/courseList&quot; v-if=&quot;user.role === &#x27;STUDENT&#x27;&quot;&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;Document /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;学生选课&lt;/span&gt;</span><br><span class="line">            &lt;/el-menu-item&gt;</span><br><span class="line">            &lt;el-menu-item index=&quot;/studentCourse&quot;&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;Document /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;选课记录&lt;/span&gt;</span><br><span class="line">            &lt;/el-menu-item&gt;</span><br><span class="line">          &lt;/el-sub-menu&gt;</span><br><span class="line"></span><br><span class="line">          &lt;el-sub-menu index=&quot;4&quot;&gt;</span><br><span class="line">            &lt;template #title&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;Management /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;成绩信息&lt;/span&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">            &lt;el-menu-item index=&quot;/grade&quot;&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;List /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;学生成绩&lt;/span&gt;</span><br><span class="line">            &lt;/el-menu-item&gt;</span><br><span class="line">          &lt;/el-sub-menu&gt;</span><br><span class="line"></span><br><span class="line">          &lt;el-menu-item index=&quot;/person&quot; v-if=&quot;user.role === &#x27;STUDENT&#x27;&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;</span><br><span class="line">              &lt;User /&gt;</span><br><span class="line">            &lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;个人资料&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line">          &lt;el-menu-item index=&quot;/login&quot; @click=&quot;logout&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;</span><br><span class="line">              &lt;SwitchButton /&gt;</span><br><span class="line">            &lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;退出系统&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line">        &lt;/el-menu&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">      &lt;div style=&quot;flex: 1; width: 0; background-color: #eaeaee; padding: 10px&quot;&gt;</span><br><span class="line">        &lt;router-view /&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; useRoute &#125; from &quot;vue-router&quot;;</span><br><span class="line"></span><br><span class="line">const $route = useRoute();</span><br><span class="line">console.log($route.path);</span><br><span class="line"></span><br><span class="line">const logout = () =&gt; &#123;</span><br><span class="line">  localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const user = JSON.parse(localStorage.getItem(&quot;student-user&quot;) || &quot;&#123;&#125;&quot;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.el-menu-item.is-active &#123;</span><br><span class="line">  background-color: #c3d7d3 !important;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.el-menu-item:hover &#123;</span><br><span class="line">  color: #0c98d5;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">:deep(th) &#123;</span><br><span class="line">  color: #333;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="后端-1"><a href="#后端-1" class="headerlink" title="后端"></a>后端</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Optional</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> APIRouter, Depends, Query</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> common.pageHelper <span class="keyword">import</span> PageHelper</span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> ResultModel, Result</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session, get_db_session</span><br><span class="line"><span class="keyword">from</span> model.grade <span class="keyword">import</span> GradeCreate, GradeSearch, GradeUpdate</span><br><span class="line"><span class="keyword">from</span> service.gradeService <span class="keyword">import</span> GradeService</span><br><span class="line"></span><br><span class="line">grade_router = APIRouter(prefix=<span class="string">&quot;/grade&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@grade_router.post(<span class="params"><span class="string">&quot;/add&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">grade: GradeCreate, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    GradeService.add_grade(grade, db_session)</span><br><span class="line">    <span class="keyword">return</span> Result.success()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@grade_router.get(<span class="params"><span class="string">&quot;/selectPage&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">select_page</span>(<span class="params">page: <span class="built_in">int</span> = Query(<span class="params"><span class="number">1</span>, ge=<span class="number">1</span>, alias=<span class="string">&quot;pageNum&quot;</span>, description=<span class="string">&quot;Page number&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      size: <span class="built_in">int</span> = Query(<span class="params"><span class="number">5</span>, gt=<span class="number">0</span>, le=<span class="number">100</span>, alias=<span class="string">&quot;pageSize&quot;</span>, description=<span class="string">&quot;Page size&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      studentName: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Student name&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      courseName: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Course name&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      studentId: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Student id&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    pageInfo = PageHelper.startPage(page, size)</span><br><span class="line">    grade_search: GradeSearch = GradeSearch(studentName=studentName, courseName=courseName, studentId=studentId)</span><br><span class="line">    grade_list = GradeService.select_page(grade_search, db_session)</span><br><span class="line">    <span class="keyword">return</span> Result.success(pageInfo.of(grade_list))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@grade_router.put(<span class="params"><span class="string">&quot;/update&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">update</span>(<span class="params">grade: GradeUpdate, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    GradeService.update_by_id(grade, db_session)</span><br><span class="line">    <span class="keyword">return</span> Result.success()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.include_router(grade_router)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi.encoders <span class="keyword">import</span> jsonable_encoder</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> select, and_, asc</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.utils <span class="keyword">import</span> set_attrs</span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> GradeExistException</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session</span><br><span class="line"><span class="keyword">from</span> model.course <span class="keyword">import</span> Course</span><br><span class="line"><span class="keyword">from</span> model.grade <span class="keyword">import</span> GradeCreate, Grade, GradeSearch, GradeUpdate</span><br><span class="line"><span class="keyword">from</span> model.student <span class="keyword">import</span> Student</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GradeService</span>:</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">add_grade</span>(<span class="params">grade: GradeCreate, db_session: Session</span>):</span><br><span class="line">        query = select(Grade).where(</span><br><span class="line">            and_(Grade.studentId == grade.studentId,</span><br><span class="line">                 Grade.courseId == grade.courseId))</span><br><span class="line">        exist_grade: Grade = db_session.execute(query).scalar()</span><br><span class="line">        <span class="keyword">if</span> exist_grade:</span><br><span class="line">            <span class="keyword">raise</span> GradeExistException(<span class="string">&quot;课程已打分&quot;</span>)</span><br><span class="line">        new_grade = Grade()</span><br><span class="line">        set_attrs(new_grade, jsonable_encoder(grade))</span><br><span class="line">        db_session.add(new_grade)</span><br><span class="line">        db_session.commit()</span><br><span class="line">        <span class="keyword">return</span> new_grade</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">select_page</span>(<span class="params">grade_search: GradeSearch, db_session: Session</span>):</span><br><span class="line">        query = select(Grade, Student, Course).outerjoin(Grade.student).outerjoin(Grade.course).order_by(asc(Grade.<span class="built_in">id</span>))</span><br><span class="line">        <span class="keyword">if</span> grade_search.courseName:</span><br><span class="line">            query = query.where(Course.name.like(<span class="string">f&quot;%<span class="subst">&#123;grade_search.courseName&#125;</span>%&quot;</span>))</span><br><span class="line">        <span class="keyword">if</span> grade_search.studentName:</span><br><span class="line">            query = query.where(Student.name.like(<span class="string">f&quot;%<span class="subst">&#123;grade_search.studentName&#125;</span>%&quot;</span>))</span><br><span class="line">        <span class="keyword">if</span> grade_search.studentId:</span><br><span class="line">            query = query.where(Grade.studentId == grade_search.studentId)</span><br><span class="line">        result = db_session.execute(query).scalars().<span class="built_in">all</span>()</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">update_by_id</span>(<span class="params">grade: GradeUpdate, db_session: Session</span>):</span><br><span class="line">        exist_grade: Grade = check_grade_exist(grade.<span class="built_in">id</span>, db_session)</span><br><span class="line">        set_attrs(exist_grade, jsonable_encoder(grade))</span><br><span class="line">        db_session.commit()</span><br><span class="line">        <span class="keyword">return</span> exist_grade</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check_grade_exist</span>(<span class="params">grade_id: <span class="built_in">int</span>, db_session: Session</span>):</span><br><span class="line">    query = select(Grade).where(Grade.<span class="built_in">id</span> == grade_id)</span><br><span class="line">    exist_grade: Grade = db_session.execute(query).scalar()</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> exist_grade:</span><br><span class="line">        <span class="keyword">raise</span> GradeExistException(<span class="string">&quot;成绩记录不存在&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> exist_grade</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Optional</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pydantic <span class="keyword">import</span> BaseModel</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> Integer, Double, ForeignKey, String</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> Mapped, mapped_column, relationship</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Base</span><br><span class="line"><span class="keyword">from</span> model.course <span class="keyword">import</span> Course</span><br><span class="line"><span class="keyword">from</span> model.student <span class="keyword">import</span> Student</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Grade</span>(<span class="title class_ inherited__">Base</span>):</span><br><span class="line">    __tablename__ = <span class="string">&quot;grade&quot;</span></span><br><span class="line">    <span class="built_in">id</span>: Mapped[<span class="built_in">int</span>] = mapped_column(Integer, primary_key=<span class="literal">True</span>, nullable=<span class="literal">False</span>)</span><br><span class="line">    courseId: Mapped[<span class="built_in">int</span>] = mapped_column(<span class="string">&quot;course_id&quot;</span>, Integer, ForeignKey(<span class="string">&#x27;course.id&#x27;</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    studentId: Mapped[<span class="built_in">int</span>] = mapped_column(<span class="string">&quot;student_id&quot;</span>, Integer, ForeignKey(<span class="string">&#x27;student.id&#x27;</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    score: Mapped[<span class="built_in">str</span>] = mapped_column(Double, nullable=<span class="literal">False</span>)</span><br><span class="line">    comment: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    feedback: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">    student: Mapped[Student] = relationship(lazy=<span class="literal">False</span>, backref=<span class="string">&quot;grade&quot;</span>)</span><br><span class="line">    course: Mapped[Course] = relationship(lazy=<span class="literal">False</span>, backref=<span class="string">&quot;grade&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GradeBase</span>(<span class="title class_ inherited__">BaseModel</span>):</span><br><span class="line">    courseId: <span class="built_in">int</span></span><br><span class="line">    studentId: <span class="built_in">int</span></span><br><span class="line">    score: <span class="type">Optional</span>[<span class="built_in">float</span>] = <span class="literal">None</span></span><br><span class="line">    comment: <span class="type">Optional</span>[<span class="built_in">str</span>] = <span class="literal">None</span></span><br><span class="line">    feedback: <span class="type">Optional</span>[<span class="built_in">str</span>] = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GradeCreate</span>(<span class="title class_ inherited__">GradeBase</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GradeSearch</span>(<span class="title class_ inherited__">BaseModel</span>):</span><br><span class="line">    courseName: <span class="built_in">str</span> | <span class="literal">None</span></span><br><span class="line">    studentName: <span class="built_in">str</span> | <span class="literal">None</span></span><br><span class="line">    studentId: <span class="built_in">str</span> | <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GradeUpdate</span>(<span class="title class_ inherited__">GradeBase</span>):</span><br><span class="line">    <span class="built_in">id</span>: <span class="built_in">int</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h3><p>管理员</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710677201407-3b1dcc5f-5d41-482a-8a92-00848a7df6fa.png"></p><h2 id="课程分数编辑"><a href="#课程分数编辑" class="headerlink" title="课程分数编辑"></a>课程分数编辑</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.courseName&quot;</span><br><span class="line">        placeholder=&quot;请输入要查询的课程名称&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;margin-left:10px; width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.studentName&quot;</span><br><span class="line">        placeholder=&quot;请输入要查询的学生名称&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-button type=&quot;info&quot; plain style=&quot;margin: 0 0 0 10px&quot; @click=&quot;reset&quot;</span><br><span class="line">        &gt;重置&lt;/el-button</span><br><span class="line">      &gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-table :data=&quot;data.tableData&quot; stripe style=&quot;width: 100%&quot;&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;id&quot; label=&quot;ID&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;course.name&quot; label=&quot;课程名称&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;student.name&quot; label=&quot;学生名称&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;score&quot; label=&quot;成绩&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;comment&quot; label=&quot;教师评语&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;feedback&quot; label=&quot;学生评价&quot; /&gt;</span><br><span class="line">          &lt;el-table-column label=&quot;操作&quot; align=&quot;center&quot; width=&quot;180px&quot;&gt;</span><br><span class="line">            &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">              &lt;el-button</span><br><span class="line">                type=&quot;primary&quot;</span><br><span class="line">                size=&quot;small&quot;</span><br><span class="line">                plain</span><br><span class="line">                @click=&quot;handleEdit(scope.row)&quot;</span><br><span class="line">                v-if=&quot;data.user.role === &#x27;ADMIN&#x27;&quot;</span><br><span class="line">                &gt;编辑</span><br><span class="line">              &lt;/el-button&gt;</span><br><span class="line">              &lt;el-button</span><br><span class="line">                type=&quot;danger&quot;</span><br><span class="line">                size=&quot;small&quot;</span><br><span class="line">                plain</span><br><span class="line">                @click=&quot;del(scope.row.id)&quot;</span><br><span class="line">                v-if=&quot;data.user.role === &#x27;ADMIN&#x27;&quot;</span><br><span class="line">                &gt;删除</span><br><span class="line">              &lt;/el-button&gt;</span><br><span class="line">              &lt;el-button</span><br><span class="line">                type=&quot;primary&quot;</span><br><span class="line">                size=&quot;small&quot;</span><br><span class="line">                plain</span><br><span class="line">                @click=&quot;handleEdit(scope.row)&quot;</span><br><span class="line">                v-if=&quot;data.user.role === &#x27;STUDENT&#x27;&quot;</span><br><span class="line">                &gt;评价</span><br><span class="line">              &lt;/el-button&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">          &lt;/el-table-column&gt;</span><br><span class="line">        &lt;/el-table&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot;&gt;</span><br><span class="line">      &lt;el-pagination</span><br><span class="line">        v-model:current-page=&quot;data.pageNum&quot;</span><br><span class="line">        v-model:page-size=&quot;data.pageSize&quot;</span><br><span class="line">        @current-change=&quot;handleCurrentChange&quot;</span><br><span class="line">        background</span><br><span class="line">        layout=&quot;prev, pager, next&quot;</span><br><span class="line">        :total=&quot;data.total&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--    评分表单--&gt;</span><br><span class="line">    &lt;el-dialog v-model=&quot;data.formVisible&quot; title=&quot;反馈信息&quot; width=&quot;35%&quot;&gt;</span><br><span class="line">      &lt;el-form</span><br><span class="line">        :model=&quot;data.form&quot;</span><br><span class="line">        label-width=&quot;100px&quot;</span><br><span class="line">        label-position=&quot;right&quot;</span><br><span class="line">        style=&quot;padding-right: 40px&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;el-form-item label=&quot;分数&quot; v-if=&quot;data.user.role === &#x27;ADMIN&#x27;&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.score&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;教师评语&quot; v-if=&quot;data.user.role === &#x27;ADMIN&#x27;&quot;&gt;</span><br><span class="line">          &lt;el-input</span><br><span class="line">            type=&quot;textarea&quot;</span><br><span class="line">            v-model=&quot;data.form.comment&quot;</span><br><span class="line">            autocomplete=&quot;off&quot;</span><br><span class="line">          /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;学生评价&quot; v-if=&quot;data.user.role === &#x27;STUDENT&#x27;&quot;&gt;</span><br><span class="line">          &lt;el-input</span><br><span class="line">            type=&quot;textarea&quot;</span><br><span class="line">            v-model=&quot;data.form.feedback&quot;</span><br><span class="line">            autocomplete=&quot;off&quot;</span><br><span class="line">          /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">      &lt;/el-form&gt;</span><br><span class="line">      &lt;template #footer&gt;</span><br><span class="line">        &lt;span class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">          &lt;el-button plain @click=&quot;data.formVisible = false&quot;&gt;取消&lt;/el-button&gt;</span><br><span class="line">          &lt;el-button type=&quot;primary&quot; plain @click=&quot;save&quot;&gt;保存&lt;/el-button&gt;</span><br><span class="line">        &lt;/span&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line">    &lt;/el-dialog&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; reactive &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; Search &#125; from &quot;@element-plus/icons-vue&quot;;</span><br><span class="line">import request from &quot;@/utils/request&quot;;</span><br><span class="line">import &#123; ElMessage, ElMessageBox &#125; from &quot;element-plus&quot;;</span><br><span class="line"></span><br><span class="line">const data = reactive(&#123;</span><br><span class="line">  form: &#123;&#125;,</span><br><span class="line">  courseName: &quot;&quot;,</span><br><span class="line">  studentName: &quot;&quot;,</span><br><span class="line">  tableData: [],</span><br><span class="line">  total: 0,</span><br><span class="line">  pageNum: 1,</span><br><span class="line">  pageSize: 10,</span><br><span class="line">  user: JSON.parse(localStorage.getItem(&quot;student-user&quot;) || &quot;&#123;&#125;&quot;),</span><br><span class="line">  formVisible: false,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const load = () =&gt; &#123;</span><br><span class="line">  let params = &#123;</span><br><span class="line">    pageNum: data.pageNum,</span><br><span class="line">    pageSize: data.pageSize,</span><br><span class="line">    courseName: data.courseName,</span><br><span class="line">    studentName: data.studentName,</span><br><span class="line">  &#125;;</span><br><span class="line">  if (data.user.role === &quot;STUDENT&quot;) &#123;</span><br><span class="line">    params.studentId = data.user.id;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  request</span><br><span class="line">    .get(&quot;/grade/selectPage&quot;, &#123;</span><br><span class="line">      params: params,</span><br><span class="line">    &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">        data.tableData = res.data?.list || [];</span><br><span class="line">        data.total = res.data?.total || 0;</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        ElMessage.error(res.msg);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">        localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 加载一次 获取学生选课数据</span><br><span class="line">load();</span><br><span class="line"></span><br><span class="line">const handleCurrentChange = () =&gt; &#123;</span><br><span class="line">  // 当翻页的时候重新加载数据</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const reset = () =&gt; &#123;</span><br><span class="line">  data.courseName = &quot;&quot;;</span><br><span class="line">  data.studentName = &quot;&quot;;</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const del = (id) =&gt; &#123;</span><br><span class="line">  ElMessageBox.confirm(&quot;删除后内容将无法恢复，您确认删除嘛？&quot;, &quot;删除确认&quot;, &#123;</span><br><span class="line">    type: &quot;warning&quot;,</span><br><span class="line">  &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      request.delete(&quot;/studentCourse/delete/&quot; + id).then((res) =&gt; &#123;</span><br><span class="line">        if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">          ElMessage.success(&quot;操作成功&quot;);</span><br><span class="line">          load();</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          ElMessage.error(res.msg);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">        localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 打分</span><br><span class="line">const handleEdit = (row) =&gt; &#123;</span><br><span class="line">  // 弹窗</span><br><span class="line">  data.formVisible = true;</span><br><span class="line">  data.form = JSON.parse(JSON.stringify(row));</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const save = () =&gt; &#123;</span><br><span class="line">  request</span><br><span class="line">    .put(&quot;/grade/update&quot;, data.form)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">        ElMessage.success(&quot;操作成功&quot;);</span><br><span class="line">        data.formVisible = false;</span><br><span class="line">        load();</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        ElMessage.error(res.msg);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">        localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>学生：</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710677951814-7b1991b2-8113-4f85-963c-d8387ba996b0.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710677959948-2638843d-3be8-468b-ac69-340f5748173f.png"></p><p>管理员：</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710678028780-780c5ab0-4be8-4d3e-86b7-64dcad143cb9.png"><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710678035811-c86a8508-8c75-48cb-b543-767be4bcc735.png"></p><h2 id="课程分数删除"><a href="#课程分数删除" class="headerlink" title="课程分数删除"></a>课程分数删除</h2><h3 id="前端-2"><a href="#前端-2" class="headerlink" title="前端"></a>前端</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.courseName&quot;</span><br><span class="line">        placeholder=&quot;请输入要查询的课程名称&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;margin-left:10px; width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.studentName&quot;</span><br><span class="line">        placeholder=&quot;请输入要查询的学生名称&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-button type=&quot;info&quot; plain style=&quot;margin: 0 0 0 10px&quot; @click=&quot;reset&quot;</span><br><span class="line">        &gt;重置&lt;/el-button</span><br><span class="line">      &gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-table :data=&quot;data.tableData&quot; stripe style=&quot;width: 100%&quot;&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;id&quot; label=&quot;ID&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;course.name&quot; label=&quot;课程名称&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;student.name&quot; label=&quot;学生名称&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;score&quot; label=&quot;成绩&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;comment&quot; label=&quot;教师评语&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;feedback&quot; label=&quot;学生评价&quot; /&gt;</span><br><span class="line">          &lt;el-table-column label=&quot;操作&quot; align=&quot;center&quot; width=&quot;180px&quot;&gt;</span><br><span class="line">            &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">              &lt;el-button</span><br><span class="line">                type=&quot;primary&quot;</span><br><span class="line">                size=&quot;small&quot;</span><br><span class="line">                plain</span><br><span class="line">                @click=&quot;handleEdit(scope.row)&quot;</span><br><span class="line">                v-if=&quot;data.user.role === &#x27;ADMIN&#x27;&quot;</span><br><span class="line">                &gt;编辑</span><br><span class="line">              &lt;/el-button&gt;</span><br><span class="line">              &lt;el-button</span><br><span class="line">                type=&quot;danger&quot;</span><br><span class="line">                size=&quot;small&quot;</span><br><span class="line">                plain</span><br><span class="line">                @click=&quot;del(scope.row.id)&quot;</span><br><span class="line">                v-if=&quot;data.user.role === &#x27;ADMIN&#x27;&quot;</span><br><span class="line">                &gt;删除</span><br><span class="line">              &lt;/el-button&gt;</span><br><span class="line">              &lt;el-button</span><br><span class="line">                type=&quot;primary&quot;</span><br><span class="line">                size=&quot;small&quot;</span><br><span class="line">                plain</span><br><span class="line">                @click=&quot;handleEdit(scope.row)&quot;</span><br><span class="line">                v-if=&quot;data.user.role === &#x27;STUDENT&#x27;&quot;</span><br><span class="line">                &gt;评价</span><br><span class="line">              &lt;/el-button&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">          &lt;/el-table-column&gt;</span><br><span class="line">        &lt;/el-table&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot;&gt;</span><br><span class="line">      &lt;el-pagination</span><br><span class="line">        v-model:current-page=&quot;data.pageNum&quot;</span><br><span class="line">        v-model:page-size=&quot;data.pageSize&quot;</span><br><span class="line">        @current-change=&quot;handleCurrentChange&quot;</span><br><span class="line">        background</span><br><span class="line">        layout=&quot;prev, pager, next&quot;</span><br><span class="line">        :total=&quot;data.total&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--    评分表单--&gt;</span><br><span class="line">    &lt;el-dialog v-model=&quot;data.formVisible&quot; title=&quot;反馈信息&quot; width=&quot;35%&quot;&gt;</span><br><span class="line">      &lt;el-form</span><br><span class="line">        :model=&quot;data.form&quot;</span><br><span class="line">        label-width=&quot;100px&quot;</span><br><span class="line">        label-position=&quot;right&quot;</span><br><span class="line">        style=&quot;padding-right: 40px&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;el-form-item label=&quot;分数&quot; v-if=&quot;data.user.role === &#x27;ADMIN&#x27;&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.score&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;教师评语&quot; v-if=&quot;data.user.role === &#x27;ADMIN&#x27;&quot;&gt;</span><br><span class="line">          &lt;el-input</span><br><span class="line">            type=&quot;textarea&quot;</span><br><span class="line">            v-model=&quot;data.form.comment&quot;</span><br><span class="line">            autocomplete=&quot;off&quot;</span><br><span class="line">          /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;学生评价&quot; v-if=&quot;data.user.role === &#x27;STUDENT&#x27;&quot;&gt;</span><br><span class="line">          &lt;el-input</span><br><span class="line">            type=&quot;textarea&quot;</span><br><span class="line">            v-model=&quot;data.form.feedback&quot;</span><br><span class="line">            autocomplete=&quot;off&quot;</span><br><span class="line">          /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">      &lt;/el-form&gt;</span><br><span class="line">      &lt;template #footer&gt;</span><br><span class="line">        &lt;span class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">          &lt;el-button plain @click=&quot;data.formVisible = false&quot;&gt;取消&lt;/el-button&gt;</span><br><span class="line">          &lt;el-button type=&quot;primary&quot; plain @click=&quot;save&quot;&gt;保存&lt;/el-button&gt;</span><br><span class="line">        &lt;/span&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line">    &lt;/el-dialog&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; reactive &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; Search &#125; from &quot;@element-plus/icons-vue&quot;;</span><br><span class="line">import request from &quot;@/utils/request&quot;;</span><br><span class="line">import &#123; ElMessage, ElMessageBox &#125; from &quot;element-plus&quot;;</span><br><span class="line"></span><br><span class="line">const data = reactive(&#123;</span><br><span class="line">  form: &#123;&#125;,</span><br><span class="line">  courseName: &quot;&quot;,</span><br><span class="line">  studentName: &quot;&quot;,</span><br><span class="line">  tableData: [],</span><br><span class="line">  total: 0,</span><br><span class="line">  pageNum: 1,</span><br><span class="line">  pageSize: 10,</span><br><span class="line">  user: JSON.parse(localStorage.getItem(&quot;student-user&quot;) || &quot;&#123;&#125;&quot;),</span><br><span class="line">  formVisible: false,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const load = () =&gt; &#123;</span><br><span class="line">  let params = &#123;</span><br><span class="line">    pageNum: data.pageNum,</span><br><span class="line">    pageSize: data.pageSize,</span><br><span class="line">    courseName: data.courseName,</span><br><span class="line">    studentName: data.studentName,</span><br><span class="line">  &#125;;</span><br><span class="line">  if (data.user.role === &quot;STUDENT&quot;) &#123;</span><br><span class="line">    params.studentId = data.user.id;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  request</span><br><span class="line">    .get(&quot;/grade/selectPage&quot;, &#123;</span><br><span class="line">      params: params,</span><br><span class="line">    &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">        data.tableData = res.data?.list || [];</span><br><span class="line">        data.total = res.data?.total || 0;</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        ElMessage.error(res.msg);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">        localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 加载一次 获取学生选课数据</span><br><span class="line">load();</span><br><span class="line"></span><br><span class="line">const handleCurrentChange = () =&gt; &#123;</span><br><span class="line">  // 当翻页的时候重新加载数据</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const reset = () =&gt; &#123;</span><br><span class="line">  data.courseName = &quot;&quot;;</span><br><span class="line">  data.studentName = &quot;&quot;;</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const del = (id) =&gt; &#123;</span><br><span class="line">  ElMessageBox.confirm(&quot;删除后内容将无法恢复，您确认删除嘛？&quot;, &quot;删除确认&quot;, &#123;</span><br><span class="line">    type: &quot;warning&quot;,</span><br><span class="line">  &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      request.delete(&quot;/grade/delete/&quot; + id).then((res) =&gt; &#123;</span><br><span class="line">        if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">          ElMessage.success(&quot;操作成功&quot;);</span><br><span class="line">          load();</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          ElMessage.error(res.msg);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">        localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 打分</span><br><span class="line">const handleEdit = (row) =&gt; &#123;</span><br><span class="line">  // 弹窗</span><br><span class="line">  data.formVisible = true;</span><br><span class="line">  data.form = JSON.parse(JSON.stringify(row));</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const save = () =&gt; &#123;</span><br><span class="line">  request</span><br><span class="line">    .put(&quot;/grade/update&quot;, data.form)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">        ElMessage.success(&quot;操作成功&quot;);</span><br><span class="line">        data.formVisible = false;</span><br><span class="line">        load();</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        ElMessage.error(res.msg);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">        localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="后端-2"><a href="#后端-2" class="headerlink" title="后端"></a>后端</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Optional</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> APIRouter, Depends, Query</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> common.pageHelper <span class="keyword">import</span> PageHelper</span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> ResultModel, Result</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session, get_db_session</span><br><span class="line"><span class="keyword">from</span> model.grade <span class="keyword">import</span> GradeCreate, GradeSearch, GradeUpdate</span><br><span class="line"><span class="keyword">from</span> service.gradeService <span class="keyword">import</span> GradeService</span><br><span class="line"></span><br><span class="line">grade_router = APIRouter(prefix=<span class="string">&quot;/grade&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@grade_router.post(<span class="params"><span class="string">&quot;/add&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">grade: GradeCreate, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    GradeService.add_grade(grade, db_session)</span><br><span class="line">    <span class="keyword">return</span> Result.success()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@grade_router.get(<span class="params"><span class="string">&quot;/selectPage&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">select_page</span>(<span class="params">page: <span class="built_in">int</span> = Query(<span class="params"><span class="number">1</span>, ge=<span class="number">1</span>, alias=<span class="string">&quot;pageNum&quot;</span>, description=<span class="string">&quot;Page number&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      size: <span class="built_in">int</span> = Query(<span class="params"><span class="number">5</span>, gt=<span class="number">0</span>, le=<span class="number">100</span>, alias=<span class="string">&quot;pageSize&quot;</span>, description=<span class="string">&quot;Page size&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      studentName: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Student name&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      courseName: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Course name&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      studentId: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Student id&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    pageInfo = PageHelper.startPage(page, size)</span><br><span class="line">    grade_search: GradeSearch = GradeSearch(studentName=studentName, courseName=courseName, studentId=studentId)</span><br><span class="line">    grade_list = GradeService.select_page(grade_search, db_session)</span><br><span class="line">    <span class="keyword">return</span> Result.success(pageInfo.of(grade_list))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@grade_router.put(<span class="params"><span class="string">&quot;/update&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">update</span>(<span class="params">grade: GradeUpdate, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    GradeService.update_by_id(grade, db_session)</span><br><span class="line">    <span class="keyword">return</span> Result.success()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@grade_router.delete(<span class="params"><span class="string">&quot;/delete/&#123;id&#125;&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">delete</span>(<span class="params"><span class="built_in">id</span>: <span class="built_in">int</span>, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    GradeService.delete_by_id(<span class="built_in">id</span>, db_session)</span><br><span class="line">    <span class="keyword">return</span> Result.success()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.include_router(grade_router)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi.encoders <span class="keyword">import</span> jsonable_encoder</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> select, and_, asc</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.utils <span class="keyword">import</span> set_attrs</span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> GradeExistException</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session</span><br><span class="line"><span class="keyword">from</span> model.course <span class="keyword">import</span> Course</span><br><span class="line"><span class="keyword">from</span> model.grade <span class="keyword">import</span> GradeCreate, Grade, GradeSearch, GradeUpdate</span><br><span class="line"><span class="keyword">from</span> model.student <span class="keyword">import</span> Student</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GradeService</span>:</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">add_grade</span>(<span class="params">grade: GradeCreate, db_session: Session</span>):</span><br><span class="line">        query = select(Grade).where(</span><br><span class="line">            and_(Grade.studentId == grade.studentId,</span><br><span class="line">                 Grade.courseId == grade.courseId))</span><br><span class="line">        exist_grade: Grade = db_session.execute(query).scalar()</span><br><span class="line">        <span class="keyword">if</span> exist_grade:</span><br><span class="line">            <span class="keyword">raise</span> GradeExistException(<span class="string">&quot;课程已打分&quot;</span>)</span><br><span class="line">        new_grade = Grade()</span><br><span class="line">        set_attrs(new_grade, jsonable_encoder(grade))</span><br><span class="line">        db_session.add(new_grade)</span><br><span class="line">        db_session.commit()</span><br><span class="line">        <span class="keyword">return</span> new_grade</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">select_page</span>(<span class="params">grade_search: GradeSearch, db_session: Session</span>):</span><br><span class="line">        query = select(Grade, Student, Course).outerjoin(Grade.student).outerjoin(Grade.course).order_by(asc(Grade.<span class="built_in">id</span>))</span><br><span class="line">        <span class="keyword">if</span> grade_search.courseName:</span><br><span class="line">            query = query.where(Course.name.like(<span class="string">f&quot;%<span class="subst">&#123;grade_search.courseName&#125;</span>%&quot;</span>))</span><br><span class="line">        <span class="keyword">if</span> grade_search.studentName:</span><br><span class="line">            query = query.where(Student.name.like(<span class="string">f&quot;%<span class="subst">&#123;grade_search.studentName&#125;</span>%&quot;</span>))</span><br><span class="line">        <span class="keyword">if</span> grade_search.studentId:</span><br><span class="line">            query = query.where(Grade.studentId == grade_search.studentId)</span><br><span class="line">        result = db_session.execute(query).scalars().<span class="built_in">all</span>()</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">update_by_id</span>(<span class="params">grade: GradeUpdate, db_session: Session</span>):</span><br><span class="line">        exist_grade: Grade = check_grade_exist(grade.<span class="built_in">id</span>, db_session)</span><br><span class="line">        set_attrs(exist_grade, jsonable_encoder(grade))</span><br><span class="line">        db_session.commit()</span><br><span class="line">        <span class="keyword">return</span> exist_grade</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">delete_by_id</span>(<span class="params"><span class="built_in">id</span>: <span class="built_in">int</span>, db_session: Session</span>):</span><br><span class="line">        exist_grade: Grade = check_grade_exist(<span class="built_in">id</span>, db_session)</span><br><span class="line">        db_session.delete(exist_grade)</span><br><span class="line">        db_session.commit()</span><br><span class="line">        <span class="keyword">return</span> exist_grade</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check_grade_exist</span>(<span class="params">grade_id: <span class="built_in">int</span>, db_session: Session</span>):</span><br><span class="line">    query = select(Grade).where(Grade.<span class="built_in">id</span> == grade_id)</span><br><span class="line">    exist_grade: Grade = db_session.execute(query).scalar()</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> exist_grade:</span><br><span class="line">        <span class="keyword">raise</span> GradeExistException(<span class="string">&quot;成绩记录不存在&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> exist_grade</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="测试-2"><a href="#测试-2" class="headerlink" title="测试"></a>测试</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710678715152-35dd8383-9e4c-4d96-b75f-56eda2266de6.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710678731077-6041b07e-bae2-413a-89cb-c08681df37ba.png"></p><h1 id=""><a href="#" class="headerlink" title=""></a></h1><blockquote><p>更新: 2024-05-26 21:20:47<br>原文: <a href="https://www.yuque.com/zacharyblock/iacda/izxixxgu5aq8g2nw">https://www.yuque.com/zacharyblock/iacda/izxixxgu5aq8g2nw</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;学生成绩管理&quot;&gt;&lt;a href=&quot;#学生成绩管理&quot; class=&quot;headerlink&quot; title=&quot;学生成绩管理&quot;&gt;&lt;/a&gt;学生成绩管理&lt;/h1&gt;&lt;h2 id=&quot;成绩表设计&quot;&gt;&lt;a href=&quot;#成绩表设计&quot; class=&quot;headerlink&quot; title=</summary>
      
    
    
    
    <category term="FastAPI入门" scheme="https://blockzachary.github.io/categories/FastAPI%E5%85%A5%E9%97%A8/"/>
    
    
    <category term="Python" scheme="https://blockzachary.github.io/tags/Python/"/>
    
    <category term="Vue3" scheme="https://blockzachary.github.io/tags/Vue3/"/>
    
    <category term="FastAPI" scheme="https://blockzachary.github.io/tags/FastAPI/"/>
    
    <category term="实战" scheme="https://blockzachary.github.io/tags/%E5%AE%9E%E6%88%98/"/>
    
  </entry>
  
  <entry>
    <title>学生选课功能</title>
    <link href="https://blockzachary.github.io/2024/05/26/FastAPI%E5%85%A5%E9%97%A8/%E5%AD%A6%E7%94%9F%E9%80%89%E8%AF%BE%E5%8A%9F%E8%83%BD/"/>
    <id>https://blockzachary.github.io/2024/05/26/FastAPI%E5%85%A5%E9%97%A8/%E5%AD%A6%E7%94%9F%E9%80%89%E8%AF%BE%E5%8A%9F%E8%83%BD/</id>
    <published>2024-05-26T18:51:00.000Z</published>
    <updated>2024-05-26T18:51:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="学生选课功能"><a href="#学生选课功能" class="headerlink" title="学生选课功能"></a>学生选课功能</h1><h1 id="学生选课功能-1"><a href="#学生选课功能-1" class="headerlink" title="学生选课功能"></a>学生选课功能</h1><h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><p>新增一张学生选课表</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710661868105-c089191b-2c9a-4bcd-a48a-de4fb53fa15f.png"></p><h2 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h2><p>学生选课页面，把 Course 页面复制粘贴一份，命名为<code>CourseList.vue</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.name&quot;</span><br><span class="line">        placeholder=&quot;请输入要查询的课程名称&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;margin-left:10px; width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.number&quot;</span><br><span class="line">        placeholder=&quot;请输入课程编号&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;margin-left:10px; width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.teacher&quot;</span><br><span class="line">        placeholder=&quot;请输入任课老师&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-button type=&quot;info&quot; plain style=&quot;margin: 0 0 0 10px&quot; @click=&quot;reset&quot;</span><br><span class="line">        &gt;重置&lt;/el-button</span><br><span class="line">      &gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-table :data=&quot;data.tableData&quot; stripe style=&quot;width: 100%&quot;&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;id&quot; label=&quot;ID&quot; width=&quot;80&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;name&quot; label=&quot;课程名称&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;number&quot; label=&quot;课程编号&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;description&quot; label=&quot;课程描述&quot; width=&quot;240&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;periods&quot; label=&quot;课时&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;teacher&quot; label=&quot;任课教师&quot; /&gt;</span><br><span class="line">          &lt;el-table-column label=&quot;操作&quot; align=&quot;center&quot;&gt;</span><br><span class="line">            &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">              &lt;el-button</span><br><span class="line">                type=&quot;primary&quot;</span><br><span class="line">                size=&quot;small&quot;</span><br><span class="line">                plain</span><br><span class="line">                @click=&quot;selectCourse(scope.row)&quot;</span><br><span class="line">                &gt;选课&lt;/el-button</span><br><span class="line">              &gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">          &lt;/el-table-column&gt;</span><br><span class="line">        &lt;/el-table&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot;&gt;</span><br><span class="line">      &lt;el-pagination</span><br><span class="line">        v-model:current-page=&quot;data.pageNum&quot;</span><br><span class="line">        v-model:page-size=&quot;data.pageSize&quot;</span><br><span class="line">        @current-change=&quot;handleCurrentChange&quot;</span><br><span class="line">        background</span><br><span class="line">        layout=&quot;prev, pager, next&quot;</span><br><span class="line">        :total=&quot;data.total&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; reactive &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; Search &#125; from &quot;@element-plus/icons-vue&quot;;</span><br><span class="line">import request from &quot;@/utils/request&quot;;</span><br><span class="line">import &#123; ElMessage, ElMessageBox &#125; from &quot;element-plus&quot;;</span><br><span class="line"></span><br><span class="line">const data = reactive(&#123;</span><br><span class="line">  name: &quot;&quot;,</span><br><span class="line">  number: &quot;&quot;,</span><br><span class="line">  teacher: &quot;&quot;,</span><br><span class="line">  tableData: [],</span><br><span class="line">  total: 0,</span><br><span class="line">  pageNum: 1,</span><br><span class="line">  pageSize: 5,</span><br><span class="line">  user: JSON.parse(localStorage.getItem(&quot;student-user&quot;) || &quot;&#123;&#125;&quot;),</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const load = () =&gt; &#123;</span><br><span class="line">  request</span><br><span class="line">    .get(&quot;/course/selectPage&quot;, &#123;</span><br><span class="line">      params: &#123;</span><br><span class="line">        pageNum: data.pageNum,</span><br><span class="line">        pageSize: data.pageSize,</span><br><span class="line">        name: data.name,</span><br><span class="line">        number: data.number,</span><br><span class="line">        teacher: data.teacher,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">        data.tableData = res.data?.list || [];</span><br><span class="line">        data.total = res.data?.total || 0;</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        ElMessage.error(res.msg);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">        localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 加载一次 获取课程数据</span><br><span class="line">load();</span><br><span class="line"></span><br><span class="line">const handleCurrentChange = () =&gt; &#123;</span><br><span class="line">  // 当翻页的时候重新加载数据</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const reset = () =&gt; &#123;</span><br><span class="line">  data.name = &quot;&quot;;</span><br><span class="line">  data.number = &quot;&quot;;</span><br><span class="line">  data.teacher = &quot;&quot;;</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const selectCourse = (row) =&gt; &#123;</span><br><span class="line">  request</span><br><span class="line">    .post(&quot;/studentCourse/add&quot;, &#123;</span><br><span class="line">      studentId: data.user.id,</span><br><span class="line">      name: row.name,</span><br><span class="line">      number: row.number,</span><br><span class="line">      courseId: row.id,</span><br><span class="line">    &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">        ElMessage.success(&quot;选课成功&quot;);</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        ElMessage.error(res.msg);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">        localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHistory &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">history</span>: <span class="title function_">createWebHistory</span>(<span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">env</span>.<span class="property">BASE_URL</span>),</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;Manager&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/Manager.vue&quot;</span>),</span><br><span class="line">      <span class="attr">redirect</span>: <span class="string">&quot;/home&quot;</span>,</span><br><span class="line">      <span class="attr">children</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;home&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Home&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Home.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;course&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Course&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Course.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;student&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Student&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Student.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;person&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Person&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Person.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;courseList&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;CourseList&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/CourseList.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">      ],</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/login&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;Login&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/Login.vue&quot;</span>),</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/register&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;Register&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/Register.vue&quot;</span>),</span><br><span class="line">    &#125;,</span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">beforeEach</span>(<span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> requiresAuth = to.<span class="property">matched</span>.<span class="title function_">some</span>(<span class="function">(<span class="params">record</span>) =&gt;</span> record.<span class="property">meta</span>.<span class="property">requiresAuth</span>);</span><br><span class="line">  <span class="keyword">const</span> user = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;student-user&quot;</span>));</span><br><span class="line">  <span class="keyword">if</span> (requiresAuth &amp;&amp; !user) &#123;</span><br><span class="line">    <span class="comment">// 如果目标路由需要认证,并且用户未登录</span></span><br><span class="line">    <span class="title function_">next</span>(<span class="string">&quot;/login&quot;</span>); <span class="comment">// 跳转到登录页面</span></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">next</span>(); <span class="comment">// 如果目标路由不需要认证,或者用户已登录,则正常导航到目标路由</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div</span><br><span class="line">      style=&quot;height: 60px; background-color: #eae8e8; display: flex; align-items: center; border-bottom: 1px solid #c4c2c2&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;div style=&quot;flex: 1&quot;&gt;</span><br><span class="line">        &lt;div style=&quot;padding-left: 20px; display: flex; align-items: center&quot;&gt;</span><br><span class="line">          &lt;img src=&quot;@/assets/imgs/logo.png&quot; alt=&quot;&quot; style=&quot;width: 40px&quot; /&gt;</span><br><span class="line">          &lt;div style=&quot;font-weight: bold; font-size: 24px; margin-left: 5px&quot;&gt;</span><br><span class="line">            学生信息管理系统</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        style=&quot;width: fit-content; padding-right: 10px; display: flex; align-items: center;&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;img</span><br><span class="line">          :src=&quot;</span><br><span class="line">            user.avatar ||</span><br><span class="line">            &#x27;https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png&#x27;</span><br><span class="line">          &quot;</span><br><span class="line">          alt=&quot;&quot;</span><br><span class="line">          style=&quot;width: 40px; height: 40px; border-radius: 50%&quot;</span><br><span class="line">        /&gt;</span><br><span class="line">        &lt;span style=&quot;margin-left: 5px&quot;&gt;&#123;&#123; user.name &#125;&#125;&lt;/span&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div style=&quot;display: flex&quot;&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        style=&quot;width: 200px; border-right: 1px solid #f3eeee; min-height: calc(100vh - 60px)&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;el-menu</span><br><span class="line">          router</span><br><span class="line">          style=&quot;border: none&quot;</span><br><span class="line">          :default-active=&quot;$route.path&quot;</span><br><span class="line">          :default-openeds=&quot;[&#x27;/home&#x27;, &#x27;2&#x27;, &#x27;3&#x27;]&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          &lt;el-menu-item index=&quot;/home&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;</span><br><span class="line">              &lt;HomeFilled /&gt;</span><br><span class="line">            &lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;系统首页&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line"></span><br><span class="line">          &lt;el-sub-menu index=&quot;2&quot; v-if=&quot;user.role === &#x27;ADMIN&#x27;&quot;&gt;</span><br><span class="line">            &lt;template #title&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;Management /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;学生管理&lt;/span&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">            &lt;el-menu-item index=&quot;/student&quot;&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;UserFilled /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;学生信息&lt;/span&gt;</span><br><span class="line">            &lt;/el-menu-item&gt;</span><br><span class="line">          &lt;/el-sub-menu&gt;</span><br><span class="line"></span><br><span class="line">          &lt;el-sub-menu index=&quot;3&quot;&gt;</span><br><span class="line">            &lt;template #title&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;Memo /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;课程管理&lt;/span&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">            &lt;el-menu-item index=&quot;/course&quot; v-if=&quot;user.role === &#x27;ADMIN&#x27;&quot;&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;Document /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;课程信息&lt;/span&gt;</span><br><span class="line">            &lt;/el-menu-item&gt;</span><br><span class="line">            &lt;el-menu-item index=&quot;/courseList&quot; v-if=&quot;user.role === &#x27;STUDENT&#x27;&quot;&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;Document /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;学生选课&lt;/span&gt;</span><br><span class="line">            &lt;/el-menu-item&gt;</span><br><span class="line">          &lt;/el-sub-menu&gt;</span><br><span class="line"></span><br><span class="line">          &lt;el-menu-item index=&quot;/person&quot; v-if=&quot;user.role === &#x27;STUDENT&#x27;&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;</span><br><span class="line">              &lt;User /&gt;</span><br><span class="line">            &lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;个人资料&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line">          &lt;el-menu-item index=&quot;/login&quot; @click=&quot;logout&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;</span><br><span class="line">              &lt;SwitchButton /&gt;</span><br><span class="line">            &lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;退出系统&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line">        &lt;/el-menu&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">      &lt;div style=&quot;flex: 1; width: 0; background-color: #eaeaee; padding: 10px&quot;&gt;</span><br><span class="line">        &lt;router-view /&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; useRoute &#125; from &quot;vue-router&quot;;</span><br><span class="line"></span><br><span class="line">const $route = useRoute();</span><br><span class="line">console.log($route.path);</span><br><span class="line"></span><br><span class="line">const logout = () =&gt; &#123;</span><br><span class="line">  localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const user = JSON.parse(localStorage.getItem(&quot;student-user&quot;) || &quot;&#123;&#125;&quot;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.el-menu-item.is-active &#123;</span><br><span class="line">  background-color: #c3d7d3 !important;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.el-menu-item:hover &#123;</span><br><span class="line">  color: #0c98d5;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">:deep(th) &#123;</span><br><span class="line">  color: #333;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710663024513-c0ac7ae4-706a-47b6-85cc-4056c92c95a7.png"></p><h2 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h2><h3 id="选课实体类定义"><a href="#选课实体类定义" class="headerlink" title="选课实体类定义"></a>选课实体类定义</h3><p>在项目目录<code>/model</code>下创建一个<code>studentCourse.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> Integer, String, ForeignKey</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> Mapped, mapped_column, relationship</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Base</span><br><span class="line"><span class="keyword">from</span> model.student <span class="keyword">import</span> Student</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentCourse</span>(<span class="title class_ inherited__">Base</span>):</span><br><span class="line">    __tablename__ = <span class="string">&quot;student_course&quot;</span></span><br><span class="line">    <span class="built_in">id</span>: Mapped[<span class="built_in">int</span>] = mapped_column(Integer, primary_key=<span class="literal">True</span>, nullable=<span class="literal">False</span>)</span><br><span class="line">    name: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    number: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    studentId: Mapped[<span class="built_in">int</span>] = mapped_column(<span class="string">&quot;student_id&quot;</span>, Integer, nullable=<span class="literal">False</span>)</span><br><span class="line">    courseId: Mapped[<span class="built_in">int</span>] = mapped_column(<span class="string">&quot;course_id&quot;</span>, Integer, nullable=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><h3 id="学生选课"><a href="#学生选课" class="headerlink" title="学生选课"></a>学生选课</h3><p>接着实现学生选课的 api 部分，在<code>/api</code>下创建一个<code>studentCourseApi.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> APIRouter, Depends</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> ResultModel, Result</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session, get_db_session</span><br><span class="line"><span class="keyword">from</span> model.studentCourse <span class="keyword">import</span> StudentCourseCreate</span><br><span class="line"><span class="keyword">from</span> service.studentCourseService <span class="keyword">import</span> StudentCourseService</span><br><span class="line"></span><br><span class="line">student_course_router = APIRouter(prefix=<span class="string">&quot;/studentCourse&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@student_course_router.post(<span class="params"><span class="string">&quot;/add&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">student_course: StudentCourseCreate, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    StudentCourseService.add_student_course(student_course, db_session)</span><br><span class="line">    <span class="keyword">return</span> Result.success()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.include_router(student_course_router)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> FastAPI</span><br><span class="line"><span class="keyword">from</span> starlette.middleware.cors <span class="keyword">import</span> CORSMiddleware</span><br><span class="line"></span><br><span class="line">app = FastAPI()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 跨域问题</span></span><br><span class="line">origins = [<span class="string">&quot;http://localhost:5173&quot;</span>, <span class="string">&quot;http://127.0.0.1:5173&quot;</span>]  <span class="comment"># 替换为你的前端应用的实际地址</span></span><br><span class="line"></span><br><span class="line">app.add_middleware(</span><br><span class="line">    CORSMiddleware,</span><br><span class="line">    allow_origins=origins,  <span class="comment"># 允许跨域访问的来源域名列表</span></span><br><span class="line">    allow_credentials=<span class="literal">True</span>,  <span class="comment"># 是否允许携带cookie</span></span><br><span class="line">    allow_methods=[<span class="string">&quot;*&quot;</span>],  <span class="comment"># 允许的方法，默认包含常见的GET、POST等，&quot;*&quot;表示所有方法</span></span><br><span class="line">    allow_headers=[<span class="string">&quot;*&quot;</span>],  <span class="comment"># 允许的请求头，默认包含常见的Content-Type等，&quot;*&quot;表示所有请求头</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> adminApi, exceptionHandler, courseApi, studentApi, fileApi, studentCourseApi</span><br></pre></td></tr></table></figure><p>在<code>/servie</code>下创建一个<code>studentCourseService.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi.encoders <span class="keyword">import</span> jsonable_encoder</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> select, and_</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.utils <span class="keyword">import</span> set_attrs</span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> StudentCourseExistException</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session</span><br><span class="line"><span class="keyword">from</span> model.studentCourse <span class="keyword">import</span> StudentCourseCreate, StudentCourse</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentCourseService</span>:</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">add_student_course</span>(<span class="params">student_course: StudentCourseCreate, db_session: Session</span>):</span><br><span class="line">        query = select(StudentCourse).where(</span><br><span class="line">            and_(StudentCourse.studentId == student_course.studentId,</span><br><span class="line">                 StudentCourse.courseId == student_course.courseId))</span><br><span class="line">        exist_student_course: StudentCourse = db_session.execute(query).scalar()</span><br><span class="line">        <span class="keyword">if</span> exist_student_course:</span><br><span class="line">            <span class="keyword">raise</span> StudentCourseExistException(<span class="string">&quot;课程已选过&quot;</span>)</span><br><span class="line">        new_student_course = StudentCourse()</span><br><span class="line">        set_attrs(new_student_course, jsonable_encoder(student_course))</span><br><span class="line">        db_session.add(new_student_course)</span><br><span class="line">        db_session.commit()</span><br><span class="line">        <span class="keyword">return</span> new_student_course</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> pydantic <span class="keyword">import</span> BaseModel</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> Integer, String, ForeignKey</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> Mapped, mapped_column, relationship</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Base</span><br><span class="line"><span class="keyword">from</span> model.student <span class="keyword">import</span> Student</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentCourse</span>(<span class="title class_ inherited__">Base</span>):</span><br><span class="line">    __tablename__ = <span class="string">&quot;student_course&quot;</span></span><br><span class="line">    <span class="built_in">id</span>: Mapped[<span class="built_in">int</span>] = mapped_column(Integer, primary_key=<span class="literal">True</span>, nullable=<span class="literal">False</span>)</span><br><span class="line">    name: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    number: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    studentId: Mapped[<span class="built_in">int</span>] = mapped_column(<span class="string">&quot;student_id&quot;</span>, Integer, nullable=<span class="literal">False</span>)</span><br><span class="line">    courseId: Mapped[<span class="built_in">int</span>] = mapped_column(<span class="string">&quot;course_id&quot;</span>, Integer, nullable=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentCourseBase</span>(<span class="title class_ inherited__">BaseModel</span>):</span><br><span class="line">    name: <span class="built_in">str</span></span><br><span class="line">    number: <span class="built_in">str</span></span><br><span class="line">    studentId: <span class="built_in">int</span></span><br><span class="line">    courseId: <span class="built_in">int</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentCourseCreate</span>(<span class="title class_ inherited__">StudentCourseBase</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UserNotFoundException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UserExistException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PasswordNotMatchException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TokenException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseExistException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseNotExistException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">FileNotFoundException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentCourseExistException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi.encoders <span class="keyword">import</span> jsonable_encoder</span><br><span class="line"><span class="keyword">from</span> starlette.responses <span class="keyword">import</span> JSONResponse</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> Request</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> Result</span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> UserNotFoundException, PasswordNotMatchException, TokenException, \</span><br><span class="line">    CourseExistException, CourseNotExistException, UserExistException, FileNotFoundException, \</span><br><span class="line">    StudentCourseExistException</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">Exception</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">exception_handler</span>(<span class="params">request: Request, exc: Exception</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;500&quot;</span>, msg=<span class="built_in">str</span>(exc))</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">500</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">UserNotFoundException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">user_not_fount_exception_handler</span>(<span class="params">request: Request, exc: UserNotFoundException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;404&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">404</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">PasswordNotMatchException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">password_not_fount_exception_handler</span>(<span class="params">request: Request, exc: PasswordNotMatchException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;401&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">401</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">TokenException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">token_exception_handler</span>(<span class="params">request: Request, exc: TokenException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;401&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">401</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">CourseExistException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">course_exist_exception_handler</span>(<span class="params">request: Request, exc: CourseExistException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;400&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">400</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">CourseNotExistException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">course_not_exist_exception_handler</span>(<span class="params">request: Request, exc: CourseNotExistException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;404&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">404</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">UserExistException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">user_exist_exception_handler</span>(<span class="params">request: Request, exc: UserExistException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;400&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">400</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">FileNotFoundException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">file_not_found_exception_handler</span>(<span class="params">request: Request, exc: FileNotFoundException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;404&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">404</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">StudentCourseExistException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">student_course_exist_exception_handler</span>(<span class="params">request: Request, exc: StudentCourseExistException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;400&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">400</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710664237416-830483ff-a709-499c-9d8f-f2f60a902e86.png"></p><p>查看数据库有无数据插入</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710664237390-1da0ccbf-e229-4afe-87a8-487bff6f3074.png"></p><h2 id="管理员-学生查看已选课程"><a href="#管理员-学生查看已选课程" class="headerlink" title="管理员&#x2F;学生查看已选课程"></a>管理员&#x2F;学生查看已选课程</h2><p>这个需要做到：</p><ul><li>学生只看自己的</li><li>管理员看全部的</li></ul><h3 id="前端-1"><a href="#前端-1" class="headerlink" title="前端"></a>前端</h3><p>学生选课页面，将<code>CourseList.vue</code>复制粘贴一下作为<code>StudentCourse.vue</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.name&quot;</span><br><span class="line">        placeholder=&quot;请输入要查询的课程名称&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;margin-left:10px; width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.number&quot;</span><br><span class="line">        placeholder=&quot;请输入课程编号&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-button type=&quot;info&quot; plain style=&quot;margin: 0 0 0 10px&quot; @click=&quot;reset&quot;</span><br><span class="line">        &gt;重置&lt;/el-button</span><br><span class="line">      &gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-table :data=&quot;data.tableData&quot; stripe style=&quot;width: 100%&quot;&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;id&quot; label=&quot;ID&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;name&quot; label=&quot;课程名称&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;number&quot; label=&quot;课程编号&quot; /&gt;</span><br><span class="line">          &lt;el-table-column label=&quot;操作&quot; align=&quot;center&quot; width=&quot;180px&quot;&gt;</span><br><span class="line">            &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">              &lt;el-button</span><br><span class="line">                type=&quot;primary&quot;</span><br><span class="line">                size=&quot;small&quot;</span><br><span class="line">                plain</span><br><span class="line">                @click=&quot;del(scope.row.id)&quot;</span><br><span class="line">                &gt;删除&lt;/el-button</span><br><span class="line">              &gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">          &lt;/el-table-column&gt;</span><br><span class="line">        &lt;/el-table&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot;&gt;</span><br><span class="line">      &lt;el-pagination</span><br><span class="line">        v-model:current-page=&quot;data.pageNum&quot;</span><br><span class="line">        v-model:page-size=&quot;data.pageSize&quot;</span><br><span class="line">        @current-change=&quot;handleCurrentChange&quot;</span><br><span class="line">        background</span><br><span class="line">        layout=&quot;prev, pager, next&quot;</span><br><span class="line">        :total=&quot;data.total&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; reactive &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; Search &#125; from &quot;@element-plus/icons-vue&quot;;</span><br><span class="line">import request from &quot;@/utils/request&quot;;</span><br><span class="line">import &#123; ElMessage, ElMessageBox &#125; from &quot;element-plus&quot;;</span><br><span class="line"></span><br><span class="line">const data = reactive(&#123;</span><br><span class="line">  name: &quot;&quot;,</span><br><span class="line">  number: &quot;&quot;,</span><br><span class="line">  tableData: [],</span><br><span class="line">  total: 0,</span><br><span class="line">  pageNum: 1,</span><br><span class="line">  pageSize: 10,</span><br><span class="line">  user: JSON.parse(localStorage.getItem(&quot;student-user&quot;) || &quot;&#123;&#125;&quot;),</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const load = () =&gt; &#123;</span><br><span class="line">  let params = &#123;</span><br><span class="line">    pageNum: data.pageNum,</span><br><span class="line">    pageSize: data.pageSize,</span><br><span class="line">    name: data.name,</span><br><span class="line">    number: data.number,</span><br><span class="line">  &#125;;</span><br><span class="line">  if (data.user.role === &quot;STUDENT&quot;) &#123;</span><br><span class="line">    params.studentId = data.user.id;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  request</span><br><span class="line">    .get(&quot;/studentCourse/selectPage&quot;, &#123;</span><br><span class="line">      params: params,</span><br><span class="line">    &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">        data.tableData = res.data?.list || [];</span><br><span class="line">        data.total = res.data?.total || 0;</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        ElMessage.error(res.msg);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">        localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 加载一次 获取学生选课数据</span><br><span class="line">load();</span><br><span class="line"></span><br><span class="line">const handleCurrentChange = () =&gt; &#123;</span><br><span class="line">  // 当翻页的时候重新加载数据</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const reset = () =&gt; &#123;</span><br><span class="line">  data.name = &quot;&quot;;</span><br><span class="line">  data.number = &quot;&quot;;</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const del = (id) =&gt; &#123;&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHistory &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">history</span>: <span class="title function_">createWebHistory</span>(<span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">env</span>.<span class="property">BASE_URL</span>),</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;Manager&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/Manager.vue&quot;</span>),</span><br><span class="line">      <span class="attr">redirect</span>: <span class="string">&quot;/home&quot;</span>,</span><br><span class="line">      <span class="attr">children</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;home&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Home&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Home.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;course&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Course&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Course.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;student&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Student&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Student.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;person&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Person&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Person.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;courseList&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;CourseList&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/CourseList.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;studentCourse&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;StudentCourse&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/StudentCourse.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">      ],</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/login&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;Login&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/Login.vue&quot;</span>),</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/register&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;Register&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/Register.vue&quot;</span>),</span><br><span class="line">    &#125;,</span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">beforeEach</span>(<span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> requiresAuth = to.<span class="property">matched</span>.<span class="title function_">some</span>(<span class="function">(<span class="params">record</span>) =&gt;</span> record.<span class="property">meta</span>.<span class="property">requiresAuth</span>);</span><br><span class="line">  <span class="keyword">const</span> user = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;student-user&quot;</span>));</span><br><span class="line">  <span class="keyword">if</span> (requiresAuth &amp;&amp; !user) &#123;</span><br><span class="line">    <span class="comment">// 如果目标路由需要认证,并且用户未登录</span></span><br><span class="line">    <span class="title function_">next</span>(<span class="string">&quot;/login&quot;</span>); <span class="comment">// 跳转到登录页面</span></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">next</span>(); <span class="comment">// 如果目标路由不需要认证,或者用户已登录,则正常导航到目标路由</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div</span><br><span class="line">      style=&quot;height: 60px; background-color: #eae8e8; display: flex; align-items: center; border-bottom: 1px solid #c4c2c2&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;div style=&quot;flex: 1&quot;&gt;</span><br><span class="line">        &lt;div style=&quot;padding-left: 20px; display: flex; align-items: center&quot;&gt;</span><br><span class="line">          &lt;img src=&quot;@/assets/imgs/logo.png&quot; alt=&quot;&quot; style=&quot;width: 40px&quot; /&gt;</span><br><span class="line">          &lt;div style=&quot;font-weight: bold; font-size: 24px; margin-left: 5px&quot;&gt;</span><br><span class="line">            学生信息管理系统</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        style=&quot;width: fit-content; padding-right: 10px; display: flex; align-items: center;&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;img</span><br><span class="line">          :src=&quot;</span><br><span class="line">            user.avatar ||</span><br><span class="line">            &#x27;https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png&#x27;</span><br><span class="line">          &quot;</span><br><span class="line">          alt=&quot;&quot;</span><br><span class="line">          style=&quot;width: 40px; height: 40px; border-radius: 50%&quot;</span><br><span class="line">        /&gt;</span><br><span class="line">        &lt;span style=&quot;margin-left: 5px&quot;&gt;&#123;&#123; user.name &#125;&#125;&lt;/span&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div style=&quot;display: flex&quot;&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        style=&quot;width: 200px; border-right: 1px solid #f3eeee; min-height: calc(100vh - 60px)&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;el-menu</span><br><span class="line">          router</span><br><span class="line">          style=&quot;border: none&quot;</span><br><span class="line">          :default-active=&quot;$route.path&quot;</span><br><span class="line">          :default-openeds=&quot;[&#x27;/home&#x27;, &#x27;2&#x27;, &#x27;3&#x27;]&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          &lt;el-menu-item index=&quot;/home&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;</span><br><span class="line">              &lt;HomeFilled /&gt;</span><br><span class="line">            &lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;系统首页&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line"></span><br><span class="line">          &lt;el-sub-menu index=&quot;2&quot; v-if=&quot;user.role === &#x27;ADMIN&#x27;&quot;&gt;</span><br><span class="line">            &lt;template #title&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;Management /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;学生管理&lt;/span&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">            &lt;el-menu-item index=&quot;/student&quot;&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;UserFilled /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;学生信息&lt;/span&gt;</span><br><span class="line">            &lt;/el-menu-item&gt;</span><br><span class="line">          &lt;/el-sub-menu&gt;</span><br><span class="line"></span><br><span class="line">          &lt;el-sub-menu index=&quot;3&quot;&gt;</span><br><span class="line">            &lt;template #title&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;Memo /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;课程管理&lt;/span&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">            &lt;el-menu-item index=&quot;/course&quot; v-if=&quot;user.role === &#x27;ADMIN&#x27;&quot;&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;Document /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;课程信息&lt;/span&gt;</span><br><span class="line">            &lt;/el-menu-item&gt;</span><br><span class="line">            &lt;el-menu-item index=&quot;/courseList&quot; v-if=&quot;user.role === &#x27;STUDENT&#x27;&quot;&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;Document /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;学生选课&lt;/span&gt;</span><br><span class="line">            &lt;/el-menu-item&gt;</span><br><span class="line">            &lt;el-menu-item index=&quot;/studentCourse&quot;&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;Document /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;选课记录&lt;/span&gt;</span><br><span class="line">            &lt;/el-menu-item&gt;</span><br><span class="line">          &lt;/el-sub-menu&gt;</span><br><span class="line"></span><br><span class="line">          &lt;el-menu-item index=&quot;/person&quot; v-if=&quot;user.role === &#x27;STUDENT&#x27;&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;</span><br><span class="line">              &lt;User /&gt;</span><br><span class="line">            &lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;个人资料&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line">          &lt;el-menu-item index=&quot;/login&quot; @click=&quot;logout&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;</span><br><span class="line">              &lt;SwitchButton /&gt;</span><br><span class="line">            &lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;退出系统&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line">        &lt;/el-menu&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">      &lt;div style=&quot;flex: 1; width: 0; background-color: #eaeaee; padding: 10px&quot;&gt;</span><br><span class="line">        &lt;router-view /&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; useRoute &#125; from &quot;vue-router&quot;;</span><br><span class="line"></span><br><span class="line">const $route = useRoute();</span><br><span class="line">console.log($route.path);</span><br><span class="line"></span><br><span class="line">const logout = () =&gt; &#123;</span><br><span class="line">  localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const user = JSON.parse(localStorage.getItem(&quot;student-user&quot;) || &quot;&#123;&#125;&quot;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.el-menu-item.is-active &#123;</span><br><span class="line">  background-color: #c3d7d3 !important;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.el-menu-item:hover &#123;</span><br><span class="line">  color: #0c98d5;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">:deep(th) &#123;</span><br><span class="line">  color: #333;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="后端-1"><a href="#后端-1" class="headerlink" title="后端"></a>后端</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Optional</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> APIRouter, Depends, Query</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> common.pageHelper <span class="keyword">import</span> PageHelper</span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> ResultModel, Result</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session, get_db_session</span><br><span class="line"><span class="keyword">from</span> model.studentCourse <span class="keyword">import</span> StudentCourseCreate, StudentCourseSearch</span><br><span class="line"><span class="keyword">from</span> service.studentCourseService <span class="keyword">import</span> StudentCourseService</span><br><span class="line"></span><br><span class="line">student_course_router = APIRouter(prefix=<span class="string">&quot;/studentCourse&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@student_course_router.post(<span class="params"><span class="string">&quot;/add&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">student_course: StudentCourseCreate, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    StudentCourseService.add_student_course(student_course, db_session)</span><br><span class="line">    <span class="keyword">return</span> Result.success()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@student_course_router.get(<span class="params"><span class="string">&quot;/selectPage&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">select_page</span>(<span class="params">page: <span class="built_in">int</span> = Query(<span class="params"><span class="number">1</span>, ge=<span class="number">1</span>, alias=<span class="string">&quot;pageNum&quot;</span>, description=<span class="string">&quot;Page number&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      size: <span class="built_in">int</span> = Query(<span class="params"><span class="number">5</span>, gt=<span class="number">0</span>, le=<span class="number">100</span>, alias=<span class="string">&quot;pageSize&quot;</span>, description=<span class="string">&quot;Page size&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      name: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Student name&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      number: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Student number&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      studentId: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Student id&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    pageInfo = PageHelper.startPage(page, size)</span><br><span class="line">    student_course_search = StudentCourseSearch(name=name, number=number, studentId=studentId)</span><br><span class="line">    student_list = StudentCourseService.select_page(student_course_search, db_session)</span><br><span class="line">    <span class="keyword">return</span> Result.success(pageInfo.of(student_list))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.include_router(student_course_router)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi.encoders <span class="keyword">import</span> jsonable_encoder</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> select, and_, asc</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.utils <span class="keyword">import</span> set_attrs</span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> StudentCourseExistException</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session</span><br><span class="line"><span class="keyword">from</span> model.studentCourse <span class="keyword">import</span> StudentCourseCreate, StudentCourse, StudentCourseSearch</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentCourseService</span>:</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">add_student_course</span>(<span class="params">student_course: StudentCourseCreate, db_session: Session</span>):</span><br><span class="line">        query = select(StudentCourse).where(</span><br><span class="line">            and_(StudentCourse.studentId == student_course.studentId,</span><br><span class="line">                 StudentCourse.courseId == student_course.courseId))</span><br><span class="line">        exist_student_course: StudentCourse = db_session.execute(query).scalar()</span><br><span class="line">        <span class="keyword">if</span> exist_student_course:</span><br><span class="line">            <span class="keyword">raise</span> StudentCourseExistException(<span class="string">&quot;课程已选过&quot;</span>)</span><br><span class="line">        new_student_course = StudentCourse()</span><br><span class="line">        set_attrs(new_student_course, jsonable_encoder(student_course))</span><br><span class="line">        db_session.add(new_student_course)</span><br><span class="line">        db_session.commit()</span><br><span class="line">        <span class="keyword">return</span> new_student_course</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">select_page</span>(<span class="params">student_course_search: StudentCourseSearch, db_session: Session</span>):</span><br><span class="line">        query = select(StudentCourse).order_by(asc(StudentCourse.<span class="built_in">id</span>))</span><br><span class="line">        <span class="keyword">if</span> student_course_search.name:</span><br><span class="line">            query = query.where(StudentCourse.name.like(<span class="string">f&quot;%<span class="subst">&#123;student_course_search.name&#125;</span>%&quot;</span>))</span><br><span class="line">        <span class="keyword">if</span> student_course_search.number:</span><br><span class="line">            query = query.where(StudentCourse.number.like(<span class="string">f&quot;%<span class="subst">&#123;student_course_search.number&#125;</span>%&quot;</span>))</span><br><span class="line">        <span class="keyword">if</span> student_course_search.studentId:</span><br><span class="line">            query = query.where(StudentCourse.studentId == student_course_search.studentId)</span><br><span class="line">        result = db_session.execute(query).scalars().<span class="built_in">all</span>()</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> pydantic <span class="keyword">import</span> BaseModel</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> Integer, String</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> Mapped, mapped_column</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Base</span><br><span class="line"><span class="keyword">from</span> model.student <span class="keyword">import</span> Student</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentCourse</span>(<span class="title class_ inherited__">Base</span>):</span><br><span class="line">    __tablename__ = <span class="string">&quot;student_course&quot;</span></span><br><span class="line">    <span class="built_in">id</span>: Mapped[<span class="built_in">int</span>] = mapped_column(Integer, primary_key=<span class="literal">True</span>, nullable=<span class="literal">False</span>)</span><br><span class="line">    name: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    number: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    studentId: Mapped[<span class="built_in">int</span>] = mapped_column(<span class="string">&quot;student_id&quot;</span>, Integer, nullable=<span class="literal">False</span>)</span><br><span class="line">    courseId: Mapped[<span class="built_in">int</span>] = mapped_column(<span class="string">&quot;course_id&quot;</span>, Integer, nullable=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentCourseBase</span>(<span class="title class_ inherited__">BaseModel</span>):</span><br><span class="line">    name: <span class="built_in">str</span></span><br><span class="line">    number: <span class="built_in">str</span></span><br><span class="line">    studentId: <span class="built_in">int</span></span><br><span class="line">    courseId: <span class="built_in">int</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentCourseCreate</span>(<span class="title class_ inherited__">StudentCourseBase</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentCourseSearch</span>(<span class="title class_ inherited__">BaseModel</span>):</span><br><span class="line">    name: <span class="built_in">str</span> | <span class="literal">None</span></span><br><span class="line">    number: <span class="built_in">str</span> | <span class="literal">None</span></span><br><span class="line">    studentId: <span class="built_in">int</span> | <span class="literal">None</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710665807707-fc4d3521-f29e-4877-84af-54403312cd59.png"></p><p>从学生用户这里来看是挺好的，但是如果，多插入几个学生选课</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710665844621-a038df5d-50fd-4645-83c4-baa6528d179c.png"></p><p>从管理员的角度来看是这样的，并不能直接看出是哪位学生选了这门课</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710665872322-80597b11-2899-4281-991d-8ad3e6be1187.png"></p><h3 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h3><p>我们给显示选课记录的这个表格，加一列<code>学生姓名</code></p><p>学生选课表就需要追加一个表的关联，去关联一下学生表获取学生姓名</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> pydantic <span class="keyword">import</span> BaseModel</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> Integer, String, ForeignKey</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> Mapped, mapped_column, relationship</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Base</span><br><span class="line"><span class="keyword">from</span> model.student <span class="keyword">import</span> Student</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentCourse</span>(<span class="title class_ inherited__">Base</span>):</span><br><span class="line">    __tablename__ = <span class="string">&quot;student_course&quot;</span></span><br><span class="line">    <span class="built_in">id</span>: Mapped[<span class="built_in">int</span>] = mapped_column(Integer, primary_key=<span class="literal">True</span>, nullable=<span class="literal">False</span>)</span><br><span class="line">    name: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    number: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    studentId: Mapped[<span class="built_in">int</span>] = mapped_column(<span class="string">&quot;student_id&quot;</span>, Integer, ForeignKey(<span class="string">&#x27;student.id&#x27;</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    courseId: Mapped[<span class="built_in">int</span>] = mapped_column(<span class="string">&quot;course_id&quot;</span>, Integer, nullable=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">    student: Mapped[Student] = relationship(lazy=<span class="literal">False</span>, backref=<span class="string">&quot;student_course&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentCourseBase</span>(<span class="title class_ inherited__">BaseModel</span>):</span><br><span class="line">    name: <span class="built_in">str</span></span><br><span class="line">    number: <span class="built_in">str</span></span><br><span class="line">    studentId: <span class="built_in">int</span></span><br><span class="line">    courseId: <span class="built_in">int</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentCourseCreate</span>(<span class="title class_ inherited__">StudentCourseBase</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentCourseSearch</span>(<span class="title class_ inherited__">BaseModel</span>):</span><br><span class="line">    name: <span class="built_in">str</span> | <span class="literal">None</span></span><br><span class="line">    number: <span class="built_in">str</span> | <span class="literal">None</span></span><br><span class="line">    studentId: <span class="built_in">int</span> | <span class="literal">None</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi.encoders <span class="keyword">import</span> jsonable_encoder</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> select, and_, asc</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.utils <span class="keyword">import</span> set_attrs</span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> StudentCourseExistException</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session</span><br><span class="line"><span class="keyword">from</span> model.student <span class="keyword">import</span> Student</span><br><span class="line"><span class="keyword">from</span> model.studentCourse <span class="keyword">import</span> StudentCourseCreate, StudentCourse, StudentCourseSearch</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentCourseService</span>:</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">add_student_course</span>(<span class="params">student_course: StudentCourseCreate, db_session: Session</span>):</span><br><span class="line">        query = select(StudentCourse).where(</span><br><span class="line">            and_(StudentCourse.studentId == student_course.studentId,</span><br><span class="line">                 StudentCourse.courseId == student_course.courseId))</span><br><span class="line">        exist_student_course: StudentCourse = db_session.execute(query).scalar()</span><br><span class="line">        <span class="keyword">if</span> exist_student_course:</span><br><span class="line">            <span class="keyword">raise</span> StudentCourseExistException(<span class="string">&quot;课程已选过&quot;</span>)</span><br><span class="line">        new_student_course = StudentCourse()</span><br><span class="line">        set_attrs(new_student_course, jsonable_encoder(student_course))</span><br><span class="line">        db_session.add(new_student_course)</span><br><span class="line">        db_session.commit()</span><br><span class="line">        <span class="keyword">return</span> new_student_course</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">select_page</span>(<span class="params">student_course_search: StudentCourseSearch, db_session: Session</span>):</span><br><span class="line">        query = select(StudentCourse, Student).join(StudentCourse.student).order_by(asc(StudentCourse.<span class="built_in">id</span>))</span><br><span class="line">        <span class="keyword">if</span> student_course_search.name:</span><br><span class="line">            query = query.where(StudentCourse.name.like(<span class="string">f&quot;%<span class="subst">&#123;student_course_search.name&#125;</span>%&quot;</span>))</span><br><span class="line">        <span class="keyword">if</span> student_course_search.number:</span><br><span class="line">            query = query.where(StudentCourse.number.like(<span class="string">f&quot;%<span class="subst">&#123;student_course_search.number&#125;</span>%&quot;</span>))</span><br><span class="line">        <span class="keyword">if</span> student_course_search.studentId:</span><br><span class="line">            query = query.where(StudentCourse.studentId == student_course_search.studentId)</span><br><span class="line">        result = db_session.execute(query).scalars().<span class="built_in">all</span>()</span><br><span class="line">        <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><p>然后给前端这块 数据显示加一列，同时得是管理员的时候才显示这么一列</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.name&quot;</span><br><span class="line">        placeholder=&quot;请输入要查询的课程名称&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;margin-left:10px; width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.number&quot;</span><br><span class="line">        placeholder=&quot;请输入课程编号&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-button type=&quot;info&quot; plain style=&quot;margin: 0 0 0 10px&quot; @click=&quot;reset&quot;</span><br><span class="line">        &gt;重置&lt;/el-button</span><br><span class="line">      &gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-table :data=&quot;data.tableData&quot; stripe style=&quot;width: 100%&quot;&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;id&quot; label=&quot;ID&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;name&quot; label=&quot;课程名称&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;number&quot; label=&quot;课程编号&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;student.name&quot; label=&quot;学生名称&quot; /&gt;</span><br><span class="line">          &lt;el-table-column label=&quot;操作&quot; align=&quot;center&quot; width=&quot;180px&quot;&gt;</span><br><span class="line">            &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">              &lt;el-button</span><br><span class="line">                type=&quot;primary&quot;</span><br><span class="line">                size=&quot;small&quot;</span><br><span class="line">                plain</span><br><span class="line">                @click=&quot;del(scope.row.id)&quot;</span><br><span class="line">                &gt;删除&lt;/el-button</span><br><span class="line">              &gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">          &lt;/el-table-column&gt;</span><br><span class="line">        &lt;/el-table&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot;&gt;</span><br><span class="line">      &lt;el-pagination</span><br><span class="line">        v-model:current-page=&quot;data.pageNum&quot;</span><br><span class="line">        v-model:page-size=&quot;data.pageSize&quot;</span><br><span class="line">        @current-change=&quot;handleCurrentChange&quot;</span><br><span class="line">        background</span><br><span class="line">        layout=&quot;prev, pager, next&quot;</span><br><span class="line">        :total=&quot;data.total&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; reactive &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; Search &#125; from &quot;@element-plus/icons-vue&quot;;</span><br><span class="line">import request from &quot;@/utils/request&quot;;</span><br><span class="line">import &#123; ElMessage, ElMessageBox &#125; from &quot;element-plus&quot;;</span><br><span class="line"></span><br><span class="line">const data = reactive(&#123;</span><br><span class="line">  name: &quot;&quot;,</span><br><span class="line">  number: &quot;&quot;,</span><br><span class="line">  tableData: [],</span><br><span class="line">  total: 0,</span><br><span class="line">  pageNum: 1,</span><br><span class="line">  pageSize: 10,</span><br><span class="line">  user: JSON.parse(localStorage.getItem(&quot;student-user&quot;) || &quot;&#123;&#125;&quot;),</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const load = () =&gt; &#123;</span><br><span class="line">  let params = &#123;</span><br><span class="line">    pageNum: data.pageNum,</span><br><span class="line">    pageSize: data.pageSize,</span><br><span class="line">    name: data.name,</span><br><span class="line">    number: data.number,</span><br><span class="line">  &#125;;</span><br><span class="line">  if (data.user.role === &quot;STUDENT&quot;) &#123;</span><br><span class="line">    params.studentId = data.user.id;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  request</span><br><span class="line">    .get(&quot;/studentCourse/selectPage&quot;, &#123;</span><br><span class="line">      params: params,</span><br><span class="line">    &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">        data.tableData = res.data?.list || [];</span><br><span class="line">        data.total = res.data?.total || 0;</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        ElMessage.error(res.msg);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">        localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 加载一次 获取学生选课数据</span><br><span class="line">load();</span><br><span class="line"></span><br><span class="line">const handleCurrentChange = () =&gt; &#123;</span><br><span class="line">  // 当翻页的时候重新加载数据</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const reset = () =&gt; &#123;</span><br><span class="line">  data.name = &quot;&quot;;</span><br><span class="line">  data.number = &quot;&quot;;</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const del = (id) =&gt; &#123;&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710666586302-ce81afa4-106c-421b-8862-bb589eabdc2b.png"></p><h2 id="学生选课删除"><a href="#学生选课删除" class="headerlink" title="学生选课删除"></a>学生选课删除</h2><p>现在实现删除学生所选课程</p><h3 id="前端-2"><a href="#前端-2" class="headerlink" title="前端"></a>前端</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.name&quot;</span><br><span class="line">        placeholder=&quot;请输入要查询的课程名称&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;margin-left:10px; width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.number&quot;</span><br><span class="line">        placeholder=&quot;请输入课程编号&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-button type=&quot;info&quot; plain style=&quot;margin: 0 0 0 10px&quot; @click=&quot;reset&quot;</span><br><span class="line">        &gt;重置&lt;/el-button</span><br><span class="line">      &gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-table :data=&quot;data.tableData&quot; stripe style=&quot;width: 100%&quot;&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;id&quot; label=&quot;ID&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;name&quot; label=&quot;课程名称&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;number&quot; label=&quot;课程编号&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;student.name&quot; label=&quot;学生名称&quot; /&gt;</span><br><span class="line">          &lt;el-table-column label=&quot;操作&quot; align=&quot;center&quot; width=&quot;180px&quot;&gt;</span><br><span class="line">            &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">              &lt;el-button</span><br><span class="line">                type=&quot;primary&quot;</span><br><span class="line">                size=&quot;small&quot;</span><br><span class="line">                plain</span><br><span class="line">                @click=&quot;del(scope.row.id)&quot;</span><br><span class="line">                &gt;删除&lt;/el-button</span><br><span class="line">              &gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">          &lt;/el-table-column&gt;</span><br><span class="line">        &lt;/el-table&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot;&gt;</span><br><span class="line">      &lt;el-pagination</span><br><span class="line">        v-model:current-page=&quot;data.pageNum&quot;</span><br><span class="line">        v-model:page-size=&quot;data.pageSize&quot;</span><br><span class="line">        @current-change=&quot;handleCurrentChange&quot;</span><br><span class="line">        background</span><br><span class="line">        layout=&quot;prev, pager, next&quot;</span><br><span class="line">        :total=&quot;data.total&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; reactive &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; Search &#125; from &quot;@element-plus/icons-vue&quot;;</span><br><span class="line">import request from &quot;@/utils/request&quot;;</span><br><span class="line">import &#123; ElMessage, ElMessageBox &#125; from &quot;element-plus&quot;;</span><br><span class="line"></span><br><span class="line">const data = reactive(&#123;</span><br><span class="line">  name: &quot;&quot;,</span><br><span class="line">  number: &quot;&quot;,</span><br><span class="line">  tableData: [],</span><br><span class="line">  total: 0,</span><br><span class="line">  pageNum: 1,</span><br><span class="line">  pageSize: 10,</span><br><span class="line">  user: JSON.parse(localStorage.getItem(&quot;student-user&quot;) || &quot;&#123;&#125;&quot;),</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const load = () =&gt; &#123;</span><br><span class="line">  let params = &#123;</span><br><span class="line">    pageNum: data.pageNum,</span><br><span class="line">    pageSize: data.pageSize,</span><br><span class="line">    name: data.name,</span><br><span class="line">    number: data.number,</span><br><span class="line">  &#125;;</span><br><span class="line">  if (data.user.role === &quot;STUDENT&quot;) &#123;</span><br><span class="line">    params.studentId = data.user.id;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  request</span><br><span class="line">    .get(&quot;/studentCourse/selectPage&quot;, &#123;</span><br><span class="line">      params: params,</span><br><span class="line">    &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">        data.tableData = res.data?.list || [];</span><br><span class="line">        data.total = res.data?.total || 0;</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        ElMessage.error(res.msg);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">        localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 加载一次 获取学生选课数据</span><br><span class="line">load();</span><br><span class="line"></span><br><span class="line">const handleCurrentChange = () =&gt; &#123;</span><br><span class="line">  // 当翻页的时候重新加载数据</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const reset = () =&gt; &#123;</span><br><span class="line">  data.name = &quot;&quot;;</span><br><span class="line">  data.number = &quot;&quot;;</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const del = (id) =&gt; &#123;</span><br><span class="line">  ElMessageBox.confirm(&quot;删除后内容将无法恢复，您确认删除嘛？&quot;, &quot;删除确认&quot;, &#123;</span><br><span class="line">    type: &quot;warning&quot;,</span><br><span class="line">  &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      request.delete(&quot;/studentCourse/delete/&quot; + id).then((res) =&gt; &#123;</span><br><span class="line">        if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">          ElMessage.success(&quot;操作成功&quot;);</span><br><span class="line">          load();</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          ElMessage.error(res.msg);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">        localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="后端-2"><a href="#后端-2" class="headerlink" title="后端"></a>后端</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Optional</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> APIRouter, Depends, Query</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> common.pageHelper <span class="keyword">import</span> PageHelper</span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> ResultModel, Result</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session, get_db_session</span><br><span class="line"><span class="keyword">from</span> model.studentCourse <span class="keyword">import</span> StudentCourseCreate, StudentCourseSearch</span><br><span class="line"><span class="keyword">from</span> service.studentCourseService <span class="keyword">import</span> StudentCourseService</span><br><span class="line"></span><br><span class="line">student_course_router = APIRouter(prefix=<span class="string">&quot;/studentCourse&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@student_course_router.post(<span class="params"><span class="string">&quot;/add&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">student_course: StudentCourseCreate, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    StudentCourseService.add_student_course(student_course, db_session)</span><br><span class="line">    <span class="keyword">return</span> Result.success()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@student_course_router.get(<span class="params"><span class="string">&quot;/selectPage&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">select_page</span>(<span class="params">page: <span class="built_in">int</span> = Query(<span class="params"><span class="number">1</span>, ge=<span class="number">1</span>, alias=<span class="string">&quot;pageNum&quot;</span>, description=<span class="string">&quot;Page number&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      size: <span class="built_in">int</span> = Query(<span class="params"><span class="number">5</span>, gt=<span class="number">0</span>, le=<span class="number">100</span>, alias=<span class="string">&quot;pageSize&quot;</span>, description=<span class="string">&quot;Page size&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      name: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Student name&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      number: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Student number&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      studentId: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Student id&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    pageInfo = PageHelper.startPage(page, size)</span><br><span class="line">    student_course_search = StudentCourseSearch(name=name, number=number, studentId=studentId)</span><br><span class="line">    student_list = StudentCourseService.select_page(student_course_search, db_session)</span><br><span class="line">    <span class="keyword">return</span> Result.success(pageInfo.of(student_list))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@student_course_router.delete(<span class="params"><span class="string">&quot;/delete/&#123;id&#125;&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">delete</span>(<span class="params"><span class="built_in">id</span>: <span class="built_in">int</span>, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    StudentCourseService.delete_by_id(<span class="built_in">id</span>, db_session)</span><br><span class="line">    <span class="keyword">return</span> Result.success()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.include_router(student_course_router)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi.encoders <span class="keyword">import</span> jsonable_encoder</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> select, and_, asc</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.utils <span class="keyword">import</span> set_attrs</span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> StudentCourseExistException</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session</span><br><span class="line"><span class="keyword">from</span> model.student <span class="keyword">import</span> Student</span><br><span class="line"><span class="keyword">from</span> model.studentCourse <span class="keyword">import</span> StudentCourseCreate, StudentCourse, StudentCourseSearch</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentCourseService</span>:</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">add_student_course</span>(<span class="params">student_course: StudentCourseCreate, db_session: Session</span>):</span><br><span class="line">        query = select(StudentCourse).where(</span><br><span class="line">            and_(StudentCourse.studentId == student_course.studentId,</span><br><span class="line">                 StudentCourse.courseId == student_course.courseId))</span><br><span class="line">        exist_student_course: StudentCourse = db_session.execute(query).scalar()</span><br><span class="line">        <span class="keyword">if</span> exist_student_course:</span><br><span class="line">            <span class="keyword">raise</span> StudentCourseExistException(<span class="string">&quot;课程已选过&quot;</span>)</span><br><span class="line">        new_student_course = StudentCourse()</span><br><span class="line">        set_attrs(new_student_course, jsonable_encoder(student_course))</span><br><span class="line">        db_session.add(new_student_course)</span><br><span class="line">        db_session.commit()</span><br><span class="line">        <span class="keyword">return</span> new_student_course</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">select_page</span>(<span class="params">student_course_search: StudentCourseSearch, db_session: Session</span>):</span><br><span class="line">        query = select(StudentCourse, Student).join(StudentCourse.student).order_by(asc(StudentCourse.<span class="built_in">id</span>))</span><br><span class="line">        <span class="keyword">if</span> student_course_search.name:</span><br><span class="line">            query = query.where(StudentCourse.name.like(<span class="string">f&quot;%<span class="subst">&#123;student_course_search.name&#125;</span>%&quot;</span>))</span><br><span class="line">        <span class="keyword">if</span> student_course_search.number:</span><br><span class="line">            query = query.where(StudentCourse.number.like(<span class="string">f&quot;%<span class="subst">&#123;student_course_search.number&#125;</span>%&quot;</span>))</span><br><span class="line">        <span class="keyword">if</span> student_course_search.studentId:</span><br><span class="line">            query = query.where(StudentCourse.studentId == student_course_search.studentId)</span><br><span class="line">        result = db_session.execute(query).scalars().<span class="built_in">all</span>()</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">delete_by_id</span>(<span class="params"><span class="built_in">id</span>, db_session</span>):</span><br><span class="line">        exist_student_course: StudentCourse = check_student_course_exist(<span class="built_in">id</span>, db_session)</span><br><span class="line">        db_session.delete(exist_student_course)</span><br><span class="line">        db_session.commit()</span><br><span class="line">        <span class="keyword">return</span> exist_student_course</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check_student_course_exist</span>(<span class="params">student_course_id: <span class="built_in">int</span>, db_session: Session</span>):</span><br><span class="line">    query = select(StudentCourse).where(StudentCourse.<span class="built_in">id</span> == student_course_id)</span><br><span class="line">    exist_student_course: StudentCourse = db_session.execute(query).scalar()</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> exist_student_course:</span><br><span class="line">        <span class="keyword">raise</span> StudentCourseNotExistException(<span class="string">&quot;选课记录不存在&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> exist_student_course</span><br></pre></td></tr></table></figure><p>这种写法很冗余，大家自己想想可以怎么优化，我就不改了，或者后面有空改</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UserNotFoundException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UserExistException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PasswordNotMatchException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TokenException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseExistException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseNotExistException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">FileNotFoundException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentCourseExistException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentCourseNotExistException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi.encoders <span class="keyword">import</span> jsonable_encoder</span><br><span class="line"><span class="keyword">from</span> starlette.responses <span class="keyword">import</span> JSONResponse</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> Request</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> Result</span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> UserNotFoundException, PasswordNotMatchException, TokenException, \</span><br><span class="line">    CourseExistException, CourseNotExistException, UserExistException, FileNotFoundException, \</span><br><span class="line">    StudentCourseExistException, StudentCourseNotExistException</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">Exception</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">exception_handler</span>(<span class="params">request: Request, exc: Exception</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;500&quot;</span>, msg=<span class="built_in">str</span>(exc))</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">500</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">UserNotFoundException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">user_not_fount_exception_handler</span>(<span class="params">request: Request, exc: UserNotFoundException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;404&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">404</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">PasswordNotMatchException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">password_not_fount_exception_handler</span>(<span class="params">request: Request, exc: PasswordNotMatchException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;401&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">401</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">TokenException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">token_exception_handler</span>(<span class="params">request: Request, exc: TokenException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;401&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">401</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">CourseExistException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">course_exist_exception_handler</span>(<span class="params">request: Request, exc: CourseExistException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;400&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">400</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">CourseNotExistException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">course_not_exist_exception_handler</span>(<span class="params">request: Request, exc: CourseNotExistException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;404&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">404</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">UserExistException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">user_exist_exception_handler</span>(<span class="params">request: Request, exc: UserExistException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;400&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">400</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">FileNotFoundException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">file_not_found_exception_handler</span>(<span class="params">request: Request, exc: FileNotFoundException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;404&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">404</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">StudentCourseExistException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">student_course_exist_exception_handler</span>(<span class="params">request: Request, exc: StudentCourseExistException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;400&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">400</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">StudentCourseNotExistException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">student_course_not_exist_exception_handler</span>(<span class="params">request: Request, exc: StudentCourseNotExistException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;404&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">404</span>, content=jsonable_encoder(result))</span><br></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>管理员删除</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710667558071-b682345f-f090-48e5-9525-c8457b288a29.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710667586667-08596238-c09f-4451-87ab-d7e2916f3641.png"></p><p>学生自己删除</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710667608790-265986c5-0fc2-436f-b690-f6c20b7fd3ce.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710667626926-b7a0eb77-cc59-47cb-a367-70740cd6d6a1.png"></p><hr><blockquote><p>更新: 2024-05-26 18:51:54<br>原文: <a href="https://www.yuque.com/zacharyblock/iacda/hyi625azhg5dant9">https://www.yuque.com/zacharyblock/iacda/hyi625azhg5dant9</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;学生选课功能&quot;&gt;&lt;a href=&quot;#学生选课功能&quot; class=&quot;headerlink&quot; title=&quot;学生选课功能&quot;&gt;&lt;/a&gt;学生选课功能&lt;/h1&gt;&lt;h1 id=&quot;学生选课功能-1&quot;&gt;&lt;a href=&quot;#学生选课功能-1&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    <category term="FastAPI入门" scheme="https://blockzachary.github.io/categories/FastAPI%E5%85%A5%E9%97%A8/"/>
    
    
    <category term="Python" scheme="https://blockzachary.github.io/tags/Python/"/>
    
    <category term="Vue3" scheme="https://blockzachary.github.io/tags/Vue3/"/>
    
    <category term="FastAPI" scheme="https://blockzachary.github.io/tags/FastAPI/"/>
    
    <category term="实战" scheme="https://blockzachary.github.io/tags/%E5%AE%9E%E6%88%98/"/>
    
  </entry>
  
  <entry>
    <title>个人页面</title>
    <link href="https://blockzachary.github.io/2024/05/23/FastAPI%E5%85%A5%E9%97%A8/%E4%B8%AA%E4%BA%BA%E9%A1%B5%E9%9D%A2/"/>
    <id>https://blockzachary.github.io/2024/05/23/FastAPI%E5%85%A5%E9%97%A8/%E4%B8%AA%E4%BA%BA%E9%A1%B5%E9%9D%A2/</id>
    <published>2024-05-23T04:41:00.000Z</published>
    <updated>2024-05-23T04:41:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="个人页面"><a href="#个人页面" class="headerlink" title="个人页面"></a>个人页面</h1><h2 id="文件上传与下载"><a href="#文件上传与下载" class="headerlink" title="文件上传与下载"></a>文件上传与下载</h2><h3 id="依赖包"><a href="#依赖包" class="headerlink" title="依赖包"></a>依赖包</h3><p>需要安装一下<code>werkzeug</code>这个包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">fastapi[all]</span><br><span class="line">mysqlclient==2.1.1</span><br><span class="line">SQLAlchemy==2.0.23</span><br><span class="line">pyjwt</span><br><span class="line">passlib[bcrypt]</span><br><span class="line">werkzeug</span><br></pre></td></tr></table></figure><h3 id="fileApi"><a href="#fileApi" class="headerlink" title="fileApi"></a>fileApi</h3><p>为了实现头像上传的功能创建一个新的<code>fileApi.py</code></p><p>注意：</p><ul><li>StreamingResponse 引得是<code>from fastapi.responses import StreamingResponse</code></li><li>secure_filename 引得是<code>from werkzeug.utils import secure_filename</code></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">import</span> mimetypes</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">from</span> fastapi.encoders <span class="keyword">import</span> jsonable_encoder</span><br><span class="line"><span class="keyword">from</span> werkzeug.utils <span class="keyword">import</span> secure_filename</span><br><span class="line"><span class="keyword">from</span> fastapi.responses <span class="keyword">import</span> StreamingResponse</span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> APIRouter, UploadFile</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> common.constant <span class="keyword">import</span> HOST, PORT</span><br><span class="line"><span class="keyword">from</span> common.profile <span class="keyword">import</span> Profile</span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> ResultModel, Result</span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> FileNotFoundException</span><br><span class="line"></span><br><span class="line">file_router = APIRouter(prefix=<span class="string">&quot;/files&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@file_router.post(<span class="params"><span class="string">&quot;/upload&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">upload</span>(<span class="params">file: UploadFile</span>):</span><br><span class="line">    original_filename = secure_filename(file.filename)</span><br><span class="line">    timestamp = <span class="built_in">int</span>(datetime.now().timestamp())</span><br><span class="line">    unique_filename = <span class="string">f&quot;<span class="subst">&#123;timestamp&#125;</span>_<span class="subst">&#123;original_filename&#125;</span>&quot;</span></span><br><span class="line">    file_save_path = Profile.get_files_path()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 创建保存文件的完整路径</span></span><br><span class="line">    file_final_path = file_save_path.joinpath(unique_filename)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将文件保存到指定位置</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(file_final_path, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> buffer_file:</span><br><span class="line">        content = <span class="keyword">await</span> file.read()</span><br><span class="line">        buffer_file.write(content)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 构建文件访问URL</span></span><br><span class="line">    url = <span class="string">f&quot;http://<span class="subst">&#123;HOST&#125;</span>:<span class="subst">&#123;PORT&#125;</span>/files/download?filename=<span class="subst">&#123;unique_filename&#125;</span>&quot;</span></span><br><span class="line">    <span class="keyword">return</span> Result.success(jsonable_encoder(&#123;<span class="string">&quot;url&quot;</span>: url&#125;))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@file_router.get(<span class="params"><span class="string">&quot;/download&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">download</span>(<span class="params">filename: <span class="built_in">str</span></span>):</span><br><span class="line">    file_save_path = Profile.get_files_path()</span><br><span class="line">    file_path = file_save_path.joinpath(filename)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> file_path.exists():</span><br><span class="line">        <span class="keyword">raise</span> FileNotFoundException(<span class="string">&quot;文件不存在&quot;</span>)</span><br><span class="line">    <span class="comment"># 用于触发下载文件的</span></span><br><span class="line">    <span class="comment"># return FileResponse(file_path, media_type=&#x27;image/png&#x27;, filename=filename)</span></span><br><span class="line"></span><br><span class="line">    mime_type, _ = mimetypes.guess_type(file_path)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 创建一个StreamingResponse，以便流式传输大文件，同时设置正确的MIME类型</span></span><br><span class="line">    response = StreamingResponse(</span><br><span class="line">        <span class="built_in">open</span>(file_path, <span class="string">&#x27;rb&#x27;</span>),</span><br><span class="line">        media_type=mime_type,</span><br><span class="line">    )</span><br><span class="line">    <span class="comment"># 不设置Content-Disposition，避免浏览器触发下载</span></span><br><span class="line">    <span class="keyword">return</span> response</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.include_router(file_router)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> FastAPI</span><br><span class="line"><span class="keyword">from</span> starlette.middleware.cors <span class="keyword">import</span> CORSMiddleware</span><br><span class="line"></span><br><span class="line">app = FastAPI()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 跨域问题</span></span><br><span class="line">origins = [<span class="string">&quot;http://localhost:5173&quot;</span>, <span class="string">&quot;http://127.0.0.1:5173&quot;</span>]  <span class="comment"># 替换为你的前端应用的实际地址</span></span><br><span class="line"></span><br><span class="line">app.add_middleware(</span><br><span class="line">    CORSMiddleware,</span><br><span class="line">    allow_origins=origins,  <span class="comment"># 允许跨域访问的来源域名列表</span></span><br><span class="line">    allow_credentials=<span class="literal">True</span>,  <span class="comment"># 是否允许携带cookie</span></span><br><span class="line">    allow_methods=[<span class="string">&quot;*&quot;</span>],  <span class="comment"># 允许的方法，默认包含常见的GET、POST等，&quot;*&quot;表示所有方法</span></span><br><span class="line">    allow_headers=[<span class="string">&quot;*&quot;</span>],  <span class="comment"># 允许的请求头，默认包含常见的Content-Type等，&quot;*&quot;表示所有请求头</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> adminApi, exceptionHandler, courseApi, studentApi, fileApi</span><br></pre></td></tr></table></figure><h3 id="Profile"><a href="#Profile" class="headerlink" title="Profile"></a>Profile</h3><p>在项目目录<code>/common</code>下创建一个<code>profile.py</code>，用于获取项目目录路径</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pathlib <span class="keyword">import</span> Path</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Profile</span>:</span><br><span class="line">    __file_path = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_files_path</span>():</span><br><span class="line">        project_path = Path(__file__).parent.parent  <span class="comment"># 获取项目根目录</span></span><br><span class="line">        file_path = project_path.joinpath(<span class="string">&quot;files&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> file_path.exists():</span><br><span class="line">            file_path.mkdir(parents=<span class="literal">True</span>)</span><br><span class="line">        Profile.__file_path = file_path</span><br><span class="line">        <span class="keyword">return</span> file_path</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="自定义异常"><a href="#自定义异常" class="headerlink" title="自定义异常"></a>自定义异常</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UserNotFoundException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UserExistException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PasswordNotMatchException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TokenException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseExistException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseNotExistException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">FileNotFoundException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi.encoders <span class="keyword">import</span> jsonable_encoder</span><br><span class="line"><span class="keyword">from</span> starlette.responses <span class="keyword">import</span> JSONResponse</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> Request</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> Result</span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> UserNotFoundException, PasswordNotMatchException, TokenException, \</span><br><span class="line">    CourseExistException, CourseNotExistException, UserExistException, FileNotFoundException</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">Exception</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">exception_handler</span>(<span class="params">request: Request, exc: Exception</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;500&quot;</span>, msg=<span class="built_in">str</span>(exc))</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">500</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">UserNotFoundException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">user_not_fount_exception_handler</span>(<span class="params">request: Request, exc: UserNotFoundException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;404&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">404</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">PasswordNotMatchException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">password_not_fount_exception_handler</span>(<span class="params">request: Request, exc: PasswordNotMatchException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;401&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">401</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">TokenException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">token_exception_handler</span>(<span class="params">request: Request, exc: TokenException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;401&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">401</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">CourseExistException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">course_exist_exception_handler</span>(<span class="params">request: Request, exc: CourseExistException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;400&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">400</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">CourseNotExistException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">course_not_exist_exception_handler</span>(<span class="params">request: Request, exc: CourseNotExistException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;404&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">404</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">UserExistException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">user_exist_exception_handler</span>(<span class="params">request: Request, exc: UserExistException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;400&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">400</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">FileNotFoundException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">file_not_found_exception_handler</span>(<span class="params">request: Request, exc: FileNotFoundException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;404&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">404</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>使用 postman 测试一下</p><h4 id="上传"><a href="#上传" class="headerlink" title="上传"></a>上传</h4><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710616492511-d448efde-cc0e-4231-925e-d04f54841c77.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710616565148-33a0b257-5782-41fb-8100-e9c5ccfeab65.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710616639614-cc34bcbc-102d-4887-9134-35122935f222.png"></p><h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710616608908-20c654d8-30b2-4645-aea1-490ab9428df0.png"></p><h2 id="完善图片上传"><a href="#完善图片上传" class="headerlink" title="完善图片上传"></a>完善图片上传</h2><p>修改一下<code>Student.vue</code>头像上传的功能</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.username&quot;</span><br><span class="line">        placeholder=&quot;请输入要查询的学生学号&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;margin-left:10px; width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.name&quot;</span><br><span class="line">        placeholder=&quot;请输入要查询的学生姓名&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-button type=&quot;info&quot; plain style=&quot;margin: 0 0 0 10px&quot; @click=&quot;reset&quot;</span><br><span class="line">        &gt;重置&lt;/el-button</span><br><span class="line">      &gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-button</span><br><span class="line">          type=&quot;primary&quot;</span><br><span class="line">          style=&quot;margin-bottom: 5px&quot;</span><br><span class="line">          plain</span><br><span class="line">          @click=&quot;handleAdd&quot;</span><br><span class="line">          &gt;新增&lt;/el-button</span><br><span class="line">        &gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-table :data=&quot;data.tableData&quot; stripe style=&quot;width: 100%&quot;&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;id&quot; label=&quot;ID&quot; width=&quot;80&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;username&quot; label=&quot;学生学号&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;name&quot; label=&quot;学生姓名&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;gender&quot; label=&quot;性别&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;phone&quot; label=&quot;手机号&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;birthday&quot; label=&quot;出生日期&quot; /&gt;</span><br><span class="line"></span><br><span class="line">          &lt;el-table-column prop=&quot;avatar&quot; label=&quot;头像&quot;&gt;</span><br><span class="line">            &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">              &lt;el-image</span><br><span class="line">                v-if=&quot;scope.row.avatar&quot;</span><br><span class="line">                :src=&quot;scope.row.avatar&quot;</span><br><span class="line">                :preview-src-list=&quot;[scope.row.avatar]&quot;</span><br><span class="line">                style=&quot;width: 40px; height: 40px&quot;</span><br><span class="line">              &gt;&lt;/el-image&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">          &lt;/el-table-column&gt;</span><br><span class="line"></span><br><span class="line">          &lt;el-table-column label=&quot;操作&quot; align=&quot;center&quot;&gt;</span><br><span class="line">            &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">              &lt;el-button</span><br><span class="line">                type=&quot;primary&quot;</span><br><span class="line">                size=&quot;small&quot;</span><br><span class="line">                plain</span><br><span class="line">                @click=&quot;handleEdit(scope.row)&quot;</span><br><span class="line">                &gt;编辑&lt;/el-button</span><br><span class="line">              &gt;</span><br><span class="line">              &lt;el-button</span><br><span class="line">                type=&quot;danger&quot;</span><br><span class="line">                size=&quot;small&quot;</span><br><span class="line">                plain</span><br><span class="line">                @click=&quot;handleDelete(scope.row.id)&quot;</span><br><span class="line">                &gt;删除&lt;/el-button</span><br><span class="line">              &gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">          &lt;/el-table-column&gt;</span><br><span class="line">        &lt;/el-table&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot;&gt;</span><br><span class="line">      &lt;el-pagination</span><br><span class="line">        v-model:current-page=&quot;data.pageNum&quot;</span><br><span class="line">        v-model:page-size=&quot;data.pageSize&quot;</span><br><span class="line">        @current-change=&quot;handleCurrentChange&quot;</span><br><span class="line">        background</span><br><span class="line">        layout=&quot;prev, pager, next&quot;</span><br><span class="line">        :total=&quot;data.total&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;el-dialog width=&quot;35%&quot; v-model=&quot;data.formVisible&quot; title=&quot;学生信息&quot;&gt;</span><br><span class="line">      &lt;el-form</span><br><span class="line">        :model=&quot;data.form&quot;</span><br><span class="line">        :rules=&quot;rules&quot;</span><br><span class="line">        ref=&quot;formRef&quot;</span><br><span class="line">        label-width=&quot;100px&quot;</span><br><span class="line">        label-position=&quot;right&quot;</span><br><span class="line">        style=&quot;padding-right: 45px&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;el-form-item label=&quot;学生学号&quot; prop=&quot;username&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.username&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;密码&quot; prop=&quot;password&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.password&quot; autocomplete=&quot;off&quot; disabled /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;学生姓名&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.name&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;性别&quot;&gt;</span><br><span class="line">          &lt;el-radio-group v-model=&quot;data.form.gender&quot;&gt;</span><br><span class="line">            &lt;el-radio label=&quot;男&quot;&gt;&lt;/el-radio&gt;</span><br><span class="line">            &lt;el-radio label=&quot;女&quot;&gt;&lt;/el-radio&gt;</span><br><span class="line">          &lt;/el-radio-group&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;手机号&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.phone&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;出生日期&quot;&gt;</span><br><span class="line">          &lt;el-date-picker</span><br><span class="line">            format=&quot;YYYY-MM-DD&quot;</span><br><span class="line">            value-format=&quot;YYYY-MM-DD&quot;</span><br><span class="line">            v-model=&quot;data.form.birthday&quot;</span><br><span class="line">          &gt;&lt;/el-date-picker&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;头像&quot;&gt;</span><br><span class="line">          &lt;el-upload</span><br><span class="line">            action=&quot;http://localhost:9090/files/upload&quot;</span><br><span class="line">            list-type=&quot;picture&quot;</span><br><span class="line">            :on-success=&quot;handleImgUploadSuccess&quot;</span><br><span class="line">          &gt;</span><br><span class="line">            &lt;el-button type=&quot;primary&quot;&gt;上传头像 &lt;/el-button&gt;</span><br><span class="line">          &lt;/el-upload&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">      &lt;/el-form&gt;</span><br><span class="line">      &lt;template #footer&gt;</span><br><span class="line">        &lt;span class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">          &lt;el-button @click=&quot;data.formVisible = false&quot; plain&gt;取消&lt;/el-button&gt;</span><br><span class="line">          &lt;el-button type=&quot;primary&quot; @click=&quot;save&quot; plain&gt;保存&lt;/el-button&gt;</span><br><span class="line">        &lt;/span&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line">    &lt;/el-dialog&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; reactive, ref &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; Search &#125; from &quot;@element-plus/icons-vue&quot;;</span><br><span class="line">import request from &quot;@/utils/request&quot;;</span><br><span class="line">import &#123; ElMessage, ElMessageBox &#125; from &quot;element-plus&quot;;</span><br><span class="line"></span><br><span class="line">const data = reactive(&#123;</span><br><span class="line">  username: &quot;&quot;,</span><br><span class="line">  name: &quot;&quot;,</span><br><span class="line">  tableData: [],</span><br><span class="line">  total: 0,</span><br><span class="line">  pageNum: 1,</span><br><span class="line">  pageSize: 5,</span><br><span class="line">  formVisible: false,</span><br><span class="line">  form: &#123; password: &quot;123456&quot; &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const load = () =&gt; &#123;</span><br><span class="line">  request</span><br><span class="line">    .get(&quot;/student/selectPage&quot;, &#123;</span><br><span class="line">      params: &#123;</span><br><span class="line">        pageNum: data.pageNum,</span><br><span class="line">        pageSize: data.pageSize,</span><br><span class="line">        username: data.username,</span><br><span class="line">        name: data.name,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">        data.tableData = res.data?.list || [];</span><br><span class="line">        data.total = res.data?.total || 0;</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        ElMessage.error(res.msg);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">        localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 加载一次 获取课程数据</span><br><span class="line">load();</span><br><span class="line"></span><br><span class="line">const handleCurrentChange = () =&gt; &#123;</span><br><span class="line">  // 当翻页的时候重新加载数据</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const reset = () =&gt; &#123;</span><br><span class="line">  data.username = &quot;&quot;;</span><br><span class="line">  data.name = &quot;&quot;;</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const rules = reactive(&#123;</span><br><span class="line">  username: [&#123; required: true, message: &quot;请输入学生学号&quot;, trigger: &quot;blur&quot; &#125;],</span><br><span class="line">  password: [&#123; required: true, message: &quot;请输入密码&quot;, trigger: &quot;blur&quot; &#125;],</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const formRef = ref();</span><br><span class="line"></span><br><span class="line">const handleAdd = () =&gt; &#123;</span><br><span class="line">  data.formVisible = true;</span><br><span class="line">  data.form = &#123; password: &quot;123456&quot; &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const save = () =&gt; &#123;</span><br><span class="line">  formRef.value.validate((valid) =&gt; &#123;</span><br><span class="line">    if (valid) &#123;</span><br><span class="line">      request</span><br><span class="line">        .request(&#123;</span><br><span class="line">          url: data.form.id ? &quot;/student/update&quot; : &quot;/student/add&quot;,</span><br><span class="line">          method: data.form.id ? &quot;put&quot; : &quot;post&quot;,</span><br><span class="line">          data: data.form,</span><br><span class="line">        &#125;)</span><br><span class="line">        .then((res) =&gt; &#123;</span><br><span class="line">          if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">            ElMessage.success(&quot;操作成功&quot;);</span><br><span class="line">            data.formVisible = false;</span><br><span class="line">            load();</span><br><span class="line">          &#125; else &#123;</span><br><span class="line">            ElMessage.error(res.msg);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch((err) =&gt; &#123;</span><br><span class="line">          if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">            localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">          &#125;</span><br><span class="line">          ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const handleEdit = (row) =&gt; &#123;</span><br><span class="line">  data.form = JSON.parse(JSON.stringify(row));</span><br><span class="line">  data.formVisible = true;</span><br><span class="line">  data.form.password = &quot;123456&quot;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const handleDelete = (id) =&gt; &#123;</span><br><span class="line">  ElMessageBox.confirm(&quot;删除后内容将无法恢复，您确认删除嘛？&quot;, &quot;删除确认&quot;, &#123;</span><br><span class="line">    type: &quot;warning&quot;,</span><br><span class="line">  &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      request.delete(&quot;/student/delete/&quot; + id).then((res) =&gt; &#123;</span><br><span class="line">        if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">          ElMessage.success(&quot;删除成功&quot;);</span><br><span class="line">          load();</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          ElMessage.error(res.msg);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">        localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const handleImgUploadSuccess = (res) =&gt; &#123;</span><br><span class="line">  data.form.avatar = res.data.url;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710617080504-595e3da2-e366-40a1-8c95-11cf4ac4715a.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710617244456-eed99781-03fc-4a41-94fe-1ac67ea49a5c.png"></p><h2 id="个人资料"><a href="#个人资料" class="headerlink" title="个人资料"></a>个人资料</h2><p>在项目目录<code>/manager</code>文件夹下面创建一个<code>Person.vue</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;width: 50%; padding: 40px&quot;&gt;</span><br><span class="line">      &lt;el-form</span><br><span class="line">        :model=&quot;data.form&quot;</span><br><span class="line">        ref=&quot;formRef&quot;</span><br><span class="line">        :rules=&quot;rules&quot;</span><br><span class="line">        label-width=&quot;100px&quot;</span><br><span class="line">        label-position=&quot;right&quot;</span><br><span class="line">        style=&quot;padding-right: 40px&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;el-form-item label=&quot;头像&quot;&gt;</span><br><span class="line">          &lt;el-upload</span><br><span class="line">            class=&quot;avatar-uploader&quot;</span><br><span class="line">            action=&quot;http://localhost:9090/files/upload&quot;</span><br><span class="line">            :show-file-list=&quot;false&quot;</span><br><span class="line">            :on-success=&quot;handleImgUploadSuccess&quot;</span><br><span class="line">          &gt;</span><br><span class="line">            &lt;img</span><br><span class="line">              v-if=&quot;data.form.avatar&quot;</span><br><span class="line">              :src=&quot;data.form.avatar&quot;</span><br><span class="line">              class=&quot;avatar&quot;</span><br><span class="line">            /&gt;</span><br><span class="line">            &lt;el-icon v-else class=&quot;avatar-uploader-icon&quot;&gt;</span><br><span class="line">              &lt;Plus /&gt;</span><br><span class="line">            &lt;/el-icon&gt;</span><br><span class="line">          &lt;/el-upload&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;学生学号&quot; prop=&quot;username&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.username&quot; autocomplete=&quot;off&quot; disabled /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;密码&quot; prop=&quot;password&quot;&gt;</span><br><span class="line">          &lt;el-input</span><br><span class="line">            show-password</span><br><span class="line">            v-model=&quot;data.form.password&quot;</span><br><span class="line">            autocomplete=&quot;off&quot;</span><br><span class="line">          /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;学生姓名&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.name&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;性别&quot;&gt;</span><br><span class="line">          &lt;el-radio-group v-model=&quot;data.form.gender&quot;&gt;</span><br><span class="line">            &lt;el-radio label=&quot;男&quot;&gt;&lt;/el-radio&gt;</span><br><span class="line">            &lt;el-radio label=&quot;女&quot;&gt;&lt;/el-radio&gt;</span><br><span class="line">          &lt;/el-radio-group&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;手机号&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.phone&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;出生日期&quot;&gt;</span><br><span class="line">          &lt;el-date-picker</span><br><span class="line">            format=&quot;YYYY-MM-DD&quot;</span><br><span class="line">            value-format=&quot;YYYY-MM-DD&quot;</span><br><span class="line">            v-model=&quot;data.form.birthday&quot;</span><br><span class="line">          &gt;&lt;/el-date-picker&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item style=&quot;padding-left: 60%&quot;&gt;</span><br><span class="line">          &lt;el-button type=&quot;primary&quot; @click=&quot;update&quot;&gt;保存&lt;/el-button&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">      &lt;/el-form&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; ref, reactive &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; Plus &#125; from &quot;@element-plus/icons-vue&quot;;</span><br><span class="line">import request from &quot;@/utils/request&quot;;</span><br><span class="line">import &#123; ElMessage &#125; from &quot;element-plus&quot;;</span><br><span class="line">import router from &quot;@/router&quot;;</span><br><span class="line"></span><br><span class="line">const data = reactive(&#123;</span><br><span class="line">  form: JSON.parse(localStorage.getItem(&quot;student-user&quot;) || &quot;&#123;&#125;&quot;),</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">if (data.form) &#123;</span><br><span class="line">  data.form.password = &quot;&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const rules = reactive(&#123;</span><br><span class="line">  username: [&#123; required: true, message: &quot;请输入账号&quot;, trigger: &quot;blur&quot; &#125;],</span><br><span class="line">  password: [</span><br><span class="line">    &#123;</span><br><span class="line">      required: true,</span><br><span class="line">      message: &quot;修改个人资料必须重新输入密码&quot;,</span><br><span class="line">      trigger: &quot;blur&quot;,</span><br><span class="line">    &#125;,</span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const update = () =&gt; &#123;</span><br><span class="line">  request</span><br><span class="line">    .put(&quot;/student/update&quot;, data.form)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">        ElMessage.success(&quot;操作成功&quot;);</span><br><span class="line">        router.push(&quot;/login&quot;);</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        ElMessage.error(res.msg);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const handleImgUploadSuccess = (res) =&gt; &#123;</span><br><span class="line">  data.form.avatar = res.data;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">.avatar-uploader .el-upload &#123;</span><br><span class="line">  border: 1px dashed #d9d9d9;</span><br><span class="line">  border-radius: 6px;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">  position: relative;</span><br><span class="line">  overflow: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.avatar-uploader .el-upload:hover &#123;</span><br><span class="line">  border-color: #409eff;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.el-icon.avatar-uploader-icon &#123;</span><br><span class="line">  font-size: 28px;</span><br><span class="line">  color: #8c939d;</span><br><span class="line">  width: 100px;</span><br><span class="line">  height: 100px;</span><br><span class="line">  line-height: 100px;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.avatar &#123;</span><br><span class="line">  width: 100px;</span><br><span class="line">  height: 100px;</span><br><span class="line">  display: block;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHistory &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">history</span>: <span class="title function_">createWebHistory</span>(<span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">env</span>.<span class="property">BASE_URL</span>),</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;Manager&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/Manager.vue&quot;</span>),</span><br><span class="line">      <span class="attr">redirect</span>: <span class="string">&quot;/home&quot;</span>,</span><br><span class="line">      <span class="attr">children</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;home&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Home&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Home.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;course&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Course&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Course.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;student&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Student&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Student.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;person&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Person&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Person.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">      ],</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/login&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;Login&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/Login.vue&quot;</span>),</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/register&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;Register&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/Register.vue&quot;</span>),</span><br><span class="line">    &#125;,</span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">beforeEach</span>(<span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> requiresAuth = to.<span class="property">matched</span>.<span class="title function_">some</span>(<span class="function">(<span class="params">record</span>) =&gt;</span> record.<span class="property">meta</span>.<span class="property">requiresAuth</span>);</span><br><span class="line">  <span class="keyword">const</span> user = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;student-user&quot;</span>));</span><br><span class="line">  <span class="keyword">if</span> (requiresAuth &amp;&amp; !user) &#123;</span><br><span class="line">    <span class="comment">// 如果目标路由需要认证,并且用户未登录</span></span><br><span class="line">    <span class="title function_">next</span>(<span class="string">&quot;/login&quot;</span>); <span class="comment">// 跳转到登录页面</span></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">next</span>(); <span class="comment">// 如果目标路由不需要认证,或者用户已登录,则正常导航到目标路由</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div</span><br><span class="line">      style=&quot;height: 60px; background-color: #eae8e8; display: flex; align-items: center; border-bottom: 1px solid #c4c2c2&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;div style=&quot;flex: 1&quot;&gt;</span><br><span class="line">        &lt;div style=&quot;padding-left: 20px; display: flex; align-items: center&quot;&gt;</span><br><span class="line">          &lt;img src=&quot;@/assets/imgs/logo.png&quot; alt=&quot;&quot; style=&quot;width: 40px&quot; /&gt;</span><br><span class="line">          &lt;div style=&quot;font-weight: bold; font-size: 24px; margin-left: 5px&quot;&gt;</span><br><span class="line">            学生信息管理系统</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        style=&quot;width: fit-content; padding-right: 10px; display: flex; align-items: center;&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;img</span><br><span class="line">          :src=&quot;</span><br><span class="line">            user.avatar ||</span><br><span class="line">            &#x27;https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png&#x27;</span><br><span class="line">          &quot;</span><br><span class="line">          alt=&quot;&quot;</span><br><span class="line">          style=&quot;width: 40px; height: 40px; border-radius: 50%&quot;</span><br><span class="line">        /&gt;</span><br><span class="line">        &lt;span style=&quot;margin-left: 5px&quot;&gt;&#123;&#123; user.name &#125;&#125;&lt;/span&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div style=&quot;display: flex&quot;&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        style=&quot;width: 200px; border-right: 1px solid #f3eeee; min-height: calc(100vh - 60px)&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;el-menu</span><br><span class="line">          router</span><br><span class="line">          style=&quot;border: none&quot;</span><br><span class="line">          :default-active=&quot;$route.path&quot;</span><br><span class="line">          :default-openeds=&quot;[&#x27;/home&#x27;, &#x27;2&#x27;, &#x27;3&#x27;]&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          &lt;el-menu-item index=&quot;/home&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;</span><br><span class="line">              &lt;HomeFilled /&gt;</span><br><span class="line">            &lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;系统首页&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line"></span><br><span class="line">          &lt;el-sub-menu index=&quot;2&quot; v-if=&quot;user.role === &#x27;ADMIN&#x27;&quot;&gt;</span><br><span class="line">            &lt;template #title&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;Management /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;学生管理&lt;/span&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">            &lt;el-menu-item index=&quot;/student&quot;&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;UserFilled /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;学生信息&lt;/span&gt;</span><br><span class="line">            &lt;/el-menu-item&gt;</span><br><span class="line">          &lt;/el-sub-menu&gt;</span><br><span class="line"></span><br><span class="line">          &lt;el-sub-menu index=&quot;3&quot; v-if=&quot;user.role === &#x27;ADMIN&#x27;&quot;&gt;</span><br><span class="line">            &lt;template #title&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;Memo /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;课程管理&lt;/span&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">            &lt;el-menu-item index=&quot;/course&quot;&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;Document /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;课程信息&lt;/span&gt;</span><br><span class="line">            &lt;/el-menu-item&gt;</span><br><span class="line">          &lt;/el-sub-menu&gt;</span><br><span class="line"></span><br><span class="line">          &lt;el-menu-item index=&quot;/person&quot; v-if=&quot;user.role === &#x27;STUDENT&#x27;&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;</span><br><span class="line">              &lt;User /&gt;</span><br><span class="line">            &lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;个人资料&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line">          &lt;el-menu-item index=&quot;/login&quot; @click=&quot;logout&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;</span><br><span class="line">              &lt;SwitchButton /&gt;</span><br><span class="line">            &lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;退出系统&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line">        &lt;/el-menu&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">      &lt;div style=&quot;flex: 1; width: 0; background-color: #eaeaee; padding: 10px&quot;&gt;</span><br><span class="line">        &lt;router-view /&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; useRoute &#125; from &quot;vue-router&quot;;</span><br><span class="line"></span><br><span class="line">const $route = useRoute();</span><br><span class="line">console.log($route.path);</span><br><span class="line"></span><br><span class="line">const logout = () =&gt; &#123;</span><br><span class="line">  localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const user = JSON.parse(localStorage.getItem(&quot;student-user&quot;) || &quot;&#123;&#125;&quot;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.el-menu-item.is-active &#123;</span><br><span class="line">  background-color: #c3d7d3 !important;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.el-menu-item:hover &#123;</span><br><span class="line">  color: #0c98d5;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">:deep(th) &#123;</span><br><span class="line">  color: #333;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710617861421-2875f037-9f2c-4363-8e02-c60dc3e8df63.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710619302880-4b22bf47-85be-4ba5-aa25-68c49b706f28.png"></p><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;个人页面&quot;&gt;&lt;a href=&quot;#个人页面&quot; class=&quot;headerlink&quot; title=&quot;个人页面&quot;&gt;&lt;/a&gt;个人页面&lt;/h1&gt;&lt;h2 id=&quot;文件上传与下载&quot;&gt;&lt;a href=&quot;#文件上传与下载&quot; class=&quot;headerlink&quot; title=&quot;文件上</summary>
      
    
    
    
    <category term="FastAPI入门" scheme="https://blockzachary.github.io/categories/FastAPI%E5%85%A5%E9%97%A8/"/>
    
    
    <category term="Python" scheme="https://blockzachary.github.io/tags/Python/"/>
    
    <category term="Vue3" scheme="https://blockzachary.github.io/tags/Vue3/"/>
    
    <category term="FastAPI" scheme="https://blockzachary.github.io/tags/FastAPI/"/>
    
    <category term="实战" scheme="https://blockzachary.github.io/tags/%E5%AE%9E%E6%88%98/"/>
    
  </entry>
  
  <entry>
    <title>学生管理</title>
    <link href="https://blockzachary.github.io/2024/05/20/FastAPI%E5%85%A5%E9%97%A8/%E5%AD%A6%E7%94%9F%E7%AE%A1%E7%90%86/"/>
    <id>https://blockzachary.github.io/2024/05/20/FastAPI%E5%85%A5%E9%97%A8/%E5%AD%A6%E7%94%9F%E7%AE%A1%E7%90%86/</id>
    <published>2024-05-20T00:10:00.000Z</published>
    <updated>2024-05-20T00:10:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="学生管理"><a href="#学生管理" class="headerlink" title="学生管理"></a>学生管理</h1><h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><p>先在数据库中创建一张学生信息表</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710448899467-1a869fa8-d221-4995-a81e-87a7de808e74.png"></p><h2 id="Student-实体类定义"><a href="#Student-实体类定义" class="headerlink" title="Student 实体类定义"></a>Student 实体类定义</h2><p>在<code>/model</code>的包下创建一个<code>student.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> Integer, String</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> Mapped, mapped_column</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Base</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>(<span class="title class_ inherited__">Base</span>):</span><br><span class="line">    __tablename__ = <span class="string">&quot;student&quot;</span></span><br><span class="line">    <span class="built_in">id</span>: Mapped[<span class="built_in">int</span>] = mapped_column(Integer, primary_key=<span class="literal">True</span>, nullable=<span class="literal">False</span>)</span><br><span class="line">    username: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    password: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    name: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    phone: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    gender: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    birthday: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    avatar: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span></span><br></pre></td></tr></table></figure><h2 id="学生登录"><a href="#学生登录" class="headerlink" title="学生登录"></a>学生登录</h2><h3 id="前端-登录页面"><a href="#前端-登录页面" class="headerlink" title="前端-登录页面"></a>前端-登录页面</h3><p>学生登录和 admin 的登录，我们复用同一个前端页面和后端接口，所以需要加一个<code>role</code>用以区分是 admin 登录了还是普通的 student 登录了；同时，不同用户进入页面之后。看到的内容应该是不同的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;login-container&quot;&gt;</span><br><span class="line">      &lt;div style=&quot;width: 420px&quot; class=&quot;login-box&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;title&quot;&gt;学生信息管理系统 - 登录&lt;/div&gt;</span><br><span class="line">        &lt;el-form :model=&quot;data.form&quot; ref=&quot;formRef&quot; :rules=&quot;rules&quot;&gt;</span><br><span class="line">          &lt;el-form-item prop=&quot;username&quot;&gt;</span><br><span class="line">            &lt;el-input</span><br><span class="line">              style=&quot;height: 40px;font-size: 18px&quot;</span><br><span class="line">              prefix-icon=&quot;Avatar&quot;</span><br><span class="line">              v-model=&quot;data.form.username&quot;</span><br><span class="line">              placeholder=&quot;请输入账号&quot;</span><br><span class="line">            /&gt;</span><br><span class="line">          &lt;/el-form-item&gt;</span><br><span class="line">          &lt;el-form-item prop=&quot;password&quot;&gt;</span><br><span class="line">            &lt;el-input</span><br><span class="line">              show-password</span><br><span class="line">              style=&quot;height: 40px;font-size: 18px&quot;</span><br><span class="line">              prefix-icon=&quot;Lock&quot;</span><br><span class="line">              v-model=&quot;data.form.password&quot;</span><br><span class="line">              placeholder=&quot;请输入密码&quot;</span><br><span class="line">            /&gt;</span><br><span class="line">          &lt;/el-form-item&gt;</span><br><span class="line">          &lt;el-form-item prop=&quot;role&quot;&gt;</span><br><span class="line">            &lt;el-radio-group size=&quot;large&quot; v-model=&quot;data.form.role&quot;&gt;</span><br><span class="line">              &lt;el-radio-button</span><br><span class="line">                style=&quot;margin-left: 70px&quot;</span><br><span class="line">                label=&quot;管理员&quot;</span><br><span class="line">                value=&quot;ADMIN&quot;</span><br><span class="line">              /&gt;</span><br><span class="line">              &lt;el-radio-button</span><br><span class="line">                style=&quot;margin-left: 50px&quot;</span><br><span class="line">                label=&quot;学生&quot;</span><br><span class="line">                value=&quot;STUDENT&quot;</span><br><span class="line">              /&gt;</span><br><span class="line">            &lt;/el-radio-group&gt;</span><br><span class="line">          &lt;/el-form-item&gt;</span><br><span class="line">          &lt;el-form-item&gt;</span><br><span class="line">            &lt;el-button</span><br><span class="line">              type=&quot;primary&quot;</span><br><span class="line">              style=&quot;width: 100%;font-size: 18px&quot;</span><br><span class="line">              plain</span><br><span class="line">              @click=&quot;login&quot;</span><br><span class="line">              &gt;登 录&lt;/el-button</span><br><span class="line">            &gt;</span><br><span class="line">          &lt;/el-form-item&gt;</span><br><span class="line">        &lt;/el-form&gt;</span><br><span class="line">        &lt;div style=&quot;margin-top:35px;text-align: right;font-size: 15px&quot;&gt;</span><br><span class="line">          还没有账号？请&lt;a href=&quot;/register&quot;&gt;注册&lt;/a&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; reactive, ref &#125; from &quot;vue&quot;;</span><br><span class="line">import request from &quot;@/utils/request&quot;;</span><br><span class="line">import &#123; ElMessage &#125; from &quot;element-plus&quot;;</span><br><span class="line">import router from &quot;@/router&quot;;</span><br><span class="line"></span><br><span class="line">const data = reactive(&#123;</span><br><span class="line">  form: &#123; role: &quot;ADMIN&quot; &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const rules = reactive(&#123;</span><br><span class="line">  username: [&#123; required: true, message: &quot;请输入账号&quot;, trigger: &quot;blur&quot; &#125;],</span><br><span class="line">  password: [&#123; required: true, message: &quot;请输入密码&quot;, trigger: &quot;blur&quot; &#125;],</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const formRef = ref();</span><br><span class="line"></span><br><span class="line">const login = () =&gt; &#123;</span><br><span class="line">  formRef.value.validate((valid) =&gt; &#123;</span><br><span class="line">    if (valid) &#123;</span><br><span class="line">      request</span><br><span class="line">        .post(&quot;/login&quot;, data.form)</span><br><span class="line">        .then((res) =&gt; &#123;</span><br><span class="line">          if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">            localStorage.setItem(&quot;student-user&quot;, JSON.stringify(res.data));</span><br><span class="line">            ElMessage.success(&quot;登录成功&quot;);</span><br><span class="line">            router.push(&quot;/home&quot;);</span><br><span class="line">          &#125; else &#123;</span><br><span class="line">            ElMessage.error(res.msg);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch((err) =&gt; &#123;</span><br><span class="line">          ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.login-container &#123;</span><br><span class="line">  min-height: 100vh;</span><br><span class="line">  overflow: hidden;</span><br><span class="line">  display: flex;</span><br><span class="line">  align-items: center;</span><br><span class="line">  justify-content: center;</span><br><span class="line">  background-image: url(&quot;@/assets/imgs/login_background.png&quot;);</span><br><span class="line">  background-size: cover;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.login-box &#123;</span><br><span class="line">  background-color: rgb(255, 255, 255, 50%);</span><br><span class="line">  box-shadow: 0 0 10px rgba(84, 221, 245, 0.41);</span><br><span class="line">  padding: 30px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.title &#123;</span><br><span class="line">  font-weight: bold;</span><br><span class="line">  font-size: 30px;</span><br><span class="line">  text-align: center;</span><br><span class="line">  margin-bottom: 35px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710529973649-8285d66a-b8b1-4b28-97fd-7feb1fcf9f0f.png"></p><h3 id="后端-管理员-学生登录的-api-接口"><a href="#后端-管理员-学生登录的-api-接口" class="headerlink" title="后端-管理员&#x2F;学生登录的 api 接口"></a>后端-管理员&#x2F;学生登录的 api 接口</h3><p>管理员和学生的登录复用同一个 api 接口</p><p>所以需要修改一下之前的登录逻辑</p><h4 id="Account"><a href="#Account" class="headerlink" title="Account"></a>Account</h4><p>在<code>/model</code>下创建一个<code>account.py</code>，接收前端传递来的账号、密码、角色</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> pydantic <span class="keyword">import</span> BaseModel</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AccountLogin</span>(<span class="title class_ inherited__">BaseModel</span>):</span><br><span class="line">    username: <span class="built_in">str</span></span><br><span class="line">    password: <span class="built_in">str</span></span><br><span class="line">    role: <span class="built_in">str</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AccountLoginResponse</span>:</span><br><span class="line">    <span class="built_in">id</span>: <span class="built_in">int</span></span><br><span class="line">    username: <span class="built_in">str</span></span><br><span class="line">    name: <span class="built_in">str</span></span><br><span class="line">    role: <span class="built_in">str</span></span><br><span class="line">    token: <span class="built_in">str</span></span><br></pre></td></tr></table></figure><h4 id="Student"><a href="#Student" class="headerlink" title="Student"></a>Student</h4><p>给 student 表追加<code>role</code>字段</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710531077648-4789f2d8-9189-43a5-80bf-1223b30a86c6.png"></p><p>给<code>/model/student.py</code>更新一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> Integer, String</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> Mapped, mapped_column</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Base</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>(<span class="title class_ inherited__">Base</span>):</span><br><span class="line">    __tablename__ = <span class="string">&quot;student&quot;</span></span><br><span class="line">    <span class="built_in">id</span>: Mapped[<span class="built_in">int</span>] = mapped_column(Integer, primary_key=<span class="literal">True</span>, nullable=<span class="literal">False</span>)</span><br><span class="line">    username: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    password: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    name: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    phone: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    gender: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    birthday: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    avatar: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    role: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><h4 id="Admin"><a href="#Admin" class="headerlink" title="Admin"></a>Admin</h4><p>给 admin 表追加<code>name</code>字段和<code>role</code>字段</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710531287748-bbeb3fca-e7a2-4cff-bce6-5e0ce13b2678.png"></p><p>给<code>/model/admin.py</code>更新一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">import</span> bcrypt</span><br><span class="line"><span class="keyword">from</span> pydantic <span class="keyword">import</span> BaseModel</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> Integer, String</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> Mapped, mapped_column</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Base</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Admin</span>(<span class="title class_ inherited__">Base</span>):</span><br><span class="line">    __tablename__ = <span class="string">&quot;admin&quot;</span></span><br><span class="line">    <span class="built_in">id</span>: Mapped[<span class="built_in">int</span>] = mapped_column(Integer, primary_key=<span class="literal">True</span>, nullable=<span class="literal">False</span>)</span><br><span class="line">    username: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    password: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    name: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    role: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AdminModel</span>(<span class="title class_ inherited__">BaseModel</span>):</span><br><span class="line">    username: <span class="built_in">str</span></span><br><span class="line">    password: <span class="built_in">str</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AdminLoginResponse</span>(<span class="title class_ inherited__">BaseModel</span>):</span><br><span class="line">    <span class="built_in">id</span>: <span class="built_in">int</span></span><br><span class="line">    username: <span class="built_in">str</span></span><br><span class="line">    token: <span class="built_in">str</span></span><br></pre></td></tr></table></figure><h4 id="Service"><a href="#Service" class="headerlink" title="Service"></a>Service</h4><p>在项目目录<code>/service</code>下创建一个<code>studentService.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi.encoders <span class="keyword">import</span> jsonable_encoder</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> select</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.auth <span class="keyword">import</span> auth_handler</span><br><span class="line"><span class="keyword">from</span> common.utils <span class="keyword">import</span> set_attrs</span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> UserNotFoundException, PasswordNotMatchException</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session</span><br><span class="line"><span class="keyword">from</span> model.account <span class="keyword">import</span> AccountLogin, AccountLoginResponse</span><br><span class="line"><span class="keyword">from</span> model.student <span class="keyword">import</span> Student</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentService</span>:</span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">login</span>(<span class="params">account: AccountLogin, db_session: Session</span>) -&gt; AccountLoginResponse:</span><br><span class="line">        query = select(Student).where(Student.username == account.username)</span><br><span class="line">        exist_student: Student = db_session.execute(query).scalars().first()</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> exist_student:</span><br><span class="line">            <span class="keyword">raise</span> UserNotFoundException(<span class="string">&quot;用户不存在&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> auth_handler.verify_password(account.password, exist_student.password):</span><br><span class="line">            <span class="keyword">raise</span> PasswordNotMatchException(<span class="string">&quot;身份验证未通过&quot;</span>)</span><br><span class="line">        account_login_response = AccountLoginResponse()</span><br><span class="line">        set_attrs(account_login_response, jsonable_encoder(exist_student))</span><br><span class="line">        account_login_response.token = auth_handler.encode_token(exist_student.<span class="built_in">id</span>)</span><br><span class="line">        <span class="keyword">return</span> account_login_response</span><br></pre></td></tr></table></figure><p>然后修改<code>adminService.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi.encoders <span class="keyword">import</span> jsonable_encoder</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> select</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.auth <span class="keyword">import</span> auth_handler</span><br><span class="line"><span class="keyword">from</span> common.utils <span class="keyword">import</span> set_attrs</span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> UserNotFoundException, PasswordNotMatchException</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session</span><br><span class="line"><span class="keyword">from</span> model.account <span class="keyword">import</span> AccountLoginResponse, AccountLogin</span><br><span class="line"><span class="keyword">from</span> model.admin <span class="keyword">import</span> Admin</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AdminService</span>:</span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">login</span>(<span class="params">account: AccountLogin, db_session: Session</span>) -&gt; AccountLoginResponse:</span><br><span class="line">        query = select(Admin).where(Admin.username == account.username)</span><br><span class="line">        exist_admin: Admin = db_session.execute(query).scalars().first()</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> exist_admin:</span><br><span class="line">            <span class="keyword">raise</span> UserNotFoundException(<span class="string">&quot;用户不存在&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> auth_handler.verify_password(account.password, exist_admin.password):</span><br><span class="line">            <span class="keyword">raise</span> PasswordNotMatchException(<span class="string">&quot;身份验证未通过&quot;</span>)</span><br><span class="line">        account_login_response = AccountLoginResponse()</span><br><span class="line">        set_attrs(account_login_response, jsonable_encoder(exist_admin))</span><br><span class="line">        account_login_response.token = auth_handler.encode_token(exist_admin.<span class="built_in">id</span>)</span><br><span class="line">        <span class="keyword">return</span> account_login_response</span><br></pre></td></tr></table></figure><h4 id="Role"><a href="#Role" class="headerlink" title="Role"></a>Role</h4><p>创建一个枚举类 Role，用以区分学生和管理员</p><p>在<code>/common</code>下创建一个<code>Enum.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> enum <span class="keyword">import</span> Enum</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Role</span>(<span class="built_in">str</span>, Enum):</span><br><span class="line">    ADMIN = <span class="string">&quot;管理员&quot;</span></span><br><span class="line">    STUDENT = <span class="string">&quot;学生&quot;</span></span><br></pre></td></tr></table></figure><h4 id="API"><a href="#API" class="headerlink" title="API"></a>API</h4><p>然后修改一下登录的 api</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> Depends</span><br><span class="line"><span class="keyword">from</span> fastapi.encoders <span class="keyword">import</span> jsonable_encoder</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> common.Enum <span class="keyword">import</span> Role</span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> Result, ResultModel</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session, get_db_session</span><br><span class="line"><span class="keyword">from</span> model.account <span class="keyword">import</span> AccountLogin</span><br><span class="line"><span class="keyword">from</span> service.adminService <span class="keyword">import</span> AdminService</span><br><span class="line"><span class="keyword">from</span> service.studentService <span class="keyword">import</span> StudentService</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.post(<span class="params"><span class="string">&quot;/login&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">login</span>(<span class="params">account: AccountLogin, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    <span class="keyword">if</span> Role.ADMIN.name.__eq__(account.role):</span><br><span class="line">        db_account = AdminService.login(account, db_session)</span><br><span class="line">    <span class="keyword">elif</span> Role.STUDENT.name.__eq__(account.role):</span><br><span class="line">        db_account = StudentService.login(account, db_session)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> Result.error(<span class="string">&quot;角色错误&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> Result.success(jsonable_encoder(db_account))</span><br></pre></td></tr></table></figure><h2 id="学生注册"><a href="#学生注册" class="headerlink" title="学生注册"></a>学生注册</h2><h3 id="前端-注册页面"><a href="#前端-注册页面" class="headerlink" title="前端-注册页面"></a>前端-注册页面</h3><p>写一下学生的注册页面，这里管理员就不参与注册了</p><p>在前端项目目录<code>/views</code>下创建一个<code>Register.vue</code>（这里我偷懒了，没有替换注册页的背景图，大家可以自行替换）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;register-container&quot;&gt;</span><br><span class="line">      &lt;div style=&quot;width: 400px&quot; class=&quot;register-box&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;title&quot;&gt;学生信息管理系统 - 注册&lt;/div&gt;</span><br><span class="line">        &lt;el-form :model=&quot;data.form&quot; ref=&quot;formRef&quot; :rules=&quot;rules&quot;&gt;</span><br><span class="line">          &lt;el-form-item prop=&quot;username&quot;&gt;</span><br><span class="line">            &lt;el-input</span><br><span class="line">              style=&quot;height: 40px;font-size: 18px&quot;</span><br><span class="line">              prefix-icon=&quot;User&quot;</span><br><span class="line">              v-model=&quot;data.form.username&quot;</span><br><span class="line">              placeholder=&quot;请输入账号&quot;</span><br><span class="line">            /&gt;</span><br><span class="line">          &lt;/el-form-item&gt;</span><br><span class="line">          &lt;el-form-item prop=&quot;password&quot;&gt;</span><br><span class="line">            &lt;el-input</span><br><span class="line">              show-password</span><br><span class="line">              style=&quot;height: 40px;font-size: 18px&quot;</span><br><span class="line">              prefix-icon=&quot;Lock&quot;</span><br><span class="line">              v-model=&quot;data.form.password&quot;</span><br><span class="line">              placeholder=&quot;请输入密码&quot;</span><br><span class="line">            /&gt;</span><br><span class="line">          &lt;/el-form-item&gt;</span><br><span class="line">          &lt;el-form-item&gt;</span><br><span class="line">            &lt;el-button</span><br><span class="line">              type=&quot;primary&quot;</span><br><span class="line">              style=&quot;width: 100%&quot;</span><br><span class="line">              plain</span><br><span class="line">              @click=&quot;register&quot;</span><br><span class="line">              &gt;注 册&lt;/el-button</span><br><span class="line">            &gt;</span><br><span class="line">          &lt;/el-form-item&gt;</span><br><span class="line">        &lt;/el-form&gt;</span><br><span class="line">        &lt;div style=&quot;margin-top:30px;text-align: right&quot;&gt;</span><br><span class="line">          已有账号？请直接&lt;a href=&quot;/login&quot;&gt;登录&lt;/a&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; reactive, ref &#125; from &quot;vue&quot;;</span><br><span class="line">import request from &quot;@/utils/request&quot;;</span><br><span class="line">import &#123; ElMessage &#125; from &quot;element-plus&quot;;</span><br><span class="line">import router from &quot;@/router&quot;;</span><br><span class="line"></span><br><span class="line">const data = reactive(&#123;</span><br><span class="line">  form: &#123;&#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const rules = reactive(&#123;</span><br><span class="line">  username: [&#123; required: true, message: &quot;请输入账号&quot;, trigger: &quot;blur&quot; &#125;],</span><br><span class="line">  password: [&#123; required: true, message: &quot;请输入密码&quot;, trigger: &quot;blur&quot; &#125;],</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const formRef = ref();</span><br><span class="line"></span><br><span class="line">const register = () =&gt; &#123;</span><br><span class="line">  formRef.value.validate((valid) =&gt; &#123;</span><br><span class="line">    if (valid) &#123;</span><br><span class="line">      request</span><br><span class="line">        .post(&quot;/register&quot;, data.form)</span><br><span class="line">        .then((res) =&gt; &#123;</span><br><span class="line">          if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">            ElMessage.success(&quot;注册成功&quot;);</span><br><span class="line">            router.push(&quot;/login&quot;);</span><br><span class="line">          &#125; else &#123;</span><br><span class="line">            ElMessage.error(res.msg);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch((err) =&gt; &#123;</span><br><span class="line">          ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.register-container &#123;</span><br><span class="line">  min-height: 100vh;</span><br><span class="line">  overflow: hidden;</span><br><span class="line">  display: flex;</span><br><span class="line">  align-items: center;</span><br><span class="line">  justify-content: center;</span><br><span class="line">  background-image: url(&quot;@/assets/imgs/login_background.png&quot;);</span><br><span class="line">  background-size: cover;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.register-box &#123;</span><br><span class="line">  background-color: rgb(255, 255, 255, 50%);</span><br><span class="line">  box-shadow: 0 0 10px rgba(84, 221, 245, 0.41);</span><br><span class="line">  padding: 30px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.title &#123;</span><br><span class="line">  font-weight: bold;</span><br><span class="line">  font-size: 30px;</span><br><span class="line">  text-align: center;</span><br><span class="line">  margin-bottom: 35px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>添加一下注册页面的路由</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHistory &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">history</span>: <span class="title function_">createWebHistory</span>(<span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">env</span>.<span class="property">BASE_URL</span>),</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;Manager&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/Manager.vue&quot;</span>),</span><br><span class="line">      <span class="attr">redirect</span>: <span class="string">&quot;/home&quot;</span>,</span><br><span class="line">      <span class="attr">children</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;home&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Home&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Home.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;course&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Course&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Course.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">      ],</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/login&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;Login&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/Login.vue&quot;</span>),</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/register&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;Register&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/Register.vue&quot;</span>),</span><br><span class="line">    &#125;,</span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">beforeEach</span>(<span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> requiresAuth = to.<span class="property">matched</span>.<span class="title function_">some</span>(<span class="function">(<span class="params">record</span>) =&gt;</span> record.<span class="property">meta</span>.<span class="property">requiresAuth</span>);</span><br><span class="line">  <span class="keyword">const</span> user = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;student-user&quot;</span>));</span><br><span class="line">  <span class="keyword">if</span> (requiresAuth &amp;&amp; !user) &#123;</span><br><span class="line">    <span class="comment">// 如果目标路由需要认证,并且用户未登录</span></span><br><span class="line">    <span class="title function_">next</span>(<span class="string">&quot;/login&quot;</span>); <span class="comment">// 跳转到登录页面</span></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">next</span>(); <span class="comment">// 如果目标路由不需要认证,或者用户已登录,则正常导航到目标路由</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710604627683-dfd384fa-3167-419f-a922-f52d2d61a218.png"></p><h3 id="后端-注册的-api-接口"><a href="#后端-注册的-api-接口" class="headerlink" title="后端-注册的 api 接口"></a>后端-注册的 api 接口</h3><p>接下来实现一下，后端注册的逻辑</p><h4 id="API-1"><a href="#API-1" class="headerlink" title="API"></a>API</h4><p>因为这个注册只是给学生使用的，在项目目录<code>/api</code>下新建一个<code>studentApi.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> Depends</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> ResultModel, Result</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session, get_db_session</span><br><span class="line"><span class="keyword">from</span> model.account <span class="keyword">import</span> AccountRegister</span><br><span class="line"><span class="keyword">from</span> service.studentService <span class="keyword">import</span> StudentService</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.post(<span class="params"><span class="string">&quot;/register&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">register</span>(<span class="params">account: AccountRegister, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    StudentService.register(account, db_session)</span><br><span class="line">    <span class="keyword">return</span> Result.success()</span><br></pre></td></tr></table></figure><p>添加一下 studentApi</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> FastAPI</span><br><span class="line"><span class="keyword">from</span> starlette.middleware.cors <span class="keyword">import</span> CORSMiddleware</span><br><span class="line"></span><br><span class="line">app = FastAPI()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 跨域问题</span></span><br><span class="line">origins = [<span class="string">&quot;http://localhost:5173&quot;</span>, <span class="string">&quot;http://127.0.0.1:5173&quot;</span>]  <span class="comment"># 替换为你的前端应用的实际地址</span></span><br><span class="line"></span><br><span class="line">app.add_middleware(</span><br><span class="line">    CORSMiddleware,</span><br><span class="line">    allow_origins=origins,  <span class="comment"># 允许跨域访问的来源域名列表</span></span><br><span class="line">    allow_credentials=<span class="literal">True</span>,  <span class="comment"># 是否允许携带cookie</span></span><br><span class="line">    allow_methods=[<span class="string">&quot;*&quot;</span>],  <span class="comment"># 允许的方法，默认包含常见的GET、POST等，&quot;*&quot;表示所有方法</span></span><br><span class="line">    allow_headers=[<span class="string">&quot;*&quot;</span>],  <span class="comment"># 允许的请求头，默认包含常见的Content-Type等，&quot;*&quot;表示所有请求头</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> adminApi, exceptionHandler, courseApi, studentApi</span><br></pre></td></tr></table></figure><p>给<code>account.py</code>添加注册的请求体</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> pydantic <span class="keyword">import</span> BaseModel</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AccountLogin</span>(<span class="title class_ inherited__">BaseModel</span>):</span><br><span class="line">    username: <span class="built_in">str</span></span><br><span class="line">    password: <span class="built_in">str</span></span><br><span class="line">    role: <span class="built_in">str</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AccountLoginResponse</span>:</span><br><span class="line">    <span class="built_in">id</span>: <span class="built_in">int</span></span><br><span class="line">    username: <span class="built_in">str</span></span><br><span class="line">    name: <span class="built_in">str</span></span><br><span class="line">    role: <span class="built_in">str</span></span><br><span class="line">    token: <span class="built_in">str</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AccountRegister</span>(<span class="title class_ inherited__">BaseModel</span>):</span><br><span class="line">    username: <span class="built_in">str</span></span><br><span class="line">    password: <span class="built_in">str</span></span><br></pre></td></tr></table></figure><h4 id="Service-1"><a href="#Service-1" class="headerlink" title="Service"></a>Service</h4><p>实现一下注册的 service</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi.encoders <span class="keyword">import</span> jsonable_encoder</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> select</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.Enum <span class="keyword">import</span> Role</span><br><span class="line"><span class="keyword">from</span> common.auth <span class="keyword">import</span> auth_handler</span><br><span class="line"><span class="keyword">from</span> common.utils <span class="keyword">import</span> set_attrs</span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> UserNotFoundException, PasswordNotMatchException, UserExistException</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session</span><br><span class="line"><span class="keyword">from</span> model.account <span class="keyword">import</span> AccountLogin, AccountLoginResponse, AccountRegister</span><br><span class="line"><span class="keyword">from</span> model.student <span class="keyword">import</span> Student</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentService</span>:</span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">login</span>(<span class="params">account: AccountLogin, db_session: Session</span>) -&gt; AccountLoginResponse:</span><br><span class="line">        query = select(Student).where(Student.username == account.username)</span><br><span class="line">        exist_student: Student = db_session.execute(query).scalars().first()</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> exist_student:</span><br><span class="line">            <span class="keyword">raise</span> UserNotFoundException(<span class="string">&quot;用户不存在&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> auth_handler.verify_password(account.password, exist_student.password):</span><br><span class="line">            <span class="keyword">raise</span> PasswordNotMatchException(<span class="string">&quot;身份验证未通过&quot;</span>)</span><br><span class="line">        account_login_response = AccountLoginResponse()</span><br><span class="line">        set_attrs(account_login_response, jsonable_encoder(exist_student))</span><br><span class="line">        account_login_response.token = auth_handler.encode_token(exist_student.<span class="built_in">id</span>)</span><br><span class="line">        <span class="keyword">return</span> account_login_response</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">register</span>(<span class="params">account: AccountRegister, db_session: Session</span>):</span><br><span class="line">        query = select(Student).where(Student.username == account.username)</span><br><span class="line">        exist_student = db_session.execute(query).scalars().first()</span><br><span class="line">        <span class="keyword">if</span> exist_student:</span><br><span class="line">            <span class="keyword">raise</span> UserExistException(<span class="string">&quot;账号已存在&quot;</span>)</span><br><span class="line"></span><br><span class="line">        new_student = Student()</span><br><span class="line">        account.password = auth_handler.get_password_hash(account.password)</span><br><span class="line">        set_attrs(new_student, jsonable_encoder(account))</span><br><span class="line">        <span class="keyword">if</span> new_student.name <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            new_student.name = account.username</span><br><span class="line">        new_student.role = Role.STUDENT.name</span><br><span class="line"></span><br><span class="line">        db_session.add(new_student)</span><br><span class="line">        db_session.commit()</span><br><span class="line">        <span class="keyword">return</span> new_student</span><br></pre></td></tr></table></figure><p>添加自定义异常</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UserNotFoundException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UserExistException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PasswordNotMatchException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TokenException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseExistException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseNotExistException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi.encoders <span class="keyword">import</span> jsonable_encoder</span><br><span class="line"><span class="keyword">from</span> starlette.responses <span class="keyword">import</span> JSONResponse</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> Request</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> Result</span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> UserNotFoundException, PasswordNotMatchException, TokenException, \</span><br><span class="line">    CourseExistException, CourseNotExistException, UserExistException</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">Exception</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">exception_handler</span>(<span class="params">request: Request, exc: Exception</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;500&quot;</span>, msg=<span class="built_in">str</span>(exc))</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">500</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">UserNotFoundException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">user_not_fount_exception_handler</span>(<span class="params">request: Request, exc: UserNotFoundException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;404&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">404</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">PasswordNotMatchException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">password_not_fount_exception_handler</span>(<span class="params">request: Request, exc: PasswordNotMatchException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;401&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">401</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">TokenException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">token_exception_handler</span>(<span class="params">request: Request, exc: TokenException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;401&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">401</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">CourseExistException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">course_exist_exception_handler</span>(<span class="params">request: Request, exc: CourseExistException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;400&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">400</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">CourseNotExistException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">course_not_exist_exception_handler</span>(<span class="params">request: Request, exc: CourseNotExistException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;404&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">404</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">UserExistException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">user_exist_exception_handler</span>(<span class="params">request: Request, exc: UserExistException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;400&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">400</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="登录-注册测试"><a href="#登录-注册测试" class="headerlink" title="登录&#x2F;注册测试"></a>登录&#x2F;注册测试</h2><p>现在测试一下学生登录和注册的逻辑</p><h3 id="学生注册-1"><a href="#学生注册-1" class="headerlink" title="学生注册"></a>学生注册</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710606986452-eaa412a2-43ab-4d6d-90bf-4143eae2ff77.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710606994269-e22569b7-b4d5-447b-a361-8c08b84ca44e.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710607036436-aa5689b3-3ece-4802-9978-bb4db123c161.png"></p><h3 id="学生登录-1"><a href="#学生登录-1" class="headerlink" title="学生登录"></a>学生登录</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710607063704-884a65f3-36c4-4487-8c43-b3d32c8c47ac.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710607072554-7fccd671-d1c1-46d1-b3d0-7970068664f6.png"></p><p>现在登录进来了，但是右上角的显示不太对，等下改改</p><h3 id="管理员登录"><a href="#管理员登录" class="headerlink" title="管理员登录"></a>管理员登录</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710607176805-d6ca2dae-fc34-476c-b3e2-c80338393074.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710607184624-4ba6ad15-b071-46e2-8b54-66c5c3535e51.png"></p><h2 id="学生管理-1"><a href="#学生管理-1" class="headerlink" title="学生管理"></a>学生管理</h2><p>这块咱们做个设定，当管理员新增用户、替用户修改用户数据，密码必须重新设置为初始密码-123456</p><h3 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h3><p>复制粘贴一下之前的<code>Course.vue</code>，命名为<code>Student.vue</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.username&quot;</span><br><span class="line">        placeholder=&quot;请输入要查询的学生学号&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;margin-left:10px; width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.name&quot;</span><br><span class="line">        placeholder=&quot;请输入要查询的学生姓名&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-button type=&quot;info&quot; plain style=&quot;margin: 0 0 0 10px&quot; @click=&quot;reset&quot;</span><br><span class="line">        &gt;重置&lt;/el-button</span><br><span class="line">      &gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-button</span><br><span class="line">          type=&quot;primary&quot;</span><br><span class="line">          style=&quot;margin-bottom: 5px&quot;</span><br><span class="line">          plain</span><br><span class="line">          @click=&quot;handleAdd&quot;</span><br><span class="line">          &gt;新增&lt;/el-button</span><br><span class="line">        &gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-table :data=&quot;data.tableData&quot; stripe style=&quot;width: 100%&quot;&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;id&quot; label=&quot;ID&quot; width=&quot;80&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;username&quot; label=&quot;学生学号&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;name&quot; label=&quot;学生姓名&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;gender&quot; label=&quot;性别&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;phone&quot; label=&quot;手机号&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;birthday&quot; label=&quot;出生日期&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;avatar&quot; label=&quot;头像&quot; /&gt;</span><br><span class="line">          &lt;el-table-column label=&quot;操作&quot; align=&quot;center&quot;&gt;</span><br><span class="line">            &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">              &lt;el-button</span><br><span class="line">                type=&quot;primary&quot;</span><br><span class="line">                size=&quot;small&quot;</span><br><span class="line">                plain</span><br><span class="line">                @click=&quot;handleEdit(scope.row)&quot;</span><br><span class="line">                &gt;编辑&lt;/el-button</span><br><span class="line">              &gt;</span><br><span class="line">              &lt;el-button</span><br><span class="line">                type=&quot;danger&quot;</span><br><span class="line">                size=&quot;small&quot;</span><br><span class="line">                plain</span><br><span class="line">                @click=&quot;handleDelete(scope.row.id)&quot;</span><br><span class="line">                &gt;删除&lt;/el-button</span><br><span class="line">              &gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">          &lt;/el-table-column&gt;</span><br><span class="line">        &lt;/el-table&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot;&gt;</span><br><span class="line">      &lt;el-pagination</span><br><span class="line">        v-model:current-page=&quot;data.pageNum&quot;</span><br><span class="line">        v-model:page-size=&quot;data.pageSize&quot;</span><br><span class="line">        @current-change=&quot;handleCurrentChange&quot;</span><br><span class="line">        background</span><br><span class="line">        layout=&quot;prev, pager, next&quot;</span><br><span class="line">        :total=&quot;data.total&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;el-dialog width=&quot;35%&quot; v-model=&quot;data.formVisible&quot; title=&quot;学生信息&quot;&gt;</span><br><span class="line">      &lt;el-form</span><br><span class="line">        :model=&quot;data.form&quot;</span><br><span class="line">        :rules=&quot;rules&quot;</span><br><span class="line">        ref=&quot;formRef&quot;</span><br><span class="line">        label-width=&quot;100px&quot;</span><br><span class="line">        label-position=&quot;right&quot;</span><br><span class="line">        style=&quot;padding-right: 45px&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;el-form-item label=&quot;学生学号&quot; prop=&quot;username&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.username&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;密码&quot; prop=&quot;password&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.password&quot; autocomplete=&quot;off&quot; disabled /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;学生姓名&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.name&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;性别&quot;&gt;</span><br><span class="line">          &lt;el-radio-group v-model=&quot;data.form.gender&quot;&gt;</span><br><span class="line">            &lt;el-radio label=&quot;男&quot;&gt;&lt;/el-radio&gt;</span><br><span class="line">            &lt;el-radio label=&quot;女&quot;&gt;&lt;/el-radio&gt;</span><br><span class="line">          &lt;/el-radio-group&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;手机号&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.phone&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;出生日期&quot;&gt;</span><br><span class="line">          &lt;el-date-picker</span><br><span class="line">            format=&quot;YYYY-MM-DD&quot;</span><br><span class="line">            value-format=&quot;YYYY-MM-DD&quot;</span><br><span class="line">            v-model=&quot;data.form.birthday&quot;</span><br><span class="line">          &gt;&lt;/el-date-picker&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;头像&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.avatar&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">      &lt;/el-form&gt;</span><br><span class="line">      &lt;template #footer&gt;</span><br><span class="line">        &lt;span class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">          &lt;el-button @click=&quot;data.formVisible = false&quot; plain&gt;取消&lt;/el-button&gt;</span><br><span class="line">          &lt;el-button type=&quot;primary&quot; @click=&quot;save&quot; plain&gt;保存&lt;/el-button&gt;</span><br><span class="line">        &lt;/span&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line">    &lt;/el-dialog&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; reactive, ref &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; Search &#125; from &quot;@element-plus/icons-vue&quot;;</span><br><span class="line">import request from &quot;@/utils/request&quot;;</span><br><span class="line">import &#123; ElMessage, ElMessageBox &#125; from &quot;element-plus&quot;;</span><br><span class="line"></span><br><span class="line">const data = reactive(&#123;</span><br><span class="line">  username: &quot;&quot;,</span><br><span class="line">  name: &quot;&quot;,</span><br><span class="line">  tableData: [],</span><br><span class="line">  total: 0,</span><br><span class="line">  pageNum: 1,</span><br><span class="line">  pageSize: 5,</span><br><span class="line">  formVisible: false,</span><br><span class="line">  form: &#123; password: &quot;123456&quot; &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const load = () =&gt; &#123;</span><br><span class="line">  request</span><br><span class="line">    .get(&quot;/student/selectPage&quot;, &#123;</span><br><span class="line">      params: &#123;</span><br><span class="line">        pageNum: data.pageNum,</span><br><span class="line">        pageSize: data.pageSize,</span><br><span class="line">        username: data.username,</span><br><span class="line">        name: data.name,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">        data.tableData = res.data?.list || [];</span><br><span class="line">        data.total = res.data?.total || 0;</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        ElMessage.error(res.msg);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">        localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 加载一次 获取课程数据</span><br><span class="line">load();</span><br><span class="line"></span><br><span class="line">const handleCurrentChange = () =&gt; &#123;</span><br><span class="line">  // 当翻页的时候重新加载数据</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const reset = () =&gt; &#123;</span><br><span class="line">  data.username = &quot;&quot;;</span><br><span class="line">  data.name = &quot;&quot;;</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const rules = reactive(&#123;</span><br><span class="line">  username: [&#123; required: true, message: &quot;请输入学生学号&quot;, trigger: &quot;blur&quot; &#125;],</span><br><span class="line">  password: [&#123; required: true, message: &quot;请输入密码&quot;, trigger: &quot;blur&quot; &#125;],</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const formRef = ref();</span><br><span class="line"></span><br><span class="line">const handleAdd = () =&gt; &#123;</span><br><span class="line">  data.formVisible = true;</span><br><span class="line">  data.form = &#123; password: &quot;123456&quot; &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const save = () =&gt; &#123;</span><br><span class="line">  formRef.value.validate((valid) =&gt; &#123;</span><br><span class="line">    if (valid) &#123;</span><br><span class="line">      request</span><br><span class="line">        .request(&#123;</span><br><span class="line">          url: data.form.id ? &quot;/student/update&quot; : &quot;/student/add&quot;,</span><br><span class="line">          method: data.form.id ? &quot;put&quot; : &quot;post&quot;,</span><br><span class="line">          data: data.form,</span><br><span class="line">        &#125;)</span><br><span class="line">        .then((res) =&gt; &#123;</span><br><span class="line">          if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">            ElMessage.success(&quot;操作成功&quot;);</span><br><span class="line">            data.formVisible = false;</span><br><span class="line">            load();</span><br><span class="line">          &#125; else &#123;</span><br><span class="line">            ElMessage.error(res.msg);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch((err) =&gt; &#123;</span><br><span class="line">          if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">            localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">          &#125;</span><br><span class="line">          ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const handleEdit = (row) =&gt; &#123;</span><br><span class="line">  data.form = JSON.parse(JSON.stringify(row));</span><br><span class="line">  data.formVisible = true;</span><br><span class="line">  data.form.password = &quot;123456&quot;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const handleDelete = (id) =&gt; &#123;</span><br><span class="line">  ElMessageBox.confirm(&quot;删除后内容将无法恢复，您确认删除嘛？&quot;, &quot;删除确认&quot;, &#123;</span><br><span class="line">    type: &quot;warning&quot;,</span><br><span class="line">  &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      request.delete(&quot;/student/delete/&quot; + id).then((res) =&gt; &#123;</span><br><span class="line">        if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">          ElMessage.success(&quot;删除成功&quot;);</span><br><span class="line">          load();</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          ElMessage.error(res.msg);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">        localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHistory &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">history</span>: <span class="title function_">createWebHistory</span>(<span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">env</span>.<span class="property">BASE_URL</span>),</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;Manager&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/Manager.vue&quot;</span>),</span><br><span class="line">      <span class="attr">redirect</span>: <span class="string">&quot;/home&quot;</span>,</span><br><span class="line">      <span class="attr">children</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;home&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Home&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Home.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;course&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Course&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Course.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;student&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Student&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Student.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">      ],</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/login&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;Login&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/Login.vue&quot;</span>),</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/register&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;Register&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/Register.vue&quot;</span>),</span><br><span class="line">    &#125;,</span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">beforeEach</span>(<span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> requiresAuth = to.<span class="property">matched</span>.<span class="title function_">some</span>(<span class="function">(<span class="params">record</span>) =&gt;</span> record.<span class="property">meta</span>.<span class="property">requiresAuth</span>);</span><br><span class="line">  <span class="keyword">const</span> user = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;student-user&quot;</span>));</span><br><span class="line">  <span class="keyword">if</span> (requiresAuth &amp;&amp; !user) &#123;</span><br><span class="line">    <span class="comment">// 如果目标路由需要认证,并且用户未登录</span></span><br><span class="line">    <span class="title function_">next</span>(<span class="string">&quot;/login&quot;</span>); <span class="comment">// 跳转到登录页面</span></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">next</span>(); <span class="comment">// 如果目标路由不需要认证,或者用户已登录,则正常导航到目标路由</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div</span><br><span class="line">      style=&quot;height: 60px; background-color: #eae8e8; display: flex; align-items: center; border-bottom: 1px solid #c4c2c2&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;div style=&quot;flex: 1&quot;&gt;</span><br><span class="line">        &lt;div style=&quot;padding-left: 20px; display: flex; align-items: center&quot;&gt;</span><br><span class="line">          &lt;img src=&quot;@/assets/imgs/logo.png&quot; alt=&quot;&quot; style=&quot;width: 40px&quot; /&gt;</span><br><span class="line">          &lt;div style=&quot;font-weight: bold; font-size: 24px; margin-left: 5px&quot;&gt;</span><br><span class="line">            学生信息管理系统</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        style=&quot;width: fit-content; padding-right: 10px; display: flex; align-items: center;&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;img</span><br><span class="line">          src=&quot;https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png&quot;</span><br><span class="line">          alt=&quot;&quot;</span><br><span class="line">          style=&quot;width: 40px; height: 40px&quot;</span><br><span class="line">        /&gt;</span><br><span class="line">        &lt;span style=&quot;margin-left: 5px&quot;&gt;管理员&lt;/span&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div style=&quot;display: flex&quot;&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        style=&quot;width: 200px; border-right: 1px solid #f3eeee; min-height: calc(100vh - 60px)&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;el-menu</span><br><span class="line">          router</span><br><span class="line">          style=&quot;border: none&quot;</span><br><span class="line">          :default-active=&quot;$route.path&quot;</span><br><span class="line">          :default-openeds=&quot;[&#x27;/home&#x27;, &#x27;2&#x27;, &#x27;3&#x27;]&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          &lt;el-menu-item index=&quot;/home&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;</span><br><span class="line">              &lt;HomeFilled /&gt;</span><br><span class="line">            &lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;系统首页&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line"></span><br><span class="line">          &lt;el-sub-menu index=&quot;2&quot;&gt;</span><br><span class="line">            &lt;template #title&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;Management /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;学生管理&lt;/span&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">            &lt;el-menu-item index=&quot;/student&quot;&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;UserFilled /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;学生信息&lt;/span&gt;</span><br><span class="line">            &lt;/el-menu-item&gt;</span><br><span class="line">          &lt;/el-sub-menu&gt;</span><br><span class="line"></span><br><span class="line">          &lt;el-sub-menu index=&quot;3&quot;&gt;</span><br><span class="line">            &lt;template #title&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;Memo /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;课程管理&lt;/span&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">            &lt;el-menu-item index=&quot;/course&quot;&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;Document /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;课程信息&lt;/span&gt;</span><br><span class="line">            &lt;/el-menu-item&gt;</span><br><span class="line">          &lt;/el-sub-menu&gt;</span><br><span class="line"></span><br><span class="line">          &lt;el-menu-item index=&quot;/person&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;</span><br><span class="line">              &lt;User /&gt;</span><br><span class="line">            &lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;个人资料&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line">          &lt;el-menu-item index=&quot;/login&quot; @click=&quot;logout&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;</span><br><span class="line">              &lt;SwitchButton /&gt;</span><br><span class="line">            &lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;退出系统&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line">        &lt;/el-menu&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">      &lt;div style=&quot;flex: 1; width: 0; background-color: #eaeaee; padding: 10px&quot;&gt;</span><br><span class="line">        &lt;router-view /&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; useRoute &#125; from &quot;vue-router&quot;;</span><br><span class="line"></span><br><span class="line">const $route = useRoute();</span><br><span class="line">console.log($route.path);</span><br><span class="line"></span><br><span class="line">const logout = () =&gt; &#123;</span><br><span class="line">  localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.el-menu-item.is-active &#123;</span><br><span class="line">  background-color: #c3d7d3 !important;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.el-menu-item:hover &#123;</span><br><span class="line">  color: #0c98d5;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">:deep(th) &#123;</span><br><span class="line">  color: #333;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h3><p>直接一次性实现学生管理的增删查改</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Optional</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> Depends, APIRouter, Query</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> common.auth <span class="keyword">import</span> auth_handler</span><br><span class="line"><span class="keyword">from</span> common.pageHelper <span class="keyword">import</span> PageHelper</span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> ResultModel, Result</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session, get_db_session</span><br><span class="line"><span class="keyword">from</span> model.account <span class="keyword">import</span> AccountRegister</span><br><span class="line"><span class="keyword">from</span> model.student <span class="keyword">import</span> StudentSearch, StudentCreate, StudentUpdate</span><br><span class="line"><span class="keyword">from</span> service.studentService <span class="keyword">import</span> StudentService</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.post(<span class="params"><span class="string">&quot;/register&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">register</span>(<span class="params">account: AccountRegister, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    StudentService.register(account, db_session)</span><br><span class="line">    <span class="keyword">return</span> Result.success()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">student_router = APIRouter(prefix=<span class="string">&quot;/student&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@student_router.get(<span class="params"><span class="string">&quot;/selectPage&quot;</span>, response_model=ResultModel, dependencies=[Depends(<span class="params">auth_handler.auth_required</span>)]</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">select_page</span>(<span class="params">page: <span class="built_in">int</span> = Query(<span class="params"><span class="number">1</span>, ge=<span class="number">1</span>, alias=<span class="string">&quot;pageNum&quot;</span>, description=<span class="string">&quot;Page number&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      size: <span class="built_in">int</span> = Query(<span class="params"><span class="number">5</span>, gt=<span class="number">0</span>, le=<span class="number">100</span>, alias=<span class="string">&quot;pageSize&quot;</span>, description=<span class="string">&quot;Page size&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      username: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Student username&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      name: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Student name&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    pageInfo = PageHelper.startPage(page, size)</span><br><span class="line">    student_search = StudentSearch(username=username, name=name)</span><br><span class="line">    student_list = StudentService.select_page(student_search, db_session)</span><br><span class="line">    <span class="keyword">return</span> Result.success(pageInfo.of(student_list))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@student_router.post(<span class="params"><span class="string">&quot;/add&quot;</span>, response_model=ResultModel, dependencies=[Depends(<span class="params">auth_handler.auth_required</span>)]</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">student: StudentCreate, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    StudentService.add_student(student, db_session)</span><br><span class="line">    <span class="keyword">return</span> Result.success()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@student_router.put(<span class="params"><span class="string">&quot;/update&quot;</span>, response_model=ResultModel, dependencies=[Depends(<span class="params">auth_handler.auth_required</span>)]</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">update</span>(<span class="params">student: StudentUpdate, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    StudentService.update_by_id(student, db_session)</span><br><span class="line">    <span class="keyword">return</span> Result.success()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@student_router.delete(<span class="params"><span class="string">&quot;/delete/&#123;id&#125;&quot;</span>, response_model=ResultModel, dependencies=[Depends(<span class="params">auth_handler.auth_required</span>)]</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">delete</span>(<span class="params"><span class="built_in">id</span>: <span class="built_in">int</span>, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    StudentService.delete_by_id(<span class="built_in">id</span>, db_session)</span><br><span class="line">    <span class="keyword">return</span> Result.success()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.include_router(student_router)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi.encoders <span class="keyword">import</span> jsonable_encoder</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> select, asc</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.Enum <span class="keyword">import</span> Role</span><br><span class="line"><span class="keyword">from</span> common.auth <span class="keyword">import</span> auth_handler</span><br><span class="line"><span class="keyword">from</span> common.utils <span class="keyword">import</span> set_attrs</span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> UserNotFoundException, PasswordNotMatchException, UserExistException</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session</span><br><span class="line"><span class="keyword">from</span> model.account <span class="keyword">import</span> AccountLogin, AccountLoginResponse, AccountRegister</span><br><span class="line"><span class="keyword">from</span> model.student <span class="keyword">import</span> Student, StudentCreate, StudentUpdate</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentService</span>:</span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">login</span>(<span class="params">account: AccountLogin, db_session: Session</span>) -&gt; AccountLoginResponse:</span><br><span class="line">        query = select(Student).where(Student.username == account.username)</span><br><span class="line">        exist_student: Student = db_session.execute(query).scalars().first()</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> exist_student:</span><br><span class="line">            <span class="keyword">raise</span> UserNotFoundException(<span class="string">&quot;用户不存在&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> auth_handler.verify_password(account.password, exist_student.password):</span><br><span class="line">            <span class="keyword">raise</span> PasswordNotMatchException(<span class="string">&quot;身份验证未通过&quot;</span>)</span><br><span class="line">        account_login_response = AccountLoginResponse()</span><br><span class="line">        set_attrs(account_login_response, jsonable_encoder(exist_student))</span><br><span class="line">        account_login_response.token = auth_handler.encode_token(exist_student.<span class="built_in">id</span>)</span><br><span class="line">        <span class="keyword">return</span> account_login_response</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">register</span>(<span class="params">account: AccountRegister, db_session: Session</span>):</span><br><span class="line">        query = select(Student).where(Student.username == account.username)</span><br><span class="line">        exist_student = db_session.execute(query).scalars().first()</span><br><span class="line">        <span class="keyword">if</span> exist_student:</span><br><span class="line">            <span class="keyword">raise</span> UserExistException(<span class="string">&quot;账号已存在&quot;</span>)</span><br><span class="line"></span><br><span class="line">        new_student = Student()</span><br><span class="line">        account.password = auth_handler.get_password_hash(account.password)</span><br><span class="line">        set_attrs(new_student, jsonable_encoder(account))</span><br><span class="line">        <span class="keyword">if</span> new_student.name <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            new_student.name = account.username</span><br><span class="line">        new_student.role = Role.STUDENT.name</span><br><span class="line"></span><br><span class="line">        db_session.add(new_student)</span><br><span class="line">        db_session.commit()</span><br><span class="line">        <span class="keyword">return</span> new_student</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">select_page</span>(<span class="params">student_search: Student, db_session: Session</span>):</span><br><span class="line">        query = select(Student).order_by(asc(Student.<span class="built_in">id</span>))</span><br><span class="line">        <span class="keyword">if</span> student_search.username:</span><br><span class="line">            query = query.where(Student.username.like(<span class="string">f&quot;%<span class="subst">&#123;student_search.username&#125;</span>%&quot;</span>))</span><br><span class="line">        <span class="keyword">if</span> student_search.name:</span><br><span class="line">            query = query.where(Student.name.like(<span class="string">f&quot;%<span class="subst">&#123;student_search.name&#125;</span>%&quot;</span>))</span><br><span class="line"></span><br><span class="line">        result = db_session.execute(query).scalars().<span class="built_in">all</span>()</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">add_student</span>(<span class="params">student: StudentCreate, db_session: Session</span>):</span><br><span class="line">        query = select(Student).where(Student.username == student.username)</span><br><span class="line">        exist_student = db_session.execute(query).scalars().<span class="built_in">all</span>()</span><br><span class="line">        <span class="keyword">if</span> exist_student:</span><br><span class="line">            <span class="keyword">raise</span> UserExistException(<span class="string">&quot;账号已存在&quot;</span>)</span><br><span class="line"></span><br><span class="line">        student.password = auth_handler.get_password_hash(student.password)</span><br><span class="line">        student = Student(**student.<span class="built_in">dict</span>())</span><br><span class="line">        <span class="keyword">if</span> student.name <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            student.name = student.username</span><br><span class="line">        student.role = Role.STUDENT.name</span><br><span class="line">        db_session.add(student)</span><br><span class="line">        db_session.commit()</span><br><span class="line">        <span class="keyword">return</span> student</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">update_by_id</span>(<span class="params">student: StudentUpdate, db_session: Session</span>):</span><br><span class="line">        exist_student: Student = check_student_exist(student.<span class="built_in">id</span>, db_session)</span><br><span class="line">        student.password = auth_handler.get_password_hash(student.password)</span><br><span class="line">        set_attrs(exist_student, jsonable_encoder(student))</span><br><span class="line">        db_session.commit()</span><br><span class="line">        <span class="keyword">return</span> exist_student</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">delete_by_id</span>(<span class="params"><span class="built_in">id</span>: <span class="built_in">int</span>, db_session: Session</span>):</span><br><span class="line">        exist_student: Student = check_student_exist(<span class="built_in">id</span>, db_session)</span><br><span class="line">        db_session.delete(exist_student)</span><br><span class="line">        db_session.commit()</span><br><span class="line">        <span class="keyword">return</span> exist_student</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check_student_exist</span>(<span class="params">student_id: <span class="built_in">int</span>, db_session: Session</span>):</span><br><span class="line">    query = select(Student).where(Student.<span class="built_in">id</span> == student_id)</span><br><span class="line">    exist_student: Student = db_session.execute(query).scalar()</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> exist_student:</span><br><span class="line">        <span class="keyword">raise</span> UserNotFoundException(<span class="string">&quot;账号不存在&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> exist_student</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Optional</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pydantic <span class="keyword">import</span> BaseModel, Field</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> Integer, String</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> Mapped, mapped_column</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Base</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>(<span class="title class_ inherited__">Base</span>):</span><br><span class="line">    __tablename__ = <span class="string">&quot;student&quot;</span></span><br><span class="line">    <span class="built_in">id</span>: Mapped[<span class="built_in">int</span>] = mapped_column(Integer, primary_key=<span class="literal">True</span>, nullable=<span class="literal">False</span>)</span><br><span class="line">    username: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    password: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    name: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    phone: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    gender: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    birthday: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    avatar: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    role: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentBase</span>(<span class="title class_ inherited__">BaseModel</span>):</span><br><span class="line">    username: <span class="built_in">str</span></span><br><span class="line">    password: <span class="built_in">str</span> = Field(..., min_length=<span class="number">1</span>)</span><br><span class="line">    name: <span class="type">Optional</span>[<span class="built_in">str</span>] = <span class="literal">None</span></span><br><span class="line">    role: <span class="type">Optional</span>[<span class="built_in">str</span>] = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentSearch</span>(<span class="title class_ inherited__">BaseModel</span>):</span><br><span class="line">    username: <span class="built_in">str</span> | <span class="literal">None</span></span><br><span class="line">    name: <span class="built_in">str</span> | <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentCreate</span>(<span class="title class_ inherited__">StudentBase</span>):</span><br><span class="line">    phone: <span class="type">Optional</span>[<span class="built_in">str</span>] = <span class="literal">None</span></span><br><span class="line">    gender: <span class="type">Optional</span>[<span class="built_in">str</span>] = <span class="literal">None</span></span><br><span class="line">    birthday: <span class="type">Optional</span>[<span class="built_in">str</span>] = Field(<span class="literal">None</span>)</span><br><span class="line">    avatar: <span class="type">Optional</span>[<span class="built_in">str</span>] = Field(<span class="literal">None</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentUpdate</span>(<span class="title class_ inherited__">StudentCreate</span>):</span><br><span class="line">    <span class="built_in">id</span>: <span class="built_in">int</span></span><br></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><h4 id="增"><a href="#增" class="headerlink" title="增"></a>增</h4><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710614101507-2bf573c5-fa17-4163-a689-3385877daa5d.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710614339357-f6290c1c-bd96-4b2c-8530-09e5bf23b1c4.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710614350016-64f541ee-ce8e-4f50-80ee-182cbf2e277c.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710614399226-a9223fce-2830-4d70-b5b0-5345265e68b1.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710614409533-4ccb0b0e-b43c-4e2b-8732-2cc57e64a637.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710614456422-3dd9bdc7-3664-4db1-b0fa-d463de9a24ab.png"></p><h4 id="删"><a href="#删" class="headerlink" title="删"></a>删</h4><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710614471327-76769a3d-22b0-448d-90e4-4732685f6265.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710614484226-16c0dee1-16e3-4ddf-86fd-046dc6241284.png"></p><h4 id="查"><a href="#查" class="headerlink" title="查"></a>查</h4><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710614500386-0b89fdc6-06f8-460f-8a82-f50af83bf667.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710614524924-97ff251c-c108-4913-a355-722cb37adee5.png"></p><h4 id="改"><a href="#改" class="headerlink" title="改"></a>改</h4><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710614569965-55e3a371-083d-4f48-9bc8-49c7c1124c96.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710614577734-0d8b6662-062e-437f-a4d8-5288c15995b2.png"></p><p>但是修改过后，密码会被强制重置为 123456</p><h2 id="限制权限"><a href="#限制权限" class="headerlink" title="限制权限"></a>限制权限</h2><p>现在不管普通的学生还是管理员都能看到管理页面 这不符合</p><p>需要加入一个权限<code>v-if=&quot;user.role === &#39;ADMIN&#39;&quot;</code></p><p>顺便修改一下右上角和主页显示的用户名称</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div</span><br><span class="line">      style=&quot;height: 60px; background-color: #eae8e8; display: flex; align-items: center; border-bottom: 1px solid #c4c2c2&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;div style=&quot;flex: 1&quot;&gt;</span><br><span class="line">        &lt;div style=&quot;padding-left: 20px; display: flex; align-items: center&quot;&gt;</span><br><span class="line">          &lt;img src=&quot;@/assets/imgs/logo.png&quot; alt=&quot;&quot; style=&quot;width: 40px&quot; /&gt;</span><br><span class="line">          &lt;div style=&quot;font-weight: bold; font-size: 24px; margin-left: 5px&quot;&gt;</span><br><span class="line">            学生信息管理系统</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        style=&quot;width: fit-content; padding-right: 10px; display: flex; align-items: center;&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;img</span><br><span class="line">          src=&quot;https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png&quot;</span><br><span class="line">          alt=&quot;&quot;</span><br><span class="line">          style=&quot;width: 40px; height: 40px&quot;</span><br><span class="line">        /&gt;</span><br><span class="line">        &lt;span style=&quot;margin-left: 5px&quot;&gt;&#123;&#123; user.name &#125;&#125;&lt;/span&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div style=&quot;display: flex&quot;&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        style=&quot;width: 200px; border-right: 1px solid #f3eeee; min-height: calc(100vh - 60px)&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;el-menu</span><br><span class="line">          router</span><br><span class="line">          style=&quot;border: none&quot;</span><br><span class="line">          :default-active=&quot;$route.path&quot;</span><br><span class="line">          :default-openeds=&quot;[&#x27;/home&#x27;, &#x27;2&#x27;, &#x27;3&#x27;]&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          &lt;el-menu-item index=&quot;/home&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;</span><br><span class="line">              &lt;HomeFilled /&gt;</span><br><span class="line">            &lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;系统首页&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line"></span><br><span class="line">          &lt;el-sub-menu index=&quot;2&quot; v-if=&quot;user.role === &#x27;ADMIN&#x27;&quot;&gt;</span><br><span class="line">            &lt;template #title&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;Management /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;学生管理&lt;/span&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">            &lt;el-menu-item index=&quot;/student&quot;&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;UserFilled /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;学生信息&lt;/span&gt;</span><br><span class="line">            &lt;/el-menu-item&gt;</span><br><span class="line">          &lt;/el-sub-menu&gt;</span><br><span class="line"></span><br><span class="line">          &lt;el-sub-menu index=&quot;3&quot; v-if=&quot;user.role === &#x27;ADMIN&#x27;&quot;&gt;</span><br><span class="line">            &lt;template #title&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;Memo /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;课程管理&lt;/span&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">            &lt;el-menu-item index=&quot;/course&quot;&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;Document /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;课程信息&lt;/span&gt;</span><br><span class="line">            &lt;/el-menu-item&gt;</span><br><span class="line">          &lt;/el-sub-menu&gt;</span><br><span class="line"></span><br><span class="line">          &lt;el-menu-item index=&quot;/person&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;</span><br><span class="line">              &lt;User /&gt;</span><br><span class="line">            &lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;个人资料&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line">          &lt;el-menu-item index=&quot;/login&quot; @click=&quot;logout&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;</span><br><span class="line">              &lt;SwitchButton /&gt;</span><br><span class="line">            &lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;退出系统&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line">        &lt;/el-menu&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">      &lt;div style=&quot;flex: 1; width: 0; background-color: #eaeaee; padding: 10px&quot;&gt;</span><br><span class="line">        &lt;router-view /&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; useRoute &#125; from &quot;vue-router&quot;;</span><br><span class="line"></span><br><span class="line">const $route = useRoute();</span><br><span class="line">console.log($route.path);</span><br><span class="line"></span><br><span class="line">const logout = () =&gt; &#123;</span><br><span class="line">  localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const user = JSON.parse(localStorage.getItem(&quot;student-user&quot;) || &quot;&#123;&#125;&quot;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.el-menu-item.is-active &#123;</span><br><span class="line">  background-color: #c3d7d3 !important;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.el-menu-item:hover &#123;</span><br><span class="line">  color: #0c98d5;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">:deep(th) &#123;</span><br><span class="line">  color: #333;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;welcome-container&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;custom-card bg-white shadow rounded p-4 mb-5&quot;&gt;</span><br><span class="line">      &lt;h2 class=&quot;text-center text-primary&quot;&gt;欢迎来到本系统&lt;/h2&gt;</span><br><span class="line">      &lt;p class=&quot;text-center mt-3&quot;&gt;</span><br><span class="line">        您好 &lt;span :style=&quot;&#123; color: &#x27;#116ca9&#x27; &#125;&quot;&gt;&#123;&#123; user.name &#125;&#125;&lt;/span</span><br><span class="line">        &gt;，祝您使用愉快！</span><br><span class="line">      &lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import request from &quot;@/utils/request&quot;;</span><br><span class="line"></span><br><span class="line">const user = JSON.parse(localStorage.getItem(&quot;student-user&quot;) || &quot;&#123;&#125;&quot;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.welcome-container &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  justify-content: center;</span><br><span class="line">  align-items: center;</span><br><span class="line">  min-height: calc(100vh - 100px); /* 根据实际项目需要调整高度 */</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.custom-card &#123;</span><br><span class="line">  max-width: 400px;</span><br><span class="line">  border: none;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>普通学生登录</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710615211512-e0cccb33-3e60-4b88-9678-4c2ce8e98086.png"></p><p>管理员登录</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710615040123-41959ce6-a154-4412-ae89-c76b26d83cec.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710615228358-010c1595-4196-4110-b8a8-96aee9e8ddd7.png"></p><hr><blockquote><p>更新: 2024-05-20 00:11:43<br>原文: <a href="https://www.yuque.com/zacharyblock/iacda/uuigf300461wndud">https://www.yuque.com/zacharyblock/iacda/uuigf300461wndud</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;学生管理&quot;&gt;&lt;a href=&quot;#学生管理&quot; class=&quot;headerlink&quot; title=&quot;学生管理&quot;&gt;&lt;/a&gt;学生管理&lt;/h1&gt;&lt;h2 id=&quot;数据库&quot;&gt;&lt;a href=&quot;#数据库&quot; class=&quot;headerlink&quot; title=&quot;数据库&quot;&gt;&lt;/a&gt;数据</summary>
      
    
    
    
    <category term="FastAPI入门" scheme="https://blockzachary.github.io/categories/FastAPI%E5%85%A5%E9%97%A8/"/>
    
    
    <category term="Python" scheme="https://blockzachary.github.io/tags/Python/"/>
    
    <category term="Vue3" scheme="https://blockzachary.github.io/tags/Vue3/"/>
    
    <category term="FastAPI" scheme="https://blockzachary.github.io/tags/FastAPI/"/>
    
    <category term="实战" scheme="https://blockzachary.github.io/tags/%E5%AE%9E%E6%88%98/"/>
    
  </entry>
  
  <entry>
    <title>Linux手册</title>
    <link href="https://blockzachary.github.io/2024/05/16/Linux/%E6%89%8B%E5%86%8C/"/>
    <id>https://blockzachary.github.io/2024/05/16/Linux/%E6%89%8B%E5%86%8C/</id>
    <published>2024-05-16T00:12:00.000Z</published>
    <updated>2024-05-16T00:12:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="手册"><a href="#手册" class="headerlink" title="手册"></a>手册</h1><h1 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h1><h2 id="Linux-关机-重启"><a href="#Linux-关机-重启" class="headerlink" title="Linux 关机,重启"></a>Linux 关机,重启</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">#</span>关机</span><br><span class="line">shutdown -h now</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>重启</span><br><span class="line">shutdown -r now</span><br></pre></td></tr></table></figure><h2 id="查看系统-CPU-信息"><a href="#查看系统-CPU-信息" class="headerlink" title="查看系统,CPU 信息"></a>查看系统,CPU 信息</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">#</span>查看系统内核信息</span><br><span class="line">uname -a</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>查看系统内核版本</span><br><span class="line">cat /proc/version</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>查看当前用户环境变量</span><br><span class="line">env</span><br><span class="line"></span><br><span class="line">cat /proc/cpuinfo</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>查看有几个逻辑cpu, 包括cpu型号</span><br><span class="line">cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>查看有几颗cpu,每颗分别是几核</span><br><span class="line">cat /proc/cpuinfo | grep physical | uniq -c</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>查看当前CPU运行在32bit还是64bit模式下, 如果是运行在32bit下也不代表CPU不支持64bit</span><br><span class="line">getconf LONG<span class="built_in">_</span>BIT</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>结果大于0, 说明支持64bit计算. lm指long mode, 支持lm则是64bit</span><br><span class="line">cat /proc/cpuinfo | grep flags | grep &#x27; lm &#x27; | wc -l</span><br></pre></td></tr></table></figure><h2 id="建立软连接"><a href="#建立软连接" class="headerlink" title="建立软连接"></a>建立软连接</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/local/jdk1.8/ jdk</span><br></pre></td></tr></table></figure><h2 id="rpm-相关"><a href="#rpm-相关" class="headerlink" title="rpm 相关"></a>rpm 相关</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">#</span>查看是否通过rpm安装了该软件</span><br><span class="line">rpm -qa | grep 软件名</span><br></pre></td></tr></table></figure><h2 id="sshkey"><a href="#sshkey" class="headerlink" title="sshkey"></a>sshkey</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">#</span>创建sshkey</span><br><span class="line">ssh-keygen -t rsa -C your<span class="built_in">_</span>email@example.com</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>id<span class="built_in">_</span>rsa.pub 的内容拷贝到要控制的服务器的 home/username/.ssh/authorized<span class="built_in">_</span>keys 中,如果没有则新建(.ssh权限为700, authorized<span class="built_in">_</span>keys权限为600)</span><br></pre></td></tr></table></figure><h2 id="命令重命名"><a href="#命令重命名" class="headerlink" title="命令重命名"></a>命令重命名</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">#</span>在各个用户的.bash<span class="built_in">_</span>profile中添加重命名配置</span><br><span class="line">alias ll=&#x27;ls -alF&#x27;</span><br></pre></td></tr></table></figure><h2 id="同步服务器时间"><a href="#同步服务器时间" class="headerlink" title="同步服务器时间"></a>同步服务器时间</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ntpdate -u ntp.api.bz</span><br></pre></td></tr></table></figure><h2 id="后台运行命令"><a href="#后台运行命令" class="headerlink" title="后台运行命令"></a>后台运行命令</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">#</span>后台运行,并且有nohup.out输出</span><br><span class="line">nohup xxx <span class="built_in">&amp;</span></span><br><span class="line"></span><br><span class="line"><span class="params">#</span>后台运行, 不输出任何日志</span><br><span class="line">nohup xxx &gt; /dev/null <span class="built_in">&amp;</span></span><br><span class="line"></span><br><span class="line"><span class="params">#</span>后台运行, 并将错误信息做标准输出到日志中</span><br><span class="line">nohup xxx &gt;out.log 2&gt;<span class="built_in">&amp;</span>1 <span class="built_in">&amp;</span></span><br></pre></td></tr></table></figure><h2 id="强制活动用户退出"><a href="#强制活动用户退出" class="headerlink" title="强制活动用户退出"></a>强制活动用户退出</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">#</span>命令来完成强制活动用户退出.其中TTY表示终端名称</span><br><span class="line">pkill -kill -t [TTY]</span><br></pre></td></tr></table></figure><h2 id="查看命令路径"><a href="#查看命令路径" class="headerlink" title="查看命令路径"></a>查看命令路径</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">which &lt;命令&gt;</span><br></pre></td></tr></table></figure><h2 id="查看进程所有打开最大-fd-数"><a href="#查看进程所有打开最大-fd-数" class="headerlink" title="查看进程所有打开最大 fd 数"></a>查看进程所有打开最大 fd 数</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ulimit -n</span><br></pre></td></tr></table></figure><h2 id="配置-dns"><a href="#配置-dns" class="headerlink" title="配置 dns"></a>配置 dns</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/resolv.conf</span><br></pre></td></tr></table></figure><h2 id="nslookup-查看域名路由表"><a href="#nslookup-查看域名路由表" class="headerlink" title="nslookup,查看域名路由表"></a>nslookup,查看域名路由表</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nslookup google.com</span><br></pre></td></tr></table></figure><h2 id="last-最近登录信息列表"><a href="#last-最近登录信息列表" class="headerlink" title="last, 最近登录信息列表"></a>last, 最近登录信息列表</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">#</span>最近登录的5个账号</span><br><span class="line">last -n 5</span><br></pre></td></tr></table></figure><h2 id="设置固定-ip"><a href="#设置固定-ip" class="headerlink" title="设置固定 ip"></a>设置固定 ip</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig em1  192.168.5.177 netmask 255.255.255.0</span><br></pre></td></tr></table></figure><h2 id="查看进程内加载的环境变量"><a href="#查看进程内加载的环境变量" class="headerlink" title="查看进程内加载的环境变量"></a>查看进程内加载的环境变量</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">#</span>也可以去 cd /proc 目录下, 查看进程内存中加载的东西</span><br><span class="line">ps eww -p  XXXXX(进程号)</span><br></pre></td></tr></table></figure><h2 id="查看进程树找到服务器进程"><a href="#查看进程树找到服务器进程" class="headerlink" title="查看进程树找到服务器进程"></a>查看进程树找到服务器进程</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps auwxf</span><br></pre></td></tr></table></figure><h2 id="查看进程启动路径"><a href="#查看进程启动路径" class="headerlink" title="查看进程启动路径"></a>查看进程启动路径</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /proc/xxx(进程号)</span><br><span class="line">ls -all</span><br><span class="line"><span class="params">#</span>cwd对应的是启动路径</span><br></pre></td></tr></table></figure><h2 id="添加用户-配置-sudo-权限"><a href="#添加用户-配置-sudo-权限" class="headerlink" title="添加用户, 配置 sudo 权限"></a>添加用户, 配置 sudo 权限</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">#</span>新增用户</span><br><span class="line">useradd 用户名</span><br><span class="line">passwd 用户名</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>增加sudo权限</span><br><span class="line">vim /etc/sudoers</span><br><span class="line"><span class="params">#</span>修改文件里面的</span><br><span class="line"><span class="params">#</span>root    ALL=(ALL)       ALL</span><br><span class="line"><span class="params">#</span>用户名 ALL=(ALL)       ALL</span><br></pre></td></tr></table></figure><h2 id="强制关闭进程名包含-xxx-的所有进程"><a href="#强制关闭进程名包含-xxx-的所有进程" class="headerlink" title="强制关闭进程名包含 xxx 的所有进程"></a>强制关闭进程名包含 xxx 的所有进程</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps aux|grep xxx | grep -v grep | awk &#x27;&#123;print <span class="built_in">$</span>2&#125;&#x27; | xargs kill -9</span><br></pre></td></tr></table></figure><h1 id="磁盘-文件-目录相关操作"><a href="#磁盘-文件-目录相关操作" class="headerlink" title="磁盘,文件,目录相关操作"></a>磁盘,文件,目录相关操作</h1><h2 id="vim-操作"><a href="#vim-操作" class="headerlink" title="vim 操作"></a>vim 操作</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">#</span>normal模式下 g表示全局, x表示查找的内容, y表示替换后的内容</span><br><span class="line">:<span class="comment">%s/x/y/g</span></span><br><span class="line"></span><br><span class="line"><span class="params">#</span>normal模式下</span><br><span class="line">0  <span class="params">#</span>光标移到行首(数字0)</span><br><span class="line"><span class="built_in">$</span>  <span class="params">#</span>光标移至行尾</span><br><span class="line">shift + g <span class="params">#</span>跳到文件最后</span><br><span class="line">gg <span class="params">#</span>跳到文件头</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>显示行号</span><br><span class="line">:set nu</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>去除行号</span><br><span class="line">:set nonu</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>检索</span><br><span class="line">/xxx(检索内容)  <span class="params">#</span>从头检索, 按n查找下一个</span><br><span class="line">?xxx(检索内容)  <span class="params">#</span>从尾部检索</span><br></pre></td></tr></table></figure><h2 id="打开只读文件-修改后需要保存时-不用切换用户即可保存的方式"><a href="#打开只读文件-修改后需要保存时-不用切换用户即可保存的方式" class="headerlink" title="打开只读文件,修改后需要保存时(不用切换用户即可保存的方式)"></a>打开只读文件,修改后需要保存时(不用切换用户即可保存的方式)</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">#</span>在normal模式下</span><br><span class="line">:w !sudo tee <span class="comment">%</span></span><br></pre></td></tr></table></figure><h2 id="查看磁盘-文件目录基本信息"><a href="#查看磁盘-文件目录基本信息" class="headerlink" title="查看磁盘, 文件目录基本信息"></a>查看磁盘, 文件目录基本信息</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">#</span>查看磁盘挂载情况</span><br><span class="line">mount</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>查看磁盘分区信息</span><br><span class="line">df</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>查看目录及子目录大小</span><br><span class="line">du -H -h</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>查看当前目录下各个文件, 文件夹占了多少空间, 不会递归</span><br><span class="line">du -sh *</span><br></pre></td></tr></table></figure><h2 id="wc-命令"><a href="#wc-命令" class="headerlink" title="wc 命令"></a>wc 命令</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">#</span>查看文件里有多少行</span><br><span class="line">wc -l filename</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>看文件里有多少个word</span><br><span class="line">wc -w filename</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>文件里最长的那一行是多少个字</span><br><span class="line">wc -L filename</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>统计字节数</span><br><span class="line">wc -c</span><br></pre></td></tr></table></figure><h2 id="常用压缩-解压缩命令"><a href="#常用压缩-解压缩命令" class="headerlink" title="常用压缩, 解压缩命令"></a>常用压缩, 解压缩命令</h2><h3 id="压缩命令"><a href="#压缩命令" class="headerlink" title="压缩命令"></a>压缩命令</h3><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tar czvf xxx.tar 压缩目录</span><br><span class="line"></span><br><span class="line">zip -r xxx.zip 压缩目录</span><br></pre></td></tr></table></figure><h3 id="解压缩命令"><a href="#解压缩命令" class="headerlink" title="解压缩命令"></a>解压缩命令</h3><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf xxx.tar</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>解压到指定文件夹</span><br><span class="line">tar zxvf xxx.tar -C /xxx/yyy/</span><br><span class="line"></span><br><span class="line">unzip xxx.zip</span><br></pre></td></tr></table></figure><h2 id="变更文件所属用户-用户组"><a href="#变更文件所属用户-用户组" class="headerlink" title="变更文件所属用户, 用户组"></a>变更文件所属用户, 用户组</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown eagleye.eagleye xxx.log</span><br></pre></td></tr></table></figure><h2 id="cp-scp-mkdir"><a href="#cp-scp-mkdir" class="headerlink" title="cp, scp, mkdir"></a>cp, scp, mkdir</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">#</span>复制</span><br><span class="line">cp xxx.log</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>复制并强制覆盖同名文件</span><br><span class="line">cp -f xxx.log</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>复制文件夹</span><br><span class="line">cp -r xxx(源文件夹) yyy(目标文件夹)</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>远程复制</span><br><span class="line">scp -P ssh端口 username@10.10.10.101:/home/username/xxx /home/xxx</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>级联创建目录</span><br><span class="line">mkdir -p /xxx/yyy/zzz</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>批量创建文件夹, 会在test,main下都创建java, resources文件夹</span><br><span class="line">mkdir -p src/&#123;test,main&#125;/&#123;java,resources&#125;</span><br></pre></td></tr></table></figure><h2 id="比较两个文件"><a href="#比较两个文件" class="headerlink" title="比较两个文件"></a>比较两个文件</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">diff -u 1.txt 2.txt</span><br></pre></td></tr></table></figure><h2 id="日志输出的字节数-可以用作性能测试"><a href="#日志输出的字节数-可以用作性能测试" class="headerlink" title="日志输出的字节数,可以用作性能测试"></a>日志输出的字节数,可以用作性能测试</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">#</span>如果做性能测试, 可以每执行一次, 往日志里面输出 “.” , 这样日志中的字节数就是实际的性能测试运行的次数, 还可以看见实时速率.</span><br><span class="line">tail -f xxx.log | pv -bt</span><br></pre></td></tr></table></figure><h2 id="查看-去除特殊字符"><a href="#查看-去除特殊字符" class="headerlink" title="查看, 去除特殊字符"></a>查看, 去除特殊字符</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">#</span>查看特殊字符</span><br><span class="line">cat -v xxx.sh</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>去除特殊字符</span><br><span class="line">sed -i &#x27;s/<span class="built_in">^</span>M//g’ env.sh  去除文件的特殊字符, 比如<span class="built_in">^</span>M:  需要这样输入: ctrl+v+enter</span><br></pre></td></tr></table></figure><h2 id="处理因系统原因引起的文件中特殊字符的问题"><a href="#处理因系统原因引起的文件中特殊字符的问题" class="headerlink" title="处理因系统原因引起的文件中特殊字符的问题"></a>处理因系统原因引起的文件中特殊字符的问题</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">#</span>可以转换为该系统下的文件格式</span><br><span class="line">cat file.sh &gt; file.sh<span class="built_in">_</span>bak</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>先将file.sh中文件内容复制下来然后运行, 然后粘贴内容, 最后ctrl + d 保存退出</span><br><span class="line">cat &gt; file1.sh</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>在vim中通过如下设置文件编码和文件格式</span><br><span class="line">:set fileencodings=utf-8 ，然后 w （存盘）一下即可转化为 utf8 格式，</span><br><span class="line">:set fileformat=unix</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>在mac下使用dos2unix进行文件格式化</span><br><span class="line">find . -name &quot;*.sh&quot; | xargs dos2unix</span><br></pre></td></tr></table></figure><h2 id="tee-重定向的同时输出到屏幕"><a href="#tee-重定向的同时输出到屏幕" class="headerlink" title="tee, 重定向的同时输出到屏幕"></a>tee, 重定向的同时输出到屏幕</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk ‘&#123;print <span class="built_in">$</span>0&#125;’ xxx.log | tee test.log</span><br></pre></td></tr></table></figure><h1 id="检索相关"><a href="#检索相关" class="headerlink" title="检索相关"></a>检索相关</h1><h2 id="grep"><a href="#grep" class="headerlink" title="grep"></a>grep</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">#</span>反向匹配, 查找不包含xxx的内容</span><br><span class="line">grep -v xxx</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>排除所有空行</span><br><span class="line">grep -v &#x27;<span class="built_in">^</span>/pre&gt;</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>返回结果 2,则说明第二行是空行</span><br><span class="line">grep -n “<span class="built_in">^</span><span class="built_in">$</span>” 111.txt</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>查询以abc开头的行</span><br><span class="line">grep -n “<span class="built_in">^</span>abc” 111.txt</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>同时列出该词语出现在文章的第几行</span><br><span class="line">grep &#x27;xxx&#x27; -n xxx.log</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>计算一下该字串出现的次数</span><br><span class="line">grep &#x27;xxx&#x27; -c xxx.log</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>比对的时候，不计较大小写的不同</span><br><span class="line">grep &#x27;xxx&#x27; -i xxx.log</span><br></pre></td></tr></table></figure><h2 id="awk"><a href="#awk" class="headerlink" title="awk"></a>awk</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">#</span>以&#x27;:&#x27; 为分隔符,如果第五域有user则输出该行</span><br><span class="line">awk -F &#x27;:&#x27; &#x27;&#123;if (<span class="built_in">$</span>5 ~ /user/) print <span class="built_in">$</span>0&#125;&#x27; /etc/passwd</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>统计单个文件中某个字符（串）(中文无效)出现的次数</span><br><span class="line">awk -v RS=&#x27;character&#x27; &#x27;END &#123;print --NR&#125;&#x27; xxx.txt</span><br></pre></td></tr></table></figure><h2 id="find-检索命令"><a href="#find-检索命令" class="headerlink" title="find 检索命令"></a>find 检索命令</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">#</span>在目录下找后缀是.mysql的文件</span><br><span class="line">find /home/eagleye -name &#x27;*.mysql&#x27; -print</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>会从 /usr 目录开始往下找，找最近3天之内存取过的文件。</span><br><span class="line">find /usr -atime 3 –print</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>会从 /usr 目录开始往下找，找最近5天之内修改过的文件。</span><br><span class="line">find /usr -ctime 5 –print</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>会从 /doc 目录开始往下找，找jacky 的、文件名开头是 j的文件。</span><br><span class="line">find /doc -user jacky -name &#x27;j*&#x27; –print</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>会从 /doc 目录开始往下找，找寻文件名是 ja 开头或者 ma开头的文件。</span><br><span class="line">find /doc <span class="keyword">\(</span> -name &#x27;ja*&#x27; -o- -name &#x27;ma*&#x27; <span class="keyword">\)</span> –print</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>会从 /doc 目录开始往下找，找到凡是文件名结尾为 bak的文件，把它删除掉。-exec 选项是执行的意思，rm 是删除命令，&#123; &#125; 表示文件名，“<span class="keyword">\;</span>”是规定的命令结尾。</span><br><span class="line">find /doc -name &#x27;*bak&#x27; -exec rm &#123;&#125; <span class="keyword">\;</span></span><br></pre></td></tr></table></figure><h1 id="网络相关"><a href="#网络相关" class="headerlink" title="网络相关"></a>网络相关</h1><h2 id="查看什么进程使用了该端口"><a href="#查看什么进程使用了该端口" class="headerlink" title="查看什么进程使用了该端口"></a>查看什么进程使用了该端口</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsof -i:port</span><br></pre></td></tr></table></figure><h2 id="获取本机-ip-地址"><a href="#获取本机-ip-地址" class="headerlink" title="获取本机 ip 地址"></a>获取本机 ip 地址</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/sbin/ifconfig -a|grep inet|grep -v 127.0.0.1|grep -v inet6|awk &#x27;&#123;print <span class="built_in">$</span>2&#125;&#x27;|tr -d &quot;addr:&quot;</span><br></pre></td></tr></table></figure><h2 id="iptables"><a href="#iptables" class="headerlink" title="iptables"></a>iptables</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">#</span>查看iptables状态</span><br><span class="line">service iptables status</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>要封停一个ip</span><br><span class="line">iptables -I INPUT -s ***.***.***.*** -j DROP</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>要解封一个IP，使用下面这条命令：</span><br><span class="line">iptables -D INPUT -s ***.***.***.*** -j DROP</span><br><span class="line"></span><br><span class="line">备注: 参数-I是表示Insert（添加），-D表示Delete（删除）。后面跟的是规则，INPUT表示入站，***.***.***.***表示要封停的IP，DROP表示放弃连接。</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>开启9090端口的访问</span><br><span class="line">/sbin/iptables -I INPUT -p tcp --dport 9090 -j ACCEPT</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>防火墙开启、关闭、重启</span><br><span class="line">/etc/init.d/iptables status</span><br><span class="line">/etc/init.d/iptables start</span><br><span class="line">/etc/init.d/iptables stop</span><br><span class="line">/etc/init.d/iptables restart</span><br></pre></td></tr></table></figure><h2 id="nc-命令-tcp-调试利器"><a href="#nc-命令-tcp-调试利器" class="headerlink" title="nc 命令, tcp 调试利器"></a>nc 命令, tcp 调试利器</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">#</span>给某一个endpoint发送TCP请求,就将data的内容发送到对端</span><br><span class="line">nc 192.168.0.11 8000 &lt; data.txt</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>nc可以当做服务器，监听某个端口号,把某一次请求的内容存储到received<span class="built_in">_</span>data里</span><br><span class="line">nc -l 8000 &gt; received<span class="built_in">_</span>data</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>上边只监听一次，如果多次可以加上-k参数</span><br><span class="line">nc -lk 8000</span><br></pre></td></tr></table></figure><h2 id="tcpdump"><a href="#tcpdump" class="headerlink" title="tcpdump"></a>tcpdump</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">#</span>dump出本机12301端口的tcp包</span><br><span class="line">tcpdump -i em1 tcp port 12301 -s 1500 -w abc.pcap</span><br></pre></td></tr></table></figure><h2 id="跟踪网络路由路径"><a href="#跟踪网络路由路径" class="headerlink" title="跟踪网络路由路径"></a>跟踪网络路由路径</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">#</span>traceroute默认使用udp方式, 如果是-I则改成icmp方式</span><br><span class="line">traceroute -I www.163.com</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>从ttl第3跳跟踪</span><br><span class="line">traceroute -M 3 www.163.com</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>加上端口跟踪</span><br><span class="line">traceroute -p 8080 192.168.10.11</span><br></pre></td></tr></table></figure><h2 id="ss"><a href="#ss" class="headerlink" title="ss"></a>ss</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">#</span>显示本地打开的所有端口</span><br><span class="line">ss -l</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>显示每个进程具体打开的socket</span><br><span class="line">ss -pl</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>显示所有tcp socket</span><br><span class="line">ss -t -a</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>显示所有的UDP Socekt</span><br><span class="line">ss -u -a</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>显示所有已建立的SMTP连接</span><br><span class="line">ss -o state established &#x27;( dport = :smtp or sport = :smtp )&#x27;</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>显示所有已建立的HTTP连接</span><br><span class="line">ss -o state established &#x27;( dport = :http or sport = :http )&#x27;</span><br><span class="line"></span><br><span class="line">找出所有连接X服务器的进程</span><br><span class="line">ss -x src /tmp/.X11-unix/*</span><br><span class="line"></span><br><span class="line">列出当前socket统计信息</span><br><span class="line">ss -s</span><br><span class="line"></span><br><span class="line">解释：netstat是遍历/proc下面每个PID目录，ss直接读/proc/net下面的统计信息。所以ss执行的时候消耗资源以及消耗的时间都比netstat少很多</span><br></pre></td></tr></table></figure><h2 id="netstat"><a href="#netstat" class="headerlink" title="netstat"></a>netstat</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">#</span>输出每个ip的连接数，以及总的各个状态的连接数</span><br><span class="line">netstat -n | awk &#x27;/<span class="built_in">^</span>tcp/ &#123;n=split(<span class="built_in">$</span>(NF-1),array,&quot;:&quot;);if(n&lt;=2)++S[array[(1)]];else++S[array[(4)]];++s[<span class="built_in">$</span>NF];++N&#125; END &#123;for(a in S)&#123;printf(&quot;<span class="comment">%-20s %s\n&quot;, a, S[a]);++I&#125;printf(&quot;%-20s %s\n&quot;,&quot;TOTAL_IP&quot;,I);for(a in s) printf(&quot;%-20s %s\n&quot;,a, s[a]);printf(&quot;%-20s %s\n&quot;,&quot;TOTAL_LINK&quot;,N);&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="params">#</span>统计所有连接状态,</span><br><span class="line"><span class="params">#</span>CLOSED：无连接是活动的或正在进行</span><br><span class="line"><span class="params">#</span>LISTEN：服务器在等待进入呼叫</span><br><span class="line"><span class="params">#</span>SYN<span class="built_in">_</span>RECV：一个连接请求已经到达，等待确认</span><br><span class="line"><span class="params">#</span>SYN<span class="built_in">_</span>SENT：应用已经开始，打开一个连接</span><br><span class="line"><span class="params">#</span>ESTABLISHED：正常数据传输状态</span><br><span class="line"><span class="params">#</span>FIN<span class="built_in">_</span>WAIT1：应用说它已经完成</span><br><span class="line"><span class="params">#</span>FIN<span class="built_in">_</span>WAIT2：另一边已同意释放</span><br><span class="line"><span class="params">#</span>ITMED<span class="built_in">_</span>WAIT：等待所有分组死掉</span><br><span class="line"><span class="params">#</span>CLOSING：两边同时尝试关闭</span><br><span class="line"><span class="params">#</span>TIME<span class="built_in">_</span>WAIT：主动关闭连接一端还没有等到另一端反馈期间的状态</span><br><span class="line"><span class="params">#</span>LAST<span class="built_in">_</span>ACK：等待所有分组死掉</span><br><span class="line">netstat -n | awk &#x27;/<span class="built_in">^</span>tcp/ &#123;++state[<span class="built_in">$</span>NF]&#125; END &#123;for(key in state) print key,&quot;<span class="keyword">\t</span>&quot;,state[key]&#125;&#x27;</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>查找较多time<span class="built_in">_</span>wait连接</span><br><span class="line">netstat -n|grep TIME<span class="built_in">_</span>WAIT|awk &#x27;&#123;print <span class="built_in">$</span>5&#125;&#x27;|sort|uniq -c|sort -rn|head -n20</span><br></pre></td></tr></table></figure><h1 id="监控-linux-性能命令"><a href="#监控-linux-性能命令" class="headerlink" title="监控 linux 性能命令"></a>监控 linux 性能命令</h1><h2 id="top"><a href="#top" class="headerlink" title="top"></a>top</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">按大写的 F 或 O 键，然后按 a-z 可以将进程按照相应的列进行排序, 然后回车。而大写的 R 键可以将当前的排序倒转</span><br></pre></td></tr></table></figure><table><thead><tr><th>列名</th><th>含义</th></tr></thead><tbody><tr><td>PID</td><td>进程 id</td></tr><tr><td>PPID</td><td>父进程 id</td></tr><tr><td>RUSER</td><td>Real user name</td></tr><tr><td>UID</td><td>进程所有者的用户 id</td></tr><tr><td>USER</td><td>进程所有者的用户名</td></tr><tr><td>GROUP</td><td>进程所有者的组名</td></tr><tr><td>TTY</td><td>启动进程的终端名。不是从终端启动的进程则显示为 ?</td></tr><tr><td>PR</td><td>优先级</td></tr><tr><td>NI</td><td>nice 值。负值表示高优先级，正值表示低优先级</td></tr><tr><td>P</td><td>最后使用的 CPU，仅在多 CPU 环境下有意义</td></tr><tr><td>%CPU</td><td>上次更新到现在的 CPU 时间占用百分比</td></tr><tr><td>TIME</td><td>进程使用的 CPU 时间总计，单位秒</td></tr><tr><td>TIME+</td><td>进程使用的 CPU 时间总计，单位 1&#x2F;100 秒</td></tr><tr><td>%MEM</td><td>进程使用的物理内存百分比</td></tr><tr><td>VIRT</td><td>进程使用的虚拟内存总量，单位 kb。VIRT&#x3D;SWAP+RES</td></tr><tr><td>SWAP</td><td>进程使用的虚拟内存中，被换出的大小，单位 kb。</td></tr><tr><td>RES</td><td>进程使用的、未被换出的物理内存大小，单位 kb。RES&#x3D;CODE+DATA</td></tr><tr><td>CODE</td><td>可执行代码占用的物理内存大小，单位 kb</td></tr><tr><td>DATA</td><td>可执行代码以外的部分(数据段+栈)占用的物理内存大小，单位 kb</td></tr><tr><td>SHR</td><td>共享内存大小，单位 kb</td></tr><tr><td>nFLT</td><td>页面错误次数</td></tr><tr><td>nDRT</td><td>最后一次写入到现在，被修改过的页面数。</td></tr><tr><td>S</td><td>进程状态。D&#x3D;不可中断的睡眠状态,R&#x3D;运行,S&#x3D;睡眠,T&#x3D;跟踪&#x2F;停止,Z&#x3D;僵尸进程</td></tr><tr><td>COMMAND</td><td>命令名&#x2F;命令行</td></tr><tr><td>WCHAN</td><td>若该进程在睡眠，则显示睡眠中的系统函数名</td></tr><tr><td>Flags</td><td>任务标志，参考 sched.h</td></tr></tbody></table><h2 id="dmesg-查看系统日志"><a href="#dmesg-查看系统日志" class="headerlink" title="dmesg,查看系统日志"></a>dmesg,查看系统日志</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dmesg</span><br></pre></td></tr></table></figure><h2 id="iostat-磁盘-IO-情况监控"><a href="#iostat-磁盘-IO-情况监控" class="headerlink" title="iostat,磁盘 IO 情况监控"></a>iostat,磁盘 IO 情况监控</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">iostat -xz 1</span><br><span class="line"></span><br><span class="line"><span class="params">#</span>r/s, w/s, rkB/s, wkB/s：分别表示每秒读写次数和每秒读写数据量（千字节）。读写量过大，可能会引起性能问题。</span><br><span class="line"><span class="params">#</span>await：IO操作的平均等待时间，单位是毫秒。这是应用程序在和磁盘交互时，需要消耗的时间，包括IO等待和实际操作的耗时。如果这个数值过大，可能是硬件设备遇到了瓶颈或者出现故障。</span><br><span class="line"><span class="params">#</span>avgqu-sz：向设备发出的请求平均数量。如果这个数值大于1，可能是硬件设备已经饱和（部分前端硬件设备支持并行写入）。</span><br><span class="line"><span class="params">#</span><span class="comment">%util：设备利用率。这个数值表示设备的繁忙程度，经验值是如果超过60，可能会影响IO性能（可以参照IO操作平均等待时间）。如果到达100%，说明硬件设备已经饱和。</span></span><br><span class="line"><span class="params">#</span>如果显示的是逻辑设备的数据，那么设备利用率不代表后端实际的硬件设备已经饱和。值得注意的是，即使IO性能不理想，也不一定意味这应用程序性能会不好，可以利用诸如预读取、写缓存等策略提升应用性能。</span><br></pre></td></tr></table></figure><h2 id="free-内存使用情况"><a href="#free-内存使用情况" class="headerlink" title="free,内存使用情况"></a>free,内存使用情况</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">free -m</span><br><span class="line"></span><br><span class="line">eg:</span><br><span class="line"></span><br><span class="line">     total       used       free     shared    buffers     cached</span><br><span class="line">Mem:          1002        769        232          0         62        421</span><br><span class="line">-/+ buffers/cache:          286        715</span><br><span class="line">Swap:          1153          0       1153</span><br><span class="line"></span><br><span class="line">第一部分Mem行:</span><br><span class="line">total 内存总数: 1002M</span><br><span class="line">used 已经使用的内存数: 769M</span><br><span class="line">free 空闲的内存数: 232M</span><br><span class="line">shared 当前已经废弃不用,总是0</span><br><span class="line">buffers Buffer 缓存内存数: 62M</span><br><span class="line">cached Page 缓存内存数:421M</span><br><span class="line"></span><br><span class="line">关系：total(1002M) = used(769M) + free(232M)</span><br><span class="line"></span><br><span class="line">第二部分(-/+ buffers/cache):</span><br><span class="line">(-buffers/cache) used内存数：286M (指的第一部分Mem行中的used – buffers – cached)</span><br><span class="line">(+buffers/cache) free内存数: 715M (指的第一部分Mem行中的free + buffers + cached)</span><br><span class="line"></span><br><span class="line">可见-buffers/cache反映的是被程序实实在在吃掉的内存,而+buffers/cache反映的是可以挪用的内存总数.</span><br><span class="line"></span><br><span class="line">第三部分是指交换分区</span><br></pre></td></tr></table></figure><h2 id="sar-查看网络吞吐状态"><a href="#sar-查看网络吞吐状态" class="headerlink" title="sar,查看网络吞吐状态"></a>sar,查看网络吞吐状态</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">#</span>sar命令在这里可以查看网络设备的吞吐率。在排查性能问题时，可以通过网络设备的吞吐量，判断网络设备是否已经饱和</span><br><span class="line">sar -n DEV 1</span><br><span class="line"></span><br><span class="line"><span class="params">#</span></span><br><span class="line"><span class="params">#</span>sar命令在这里用于查看TCP连接状态，其中包括：</span><br><span class="line"><span class="params">#</span>active/s：每秒本地发起的TCP连接数，既通过connect调用创建的TCP连接；</span><br><span class="line"><span class="params">#</span>passive/s：每秒远程发起的TCP连接数，即通过accept调用创建的TCP连接；</span><br><span class="line"><span class="params">#</span>retrans/s：每秒TCP重传数量；</span><br><span class="line"><span class="params">#</span>TCP连接数可以用来判断性能问题是否由于建立了过多的连接，进一步可以判断是主动发起的连接，还是被动接受的连接。TCP重传可能是因为网络环境恶劣，或者服务器压力过大导致丢包</span><br><span class="line">sar -n TCP,ETCP 1</span><br></pre></td></tr></table></figure><h2 id="vmstat-给定时间监控-CPU-使用率-内存使用-虚拟内存交互-IO-读写"><a href="#vmstat-给定时间监控-CPU-使用率-内存使用-虚拟内存交互-IO-读写" class="headerlink" title="vmstat, 给定时间监控 CPU 使用率, 内存使用, 虚拟内存交互, IO 读写"></a>vmstat, 给定时间监控 CPU 使用率, 内存使用, 虚拟内存交互, IO 读写</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">#2</span>表示每2秒采集一次状态信息, 1表示只采集一次(忽略既是一直采集)</span><br><span class="line">vmstat 2 1</span><br><span class="line"></span><br><span class="line">eg:</span><br><span class="line">r b swpd free buff cache si so bi bo in cs us sy id wa</span><br><span class="line">1 0 0 3499840 315836 3819660 0 0 0 1 2 0 0 0 100 0</span><br><span class="line">0 0 0 3499584 315836 3819660 0 0 0 0 88 158 0 0 100 0</span><br><span class="line">0 0 0 3499708 315836 3819660 0 0 0 2 86 162 0 0 100 0</span><br><span class="line">0 0 0 3499708 315836 3819660 0 0 0 10 81 151 0 0 100 0</span><br><span class="line">1 0 0 3499732 315836 3819660 0 0 0 2 83 154 0 0 100 0</span><br></pre></td></tr></table></figure><ul><li>r 表示运行队列(就是说多少个进程真的分配到 CPU)，我测试的服务器目前 CPU 比较空闲，没什么程序在跑，当这个值超过了 CPU 数目，就会出现 CPU 瓶颈了。这个也和 top 的负载有关系，一般负载超过了 3 就比较高，超过了 5 就高，超过了 10 就不正常了，服务器的状态很危险。top 的负载类似每秒的运行队列。如果运行队列过大，表示你的 CPU 很繁忙，一般会造成 CPU 使用率很高。</li><li>b 表示阻塞的进程,这个不多说，进程阻塞，大家懂的。</li><li>swpd 虚拟内存已使用的大小，如果大于 0，表示你的机器物理内存不足了，如果不是程序内存泄露的原因，那么你该升级内存了或者把耗内存的任务迁移到其他机器。</li><li>free 空闲的物理内存的大小，我的机器内存总共 8G，剩余 3415M。</li><li>buff Linux&#x2F;Unix 系统是用来存储，目录里面有什么内容，权限等的缓存，我本机大概占用 300 多 M</li><li>cache cache 直接用来记忆我们打开的文件,给文件做缓冲，我本机大概占用 300 多 M(这里是 Linux&#x2F;Unix 的聪明之处，把空闲的物理内存的一部分拿来做文件和目录的缓存，是为了提高 程序执行的性能，当程序使用内存时，buffer&#x2F;cached 会很快地被使用。)</li><li>si 每秒从磁盘读入虚拟内存的大小，如果这个值大于 0，表示物理内存不够用或者内存泄露了，要查找耗内存进程解决掉。我的机器内存充裕，一切正常。</li><li>so 每秒虚拟内存写入磁盘的大小，如果这个值大于 0，同上。</li><li>bi 块设备每秒接收的块数量，这里的块设备是指系统上所有的磁盘和其他块设备，默认块大小是 1024byte，我本机上没什么 IO 操作，所以一直是 0，但是我曾在处理拷贝大量数据(2-3T)的机器上看过可以达到 140000&#x2F;s，磁盘写入速度差不多 140M 每秒</li><li>bo 块设备每秒发送的块数量，例如我们读取文件，bo 就要大于 0。bi 和 bo 一般都要接近 0，不然就是 IO 过于频繁，需要调整。</li><li>in 每秒 CPU 的中断次数，包括时间中断</li><li>cs 每秒上下文切换次数，例如我们调用系统函数，就要进行上下文切换，线程的切换，也要进程上下文切换，这个值要越小越好，太大了，要考虑调低线程或者进程的数目,例如在 apache 和 nginx 这种 web 服务器中，我们一般做性能测试时会进行几千并发甚至几万并发的测试，选择 web 服务器的进程可以由进程或者线程的峰值一直下调，压测，直到 cs 到一个比较小的值，这个进程和线程数就是比较合适的值了。系统调用也是，每次调用系统函数，我们的代码就会进入内核空间，导致上下文切换，这个是很耗资源，也要尽量避免频繁调用系统函数。上下文切换次数过多表示你的 CPU 大部分浪费在上下文切换，导致 CPU 干正经事的时间少了，CPU 没有充分利用，是不可取的。</li><li>us 用户 CPU 时间，我曾经在一个做加密解密很频繁的服务器上，可以看到 us 接近 100,r 运行队列达到 80(机器在做压力测试，性能表现不佳)。</li><li>sy 系统 CPU 时间，如果太高，表示系统调用时间长，例如是 IO 操作频繁。</li><li>id 空闲 CPU 时间，一般来说，id + us + sy &#x3D; 100,一般我认为 id 是空闲 CPU 使用率，us 是用户 CPU 使用率，sy 是系统 CPU 使用率。</li><li>wt 等待 IO CPU 时间。</li></ul><blockquote><p>更新: 2024-05-16 00:14:36<br>原文: <a href="https://www.yuque.com/zacharyblock/cx2om6/ik6dzvhn4ahxsfba">https://www.yuque.com/zacharyblock/cx2om6/ik6dzvhn4ahxsfba</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;手册&quot;&gt;&lt;a href=&quot;#手册&quot; class=&quot;headerlink&quot; title=&quot;手册&quot;&gt;&lt;/a&gt;手册&lt;/h1&gt;&lt;h1 id=&quot;基本操作&quot;&gt;&lt;a href=&quot;#基本操作&quot; class=&quot;headerlink&quot; title=&quot;基本操作&quot;&gt;&lt;/a&gt;基本操作&lt;/h</summary>
      
    
    
    
    <category term="Linux" scheme="https://blockzachary.github.io/categories/Linux/"/>
    
    
    <category term="Linux" scheme="https://blockzachary.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux基础</title>
    <link href="https://blockzachary.github.io/2024/05/16/Linux/Linux%E5%9F%BA%E7%A1%80/"/>
    <id>https://blockzachary.github.io/2024/05/16/Linux/Linux%E5%9F%BA%E7%A1%80/</id>
    <published>2024-05-16T00:00:00.000Z</published>
    <updated>2024-05-16T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linux-基础"><a href="#Linux-基础" class="headerlink" title="Linux 基础"></a>Linux 基础</h1><h2 id="安装-Ubuntu-系统"><a href="#安装-Ubuntu-系统" class="headerlink" title="安装 Ubuntu 系统"></a>安装 Ubuntu 系统</h2><p>这里我们就以安装虚拟机的方式在我们的电脑上安装 Linux 操作系统，我们选用 Ubuntu 作为教程，如果有经济实力，可以在腾讯云、阿里云之类的服务商购买一台云服务器，并选择预装 Ubuntu 系统；如果你还想搞嵌入式开发之类的工作，可以购买一台树莓派服务器，也可以在上面安装 Ubuntu 系统，相当于一台迷你主机。在你已经有云服务器的情况下，可以直接跳过虚拟机安装教学。</p><p>官网下载：<a href="https://cn.ubuntu.com/download/server/step1">https://cn.ubuntu.com/download/server/step1</a></p><p>注意是下载服务器版本，不是桌面版本。</p><h3 id="在虚拟机中安装"><a href="#在虚拟机中安装" class="headerlink" title="在虚拟机中安装"></a>在虚拟机中安装</h3><p>这里我们使用 VMware 进行安装，VMware 是一个虚拟化应用程序，它可以在我们当前运行的操作系统之上，创建一个虚线的主机，相当于创建了一台电脑，而我们就可以在这台电脑上安装各种各样的操作系统，并且我们可以自由为其分配 CPU 核心和内存以及硬盘容量（如果你接触过云计算相关内容，应该会对虚拟化技术有所了解）</p><p>官网下载：<a href="https://www.vmware.com/cn/products/workstation-pro/workstation-pro-evaluation.html">https://www.vmware.com/cn/products/workstation-pro/workstation-pro-evaluation.html</a></p><p>安装完成后，会出现一个类似于 CMD 的命令窗口，而我们就是通过输入命令来操作我们的操作系统。</p><h3 id="使用-SSH-远程连接"><a href="#使用-SSH-远程连接" class="headerlink" title="使用 SSH 远程连接"></a>使用 SSH 远程连接</h3><p>如果你使用的是树莓派或是云服务器，那么你会得到一个公网的 IP 地址，以及默认的用户名和密码，由于服务器安装的 Ubuntu 并不是在我们的电脑上运行的，那么我们怎么去远程操作呢？</p><p>比如我们要远程操作一台 Windows 电脑，直接使用远程桌面连接即可，但是 Ubuntu 上来就是命令行，这种情况下要实现远程连接就只能使用 SSH 终端。</p><p>SSH 是一种网络协议，用于计算机之间的加密登录。如果一个用户从本地计算机，使用 SSH 协议登录另一台远程计算机，我们就可以认为，这种登录是安全的，即使被中途截获，密码也不会泄露。最早的时候，互联网通信都是明文通信，一旦被截获，内容就暴露无疑。1995 年，芬兰学者 Tatu Ylonen 设计了 SSH 协议，将登录信息全部加密，成为互联网安全的一个基本解决方案，迅速在全世界获得推广，目前已经成为 Linux 系统的标准配置。</p><p>云服务器上安装的 Ubuntu 默认都是自带了 OpenSSH 服务端的，我们可以直接连接，如果你的 Ubuntu 服务器上没有安装 OpenSSH 服务器端，那么可以输入命令进行安装：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install openssh-server</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">输入后还需要你输入当前用户的密码才可以执行，至于为什么我们后面会说</span></span><br></pre></td></tr></table></figure><p>ssh 的开启命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service ssh start</span><br></pre></td></tr></table></figure><p>查看 ssh 进程</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -e|grep ssh</span><br></pre></td></tr></table></figure><p>非 root 用户如果登录不上 ssh</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown zachary:zachary -R /home/zachary</span><br></pre></td></tr></table></figure><p>这里我们使用 XShell 来进行 SSH 登陆，官网：<a href="https://www.netsarang.com/zh/free-for-home-school/">https://www.netsarang.com/zh/free-for-home-school/</a></p><p>直接使用 mac 下的终端进行登录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh zachary@172.16.59.130</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1715788970979-7ffb2b99-91b5-4fe8-be57-3491b1bc05df.png"></p><h3 id="文件系统介绍"><a href="#文件系统介绍" class="headerlink" title="文件系统介绍"></a>文件系统介绍</h3><p>在 Windows 下，我们的整个硬盘实际上可以被分为多个磁盘驱动器：</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1715788970973-a60f796b-3065-4a85-8473-32d627ba4e75.png"></p><p>我们一般习惯将软件装到 D 盘，文件数据存在 E 盘，系统和一些环境安装在 C 盘，根据不同的盘符进行划分，并且每个盘都有各自的存储容量大小。而在 Linux 中，没有这个概念，所有的文件都是位于根目录下的：</p><p><img src="https://cdn.nlark.com/yuque/0/2024/webp/38881094/1715788971071-ea8ff465-d9f5-4c69-8225-23c612491976.webp"></p><p>我们可以看到根目录下有很多个文件夹，它们都有着各自的划分：</p><ul><li>&#x2F;bin 可执行二进制文件的目录，如常用的命令 ls、tar、mv、cat 等实际上都是一些小的应用程序</li><li>&#x2F;home 普通用户的主目录，对应 Windows 下的 C:&#x2F;Users&#x2F;用户名&#x2F;</li><li>&#x2F;root root 用户的主目录（root 用户是具有最高权限的用户，之后会讲）</li><li>&#x2F;boot 内核文件的引导目录, 放置 linux 系统启动时用到的一些文件</li><li>&#x2F;sbing 超级用户使用的指令文件</li><li>&#x2F;tmp 临时文件目录，一般用户或正在执行的程序临时存放文件的目录，任何人都可以访问，重要数据不可放置在此目录下。</li><li>&#x2F;dev 设备文件目录，在 Linux 中万物皆文件，实际上你插入的 U 盘等设备都会在 dev 目录下生成一个文件，我们可以很方便地通过文件 IO 方式去操作外设，对嵌入式开发极为友好。</li><li>&#x2F;lib 共享库，系统使用的函数库的目录，程序在执行过程中，需要调用一些额外的参数时需要函数库的协助。</li><li>&#x2F;usr 第三方 程序目录</li><li>&#x2F;etc 配置程序目录，系统配置文件存放的目录</li><li>&#x2F;var 可变文件，放置系统执行过程中经常变化的文件</li><li>&#x2F;opt 用户使用目录，给主机额外安装软件所摆放的目录。</li></ul><p>我们可以直接输入命令来查看目录下的所有文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#只显示文件名称，且不显示隐藏文件</span></span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line"><span class="comment">#显示隐藏文件以及文件详细信息</span></span><br><span class="line">ll</span><br></pre></td></tr></table></figure><p>那么我们如何才能像 Windows 那样方便的管理 Linux 中的文件呢？我们可以使用 FTP 管理工具，默认情况下 Ubuntu 是安装了 SFTP 服务器的。</p><p>这里我们使用 Xftp 来进行管理，官网：<a href="https://www.netsarang.com/zh/free-for-home-school/">https://www.netsarang.com/zh/free-for-home-school/</a></p><hr><h2 id="用户和用户组"><a href="#用户和用户组" class="headerlink" title="用户和用户组"></a>用户和用户组</h2><p>我们整个 Linux 阶段的学习主要是以实操为主，大量的命令需要大量的使用才能记得更牢固。</p><p>Linux 系统是一个多用户多任务的分时操作系统，任何一个要使用系统的用户，都必须申请一个账号，然后以这个账号的身份进入系统。比如我们之前就是使用我们在创建服务器时申请的初始用户 test，通过输入用户名和密码登录到系统中，之后才能使用各种命令进行操作。其实用户机制和我们的 Windows 比较类似。一般的普通用户只能做一些比较基本的操作，并且只能在自己的目录（如&#x2F;home&#x2F;test）中进行文件的创建和删除操作。</p><p>我们可以看到，当前状态信息分为三段：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$</span><br></pre></td></tr></table></figure><p>格式为：用户名@服务器名称:当前所处的目录$，其中~代表用户目录，如果不是用户目录，会显示当前的绝对路径地址。我们也可以使用 pwd 命令来直接查看当前所处的目录。</p><p>在 Linux 中默认存在一个超级用户 root，而此用户拥有最高执行权限，它能够修改任何的内容，甚至可以删除整个 Linux 内核，正常情况下不会使用 root 用户进行登陆，只有在特殊情况下才会使用 root 用户来进行一些操作，root 用户非常危险，哪怕一个小小的命令都能够毁掉整个 Linux 系统，比如 rm -rf &#x2F;*，感兴趣的话我们可以放在最后来演示（在以前老是听说安卓手机 root，实际上就是获取安卓系统底层 Linux 系统的 root 权限，以实现修改系统文件的目的）</p><p>我们可以使用 sudo -s 并输入当前用户的密码切换到 root 用户，可以看到出现了一些变化：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$</span><br><span class="line"></span><br><span class="line">root@ubuntu-server:/home/test#</span><br></pre></td></tr></table></figure><p>我们发现$符号变成了#符号，注意此符号表示当前的用户权限等级，并且 test 也变为了 root，在此用户下，我们可以随意修改 test 用户文件夹以外的内容，而 test 用户下则无法修改。如果需要退出 root 用户，直接输入 exit 即可。</p><p>接着我们来看一下，如何进行用户的管理操作，进行用户管理，包括添加用户和删除用户都需要 root 权限才可以执行，但是现在我们是 test 用户，我们可以在命令前面添加 sudo 来暂时以管理员身份执行此命令，比如说我们现在想要添加一个新的用户：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> useradd study</span><br></pre></td></tr></table></figure><p>其中 study 就是我们想要创建的新用户，useradd 命令就是创建新用户的命令，同样的，删除用户：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> userdel study</span><br></pre></td></tr></table></figure><p>Linux 中的命令一般都可以携带一些参数来以更多特地的方式执行，我们可以在创建用户时，添加一些额外的参数来进行更多高级操作：</p><ul><li>-d&lt;登录目录&gt; 指定用户登录时的起始目录。</li><li>-g&lt;群组&gt; 指定用户所属的群组。</li><li>-G&lt;群组&gt; 指定用户所属的附加群组。</li><li>-m 自动建立用户的登入目录。</li><li>-M 不要自动建立用户的登入目录。</li><li>-s 指定 Shell，一般指定为&#x2F;bin&#x2F;bash</li></ul><p>如果还想查看更多命令，可以直接使用 man 来查看命令的详细参数列表，比如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">man useradd</span><br></pre></td></tr></table></figure><p>比如我们现在需要在用户创建时顺便创建用户的文件夹，并指定 shell（任意一种命令解释程序，用于处理我们输入的命令）为 bash：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> useradd study -m -s /bin/bash</span><br></pre></td></tr></table></figure><p>可以看到已经自动在 home 目录下创建了 study 文件夹（这里..表示上一级目录，.表示当前目录）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">ls</span> ..</span><br><span class="line">study  <span class="built_in">test</span></span><br></pre></td></tr></table></figure><p>用户创建完成之后，我们可以为此用户设定密码（如果不指定用户，那么会设置当前用户的密码）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> passwd study</span><br></pre></td></tr></table></figure><p>输入密码之后，我们可以使用命令来切换用户：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ su - study</span><br><span class="line">Password:</span><br><span class="line">study@ubuntu-server:~$</span><br></pre></td></tr></table></figure><p>可以看到，切换用户后名称已经修改为 study 了，我们使用 exit 即可退出当前用户回到 test。</p><p>输入 who 可以查看当前登录账号（注意是登录的账号）输入 whoami 可以查看当前的操作账号：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ su study</span><br><span class="line">Password:</span><br><span class="line">study@ubuntu-server:/home/test$ <span class="built_in">cd</span> ~</span><br><span class="line">study@ubuntu-server:~$ <span class="built_in">who</span></span><br><span class="line"><span class="built_in">test</span>     pts/0        2022-01-24 03:57 (192.168.10.3)</span><br><span class="line">study@ubuntu-server:~$ <span class="built_in">whoami</span></span><br><span class="line">study</span><br><span class="line">study@ubuntu-server:~$</span><br></pre></td></tr></table></figure><p>接着我们来看用户组，每个用户都有一个用户组，系统可以对一个用户组中的所有用户进行集中管理。我们可以输入 groups 来查看当前用户所有的用户组：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">groups</span></span><br><span class="line"><span class="built_in">test</span> adm cdrom <span class="built_in">sudo</span> dip plugdev lxd</span><br></pre></td></tr></table></figure><p>我们可以输入 id 来查看用户所属的用户相关信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">id</span></span><br><span class="line">uid=1000(<span class="built_in">test</span>) gid=1000(<span class="built_in">test</span>) <span class="built_in">groups</span>=1000(<span class="built_in">test</span>),4(adm),24(cdrom),27(<span class="built_in">sudo</span>),30(dip),46(plugdev),116(lxd)</span><br></pre></td></tr></table></figure><p>我们可以看到 test 用户默认情况下主要用户组为同名的 test 用户组，并且还属于一些其他的用户组，其中 sudo 用户组就表示可以执行 sudo 命令，我们发现我们创建的 study 用户没有 sudo 的执行权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">study@ubuntu-server:~$ <span class="built_in">sudo</span> -s</span><br><span class="line">[<span class="built_in">sudo</span>] password <span class="keyword">for</span> study:</span><br><span class="line">study is not <span class="keyword">in</span> the sudoers file.  This incident will be reported.</span><br></pre></td></tr></table></figure><p>正是因为没有加入到 sudo 用户组，这里我们来尝试将其添加到 sudo 用户组：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">id</span> study</span><br><span class="line">uid=1001(study) gid=1001(study) <span class="built_in">groups</span>=1001(study)</span><br></pre></td></tr></table></figure><p>使用 usermod 命令来对用户的相关设置进行修改，参数与 useradd 大致相同：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">sudo</span> usermod study -G <span class="built_in">sudo</span></span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">id</span> study</span><br><span class="line">uid=1001(study) gid=1001(study) <span class="built_in">groups</span>=1001(study),27(<span class="built_in">sudo</span>)</span><br></pre></td></tr></table></figure><p>接着切换到 study 用户就可以使用 sudo 命令了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">To run a <span class="built_in">command</span> as administrator (user <span class="string">&quot;root&quot;</span>), use <span class="string">&quot;sudo &lt;command&gt;&quot;</span>.</span><br><span class="line">See <span class="string">&quot;man sudo_root&quot;</span> <span class="keyword">for</span> details.</span><br><span class="line"></span><br><span class="line">study@ubuntu-server:/home/test$ <span class="built_in">sudo</span> -s</span><br><span class="line">[<span class="built_in">sudo</span>] password <span class="keyword">for</span> study:</span><br><span class="line">root@ubuntu-server:/home/test#</span><br></pre></td></tr></table></figure><p>实际上，我们的用户信息是存储在配置文件中的，我们之前说了，配置文件一般都放在 etc 目录下，而用户和用户组相关的配置文件，存放在&#x2F;etc&#x2F;passwd 和&#x2F;etc&#x2F;group 中，我们可以使用 cat 命令将文件内容打印到控制台：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">cat</span> /etc/passwd</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin</span><br><span class="line">bin:x:2:2:bin:/bin:/usr/sbin/nologin</span><br><span class="line">sys:x:3:3:sys:/dev:/usr/sbin/nologin</span><br><span class="line"><span class="built_in">sync</span>:x:4:65534:<span class="built_in">sync</span>:/bin:/bin/sync</span><br></pre></td></tr></table></figure><p>格式为：注册名:口令:用户标识号:组标识号:用户名:用户主目录:命令解释程序 ，而我们的密码则存放在&#x2F;etc&#x2F;shadow 中，是以加密形式存储的，并且需要 root 权限才能查看。</p><hr><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><p>接着我们来看一下 Linux 系统中一些比较常用的命令。</p><h3 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h3><p>文件是最基本的内容，我们可以使用 ls 命令列出当前目录中所有的文件，参数-a 表示包含所有的隐藏文件，-l 表示列出详细信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">ls</span> -al</span><br><span class="line">total 44</span><br><span class="line">drwxr-xr-x 4 <span class="built_in">test</span> <span class="built_in">test</span> 4096 Jan 24 08:55 .</span><br><span class="line">drwxr-xr-x 4 root root 4096 Jan 24 04:24 ..</span><br><span class="line">-rw------- 1 <span class="built_in">test</span> <span class="built_in">test</span> 2124 Jan 24 04:29 .bash_history</span><br><span class="line">-rw-r--r-- 1 <span class="built_in">test</span> <span class="built_in">test</span>  220 Feb 25  2020 .bash_logout</span><br><span class="line">-rw-r--r-- 1 <span class="built_in">test</span> <span class="built_in">test</span> 3771 Feb 25  2020 .bashrc</span><br><span class="line">drwx------ 2 <span class="built_in">test</span> <span class="built_in">test</span> 4096 Jan 21 15:48 .cache</span><br><span class="line">drwx------ 3 <span class="built_in">test</span> <span class="built_in">test</span> 4096 Jan 23 14:49 .config</span><br><span class="line">-rw-r--r-- 1 <span class="built_in">test</span> <span class="built_in">test</span>  807 Feb 25  2020 .profile</span><br><span class="line">-rw------- 1 <span class="built_in">test</span> <span class="built_in">test</span>   34 Jan 24 04:17 .python_history</span><br><span class="line">-rw-r--r-- 1 <span class="built_in">test</span> <span class="built_in">test</span>    0 Jan 21 15:52 .sudo_as_admin_successful</span><br><span class="line">-rw------- 1 <span class="built_in">test</span> <span class="built_in">test</span> 7201 Jan 24 08:55 .viminfo</span><br></pre></td></tr></table></figure><p>可以看到当前目录下的整个文件列表，那么这些信息各种代表什么意思呢，尤其是最前面那一栏类似于 drwxr-xr-x 的字符串。</p><p>它表示文件的属性，其中第 1 个字符表示此文件的类型：-表示普通文件，l 为链接文件，d 表示目录（文件夹），c 表示字符设备、b 表示块设备，还有 p 有名管道、f 堆栈文件、s 套接字等，这些一般都是用于进程之间通信使用的。</p><p>第 2-4 个字符表示文件的拥有者（User）对该文件的权限，第 5-7 个字符表示文件所属用户组（Group）内用户对该文件的权限，最后 8-10 个字符表示其他用户（Other）对该文件的权限。其中 r 为读权限、w 为写权限、x 为执行权限，为了方便记忆，直接记 UGO 就行了。</p><p>比如 drwxr-xr-x 就表示这是一个目录，文件的拥有者可以在目录中读、写和执行，而同一用户组的其他用户只能读和执行，其他用户也是一样。</p><p>第二栏数据可以看到是一列数字，它表示文件创建的链接文件（快捷方式）数量，一般只有 1 表示只有当前文件，我们也可以尝试创建一个链接文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">ln</span> .bash_logout kk</span><br></pre></td></tr></table></figure><p>创建后，会生成一个名为 kk 的文件，我们对此文件的操作相当于直接操作.bash_logout，跟 Windows 中的快捷方式比较类似，了解一下即可。再次执行 ll 命令，可以看到.bash_logout 的链接数变成了 2。</p><p>第三栏数据为该文件或是目录的拥有者。</p><p>第四栏数据表示所属的组。</p><p>第五栏数据表示文件大小，以字节为单位。</p><p>第六栏数据为文件的最后一次修改时间</p><p>最后一栏就是文件名称了，就不多说了，再次提及..表示上级目录，.表示当前目录，最前面有一个.开头的文件为隐藏文件。可以看到上级目录（也就是&#x2F;home 目录）所有者为 root，并且非 root 用户无法进行写操作，只能执行读操作，而当前目录以及目录下所有文件则属于 test 用户，test 用户可以随意进行修改。</p><p>在了解了 Linux 的文件查看之后再去看 Windows 的文件管理，会觉得 Windows 的太拉了：</p><p><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/38881094/1715788971144-041ad64f-f4c9-4853-8a05-758a5c84cf40.jpeg"></p><p>那么，如果我们希望对文件的属性进行修改，比如我们现在希望将某个文件的写权限给关闭，可以使用 chmod 命令来进行文件属性修改，我们先创建一个 test 文件，使用 touch 命令来创建文件，使用 mkdir 命令来创建目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">touch</span> <span class="built_in">test</span></span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ ll <span class="built_in">test</span></span><br><span class="line">-rw-rw-r-- 1 <span class="built_in">test</span> <span class="built_in">test</span> 0 Jan 24 09:32 <span class="built_in">test</span></span><br></pre></td></tr></table></figure><p>可以看到文件创建之后的默认权限为可读可写，接着我们来将其修改为只读，chmod 的使用方法如下：</p><ul><li>chmod (u&#x2F;g&#x2F;o&#x2F;a)(+&#x2F;-)(r&#x2F;w&#x2F;x) 文件名称</li></ul><p>我们可以从 ugo 中选择或是直接 a 表示所有，+和-表示添加和删除权限，最后 rwx 不用我说了吧</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">test@ubuntu-server:~$ chmod a-w test</span><br><span class="line">test@ubuntu-server:~$ ll test</span><br><span class="line">-r--r--r-- 1 test test 0 Jan 24 09:32 test</span><br></pre></td></tr></table></figure><p>除了这种方式之外，我们也可以使用数字来代替，比如现在我要给前两个添加读权限，那么：</p><p>约定：r&#x3D;4，w&#x3D;2，x&#x3D;1，需要什么权限就让对应权限的数字相加，一个数字表示一个 rwx 的权限状态，比如我们想修改为-rw-rw-r–，那么对应的数字就是 664，对应的命令为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">chmod</span> 664 <span class="built_in">test</span></span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ ll <span class="built_in">test</span></span><br><span class="line">-rw-rw-r-- 1 <span class="built_in">test</span> <span class="built_in">test</span> 0 Jan 24 09:32 <span class="built_in">test</span></span><br></pre></td></tr></table></figure><p>如果我们想修改文件的拥有者或是所属组，可以使用 chown 和 chgrp 命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">sudo</span> <span class="built_in">chown</span> root <span class="built_in">test</span></span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">ls</span> -l</span><br><span class="line">total 0</span><br><span class="line">-rw-rw-r-- 1 root <span class="built_in">test</span> 0 Jan 24 10:43 <span class="built_in">test</span></span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">sudo</span> <span class="built_in">chgrp</span> root <span class="built_in">test</span></span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">ls</span> -l</span><br><span class="line">total 0</span><br><span class="line">-rw-rw-r-- 1 root root 0 Jan 24 10:43 <span class="built_in">test</span></span><br></pre></td></tr></table></figure><p>再次操作该文件，会发现没权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">chmod</span> 777 <span class="built_in">test</span></span><br><span class="line"><span class="built_in">chmod</span>: changing permissions of <span class="string">&#x27;test&#x27;</span>: Operation not permitted</span><br></pre></td></tr></table></figure><p>接着我们来看文件的复制、移动和删除，这里我们先创建一个新的目录并进入到此目录用于操作：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">mkdir</span> study</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">cd</span> study</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~/study$</span><br></pre></td></tr></table></figure><p>首先我们演示文件的复制操作，文件的复制使用 cp 命令，比如现在我们想把上一级目录中的 test 文件复制到当前目录中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~/study$ <span class="built_in">cp</span> ../test <span class="built_in">test</span></span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~/study$ <span class="built_in">ls</span></span><br><span class="line"><span class="built_in">test</span></span><br></pre></td></tr></table></figure><p>那么如果我们想要将一整个目录进行复制呢？我们需要添加一个-r 参数表示将目录中的文件递归复制：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~/study$ <span class="built_in">cd</span> ~</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">cp</span> -r study study_copied</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">ls</span> -l</span><br><span class="line">total 8</span><br><span class="line">drwxrwxr-x 2 <span class="built_in">test</span> <span class="built_in">test</span> 4096 Jan 24 10:16 study</span><br><span class="line">drwxrwxr-x 2 <span class="built_in">test</span> <span class="built_in">test</span> 4096 Jan 24 10:20 study_copied</span><br><span class="line">-rw-rw-r-- 1 <span class="built_in">test</span> <span class="built_in">test</span>    0 Jan 24 09:32 <span class="built_in">test</span></span><br></pre></td></tr></table></figure><p>可以看到我们的整个目录中所有的文件也一起被复制了。</p><p>接着我们来看看移动操作，相当于是直接将一个文件转移到另一个目录中了，我们再创建一个目录用于文件的移动，并将 test 文件移动到此目录中，我们使用 mv 命令进行文件的移动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">mkdir</span> study2</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">mv</span> <span class="built_in">test</span> study2</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">ls</span></span><br><span class="line">study  study2  study_copied</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">cd</span> study2</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~/study2$ <span class="built_in">ls</span></span><br><span class="line"><span class="built_in">test</span></span><br></pre></td></tr></table></figure><p>现在我们想要移动个目录到另一个目录中，比如我们想将 study 目录移动到 study2 目录中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">mv</span> study study2</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">ls</span></span><br><span class="line">study2  study_copied</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">cd</span> study2</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~/study2$ <span class="built_in">ls</span></span><br><span class="line">study  <span class="built_in">test</span></span><br></pre></td></tr></table></figure><p>mv 命令不仅能实现文件的移动，还可以实现对文件重命名操作，比如我们想将文件 test 重命名为 yyds，那么直接将其进行移动操作即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~/study2$ <span class="built_in">ls</span></span><br><span class="line">study  <span class="built_in">test</span></span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~/study2$ <span class="built_in">mv</span> <span class="built_in">test</span> yyds</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~/study2$ <span class="built_in">ls</span></span><br><span class="line">study  yyds</span><br></pre></td></tr></table></figure><p>最后就是删除命令了，使用 rm 进行删除操作，比如现在我们想删除 study2 目录（注意需要添加-r 参数表示递归删除文件夹中的内容）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">rm</span> -r study2</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">ls</span></span><br><span class="line">study_copied</span><br></pre></td></tr></table></figure><p>而最常提到的 rm -rf &#x2F;<em>正是删除根目录下所有的文件（非常危险的操作），-f 表示忽略不存在的文件，不进行任何提示，</em>是一个通配符，表示任意文件。这里我们演示一下删除所有.txt 结尾的文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">touch</span> 1.txt 2.txt 3.txt</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">ls</span></span><br><span class="line">1.txt  2.txt  3.txt</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">rm</span> *.txt</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">ls</span></span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$</span><br></pre></td></tr></table></figure><p>最后我们再来看文件的搜索，我们使用 find 命令来进行搜索，比如我想搜索&#x2F;etc 目录下名为 passwd 的文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">sudo</span> find /etc -name passwd</span><br><span class="line">[<span class="built_in">sudo</span>] password <span class="keyword">for</span> <span class="built_in">test</span>:</span><br><span class="line">/etc/pam.d/passwd</span><br><span class="line">/etc/passwd</span><br></pre></td></tr></table></figure><p>它还支持通配符，比如搜索以 s 开头的文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">sudo</span> find /etc -name s*</span><br><span class="line">/etc/subuid</span><br><span class="line">/etc/screenrc</span><br><span class="line">/etc/sensors3.conf</span><br><span class="line">/etc/sysctl.conf</span><br><span class="line">/etc/sudoers</span><br><span class="line">/etc/shadow</span><br><span class="line">/etc/skel</span><br><span class="line">/etc/pam.d/su</span><br><span class="line">/etc/pam.d/sshd</span><br><span class="line">/etc/pam.d/sudo</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="系统管理"><a href="#系统管理" class="headerlink" title="系统管理"></a>系统管理</h3><p>接着我们来查看一些系统管理相关的命令，比如我们 Windows 中的任务管理器，我们可以使用 top 命令来打开：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">top - 10:48:46 up  5:52,  1 user,  load average: 0.00, 0.00, 0.00</span><br><span class="line">Tasks: 191 total,   2 running, 189 sleeping,   0 stopped,   0 zombie</span><br><span class="line">%Cpu(s):  0.0 us,  0.2 sy,  0.0 ni, 99.8 <span class="built_in">id</span>,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st</span><br><span class="line">MiB Mem :   3919.1 total,   2704.2 free,    215.0 used,    999.9 buff/cache</span><br><span class="line">MiB Swap:   3923.0 total,   3923.0 free,      0.0 used.   3521.4 avail Mem</span><br><span class="line"></span><br><span class="line">    PID USER      PR  NI    VIRT    RES    SHR S  %CPU  %MEM     TIME+ COMMAND</span><br><span class="line">  10528 <span class="built_in">test</span>      20   0    8944   3072   2652 R   0.7   0.1   0:00.07 top</span><br><span class="line">   9847 root      20   0       0      0      0 I   0.3   0.0   0:00.87 kworker/0:0-events</span><br><span class="line">      1 root      20   0  102760  10456   7120 S   0.0   0.3   0:02.02 systemd</span><br><span class="line">      2 root      20   0       0      0      0 S   0.0   0.0   0:00.01 kthreadd</span><br><span class="line">      3 root       0 -20       0      0      0 I   0.0   0.0   0:00.00 rcu_gp</span><br><span class="line">      4 root       0 -20       0      0      0 I   0.0   0.0   0:00.00 rcu_par_gp</span><br><span class="line">      6 root       0 -20       0      0      0 I   0.0   0.0   0:00.00 kworker/0:0H-kblockd</span><br><span class="line">      8 root       0 -20       0      0      0 I   0.0   0.0   0:00.00 mm_percpu_wq</span><br><span class="line">      9 root      20   0       0      0      0 S   0.0   0.0   0:00.15 ksoftirqd/0</span><br><span class="line">     10 root      20   0       0      0      0 R   0.0   0.0   0:01.49 rcu_sched</span><br><span class="line">     11 root      rt   0       0      0      0 S   0.0   0.0   0:00.24 migration/0</span><br><span class="line">     12 root     -51   0       0      0      0 S   0.0   0.0   0:00.00 idle_inject/0</span><br><span class="line">     14 root      20   0       0      0      0 S   0.0   0.0   0:00.00 cpuhp/0</span><br><span class="line">     15 root      20   0       0      0      0 S   0.0   0.0   0:00.00 cpuhp/1</span><br><span class="line">     16 root     -51   0       0      0      0 S   0.0   0.0   0:00.00 idle_inject/1</span><br><span class="line">     17 root      rt   0       0      0      0 S   0.0   0.0   0:00.30 migration/1</span><br><span class="line">     18 root      20   0       0      0      0 S   0.0   0.0   0:00.07 ksoftirqd/1</span><br><span class="line">     20 root       0 -20       0      0      0 I   0.0   0.0   0:00.00 kworker/1:0H-kblockd</span><br></pre></td></tr></table></figure><p>可以很清楚地看到当前 CPU 的使用情况以及内存的占用情况。</p><p>按下数字键 1，可以展示所有 CPU 核心的使用情况：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">%Cpu0  :  0.0 us,  0.0 sy,  0.0 ni,100.0 <span class="built_in">id</span>,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st</span><br><span class="line">%Cpu1  :  0.0 us,  0.0 sy,  0.0 ni,100.0 <span class="built_in">id</span>,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st</span><br></pre></td></tr></table></figure><p>按下 f 键可以设置以哪一列进行排序或是显示那些参数：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Fields Management <span class="keyword">for</span> window 1:Def, whose current <span class="built_in">sort</span> field is %MEM</span><br><span class="line">   Navigate with Up/Dn, Right selects <span class="keyword">for</span> move <span class="keyword">then</span> &lt;Enter&gt; or Left commits,</span><br><span class="line">   <span class="string">&#x27;d&#x27;</span> or &lt;Space&gt; toggles display, <span class="string">&#x27;s&#x27;</span> sets <span class="built_in">sort</span>.  Use <span class="string">&#x27;q&#x27;</span> or &lt;Esc&gt; to end!</span><br></pre></td></tr></table></figure><p>按下 q 键即可退出监控界面。</p><p>我们可以直接输入 free 命令来查看当前系统的内存使用情况：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ free -m</span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:           3919         212        2706           1         999        3523</span><br><span class="line">Swap:          3922           0        3922</span><br></pre></td></tr></table></figure><p>其中-m 表示以 M 为单位，也可以-g 表示以 G 为单位，默认是 kb 为单位。</p><p>最后就是磁盘容量，我们可以使用 lsblk 来查看所有块设备的信息，其中就包括我们的硬盘、光驱等：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ lsblk</span><br><span class="line">NAME                      MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class="line">loop0                       7:0    0 48.9M  1 loop /snap/core18/2127</span><br><span class="line">loop1                       7:1    0 28.1M  1 loop /snap/snapd/12707</span><br><span class="line">loop2                       7:2    0   62M  1 loop /snap/lxd/21032</span><br><span class="line">sr0                        11:0    1 1024M  0 rom</span><br><span class="line">nvme0n1                   259:0    0   20G  0 disk</span><br><span class="line">├─nvme0n1p1               259:1    0  512M  0 part /boot/efi</span><br><span class="line">├─nvme0n1p2               259:2    0    1G  0 part /boot</span><br><span class="line">└─nvme0n1p3               259:3    0 18.5G  0 part</span><br><span class="line">  └─ubuntu--vg-ubuntu--lv 253:0    0 18.5G  0 lvm  /</span><br></pre></td></tr></table></figure><p>可以看到 nvme 开头的就是我们的硬盘（这个因人而异，可能你们的是 sda，磁盘类型不同名称就不同）可以看到 nvme0n1 容量为 20G，并且 512M 用作存放 EFI 文件，1G 存放启动文件，剩余容量就是存放系统文件和我们的用户目录。</p><p>这里要提到一个挂载的概念：</p><p>挂载，指的就是将设备文件中的顶级目录连接到 Linux 根目录下的某一目录（最好是空目录），访问此目录就等同于访问设备文件。</p><p>比如我们的主硬盘，挂载点就被设定为&#x2F;根目录，而我们所有保存的文件都会存储在硬盘中，如果你有 U 盘（最好将 U 盘的文件格式改为 ExFat，可以直接在 Windows 中进行格式化，然后随便放入一些文件即可）之类的东西，我们可以演示一下对 U 盘进行挂载：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">sudo</span> fdisk -l</span><br><span class="line">...</span><br><span class="line">Disk /dev/sda: 60 GiB, 64424509440 bytes, 125829120 sectors</span><br><span class="line">Disk model: USB DISK</span><br><span class="line">Units: sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disklabel <span class="built_in">type</span>: dos</span><br><span class="line">Disk identifier: 0x4a416279</span><br><span class="line"></span><br><span class="line">Device     Boot     Start       End   Sectors  Size Id Type</span><br><span class="line">/dev/sda1  *       614400 125214719 124600320 59.4G  7 HPFS/NTFS/exFAT</span><br><span class="line">/dev/sda2       125214720 125825022    610303  298M  6 FAT16</span><br></pre></td></tr></table></figure><p>将 U 盘插入电脑，选择连接到 Linux，输入 sudo fdisk -l 命令来查看硬盘实体情况，可以看到有一个 USB DISK 设备，注意观察一下是不是和自己的 U 盘容量一致，可以看到设备名称为&#x2F;dev&#x2F;sda1。</p><p>接着我们设备挂载到一个目录下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">mkdir</span> u-test</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">sudo</span> mount /dev/sda1 u-test/</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">cd</span> u-test/</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~/u-test$ <span class="built_in">ls</span></span><br><span class="line"> CGI</span><br><span class="line"> cn_windows_10_enterprise_ltsc_2019_x64_dvd_9c09ff24.iso</span><br><span class="line"> cn_windows_7_professional_x64_dvd_x15-65791.iso</span><br><span class="line"> cn_windows_8.1_enterprise_with_update_x64_dvd_6050374.iso</span><br><span class="line"> cn_windows_8.1_professional_vl_with_update_x64_dvd_4050293.iso</span><br><span class="line"> cn_windows_server_2019_updated_july_2020_x64_dvd_2c9b67da.iso</span><br><span class="line"><span class="string">&#x27;System Volume Information&#x27;</span></span><br><span class="line"> zh-cn_windows_10_consumer_editions_version_21h1_updated_sep_2021_x64_dvd_991b822f.iso</span><br><span class="line"> zh-cn_windows_11_consumer_editions_x64_dvd_904f13e4.iso</span><br></pre></td></tr></table></figure><p>最后进入到此目录中，就能看到你 U 盘中的文件了，如果你不想使用 U 盘了，可以直接取消挂载：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">test@ubuntu-server:~/u-test$ cd ..</span><br><span class="line">test@ubuntu-server:~$ sudo umount /dev/sda1</span><br></pre></td></tr></table></figure><p>最后我们可以通过 df 命令查看当前磁盘使用情况：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">df</span> -m</span><br><span class="line">Filesystem                        1M-blocks  Used Available Use% Mounted on</span><br><span class="line">udev                                   1900     0      1900   0% /dev</span><br><span class="line">tmpfs                                   392     2       391   1% /run</span><br><span class="line">/dev/mapper/ubuntu--vg-ubuntu--lv     18515  6544     11009  38% /</span><br><span class="line">tmpfs                                  1960     0      1960   0% /dev/shm</span><br><span class="line">tmpfs                                     5     0         5   0% /run/lock</span><br><span class="line">tmpfs                                  1960     0      1960   0% /sys/fs/cgroup</span><br><span class="line">/dev/nvme0n1p2                          976   109       800  12% /boot</span><br><span class="line">/dev/nvme0n1p1                          511     4       508   1% /boot/efi</span><br><span class="line">/dev/loop0                               49    49         0 100% /snap/core18/2127</span><br><span class="line">/dev/loop1                               29    29         0 100% /snap/snapd/12707</span><br><span class="line">/dev/loop2                               62    62         0 100% /snap/lxd/21032</span><br><span class="line">tmpfs                                   392     0       392   0% /run/user/1000</span><br></pre></td></tr></table></figure><p>输入 ps 可以查看当前运行的一些进程，其实和 top 有点类似，但是没有监控功能，只能显示当前的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ ps</span><br><span class="line">    PID TTY          TIME CMD</span><br><span class="line">  11438 pts/0    00:00:00 bash</span><br><span class="line">  11453 pts/0    00:00:00 ps</span><br></pre></td></tr></table></figure><p>添加-ef 查看所有的进程：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ ps -ef</span><br><span class="line">UID          PID    PPID  C STIME TTY          TIME CMD</span><br><span class="line">root           1       0  0 04:55 ?        00:00:02 /sbin/init</span><br><span class="line">root           2       0  0 04:55 ?        00:00:00 [kthreadd]</span><br><span class="line">root           3       2  0 04:55 ?        00:00:00 [rcu_gp]</span><br><span class="line">root           4       2  0 04:55 ?        00:00:00 [rcu_par_gp]</span><br><span class="line">root           6       2  0 04:55 ?        00:00:00 [kworker/0:0H-kblockd]</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>我们可以找到对应的进程 ID（PID），使用 kill 命令将其强制终止：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ ps</span><br><span class="line">    PID TTY          TIME CMD</span><br><span class="line">  11438 pts/0    00:00:00 bash</span><br><span class="line">  11455 pts/0    00:00:00 ps</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">kill</span> -9 11438</span><br><span class="line">Connection to 192.168.10.6 closed.</span><br></pre></td></tr></table></figure><p>比如我们可以将当前会话的 bash 给杀死，那么会导致我们的连接直接断开，其中-9 是一个信号，表示杀死进程：</p><ul><li>1 (HUP)：重新加载进程。</li><li>9 (KILL)：杀死一个进程。</li><li>15 (TERM)：正常停止一个进程。</li></ul><p>最后如果我们想要正常关机，只需要输入 shutdown 即可，系统会创建一个关机计划，并在指定时间关机，或是添加 now 表示立即关机：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">sudo</span> shutdown</span><br><span class="line">[<span class="built_in">sudo</span>] password <span class="keyword">for</span> <span class="built_in">test</span>:</span><br><span class="line">Shutdown scheduled <span class="keyword">for</span> Mon 2022-01-24 11:46:18 UTC, use <span class="string">&#x27;shutdown -c&#x27;</span> to cancel.</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">sudo</span> shutdown now</span><br><span class="line">Connection to 192.168.10.6 closed by remote host.</span><br><span class="line">Connection to 192.168.10.6 closed.</span><br></pre></td></tr></table></figure><h3 id="压缩解压"><a href="#压缩解压" class="headerlink" title="压缩解压"></a>压缩解压</h3><p>比较常用的压缩和解压也是重点，我们在 Windows 中经常需要下载一些压缩包，并且将压缩包解压才能获得里面的文件，而 Linux 中也支持文件的压缩和解压。</p><p>这里我们使用 tar 命令来完成文件压缩和解压操作，在 Linux 中比较常用的是 gzip 格式，后缀名一般为.gz，tar 命令的参数-c 表示对文件进行压缩，创建新的压缩文件，-x 表示进行解压操作，-z 表示以 gzip 格式进行操作，-v 可以在处理过程中输出一些日志信息，-f 表示对普通文件进行操作，这里我们创建三个文件并对这三个文件进行打包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ tar -zcvf test.tar.gz *.txt</span><br><span class="line">1.txt</span><br><span class="line">2.txt</span><br><span class="line">3.txt</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">ls</span></span><br><span class="line">1.txt  2.txt  3.txt  test.tar.gz</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$</span><br></pre></td></tr></table></figure><p>接着我们删除刚刚三个文件，再执行解压操作，得到压缩包中文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">rm</span> *.txt</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">ls</span></span><br><span class="line">test.tar.gz</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ tar -zxvf test.tar.gz</span><br><span class="line">1.txt</span><br><span class="line">2.txt</span><br><span class="line">3.txt</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">ls</span></span><br><span class="line">1.txt  2.txt  3.txt  test.tar.gz</span><br></pre></td></tr></table></figure><p>同样的，我们也可以对一个文件夹进行打包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">mv</span> *.txt <span class="built_in">test</span></span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ tar -zcvf test.tar.gz <span class="built_in">test</span>/</span><br><span class="line"><span class="built_in">test</span>/</span><br><span class="line"><span class="built_in">test</span>/1.txt</span><br><span class="line"><span class="built_in">test</span>/2.txt</span><br><span class="line"><span class="built_in">test</span>/3.txt</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">rm</span> -r <span class="built_in">test</span></span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">ls</span></span><br><span class="line">test.tar.gz</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ tar -zxvf test.tar.gz</span><br><span class="line"><span class="built_in">test</span>/</span><br><span class="line"><span class="built_in">test</span>/1.txt</span><br><span class="line"><span class="built_in">test</span>/2.txt</span><br><span class="line"><span class="built_in">test</span>/3.txt</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">ls</span></span><br><span class="line"><span class="built_in">test</span>  test.tar.gz</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">ls</span> <span class="built_in">test</span></span><br><span class="line">1.txt  2.txt  3.txt</span><br></pre></td></tr></table></figure><p>到此，Linux 的一些基本命令就讲解为止。</p><hr><h2 id="vim-文本编辑器"><a href="#vim-文本编辑器" class="headerlink" title="vim 文本编辑器"></a>vim 文本编辑器</h2><p>和 Windows 中的记事本一样，Linux 中也有文本编辑器，叫做 Vi 编辑器，Ubuntu 中内置了 Vi 编辑器的升级版 Vim，我们这里就讲解 Vim 编辑器的使用。</p><p>我们可以直接输入 vim 文件名称来使用 Vim 编辑器对文本文件进行编辑：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ vim hello.txt</span><br></pre></td></tr></table></figure><p>进入编辑器之后，我们发现界面变成了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">~</span><br><span class="line">~</span><br><span class="line">~</span><br><span class="line">~</span><br><span class="line">~</span><br><span class="line">~</span><br><span class="line">~</span><br><span class="line">~</span><br><span class="line">~</span><br><span class="line">~</span><br><span class="line">~</span><br><span class="line">~</span><br><span class="line"><span class="string">&quot;hello.txt&quot;</span> [New File]                                                            0,0-1         All</span><br></pre></td></tr></table></figure><p>这时我们直接输入内容是无法完成的，因为默认进入之后为命令模式，Vim 编辑器默认有三种模式：</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1715788971404-1ca508da-5bf5-4490-ab03-6a2d9541cc2a.png"></p><ul><li>命令模式：此模式下可以输入任意的命令进行操作，所有的输入都被看做是命令输入，而不是文本编辑输入。</li><li>编辑模式：此模式下输入的任何内容都会以文本编辑方式写入到文件中，就像我们直接在 Windows 的记事本中写内容一样。</li><li>末行模式：此模式下用于输入一些复杂命令，会在最后一行进行复杂命令的输入。</li></ul><p>在命令模式下，我们可以直接按下键盘上的 i，此命令表示进行插入操作，会自动切换到编辑模式，这时可以看到最下方变为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">~</span><br><span class="line">~</span><br><span class="line">~</span><br><span class="line">~</span><br><span class="line">~</span><br><span class="line">~</span><br><span class="line">~</span><br><span class="line">-- INSERT --                                                                      1,1           All</span><br></pre></td></tr></table></figure><p>而这时我们所有的输入内容都可以直接写到文件中了，如果我们想回到命令模式，按下 Esc 键即可。</p><p>除了 i 以外，我们也可以按下 a 表示从当前光标所在位置之后继续写，与 i 不同的是，i 会在光标之前继续写，o 会直接跳到下一行，而 A 表示在当前行的最后继续写入，I 表示在当前行的最前面继续写入。</p><p>这里我们随便粘贴一段文本信息进去（不要用 Ctrl+V，Linux 中没这操作，XShell 右键点粘贴）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">I was hard on people sometimes, probably harder than I needed to be.</span><br><span class="line">I remember the time when Reed was six years old, coming home, and I had just fired somebody that day.</span><br><span class="line">And I imagined what it was like for that person to tell his family and his young son that he had lost his job.</span><br><span class="line">It was hard.</span><br><span class="line">But　somebody’s got to do it.</span><br><span class="line">I figured that it was always my job to make sure that the team was excellent, and if I didn’t do it, nobody was going to do it.</span><br><span class="line">You always have to keep pushing to innovate.</span><br><span class="line">Dylan could have sung protest songs forever and probably made a lot of money, but he didn’t.</span><br><span class="line">He had to move on, and when he did, by going electric in 1965, he alienated a lot of people.</span><br></pre></td></tr></table></figure><p>在我们编辑完成之后，需要进入到末行模式进行文件的保存并退出，按下:进入末行模式，再输入 wq 即可保存退出。</p><p>接着我们来看一些比较常用的命令，首先是命令模式下的光标移动命令：</p><ul><li>^ 直接调到本行最前面</li><li>$ 直接跳到本行最后面</li><li>gg 直接跳到第一行</li><li>[N]G 跳转到第 N 行</li><li>[N]方向键 向一个方向跳转 N 个字符</li></ul><p>在末行模式下，常用的复杂命令有：</p><ul><li>:set number 开启行号</li><li>:w 保存</li><li>:wq 或:x 保存并关闭</li><li>:q 关闭</li><li>:q! 强制关闭</li></ul><p>我们可以输入&#x2F;或是?在末行模式中使用搜索功能，比如我们要搜索单词 it：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/it</span><br></pre></td></tr></table></figure><p>接着会在文本中出现高亮，按 n 跳转到下一个搜索结果，?是从后向前搜索，&#x2F;是从前向后搜索。</p><p>它还支持替换功能，但是使用起来稍微比较复杂，语法如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:[addr]s/源字符串/目的字符串/[option]</span><br></pre></td></tr></table></figure><p>addr 表示第几行或是一个范围，option 表示操作类型：</p><ul><li>g: globe,表示全局替换</li><li>c: confirm,表示进行确认</li><li>p: 表示替代结果逐行显示(Ctrl + L 恢复屏幕)</li><li>i: ignore,不区分大小写</li></ul><p>比如我们要将当前行中的 it 全部替换为 he，那么可以这样写：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:s/it/he/g</span><br></pre></td></tr></table></figure><p>实际上除了以上三种模式外，还有一种模式叫做可视化模式，按下键盘上的 v 即可进入，它能够支持选取一段文本，选取后，我们可以对指定段落的文本内容快速进行复制、剪切、删除、插入等操作，非常方便。在此模式下，我们可以通过上下左右键进行选取，以进入可视化模式时的位置作为基本位置，通过移动另一端来进行选取。</p><p>我们可以使用以下命令来对选中区域进行各种操作：</p><ul><li>y 复制选中区域</li><li>d&#x2F;x 剪切（删除）选中区域</li><li>p 粘贴</li><li>u 撤销上一步</li></ul><p>当然，这些命令在命令模式下也可以使用，但是可视化模式下使用更适合一些。</p><hr><h2 id="环境安装和项目部署"><a href="#环境安装和项目部署" class="headerlink" title="环境安装和项目部署"></a>环境安装和项目部署</h2><p>在学习完了 Linux 操作系统的一些基本操作之后，我们接着来看如何进行项目的环境安装和部署，包括安装 JDK、Nginx 服务器，以及上传我们的 SpringBoot 项目并运行。</p><p>我们可以直接使用 apt 进行软件的安装，它是一个高级的安装包管理工具，我们可以直接寻找对应的软件进行安装，无需再去官网进行下载，非常方便，软件仓库中默认已经帮助我们存放了大量实用软件的安装包，只需要一个安装命令就可以进行安装了。</p><p>实际上 Ubuntu 系统已经为我们自带了一些环境了，比如 Python3：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">test@ubuntu-server:~$ python3</span><br><span class="line">Python 3.8.10 (default, Nov 26 2021, 20:14:08)</span><br><span class="line">[GCC 9.3.0] on linux</span><br><span class="line">Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.</span><br><span class="line">&gt;&gt;&gt; print(&quot;HelloWorld！&quot;)</span><br><span class="line">HelloWorld！</span><br><span class="line">&gt;&gt;&gt; exit()</span><br></pre></td></tr></table></figure><p>C 语言的编译工具 GCC 可以通过 APT 进行安装：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install gcc</span><br></pre></td></tr></table></figure><p>安装后，可以编写一个简单的 C 语言程序并且编译为可执行文件：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Hello World!\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">test@ubuntu-server:~$ vim hello.c</span><br><span class="line">test@ubuntu-server:~$ gcc hello.c -o hello</span><br><span class="line">test@ubuntu-server:~$ ./hello</span><br><span class="line">Hello World!</span><br></pre></td></tr></table></figure><p>而 JDK 实际上安装也非常简单，通过 APT 即可：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">test@ubuntu-server:~$ sudo apt install openjdk-8-j</span><br><span class="line">openjdk-8-jdk           openjdk-8-jre           openjdk-8-jre-zero</span><br><span class="line">openjdk-8-jdk-headless  openjdk-8-jre-headless</span><br><span class="line">test@ubuntu-server:~$ sudo apt install openjdk-8-jdk</span><br></pre></td></tr></table></figure><p>接着我们来测试一下编译和运行，首先编写一个 Java 程序：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">test@ubuntu-server:~$ vim Main.java</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">public class Main&#123;</span><br><span class="line">        public static void main(String[] args)&#123;</span><br><span class="line">                System.out.println(&quot;Hello World！&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">test@ubuntu-server:~$ javac Main.java</span><br><span class="line">test@ubuntu-server:~$ ls</span><br><span class="line">Main.class  Main.java</span><br><span class="line">test@ubuntu-server:~$ java Main</span><br><span class="line">Hello World！</span><br></pre></td></tr></table></figure><p>接着我们来部署一下 Redis 服务器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">test@ubuntu-server:~$ sudo apt install redis</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1715788971654-25de2aeb-6200-44b7-9f93-f75a3e6837a8.png"></p><p>安装完成后，可以直接使用 redis-cli 命令打开 Redis 客户端连接本地的服务器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">test@ubuntu-server:~$ redis-cli</span><br><span class="line">127.0.0.1:6379&gt; keys *</span><br><span class="line">(empty list or set)</span><br></pre></td></tr></table></figure><p>使用和之前 Windows 下没有区别。</p><p>接着我们安装一下 MySQL 服务器，同样的，直接使用 apt 即可：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install mysql-server-8.0</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1715788971584-7e843e1b-2fd8-44a1-8de1-07b5316f64be.png"></p><p>我们直接直接登录 MySQL 服务器，注意要在 root 权限下使用，这样就不用输入密码了：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">sudo mysql -u root -p</span><br><span class="line">Enter password:</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 11</span><br><span class="line">Server version: 8.0.27-0ubuntu0.20.04.1 (Ubuntu)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2021, Oracle and/or its affiliates.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type &#x27;help;&#x27; or &#x27;\h&#x27; for help. Type &#x27;\c&#x27; to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt; exit</span><br></pre></td></tr></table></figure><p>可以发现实际上就是我们之前在 Windows 的 CMD 中使用的样子，接着我们就创建一个生产环境下使用的数据库：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create database book_manage;</span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| book_manage        |</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line">+--------------------+</span><br><span class="line">5 rows in set (0.01 sec)</span><br></pre></td></tr></table></figure><p>接着我们创建一个用户来使用这个数据，一会我们就可以将 SpringBoot 配置文件进行修改并直接放到此服务器上进行部署。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create user test identified by &#x27;123456&#x27;;</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; grant all on book_manage.* to test;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br></pre></td></tr></table></figure><p>如果觉得这样很麻烦不是可视化的，可以使用 Navicat 连接进行操作，注意开启一下 MySQL 的外网访问。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">test@ubuntu-server:~$ mysql -u test -p</span><br><span class="line">Enter password:</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 13</span><br><span class="line">Server version: 8.0.27-0ubuntu0.20.04.1 (Ubuntu)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2021, Oracle and/or its affiliates.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type &#x27;help;&#x27; or &#x27;\h&#x27; for help. Type &#x27;\c&#x27; to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| book_manage        |</span><br><span class="line">| information_schema |</span><br><span class="line">+--------------------+</span><br><span class="line">2 rows in set (0.01 sec)</span><br></pre></td></tr></table></figure><p>使用 test 用户登录之后，查看数据库列表，有 book_manage 就 OK 了。</p><p>最后我们修改一下 SpringBoot 项目的生产环境配置即可：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/bookmanage</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">zachary</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">980226</span></span><br><span class="line">  <span class="attr">mail:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="string">smtp.163.com</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">zachary26626@163.com</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">YALHSGARSOCGDNJH</span></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="string">localhost</span></span><br><span class="line">  <span class="attr">jpa:</span></span><br><span class="line">    <span class="attr">show-sql:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">hibernate:</span></span><br><span class="line">      <span class="attr">ddl-auto:</span> <span class="string">update</span></span><br><span class="line"><span class="attr">springfox:</span></span><br><span class="line">  <span class="attr">documentation:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>然后将之前的 springboot 项目中的 static 文件拿走，之后打包，最后启动我们的项目：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">test@ubuntu-server:~$ java -jar springboot-project-0.0.1-SNAPSHOT.jar</span><br></pre></td></tr></table></figure><p>现在我们将前端页面的 API 访问地址修改为我们的 SpringBoot 服务器地址，即可正常使用了。</p><p>我们也可以将我们的静态资源使用 Nginx 服务器进行代理：</p><p>Nginx(“engine x”)是一款是由俄罗斯的程序设计师 Igor Sysoev 所开发高性能的 Web 和 反向代理 服务器，也是一个 IMAP&#x2F;POP3&#x2F;SMTP 代理服务器。 在高连接并发的情况下，Nginx 是 Apache 服务器不错的替代品。</p><p>Nginx 非常强大，它能够通提供非常方便的反向代理服务，并且支持负载均衡，不过我们这里用一下反向代理就可以了，实际上就是代理我们的前端页面，然后我们访问 Nginx 服务器即可访问到静态资源，这样我们前后端都放在了服务器上（你也可以搞两台服务器，一台挂静态资源一台挂 SpringBoot 服务器，实现真正意义上的分离，有条件的还能上个域名和证书啥的）。</p><p>安装如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">test@ubuntu-server:~$ sudo apt install nginx</span><br></pre></td></tr></table></figure><p>安装完成后，我们可以直接访问：<a href="http://192.168.10.4/%EF%BC%8C%E8%83%BD%E5%A4%9F%E5%87%BA%E7%8E%B0Nginx%E9%A1%B5%E9%9D%A2%E8%A1%A8%E7%A4%BA%E5%AE%89%E8%A3%85%E6%88%90%E5%8A%9F%EF%BC%81">http://192.168.10.4/，能够出现 Nginx 页面表示安装成功！</a></p><p>接着我们将静态资源上传到 Linux 服务器中，</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1715788971613-f8009179-9c24-4b05-b17a-25c334092245.png"></p><p>然后对 Nginx 进行反向代理配置，写到 http 大括号里面去：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">test@ubuntu-server:~$ cd /etc/nginx/</span><br><span class="line">test@ubuntu-server:/etc/nginx$ ls</span><br><span class="line">conf.d    koi-utf     modules-available  proxy_params  sites-enabled  win-utf</span><br><span class="line">fastcgi.conf  koi-win     modules-enabled    scgi_params  snippets</span><br><span class="line">fastcgi_params  mime.types  nginx.conf         sites-available  uwsgi_params</span><br><span class="line">test@ubuntu-server:/etc/nginx$ sudo vim nginx.conf</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">                listen       80;</span><br><span class="line">                server_name  172.16.59.130;</span><br><span class="line">                add_header Access-Control-Allow-Origin *;</span><br><span class="line">                location / &#123;</span><br><span class="line">                        root /home/zachary/static;</span><br><span class="line">                        charset utf-8;</span><br><span class="line">                        add_header &#x27;Access-Control-Allow-Origin&#x27; &#x27;*&#x27;;</span><br><span class="line">                        add_header &#x27;Access-Control-Allow-Credentials&#x27; &#x27;true&#x27;;</span><br><span class="line">                        add_header &#x27;Access-Control-Allow-Methods&#x27; &#x27;*&#x27;;</span><br><span class="line">                        add_header &#x27;Access-Control-Allow-Headers&#x27; &#x27;Content-Type,*&#x27;;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>重启一下 nginx 服务器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart nginx.service</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar springboot-project-0.0.1-SNAPSHOT.jar</span><br></pre></td></tr></table></figure><p>然后就可以直接访问到我们的前端页面了，这时再开启 SpringBoot 服务器即可，可以在最后添加&amp;符号表示后台启动。</p><p>输入：<a href="http://172.16.59.130/">http://172.16.59.130/</a></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1715788971666-73d7f965-90e5-473a-adea-6de2742b726e.png"></p><blockquote><p>更新: 2024-05-16 00:11:56<br>原文: <a href="https://www.yuque.com/zacharyblock/cx2om6/qhyvxbr4m26peqma">https://www.yuque.com/zacharyblock/cx2om6/qhyvxbr4m26peqma</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Linux-基础&quot;&gt;&lt;a href=&quot;#Linux-基础&quot; class=&quot;headerlink&quot; title=&quot;Linux 基础&quot;&gt;&lt;/a&gt;Linux 基础&lt;/h1&gt;&lt;h2 id=&quot;安装-Ubuntu-系统&quot;&gt;&lt;a href=&quot;#安装-Ubuntu-系统&quot; cla</summary>
      
    
    
    
    <category term="Linux" scheme="https://blockzachary.github.io/categories/Linux/"/>
    
    
    <category term="Linux" scheme="https://blockzachary.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>API鉴权</title>
    <link href="https://blockzachary.github.io/2024/05/03/FastAPI%E5%85%A5%E9%97%A8/API%E9%89%B4%E6%9D%83/"/>
    <id>https://blockzachary.github.io/2024/05/03/FastAPI%E5%85%A5%E9%97%A8/API%E9%89%B4%E6%9D%83/</id>
    <published>2024-05-03T22:10:00.000Z</published>
    <updated>2024-05-03T22:10:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="API-鉴权"><a href="#API-鉴权" class="headerlink" title="API 鉴权"></a>API 鉴权</h1><p>为了不允许，任何人都可以调用后端的 api 接口，现在给 api 接口加上权限校验，只有登录过的才能调用后端的 api 接口，之前在<code>auth.py</code>中实现了一个校验，通过依赖注入给 api 直接加上即可</p><h2 id="依赖注入"><a href="#依赖注入" class="headerlink" title="依赖注入"></a>依赖注入</h2><p>比如给<code>courseApi.py</code>的所有接口加上 token 校验的依赖</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Optional</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> APIRouter, Query, Depends</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> common.auth <span class="keyword">import</span> auth_handler</span><br><span class="line"><span class="keyword">from</span> common.pageHelper <span class="keyword">import</span> PageHelper</span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> ResultModel, Result</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session, get_db_session</span><br><span class="line"><span class="keyword">from</span> model.course <span class="keyword">import</span> CourseSearch, CourseCreate, CourseUpdate</span><br><span class="line"><span class="keyword">from</span> service.courseService <span class="keyword">import</span> CourseService</span><br><span class="line"></span><br><span class="line">course_router = APIRouter(prefix=<span class="string">&quot;/course&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@course_router.get(<span class="params"><span class="string">&quot;/selectPage&quot;</span>, response_model=ResultModel, dependencies=[Depends(<span class="params">auth_handler.auth_required</span>)]</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">select_page</span>(<span class="params">page: <span class="built_in">int</span> = Query(<span class="params"><span class="number">1</span>, ge=<span class="number">1</span>, alias=<span class="string">&quot;pageNum&quot;</span>, description=<span class="string">&quot;Page number&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      size: <span class="built_in">int</span> = Query(<span class="params"><span class="number">5</span>, gt=<span class="number">0</span>, le=<span class="number">100</span>, alias=<span class="string">&quot;pageSize&quot;</span>, description=<span class="string">&quot;Page size&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      name: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Course name&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      number: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Course number&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      teacher: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Course teacher&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    pageInfo = PageHelper.startPage(page, size)</span><br><span class="line">    course_search = CourseSearch(name=name, number=number, teacher=teacher)</span><br><span class="line">    course_list = CourseService.select_page(course_search, db_session)</span><br><span class="line">    result = Result.success(pageInfo.of(course_list))</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@course_router.post(<span class="params"><span class="string">&quot;/add&quot;</span>, response_model=ResultModel, dependencies=[Depends(<span class="params">auth_handler.auth_required</span>)]</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">course: CourseCreate, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    CourseService.add_course(course, db_session)</span><br><span class="line">    result = Result.success()</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@course_router.put(<span class="params"><span class="string">&quot;/update&quot;</span>, response_model=ResultModel, dependencies=[Depends(<span class="params">auth_handler.auth_required</span>)]</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">update</span>(<span class="params">course: CourseUpdate, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    CourseService.update_by_id(course, db_session)</span><br><span class="line">    result = Result.success()</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@course_router.delete(<span class="params"><span class="string">&quot;/delete/&#123;id&#125;&quot;</span>, response_model=ResultModel, dependencies=[Depends(<span class="params">auth_handler.auth_required</span>)]</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">delete</span>(<span class="params"><span class="built_in">id</span>: <span class="built_in">int</span>, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    CourseService.delete_by_id(<span class="built_in">id</span>, db_session)</span><br><span class="line">    result = Result.success()</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.include_router(course_router)</span><br></pre></td></tr></table></figure><p>或者给整个&#x2F;course 下的 api 都注入依赖，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Optional</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> APIRouter, Depends, Query</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> common.auth <span class="keyword">import</span> auth_handler</span><br><span class="line"><span class="keyword">from</span> common.pageHelper <span class="keyword">import</span> PageHelper</span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> ResultModel, Result</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session, get_db_session</span><br><span class="line"><span class="keyword">from</span> model.course <span class="keyword">import</span> CourseSearch, CourseCreate, CourseUpdate</span><br><span class="line"><span class="keyword">from</span> service.courseService <span class="keyword">import</span> CourseService</span><br><span class="line"></span><br><span class="line">course_router = APIRouter(prefix=<span class="string">&#x27;/course&#x27;</span>, dependencies=[Depends(auth_handler.auth_required)])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@course_router.get(<span class="params"><span class="string">&quot;/selectPage&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">select_page</span>(<span class="params">page: <span class="built_in">int</span> = Query(<span class="params"><span class="number">1</span>, ge=<span class="number">1</span>, alias=<span class="string">&quot;pageNum&quot;</span>, description=<span class="string">&quot;Page number&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      size: <span class="built_in">int</span> = Query(<span class="params"><span class="number">5</span>, gt=<span class="number">0</span>, le=<span class="number">100</span>, alias=<span class="string">&quot;pageSize&quot;</span>, description=<span class="string">&quot;Page size&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      name: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Course name&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      number: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Course number&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      teacher: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Course teacher&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    pageInfo = PageHelper.startPage(page, size)</span><br><span class="line">    course_search = CourseSearch(name=name, number=number, teacher=teacher)</span><br><span class="line">    course_list = CourseService.select_page(course_search, db_session)</span><br><span class="line">    result = Result.success(pageInfo.of(course_list))</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@course_router.post(<span class="params"><span class="string">&quot;/add&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">course: CourseCreate, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    CourseService.add_course(course, db_session)</span><br><span class="line">    result = Result.success()</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@course_router.put(<span class="params"><span class="string">&quot;/update&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">update</span>(<span class="params">course: CourseUpdate, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    CourseService.update_by_id(course, db_session)</span><br><span class="line">    result = Result.success()</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@course_router.delete(<span class="params"><span class="string">&quot;/delete/&#123;id&#125;&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">delete</span>(<span class="params"><span class="built_in">id</span>: <span class="built_in">int</span>, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    CourseService.delete_by_id(<span class="built_in">id</span>, db_session)</span><br><span class="line">    result = Result.success()</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.include_router(course_router)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这样如果没有登录的情况下，直接用 postman 是无法调用接口的</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710427325734-11834e2f-d189-420d-8d57-8b67386e6943.png"></p><h2 id="登录-token"><a href="#登录-token" class="headerlink" title="登录 token"></a>登录 token</h2><p>虽然现在前端页面上已经登录了，但由于请求头没有带上 token，所以无法获取数据</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710419406685-19044c40-990d-496d-9cad-a0b7dbde9e49.png"></p><p>为了让浏览器拿到后端生成的这个 token，需要改变一下登录后的返回结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> select</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.auth <span class="keyword">import</span> auth_handler</span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> UserNotFoundException, PasswordNotMatchException</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session</span><br><span class="line"><span class="keyword">from</span> model.admin <span class="keyword">import</span> Admin, AdminModel, AdminLoginResponse</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AdminService</span>:</span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">login</span>(<span class="params">admin: AdminModel, db_session: Session</span>) -&gt; Admin:</span><br><span class="line">        query = select(Admin).where(Admin.username == admin.username)</span><br><span class="line">        exist_admin: Admin = db_session.execute(query).scalars().first()</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> exist_admin:</span><br><span class="line">            <span class="keyword">raise</span> UserNotFoundException(<span class="string">&quot;用户不存在&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> auth_handler.verify_password(admin.password, exist_admin.password):</span><br><span class="line">            <span class="keyword">raise</span> PasswordNotMatchException(<span class="string">&quot;身份验证未通过&quot;</span>)</span><br><span class="line">        admin_login_response = AdminLoginResponse(<span class="built_in">id</span>=exist_admin.<span class="built_in">id</span>, username=exist_admin.username,</span><br><span class="line">                                                  token=auth_handler.encode_token(exist_admin.<span class="built_in">id</span>))</span><br><span class="line">        <span class="keyword">return</span> admin_login_response</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">import</span> bcrypt</span><br><span class="line"><span class="keyword">from</span> pydantic <span class="keyword">import</span> BaseModel</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> Integer, String</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> Mapped, mapped_column</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Base</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Admin</span>(<span class="title class_ inherited__">Base</span>):</span><br><span class="line">    __tablename__ = <span class="string">&quot;admin&quot;</span></span><br><span class="line">    <span class="built_in">id</span>: Mapped[<span class="built_in">int</span>] = mapped_column(Integer, primary_key=<span class="literal">True</span>, nullable=<span class="literal">False</span>)</span><br><span class="line">    username: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    password: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AdminModel</span>(<span class="title class_ inherited__">BaseModel</span>):</span><br><span class="line">    username: <span class="built_in">str</span></span><br><span class="line">    password: <span class="built_in">str</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AdminLoginResponse</span>(<span class="title class_ inherited__">BaseModel</span>):</span><br><span class="line">    <span class="built_in">id</span>: <span class="built_in">int</span></span><br><span class="line">    username: <span class="built_in">str</span></span><br><span class="line">    token: <span class="built_in">str</span></span><br></pre></td></tr></table></figure><p>这样子在重新登录之后就可以获得后端返回的 token，前端 axios 会在发起请求之前，将 token 放到请求头中，再向后端请求 api 接口</p><p>登录后会返回 token：</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710420080541-20a155e1-15a0-4052-ae34-c60a582e6b41.png"></p><p>能正确获取数据：</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710427424832-4e162436-19bc-4d6d-b51a-e81eae83e769.png"></p><h2 id="token-超时失效"><a href="#token-超时失效" class="headerlink" title="token 超时失效"></a>token 超时失效</h2><p>为了让前端的 token 失效之后，自动回到 Login 页面，需要做些调整</p><p>当请求 api 接口的时候返回的状态值为 401 的时候，移除存储的 student-user，这样就会自动跳转回 login 页面重新进行登录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.name&quot;</span><br><span class="line">        placeholder=&quot;请输入要查询的课程名称&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;margin-left:10px; width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.number&quot;</span><br><span class="line">        placeholder=&quot;请输入课程编号&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;margin-left:10px; width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.teacher&quot;</span><br><span class="line">        placeholder=&quot;请输入任课老师&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-button type=&quot;info&quot; plain style=&quot;margin: 0 0 0 10px&quot; @click=&quot;reset&quot;</span><br><span class="line">        &gt;重置&lt;/el-button</span><br><span class="line">      &gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-button</span><br><span class="line">          type=&quot;primary&quot;</span><br><span class="line">          style=&quot;margin-bottom: 5px&quot;</span><br><span class="line">          plain</span><br><span class="line">          @click=&quot;handleAdd&quot;</span><br><span class="line">          &gt;新增&lt;/el-button</span><br><span class="line">        &gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-table :data=&quot;data.tableData&quot; stripe style=&quot;width: 100%&quot;&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;id&quot; label=&quot;ID&quot; width=&quot;80&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;name&quot; label=&quot;课程名称&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;number&quot; label=&quot;课程编号&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;description&quot; label=&quot;课程描述&quot; width=&quot;240&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;periods&quot; label=&quot;课时&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;teacher&quot; label=&quot;任课教师&quot; /&gt;</span><br><span class="line">          &lt;el-table-column label=&quot;操作&quot; align=&quot;center&quot;&gt;</span><br><span class="line">            &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">              &lt;el-button</span><br><span class="line">                type=&quot;primary&quot;</span><br><span class="line">                size=&quot;small&quot;</span><br><span class="line">                plain</span><br><span class="line">                @click=&quot;handleEdit(scope.row)&quot;</span><br><span class="line">                &gt;编辑&lt;/el-button</span><br><span class="line">              &gt;</span><br><span class="line">              &lt;el-button</span><br><span class="line">                type=&quot;danger&quot;</span><br><span class="line">                size=&quot;small&quot;</span><br><span class="line">                plain</span><br><span class="line">                @click=&quot;handleDelete(scope.row.id)&quot;</span><br><span class="line">                &gt;删除&lt;/el-button</span><br><span class="line">              &gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">          &lt;/el-table-column&gt;</span><br><span class="line">        &lt;/el-table&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot;&gt;</span><br><span class="line">      &lt;el-pagination</span><br><span class="line">        v-model:current-page=&quot;data.pageNum&quot;</span><br><span class="line">        v-model:page-size=&quot;data.pageSize&quot;</span><br><span class="line">        @current-change=&quot;handleCurrentChange&quot;</span><br><span class="line">        background</span><br><span class="line">        layout=&quot;prev, pager, next&quot;</span><br><span class="line">        :total=&quot;data.total&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;el-dialog width=&quot;35%&quot; v-model=&quot;data.formVisible&quot; title=&quot;课程信息&quot;&gt;</span><br><span class="line">      &lt;el-form</span><br><span class="line">        :model=&quot;data.form&quot;</span><br><span class="line">        label-width=&quot;100px&quot;</span><br><span class="line">        label-position=&quot;right&quot;</span><br><span class="line">        style=&quot;padding-right: 45px&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;el-form-item label=&quot;课程名称&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.name&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;课程编号&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.number&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;课程描述&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.description&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;课时&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.periods&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;任课教师&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.teacher&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">      &lt;/el-form&gt;</span><br><span class="line">      &lt;template #footer&gt;</span><br><span class="line">        &lt;span class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">          &lt;el-button @click=&quot;data.formVisible = false&quot; plain&gt;取消&lt;/el-button&gt;</span><br><span class="line">          &lt;el-button type=&quot;primary&quot; @click=&quot;save&quot; plain&gt;保存&lt;/el-button&gt;</span><br><span class="line">        &lt;/span&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line">    &lt;/el-dialog&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; reactive &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; Search &#125; from &quot;@element-plus/icons-vue&quot;;</span><br><span class="line">import request from &quot;@/utils/request&quot;;</span><br><span class="line">import &#123; ElMessage, ElMessageBox &#125; from &quot;element-plus&quot;;</span><br><span class="line">import router from &quot;@/router&quot;;</span><br><span class="line"></span><br><span class="line">const data = reactive(&#123;</span><br><span class="line">  name: &quot;&quot;,</span><br><span class="line">  number: &quot;&quot;,</span><br><span class="line">  teacher: &quot;&quot;,</span><br><span class="line">  tableData: [],</span><br><span class="line">  total: 0,</span><br><span class="line">  pageNum: 1,</span><br><span class="line">  pageSize: 5,</span><br><span class="line">  formVisible: false,</span><br><span class="line">  form: &#123;&#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const load = () =&gt; &#123;</span><br><span class="line">  request</span><br><span class="line">    .get(&quot;/course/selectPage&quot;, &#123;</span><br><span class="line">      params: &#123;</span><br><span class="line">        pageNum: data.pageNum,</span><br><span class="line">        pageSize: data.pageSize,</span><br><span class="line">        name: data.name,</span><br><span class="line">        number: data.number,</span><br><span class="line">        teacher: data.teacher,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">        data.tableData = res.data?.list || [];</span><br><span class="line">        data.total = res.data?.total || 0;</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        ElMessage.error(res.msg);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">        localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 加载一次 获取课程数据</span><br><span class="line">load();</span><br><span class="line"></span><br><span class="line">const handleCurrentChange = () =&gt; &#123;</span><br><span class="line">  // 当翻页的时候重新加载数据</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const reset = () =&gt; &#123;</span><br><span class="line">  data.name = &quot;&quot;;</span><br><span class="line">  data.number = &quot;&quot;;</span><br><span class="line">  data.teacher = &quot;&quot;;</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const handleAdd = () =&gt; &#123;</span><br><span class="line">  data.formVisible = true;</span><br><span class="line">  data.form = &#123;&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const save = () =&gt; &#123;</span><br><span class="line">  request</span><br><span class="line">    .request(&#123;</span><br><span class="line">      url: data.form.id ? &quot;/course/update&quot; : &quot;/course/add&quot;,</span><br><span class="line">      method: data.form.id ? &quot;put&quot; : &quot;post&quot;,</span><br><span class="line">      data: data.form,</span><br><span class="line">    &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">        ElMessage.success(&quot;操作成功&quot;);</span><br><span class="line">        data.formVisible = false;</span><br><span class="line">        load();</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        ElMessage.error(res.msg);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">        localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const handleEdit = (row) =&gt; &#123;</span><br><span class="line">  data.form = JSON.parse(JSON.stringify(row));</span><br><span class="line">  data.formVisible = true;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const handleDelete = (id) =&gt; &#123;</span><br><span class="line">  ElMessageBox.confirm(&quot;删除后内容将无法恢复，您确认删除嘛？&quot;, &quot;删除确认&quot;, &#123;</span><br><span class="line">    type: &quot;warning&quot;,</span><br><span class="line">  &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      request.delete(&quot;/course/delete/&quot; + id).then((res) =&gt; &#123;</span><br><span class="line">        if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">          ElMessage.success(&quot;删除成功&quot;);</span><br><span class="line">          load();</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          ElMessage.error(res.msg);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">        localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710445924935-211ab920-04f6-4bd6-ae07-b125be316f6b.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710445934776-e2d6aab9-287b-4cdd-be66-61b04249bb07.png"></p><h2 id="token-超时配置"><a href="#token-超时配置" class="headerlink" title="token 超时配置"></a>token 超时配置</h2><p>为了更便捷地配置 token 的超时时间，设置一下超时时间常量</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.config <span class="keyword">import</span> config</span><br><span class="line"></span><br><span class="line">HOST = config.env.get(<span class="string">&quot;HOST&quot;</span>)</span><br><span class="line">PORT = config.env.get(<span class="string">&quot;PORT&quot;</span>)</span><br><span class="line"></span><br><span class="line">MYSQL_DIALECT = config.env.get(<span class="string">&quot;MYSQL_DIALECT&quot;</span>)</span><br><span class="line">MYSQL_HOST = config.env.get(<span class="string">&quot;MYSQL_HOST&quot;</span>)</span><br><span class="line">MYSQL_PORT = config.env.get(<span class="string">&quot;MYSQL_PORT&quot;</span>)</span><br><span class="line">MYSQL_USER = config.env.get(<span class="string">&quot;MYSQL_USER&quot;</span>)</span><br><span class="line">MYSQL_PASSWORD = config.env.get(<span class="string">&quot;MYSQL_PASSWORD&quot;</span>)</span><br><span class="line">MYSQL_DATABASE = config.env.get(<span class="string">&quot;MYSQL_DATABASE&quot;</span>)</span><br><span class="line"></span><br><span class="line">TOKEN_EXPIRE_DAYS = <span class="number">7</span></span><br><span class="line">TOKEN_EXPIRE_MINUTES = <span class="number">0</span></span><br><span class="line">TOKEN_EXPIRE_SECONDS = <span class="number">0</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime, timedelta</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> jwt</span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> Security</span><br><span class="line"><span class="keyword">from</span> fastapi.security <span class="keyword">import</span> HTTPBearer, HTTPAuthorizationCredentials</span><br><span class="line"><span class="keyword">from</span> passlib.context <span class="keyword">import</span> CryptContext</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.constant <span class="keyword">import</span> TOKEN_EXPIRE_DAYS, TOKEN_EXPIRE_MINUTES, TOKEN_EXPIRE_SECONDS</span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> TokenException</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AuthHandler</span>:</span><br><span class="line">    security = HTTPBearer()</span><br><span class="line">    pwd_context = CryptContext(schemes=[<span class="string">&quot;bcrypt&quot;</span>], deprecated=<span class="string">&quot;auto&quot;</span>)</span><br><span class="line">    secret = <span class="string">&quot;SECRET&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_password_hash</span>(<span class="params">self, password</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.pwd_context.<span class="built_in">hash</span>(password)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">verify_password</span>(<span class="params">self, plain_password, hashed_password</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.pwd_context.verify(plain_password, hashed_password)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">encode_token</span>(<span class="params">self, user_id</span>):</span><br><span class="line">        payload = &#123;</span><br><span class="line">            <span class="string">&#x27;exp&#x27;</span>: datetime.utcnow() + timedelta(days=TOKEN_EXPIRE_DAYS, minutes=TOKEN_EXPIRE_MINUTES,</span><br><span class="line">                                                 seconds=TOKEN_EXPIRE_SECONDS),</span><br><span class="line">            <span class="string">&#x27;iat&#x27;</span>: datetime.utcnow(),</span><br><span class="line">            <span class="string">&#x27;sub&#x27;</span>: user_id</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> jwt.encode(</span><br><span class="line">            payload,</span><br><span class="line">            <span class="variable language_">self</span>.secret,</span><br><span class="line">            algorithm=<span class="string">&#x27;HS256&#x27;</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">decode_token</span>(<span class="params">self, token</span>):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            payload = jwt.decode(token, <span class="variable language_">self</span>.secret, algorithms=[<span class="string">&#x27;HS256&#x27;</span>])</span><br><span class="line">            <span class="keyword">return</span> payload[<span class="string">&#x27;sub&#x27;</span>]</span><br><span class="line">        <span class="keyword">except</span> jwt.ExpiredSignatureError:</span><br><span class="line">            <span class="keyword">raise</span> TokenException(<span class="string">&quot;token过期&quot;</span>)</span><br><span class="line">        <span class="keyword">except</span> jwt.InvalidTokenError:</span><br><span class="line">            <span class="keyword">raise</span> TokenException(<span class="string">&quot;无效token&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">auth_required</span>(<span class="params">self, auth: HTTPAuthorizationCredentials = Security(<span class="params">security</span>)</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.decode_token(auth.credentials)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">auth_handler = AuthHandler()</span><br></pre></td></tr></table></figure><hr><blockquote><p>更新: 2024-05-03 21:07:51<br>原文: <a href="https://www.yuque.com/zacharyblock/iacda/po1gqzqal77c94sl">https://www.yuque.com/zacharyblock/iacda/po1gqzqal77c94sl</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;API-鉴权&quot;&gt;&lt;a href=&quot;#API-鉴权&quot; class=&quot;headerlink&quot; title=&quot;API 鉴权&quot;&gt;&lt;/a&gt;API 鉴权&lt;/h1&gt;&lt;p&gt;为了不允许，任何人都可以调用后端的 api 接口，现在给 api 接口加上权限校验，只有登录过的才能调用后端</summary>
      
    
    
    
    <category term="FastAPI入门" scheme="https://blockzachary.github.io/categories/FastAPI%E5%85%A5%E9%97%A8/"/>
    
    
    <category term="Python" scheme="https://blockzachary.github.io/tags/Python/"/>
    
    <category term="Vue3" scheme="https://blockzachary.github.io/tags/Vue3/"/>
    
    <category term="FastAPI" scheme="https://blockzachary.github.io/tags/FastAPI/"/>
    
    <category term="实战" scheme="https://blockzachary.github.io/tags/%E5%AE%9E%E6%88%98/"/>
    
  </entry>
  
  <entry>
    <title>课程管理</title>
    <link href="https://blockzachary.github.io/2024/05/03/FastAPI%E5%85%A5%E9%97%A8/%E8%AF%BE%E7%A8%8B%E7%AE%A1%E7%90%86/"/>
    <id>https://blockzachary.github.io/2024/05/03/FastAPI%E5%85%A5%E9%97%A8/%E8%AF%BE%E7%A8%8B%E7%AE%A1%E7%90%86/</id>
    <published>2024-05-03T22:00:00.000Z</published>
    <updated>2024-05-03T22:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="课程管理"><a href="#课程管理" class="headerlink" title="课程管理"></a>课程管理</h1><p>接下来开发一个课程管理功能，用于管理和显示学生课程的</p><h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><p>先设计一下课程数据表，命名为 course，字段（课程名称、课程编号、课程描述、课时、任课老师）</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710344223757-045d4a5b-3901-4683-a2e6-b30d7fe489b8.png"></p><h2 id="课程页面"><a href="#课程页面" class="headerlink" title="课程页面"></a>课程页面</h2><p>在前端的项目目录下的<code>/manage</code>下创建一个<code>Course.vue</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        style=&quot;width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.name&quot;</span><br><span class="line">        placeholder=&quot;请输入要查询的课程名称&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-button type=&quot;primary&quot; style=&quot;margin: 0 0 0 10px&quot; plain</span><br><span class="line">        &gt;查询&lt;/el-button</span><br><span class="line">      &gt;</span><br><span class="line">      &lt;el-button type=&quot;info&quot; plain&gt;重置&lt;/el-button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-button type=&quot;primary&quot; style=&quot;margin-bottom: 5px&quot; plain</span><br><span class="line">          &gt;新增&lt;/el-button</span><br><span class="line">        &gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-table :data=&quot;data.tableData&quot; stripe style=&quot;width: 100%&quot;&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;id&quot; label=&quot;ID&quot; width=&quot;80&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;name&quot; label=&quot;课程名称&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;number&quot; label=&quot;课程编号&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;description&quot; label=&quot;课程描述&quot; width=&quot;240&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;periods&quot; label=&quot;课时&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;teacher&quot; label=&quot;任课教师&quot; /&gt;</span><br><span class="line">          &lt;el-table-column label=&quot;操作&quot; align=&quot;center&quot;&gt;</span><br><span class="line">            &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">              &lt;el-button type=&quot;primary&quot; size=&quot;small&quot; plain&gt;编辑&lt;/el-button&gt;</span><br><span class="line">              &lt;el-button type=&quot;danger&quot; size=&quot;small&quot; plain&gt;删除&lt;/el-button&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">          &lt;/el-table-column&gt;</span><br><span class="line">        &lt;/el-table&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot;&gt;</span><br><span class="line">      &lt;el-pagination background layout=&quot;prev, pager, next&quot; :total=&quot;1000&quot; /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; reactive &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; Search &#125; from &quot;@element-plus/icons-vue&quot;;</span><br><span class="line"></span><br><span class="line">const data = reactive(&#123;</span><br><span class="line">  name: &quot;&quot;,</span><br><span class="line">  tableData: [</span><br><span class="line">    &#123;</span><br><span class="line">      id: 1,</span><br><span class="line">      name: &quot;大学英语&quot;,</span><br><span class="line">      number: &quot;001&quot;,</span><br><span class="line">      description: &quot;大学英语不想学-6学分&quot;,</span><br><span class="line">      periods: &quot;36课时&quot;,</span><br><span class="line">      teacher: &quot;张三&quot;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      id: 2,</span><br><span class="line">      name: &quot;高等数学&quot;,</span><br><span class="line">      number: &quot;002&quot;,</span><br><span class="line">      description: &quot;高等数学好难学-4学分&quot;,</span><br><span class="line">      periods: &quot;24课时&quot;,</span><br><span class="line">      teacher: &quot;李四&quot;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      id: 3,</span><br><span class="line">      name: &quot;必修物理&quot;,</span><br><span class="line">      number: &quot;003&quot;,</span><br><span class="line">      description: &quot;必修物理有难度-2学分&quot;,</span><br><span class="line">      periods: &quot;24课时&quot;,</span><br><span class="line">      teacher: &quot;王五&quot;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      id: 4,</span><br><span class="line">      name: &quot;思想政治&quot;,</span><br><span class="line">      number: &quot;004&quot;,</span><br><span class="line">      description: &quot;思想政治必修课-4学分&quot;,</span><br><span class="line">      periods: &quot;18课时&quot;,</span><br><span class="line">      teacher: &quot;赵六&quot;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      id: 5,</span><br><span class="line">      name: &quot;微机原理&quot;,</span><br><span class="line">      number: &quot;005&quot;,</span><br><span class="line">      description: &quot;微机原理很基础-3学分&quot;,</span><br><span class="line">      periods: &quot;24课时&quot;,</span><br><span class="line">      teacher: &quot;钱七&quot;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      id: 6,</span><br><span class="line">      name: &quot;通信原理&quot;,</span><br><span class="line">      number: &quot;006&quot;,</span><br><span class="line">      description: &quot;通信原理很难懂-4学分&quot;,</span><br><span class="line">      periods: &quot;24课时&quot;,</span><br><span class="line">      teacher: &quot;孙八&quot;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      id: 7,</span><br><span class="line">      name: &quot;离散数学&quot;,</span><br><span class="line">      number: &quot;007&quot;,</span><br><span class="line">      description: &quot;离散数学很离散-2学分&quot;,</span><br><span class="line">      periods: &quot;18课时&quot;,</span><br><span class="line">      teacher: &quot;周九&quot;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      id: 8,</span><br><span class="line">      name: &quot;工程制图&quot;,</span><br><span class="line">      number: &quot;008&quot;,</span><br><span class="line">      description: &quot;工程制图好有趣-3学分&quot;,</span><br><span class="line">      periods: &quot;24课时&quot;,</span><br><span class="line">      teacher: &quot;吴十&quot;,</span><br><span class="line">    &#125;,</span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHistory &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">history</span>: <span class="title function_">createWebHistory</span>(<span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">env</span>.<span class="property">BASE_URL</span>),</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;Manager&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/Manager.vue&quot;</span>),</span><br><span class="line">      <span class="attr">redirect</span>: <span class="string">&quot;/home&quot;</span>,</span><br><span class="line">      <span class="attr">children</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;home&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Home&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Home.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;course&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Course&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Course.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">      ],</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/login&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;Login&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/Login.vue&quot;</span>),</span><br><span class="line">    &#125;,</span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">beforeEach</span>(<span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> requiresAuth = to.<span class="property">matched</span>.<span class="title function_">some</span>(<span class="function">(<span class="params">record</span>) =&gt;</span> record.<span class="property">meta</span>.<span class="property">requiresAuth</span>);</span><br><span class="line">  <span class="keyword">const</span> user = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;student-user&quot;</span>));</span><br><span class="line">  <span class="keyword">if</span> (requiresAuth &amp;&amp; !user) &#123;</span><br><span class="line">    <span class="comment">// 如果目标路由需要认证,并且用户未登录</span></span><br><span class="line">    <span class="title function_">next</span>(<span class="string">&quot;/login&quot;</span>); <span class="comment">// 跳转到登录页面</span></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">next</span>(); <span class="comment">// 如果目标路由不需要认证,或者用户已登录,则正常导航到目标路由</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div</span><br><span class="line">      style=&quot;height: 60px; background-color: #eae8e8; display: flex; align-items: center; border-bottom: 1px solid #c4c2c2&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;div style=&quot;flex: 1&quot;&gt;</span><br><span class="line">        &lt;div style=&quot;padding-left: 20px; display: flex; align-items: center&quot;&gt;</span><br><span class="line">          &lt;img src=&quot;@/assets/imgs/logo.png&quot; alt=&quot;&quot; style=&quot;width: 40px&quot; /&gt;</span><br><span class="line">          &lt;div style=&quot;font-weight: bold; font-size: 24px; margin-left: 5px&quot;&gt;</span><br><span class="line">            学生信息管理系统</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        style=&quot;width: fit-content; padding-right: 10px; display: flex; align-items: center;&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;img</span><br><span class="line">          src=&quot;https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png&quot;</span><br><span class="line">          alt=&quot;&quot;</span><br><span class="line">          style=&quot;width: 40px; height: 40px&quot;</span><br><span class="line">        /&gt;</span><br><span class="line">        &lt;span style=&quot;margin-left: 5px&quot;&gt;管理员&lt;/span&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div style=&quot;display: flex&quot;&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        style=&quot;width: 200px; border-right: 1px solid #f3eeee; min-height: calc(100vh - 60px)&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;el-menu</span><br><span class="line">          router</span><br><span class="line">          style=&quot;border: none&quot;</span><br><span class="line">          :default-active=&quot;$route.path&quot;</span><br><span class="line">          :default-openeds=&quot;[&#x27;/home&#x27;, &#x27;2&#x27;]&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          &lt;el-menu-item index=&quot;/home&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;</span><br><span class="line">              &lt;HomeFilled /&gt;</span><br><span class="line">            &lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;系统首页&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line"></span><br><span class="line">          &lt;el-sub-menu index=&quot;2&quot;&gt;</span><br><span class="line">            &lt;template #title&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;Memo /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;课程管理&lt;/span&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">            &lt;el-menu-item index=&quot;/course&quot;&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;Document /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;课程信息&lt;/span&gt;</span><br><span class="line">            &lt;/el-menu-item&gt;</span><br><span class="line">          &lt;/el-sub-menu&gt;</span><br><span class="line"></span><br><span class="line">          &lt;el-menu-item index=&quot;/person&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;</span><br><span class="line">              &lt;User /&gt;</span><br><span class="line">            &lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;个人资料&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line">          &lt;el-menu-item index=&quot;/login&quot; @click=&quot;logout&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;</span><br><span class="line">              &lt;SwitchButton /&gt;</span><br><span class="line">            &lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;退出系统&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line">        &lt;/el-menu&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">      &lt;div style=&quot;flex: 1; width: 0; background-color: #eaeaee; padding: 10px&quot;&gt;</span><br><span class="line">        &lt;router-view /&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; useRoute &#125; from &quot;vue-router&quot;;</span><br><span class="line"></span><br><span class="line">const $route = useRoute();</span><br><span class="line">console.log($route.path);</span><br><span class="line"></span><br><span class="line">const logout = () =&gt; &#123;</span><br><span class="line">  localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.el-menu-item.is-active &#123;</span><br><span class="line">  background-color: #c3d7d3 !important;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.el-menu-item:hover &#123;</span><br><span class="line">  color: #0c98d5;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">:deep(th) &#123;</span><br><span class="line">  color: #333;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710345904561-545c4764-d0b5-40d6-85ce-e80b94fbaf5a.png"></p><h2 id="课程查询-api"><a href="#课程查询-api" class="headerlink" title="课程查询 api"></a>课程查询 api</h2><h3 id="Course-实体类定义"><a href="#Course-实体类定义" class="headerlink" title="Course 实体类定义"></a>Course 实体类定义</h3><p>在项目目录<code>/model</code>下创建一个<code>course.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> Integer, String</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> Mapped, mapped_column</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Base</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Course</span>(<span class="title class_ inherited__">Base</span>):</span><br><span class="line">    __tablename__ = <span class="string">&quot;course&quot;</span></span><br><span class="line">    <span class="built_in">id</span>: Mapped[<span class="built_in">int</span>] = mapped_column(Integer, primary_key=<span class="literal">True</span>, nullable=<span class="literal">False</span>)</span><br><span class="line">    name: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    number: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    description: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    periods: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    teacher: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="课程管理-Api-接口"><a href="#课程管理-Api-接口" class="headerlink" title="课程管理 Api 接口"></a>课程管理 Api 接口</h3><h4 id="courseApi"><a href="#courseApi" class="headerlink" title="courseApi"></a>courseApi</h4><p>在项目目录<code>/api</code>下创建一个<code>courseApi.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> APIRouter, Query, Depends</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> common.pageHelper <span class="keyword">import</span> PageHelper</span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> ResultModel, Result</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session, get_db_session</span><br><span class="line"><span class="keyword">from</span> service.courseService <span class="keyword">import</span> CourseService</span><br><span class="line"></span><br><span class="line">course_router = APIRouter(prefix=<span class="string">&quot;/course&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@course_router.get(<span class="params"><span class="string">&quot;/selectPage&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">select_page</span>(<span class="params">page: <span class="built_in">int</span> = Query(<span class="params"><span class="number">1</span>, ge=<span class="number">1</span>, alias=<span class="string">&quot;pageNum&quot;</span>, description=<span class="string">&quot;Page number&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      size: <span class="built_in">int</span> = Query(<span class="params"><span class="number">5</span>, gt=<span class="number">0</span>, le=<span class="number">100</span>, alias=<span class="string">&quot;pageSize&quot;</span>, description=<span class="string">&quot;Page size&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    pageInfo = PageHelper.startPage(page, size)</span><br><span class="line">    course_list = CourseService.select_page(db_session)</span><br><span class="line">    result = Result.success(pageInfo.of(course_list))</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.include_router(course_router)</span><br></pre></td></tr></table></figure><p>需要在<code>/api/__init__.py</code>下增加 courseApi</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> FastAPI</span><br><span class="line"><span class="keyword">from</span> starlette.middleware.cors <span class="keyword">import</span> CORSMiddleware</span><br><span class="line"></span><br><span class="line">app = FastAPI()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 跨域问题</span></span><br><span class="line">origins = [<span class="string">&quot;http://localhost:5173&quot;</span>, <span class="string">&quot;http://127.0.0.1:5173&quot;</span>]  <span class="comment"># 替换为你的前端应用的实际地址</span></span><br><span class="line"></span><br><span class="line">app.add_middleware(</span><br><span class="line">    CORSMiddleware,</span><br><span class="line">    allow_origins=origins,  <span class="comment"># 允许跨域访问的来源域名列表</span></span><br><span class="line">    allow_credentials=<span class="literal">True</span>,  <span class="comment"># 是否允许携带cookie</span></span><br><span class="line">    allow_methods=[<span class="string">&quot;*&quot;</span>],  <span class="comment"># 允许的方法，默认包含常见的GET、POST等，&quot;*&quot;表示所有方法</span></span><br><span class="line">    allow_headers=[<span class="string">&quot;*&quot;</span>],  <span class="comment"># 允许的请求头，默认包含常见的Content-Type等，&quot;*&quot;表示所有请求头</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> adminApi, exceptionHandler, courseApi</span><br></pre></td></tr></table></figure><h4 id="courseService"><a href="#courseService" class="headerlink" title="courseService"></a>courseService</h4><p>在项目目录<code>/service</code>下创建一个<code>courseService.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> desc, select</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session</span><br><span class="line"><span class="keyword">from</span> model.course <span class="keyword">import</span> Course</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseService</span>:</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">select_page</span>(<span class="params">db_session: Session</span>):</span><br><span class="line">        query = select(Course).order_by(desc(Course.<span class="built_in">id</span>))</span><br><span class="line">        result = db_session.execute(query).scalars().<span class="built_in">all</span>()</span><br><span class="line">        <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><h4 id="分页插件"><a href="#分页插件" class="headerlink" title="分页插件"></a>分页插件</h4><p>在项目路径的<code>/common</code>下创建一个<code>pageHelper.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi.encoders <span class="keyword">import</span> jsonable_encoder</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Page</span>:</span><br><span class="line">    <span class="built_in">list</span>: <span class="built_in">list</span></span><br><span class="line">    total: <span class="built_in">int</span></span><br><span class="line">    pageNum: <span class="built_in">int</span></span><br><span class="line">    pageSize: <span class="built_in">int</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, <span class="built_in">list</span>: <span class="built_in">list</span>, total: <span class="built_in">int</span>, pageNum: <span class="built_in">int</span>, pageSize: <span class="built_in">int</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.<span class="built_in">list</span> = <span class="built_in">list</span></span><br><span class="line">        <span class="variable language_">self</span>.total = total</span><br><span class="line">        <span class="variable language_">self</span>.pageNum = pageNum</span><br><span class="line">        <span class="variable language_">self</span>.pageSize = pageSize</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PageHelper</span>:</span><br><span class="line">    page: <span class="built_in">int</span></span><br><span class="line">    size: <span class="built_in">int</span></span><br><span class="line">    limit: <span class="built_in">int</span></span><br><span class="line">    offset: <span class="built_in">int</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, page: <span class="built_in">int</span>, size: <span class="built_in">int</span>, limit: <span class="built_in">int</span>, offset: <span class="built_in">int</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.page = page</span><br><span class="line">        <span class="variable language_">self</span>.size = size</span><br><span class="line">        <span class="variable language_">self</span>.limit = limit</span><br><span class="line">        <span class="variable language_">self</span>.offset = offset</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">startPage</span>(<span class="params">cls, page: <span class="built_in">int</span>, size: <span class="built_in">int</span></span>):</span><br><span class="line">        limit = size</span><br><span class="line">        offset = size * (page - <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> cls(page, size, limit, offset)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">of</span>(<span class="params">self, data</span>):</span><br><span class="line">        data_list = [jsonable_encoder(dataitem) <span class="keyword">for</span> dataitem <span class="keyword">in</span> data[<span class="variable language_">self</span>.offset:<span class="variable language_">self</span>.offset + <span class="variable language_">self</span>.limit]]</span><br><span class="line">        data_total = <span class="built_in">len</span>(data)</span><br><span class="line">        page = Page(data_list, data_total, <span class="variable language_">self</span>.page, <span class="variable language_">self</span>.size)</span><br><span class="line">        <span class="keyword">return</span> jsonable_encoder(page)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710348643107-29bbfdfb-d10f-4c85-b147-83ff95950f89.png"></p><p>可以发现，请求是成功的，但就是没数据，因为数据库里面是空的，给数据库中插入数据</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710348776973-d6ed84e3-0822-4b77-aa5a-36160f5b9d8a.png"></p><p>再次使用 postman 测试一下</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710348855186-37b36339-051a-4ee2-bbad-c131429d1dd9.png"></p><h2 id="增删查改实现"><a href="#增删查改实现" class="headerlink" title="增删查改实现"></a>增删查改实现</h2><h3 id="数据分页"><a href="#数据分页" class="headerlink" title="数据分页"></a>数据分页</h3><p>前端这块需要调用分页查询的请求接口，并将结果显示出来</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        style=&quot;width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.name&quot;</span><br><span class="line">        placeholder=&quot;请输入要查询的课程名称&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-button type=&quot;primary&quot; style=&quot;margin: 0 0 0 10px&quot; plain</span><br><span class="line">        &gt;查询&lt;/el-button</span><br><span class="line">      &gt;</span><br><span class="line">      &lt;el-button type=&quot;info&quot; plain&gt;重置&lt;/el-button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-button type=&quot;primary&quot; style=&quot;margin-bottom: 5px&quot; plain</span><br><span class="line">          &gt;新增&lt;/el-button</span><br><span class="line">        &gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-table :data=&quot;data.tableData&quot; stripe style=&quot;width: 100%&quot;&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;id&quot; label=&quot;ID&quot; width=&quot;80&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;name&quot; label=&quot;课程名称&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;number&quot; label=&quot;课程编号&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;description&quot; label=&quot;课程描述&quot; width=&quot;240&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;periods&quot; label=&quot;课时&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;teacher&quot; label=&quot;任课教师&quot; /&gt;</span><br><span class="line">          &lt;el-table-column label=&quot;操作&quot; align=&quot;center&quot;&gt;</span><br><span class="line">            &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">              &lt;el-button type=&quot;primary&quot; size=&quot;small&quot; plain&gt;编辑&lt;/el-button&gt;</span><br><span class="line">              &lt;el-button type=&quot;danger&quot; size=&quot;small&quot; plain&gt;删除&lt;/el-button&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">          &lt;/el-table-column&gt;</span><br><span class="line">        &lt;/el-table&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot;&gt;</span><br><span class="line">      &lt;el-pagination</span><br><span class="line">        background</span><br><span class="line">        layout=&quot;prev, pager, next&quot;</span><br><span class="line">        :total=&quot;data.total&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; reactive &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; Search &#125; from &quot;@element-plus/icons-vue&quot;;</span><br><span class="line">import request from &quot;@/utils/request&quot;;</span><br><span class="line"></span><br><span class="line">const data = reactive(&#123;</span><br><span class="line">  name: &quot;&quot;,</span><br><span class="line">  tableData: [],</span><br><span class="line">  total: 0,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const load = () =&gt; &#123;</span><br><span class="line">  request</span><br><span class="line">    .get(&quot;/course/selectPage&quot;, &#123;</span><br><span class="line">      params: &#123;</span><br><span class="line">        pageNum: 1,</span><br><span class="line">        pageSize: 5,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      data.tableData = res.data?.list || [];</span><br><span class="line">      data.total = res.data?.total || 0;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 加载一次 获取课程数据</span><br><span class="line">load();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710350328830-b3e6c9a9-134a-417b-9cac-679a67ca7b5e.png"></p><p>虽然可以显示一部分数据，但是这个换页有问题，不显示后续跳转的页面按钮</p><p>需要绑定一下这两个值</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710350466618-783bd600-76cf-4fc5-8f7e-416b946783af.png"></p><p>同时还需要，在换了页面之后也重新刷新一下数据，触发 current-change</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710350803714-c97f58de-c82c-4148-a218-fbee9b491178.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        style=&quot;width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.name&quot;</span><br><span class="line">        placeholder=&quot;请输入要查询的课程名称&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-button type=&quot;primary&quot; style=&quot;margin: 0 0 0 10px&quot; plain</span><br><span class="line">        &gt;查询&lt;/el-button</span><br><span class="line">      &gt;</span><br><span class="line">      &lt;el-button type=&quot;info&quot; plain&gt;重置&lt;/el-button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-button type=&quot;primary&quot; style=&quot;margin-bottom: 5px&quot; plain</span><br><span class="line">          &gt;新增&lt;/el-button</span><br><span class="line">        &gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-table :data=&quot;data.tableData&quot; stripe style=&quot;width: 100%&quot;&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;id&quot; label=&quot;ID&quot; width=&quot;80&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;name&quot; label=&quot;课程名称&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;number&quot; label=&quot;课程编号&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;description&quot; label=&quot;课程描述&quot; width=&quot;240&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;periods&quot; label=&quot;课时&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;teacher&quot; label=&quot;任课教师&quot; /&gt;</span><br><span class="line">          &lt;el-table-column label=&quot;操作&quot; align=&quot;center&quot;&gt;</span><br><span class="line">            &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">              &lt;el-button type=&quot;primary&quot; size=&quot;small&quot; plain&gt;编辑&lt;/el-button&gt;</span><br><span class="line">              &lt;el-button type=&quot;danger&quot; size=&quot;small&quot; plain&gt;删除&lt;/el-button&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">          &lt;/el-table-column&gt;</span><br><span class="line">        &lt;/el-table&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot;&gt;</span><br><span class="line">      &lt;el-pagination</span><br><span class="line">        v-model:current-page=&quot;data.pageNum&quot;</span><br><span class="line">        v-model:page-size=&quot;data.pageSize&quot;</span><br><span class="line">        @current-change=&quot;handleCurrentChange&quot;</span><br><span class="line">        background</span><br><span class="line">        layout=&quot;prev, pager, next&quot;</span><br><span class="line">        :total=&quot;data.total&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; reactive &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; Search &#125; from &quot;@element-plus/icons-vue&quot;;</span><br><span class="line">import request from &quot;@/utils/request&quot;;</span><br><span class="line"></span><br><span class="line">const data = reactive(&#123;</span><br><span class="line">  name: &quot;&quot;,</span><br><span class="line">  tableData: [],</span><br><span class="line">  total: 0,</span><br><span class="line">  pageNum: 1,</span><br><span class="line">  pageSize: 5,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const load = () =&gt; &#123;</span><br><span class="line">  request</span><br><span class="line">    .get(&quot;/course/selectPage&quot;, &#123;</span><br><span class="line">      params: &#123;</span><br><span class="line">        pageNum: data.pageNum,</span><br><span class="line">        pageSize: data.pageSize,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      data.tableData = res.data?.list || [];</span><br><span class="line">      data.total = res.data?.total || 0;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 加载一次 获取课程数据</span><br><span class="line">load();</span><br><span class="line"></span><br><span class="line">const handleCurrentChange = () =&gt; &#123;</span><br><span class="line">  // 当翻页的时候重新加载数据</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710350849051-ebf1ebe5-e160-456f-8c6c-52fb710cf57f.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710350855737-b858fd91-310f-4d67-97a7-fe92f984c359.png"></p><p>分页成功实现了</p><h3 id="查询和重置"><a href="#查询和重置" class="headerlink" title="查询和重置"></a>查询和重置</h3><p>为了依据课程名称实现筛查的功能，需要传递一个<code>name</code>字段传给后端进行数据库层面的模糊查询</p><p>重置按钮要将查询的内容清空，同时显示回完整的数据</p><h4 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.name&quot;</span><br><span class="line">        placeholder=&quot;请输入要查询的课程名称&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-button type=&quot;info&quot; plain style=&quot;margin: 0 0 0 10px&quot; @click=&quot;reset&quot;</span><br><span class="line">        &gt;重置&lt;/el-button</span><br><span class="line">      &gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-button type=&quot;primary&quot; style=&quot;margin-bottom: 5px&quot; plain</span><br><span class="line">          &gt;新增&lt;/el-button</span><br><span class="line">        &gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-table :data=&quot;data.tableData&quot; stripe style=&quot;width: 100%&quot;&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;id&quot; label=&quot;ID&quot; width=&quot;80&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;name&quot; label=&quot;课程名称&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;number&quot; label=&quot;课程编号&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;description&quot; label=&quot;课程描述&quot; width=&quot;240&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;periods&quot; label=&quot;课时&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;teacher&quot; label=&quot;任课教师&quot; /&gt;</span><br><span class="line">          &lt;el-table-column label=&quot;操作&quot; align=&quot;center&quot;&gt;</span><br><span class="line">            &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">              &lt;el-button type=&quot;primary&quot; size=&quot;small&quot; plain&gt;编辑&lt;/el-button&gt;</span><br><span class="line">              &lt;el-button type=&quot;danger&quot; size=&quot;small&quot; plain&gt;删除&lt;/el-button&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">          &lt;/el-table-column&gt;</span><br><span class="line">        &lt;/el-table&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot;&gt;</span><br><span class="line">      &lt;el-pagination</span><br><span class="line">        v-model:current-page=&quot;data.pageNum&quot;</span><br><span class="line">        v-model:page-size=&quot;data.pageSize&quot;</span><br><span class="line">        @current-change=&quot;handleCurrentChange&quot;</span><br><span class="line">        background</span><br><span class="line">        layout=&quot;prev, pager, next&quot;</span><br><span class="line">        :total=&quot;data.total&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; reactive &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; Search &#125; from &quot;@element-plus/icons-vue&quot;;</span><br><span class="line">import request from &quot;@/utils/request&quot;;</span><br><span class="line"></span><br><span class="line">const data = reactive(&#123;</span><br><span class="line">  name: &quot;&quot;,</span><br><span class="line">  tableData: [],</span><br><span class="line">  total: 0,</span><br><span class="line">  pageNum: 1,</span><br><span class="line">  pageSize: 5,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const load = () =&gt; &#123;</span><br><span class="line">  request</span><br><span class="line">    .get(&quot;/course/selectPage&quot;, &#123;</span><br><span class="line">      params: &#123;</span><br><span class="line">        pageNum: data.pageNum,</span><br><span class="line">        pageSize: data.pageSize,</span><br><span class="line">        name: data.name,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      data.tableData = res.data?.list || [];</span><br><span class="line">      data.total = res.data?.total || 0;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 加载一次 获取课程数据</span><br><span class="line">load();</span><br><span class="line"></span><br><span class="line">const handleCurrentChange = () =&gt; &#123;</span><br><span class="line">  // 当翻页的时候重新加载数据</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const reset = () =&gt; &#123;</span><br><span class="line">  data.name = &quot;&quot;;</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Optional</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> APIRouter, Query, Depends</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> common.pageHelper <span class="keyword">import</span> PageHelper</span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> ResultModel, Result</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session, get_db_session</span><br><span class="line"><span class="keyword">from</span> service.courseService <span class="keyword">import</span> CourseService</span><br><span class="line"></span><br><span class="line">course_router = APIRouter(prefix=<span class="string">&quot;/course&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@course_router.get(<span class="params"><span class="string">&quot;/selectPage&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">select_page</span>(<span class="params">page: <span class="built_in">int</span> = Query(<span class="params"><span class="number">1</span>, ge=<span class="number">1</span>, alias=<span class="string">&quot;pageNum&quot;</span>, description=<span class="string">&quot;Page number&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      size: <span class="built_in">int</span> = Query(<span class="params"><span class="number">5</span>, gt=<span class="number">0</span>, le=<span class="number">100</span>, alias=<span class="string">&quot;pageSize&quot;</span>, description=<span class="string">&quot;Page size&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      name: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Course name&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    pageInfo = PageHelper.startPage(page, size)</span><br><span class="line">    course_list = CourseService.select_page(name, db_session)</span><br><span class="line">    result = Result.success(pageInfo.of(course_list))</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.include_router(course_router)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> desc, select</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session</span><br><span class="line"><span class="keyword">from</span> model.course <span class="keyword">import</span> Course</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseService</span>:</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">select_page</span>(<span class="params">name, db_session: Session</span>):</span><br><span class="line">        query = select(Course).order_by(desc(Course.<span class="built_in">id</span>))</span><br><span class="line">        <span class="keyword">if</span> name:</span><br><span class="line">            query = query.where(Course.name.like(<span class="string">f&quot;%<span class="subst">&#123;name&#125;</span>%&quot;</span>))</span><br><span class="line">        result = db_session.execute(query).scalars().<span class="built_in">all</span>()</span><br><span class="line">        <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><h4 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h4><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710351673810-56f5faca-7e70-48c0-b9cf-c52d7b1256b9.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710351685682-0cbf7f2e-530d-48c0-bb1b-5d5b910848e6.png"></p><h3 id="查询扩展"><a href="#查询扩展" class="headerlink" title="查询扩展"></a>查询扩展</h3><p>当需要筛选的字段不只是<code>课程名称</code>时，需要怎么处理；比如加上<code>课程编号</code>、<code>任课教师</code>进行多条件模糊查询</p><h4 id="前端-1"><a href="#前端-1" class="headerlink" title="前端"></a>前端</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.name&quot;</span><br><span class="line">        placeholder=&quot;请输入要查询的课程名称&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;margin-left:10px; width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.number&quot;</span><br><span class="line">        placeholder=&quot;请输入课程编号&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;margin-left:10px; width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.teacher&quot;</span><br><span class="line">        placeholder=&quot;请输入任课老师&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-button type=&quot;info&quot; plain style=&quot;margin: 0 0 0 10px&quot; @click=&quot;reset&quot;</span><br><span class="line">        &gt;重置&lt;/el-button</span><br><span class="line">      &gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-button type=&quot;primary&quot; style=&quot;margin-bottom: 5px&quot; plain</span><br><span class="line">          &gt;新增&lt;/el-button</span><br><span class="line">        &gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-table :data=&quot;data.tableData&quot; stripe style=&quot;width: 100%&quot;&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;id&quot; label=&quot;ID&quot; width=&quot;80&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;name&quot; label=&quot;课程名称&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;number&quot; label=&quot;课程编号&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;description&quot; label=&quot;课程描述&quot; width=&quot;240&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;periods&quot; label=&quot;课时&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;teacher&quot; label=&quot;任课教师&quot; /&gt;</span><br><span class="line">          &lt;el-table-column label=&quot;操作&quot; align=&quot;center&quot;&gt;</span><br><span class="line">            &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">              &lt;el-button type=&quot;primary&quot; size=&quot;small&quot; plain&gt;编辑&lt;/el-button&gt;</span><br><span class="line">              &lt;el-button type=&quot;danger&quot; size=&quot;small&quot; plain&gt;删除&lt;/el-button&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">          &lt;/el-table-column&gt;</span><br><span class="line">        &lt;/el-table&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot;&gt;</span><br><span class="line">      &lt;el-pagination</span><br><span class="line">        v-model:current-page=&quot;data.pageNum&quot;</span><br><span class="line">        v-model:page-size=&quot;data.pageSize&quot;</span><br><span class="line">        @current-change=&quot;handleCurrentChange&quot;</span><br><span class="line">        background</span><br><span class="line">        layout=&quot;prev, pager, next&quot;</span><br><span class="line">        :total=&quot;data.total&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; reactive &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; Search &#125; from &quot;@element-plus/icons-vue&quot;;</span><br><span class="line">import request from &quot;@/utils/request&quot;;</span><br><span class="line"></span><br><span class="line">const data = reactive(&#123;</span><br><span class="line">  name: &quot;&quot;,</span><br><span class="line">  number: &quot;&quot;,</span><br><span class="line">  teacher: &quot;&quot;,</span><br><span class="line">  tableData: [],</span><br><span class="line">  total: 0,</span><br><span class="line">  pageNum: 1,</span><br><span class="line">  pageSize: 5,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const load = () =&gt; &#123;</span><br><span class="line">  request</span><br><span class="line">    .get(&quot;/course/selectPage&quot;, &#123;</span><br><span class="line">      params: &#123;</span><br><span class="line">        pageNum: data.pageNum,</span><br><span class="line">        pageSize: data.pageSize,</span><br><span class="line">        name: data.name,</span><br><span class="line">        number: data.number,</span><br><span class="line">        teacher: data.teacher,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      data.tableData = res.data?.list || [];</span><br><span class="line">      data.total = res.data?.total || 0;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 加载一次 获取课程数据</span><br><span class="line">load();</span><br><span class="line"></span><br><span class="line">const handleCurrentChange = () =&gt; &#123;</span><br><span class="line">  // 当翻页的时候重新加载数据</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const reset = () =&gt; &#123;</span><br><span class="line">  data.name = &quot;&quot;;</span><br><span class="line">  data.number = &quot;&quot;;</span><br><span class="line">  data.teacher = &quot;&quot;;</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="后端-1"><a href="#后端-1" class="headerlink" title="后端"></a>后端</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Optional</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> APIRouter, Query, Depends</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> common.pageHelper <span class="keyword">import</span> PageHelper</span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> ResultModel, Result</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session, get_db_session</span><br><span class="line"><span class="keyword">from</span> model.course <span class="keyword">import</span> Course, CourseSearch</span><br><span class="line"><span class="keyword">from</span> service.courseService <span class="keyword">import</span> CourseService</span><br><span class="line"></span><br><span class="line">course_router = APIRouter(prefix=<span class="string">&quot;/course&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@course_router.get(<span class="params"><span class="string">&quot;/selectPage&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">select_page</span>(<span class="params">page: <span class="built_in">int</span> = Query(<span class="params"><span class="number">1</span>, ge=<span class="number">1</span>, alias=<span class="string">&quot;pageNum&quot;</span>, description=<span class="string">&quot;Page number&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      size: <span class="built_in">int</span> = Query(<span class="params"><span class="number">5</span>, gt=<span class="number">0</span>, le=<span class="number">100</span>, alias=<span class="string">&quot;pageSize&quot;</span>, description=<span class="string">&quot;Page size&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      name: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Course name&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      number: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Course number&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      teacher: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Course teacher&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    pageInfo = PageHelper.startPage(page, size)</span><br><span class="line">    course_search = CourseSearch(name=name, number=number, teacher=teacher)</span><br><span class="line">    course_list = CourseService.select_page(course_search, db_session)</span><br><span class="line">    result = Result.success(pageInfo.of(course_list))</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.include_router(course_router)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> desc, select</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session</span><br><span class="line"><span class="keyword">from</span> model.course <span class="keyword">import</span> Course, CourseSearch</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseService</span>:</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">select_page</span>(<span class="params">course_search: CourseSearch, db_session: Session</span>):</span><br><span class="line">        query = select(Course).order_by(desc(Course.<span class="built_in">id</span>))</span><br><span class="line">        <span class="keyword">if</span> course_search.name:</span><br><span class="line">            query = query.where(Course.name.like(<span class="string">f&quot;%<span class="subst">&#123;course_search.name&#125;</span>%&quot;</span>))</span><br><span class="line">        <span class="keyword">if</span> course_search.number:</span><br><span class="line">            query = query.where(Course.number.like(<span class="string">f&quot;%<span class="subst">&#123;course_search.number&#125;</span>%&quot;</span>))</span><br><span class="line">        <span class="keyword">if</span> course_search.teacher:</span><br><span class="line">            query = query.where(Course.teacher.like(<span class="string">f&quot;%<span class="subst">&#123;course_search.teacher&#125;</span>%&quot;</span>))</span><br><span class="line">        result = db_session.execute(query).scalars().<span class="built_in">all</span>()</span><br><span class="line">        <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> pydantic <span class="keyword">import</span> BaseModel</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> Integer, String</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> Mapped, mapped_column</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Base</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Course</span>(<span class="title class_ inherited__">Base</span>):</span><br><span class="line">    __tablename__ = <span class="string">&quot;course&quot;</span></span><br><span class="line">    <span class="built_in">id</span>: Mapped[<span class="built_in">int</span>] = mapped_column(Integer, primary_key=<span class="literal">True</span>, nullable=<span class="literal">False</span>)</span><br><span class="line">    name: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    number: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    description: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    periods: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    teacher: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseSearch</span>(<span class="title class_ inherited__">BaseModel</span>):</span><br><span class="line">    name: <span class="built_in">str</span> | <span class="literal">None</span></span><br><span class="line">    number: <span class="built_in">str</span> | <span class="literal">None</span></span><br><span class="line">    teacher: <span class="built_in">str</span> | <span class="literal">None</span></span><br></pre></td></tr></table></figure><h4 id="测试-2"><a href="#测试-2" class="headerlink" title="测试"></a>测试</h4><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710352618882-cb1e9708-6bd4-4ca2-bfd3-932e95f7dcb5.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710352626029-9e559e62-e9d0-46c5-ab64-e2ff7aba1ae9.png"></p><h3 id="新增"><a href="#新增" class="headerlink" title="新增"></a>新增</h3><p>下面实现给课程表新增数据的功能，需要点击<code>新增</code>按钮后，出现弹窗</p><p>在官网找一个<code>Dialog</code>组件</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710353096927-a86240ee-4794-4e32-8e5f-ceb8e24b351c.png"></p><h4 id="前端-2"><a href="#前端-2" class="headerlink" title="前端"></a>前端</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.name&quot;</span><br><span class="line">        placeholder=&quot;请输入要查询的课程名称&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;margin-left:10px; width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.number&quot;</span><br><span class="line">        placeholder=&quot;请输入课程编号&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;margin-left:10px; width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.teacher&quot;</span><br><span class="line">        placeholder=&quot;请输入任课老师&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-button type=&quot;info&quot; plain style=&quot;margin: 0 0 0 10px&quot; @click=&quot;reset&quot;</span><br><span class="line">        &gt;重置&lt;/el-button</span><br><span class="line">      &gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-button</span><br><span class="line">          type=&quot;primary&quot;</span><br><span class="line">          style=&quot;margin-bottom: 5px&quot;</span><br><span class="line">          plain</span><br><span class="line">          @click=&quot;handleAdd&quot;</span><br><span class="line">          &gt;新增&lt;/el-button</span><br><span class="line">        &gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-table :data=&quot;data.tableData&quot; stripe style=&quot;width: 100%&quot;&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;id&quot; label=&quot;ID&quot; width=&quot;80&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;name&quot; label=&quot;课程名称&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;number&quot; label=&quot;课程编号&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;description&quot; label=&quot;课程描述&quot; width=&quot;240&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;periods&quot; label=&quot;课时&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;teacher&quot; label=&quot;任课教师&quot; /&gt;</span><br><span class="line">          &lt;el-table-column label=&quot;操作&quot; align=&quot;center&quot;&gt;</span><br><span class="line">            &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">              &lt;el-button type=&quot;primary&quot; size=&quot;small&quot; plain&gt;编辑&lt;/el-button&gt;</span><br><span class="line">              &lt;el-button type=&quot;danger&quot; size=&quot;small&quot; plain&gt;删除&lt;/el-button&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">          &lt;/el-table-column&gt;</span><br><span class="line">        &lt;/el-table&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot;&gt;</span><br><span class="line">      &lt;el-pagination</span><br><span class="line">        v-model:current-page=&quot;data.pageNum&quot;</span><br><span class="line">        v-model:page-size=&quot;data.pageSize&quot;</span><br><span class="line">        @current-change=&quot;handleCurrentChange&quot;</span><br><span class="line">        background</span><br><span class="line">        layout=&quot;prev, pager, next&quot;</span><br><span class="line">        :total=&quot;data.total&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;el-dialog width=&quot;35%&quot; v-model=&quot;data.formVisible&quot; title=&quot;课程信息&quot;&gt;</span><br><span class="line">      &lt;el-form</span><br><span class="line">        :model=&quot;data.form&quot;</span><br><span class="line">        label-width=&quot;100px&quot;</span><br><span class="line">        label-position=&quot;right&quot;</span><br><span class="line">        style=&quot;padding-right: 45px&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;el-form-item label=&quot;课程名称&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.name&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;课程编号&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.number&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;课程描述&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.description&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;课时&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.periods&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;任课教师&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.teacher&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">      &lt;/el-form&gt;</span><br><span class="line">      &lt;template #footer&gt;</span><br><span class="line">        &lt;span class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">          &lt;el-button @click=&quot;data.formVisible = false&quot; plain&gt;取消&lt;/el-button&gt;</span><br><span class="line">          &lt;el-button type=&quot;primary&quot; @click=&quot;save&quot; plain&gt;保存&lt;/el-button&gt;</span><br><span class="line">        &lt;/span&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line">    &lt;/el-dialog&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; reactive &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; Search &#125; from &quot;@element-plus/icons-vue&quot;;</span><br><span class="line">import request from &quot;@/utils/request&quot;;</span><br><span class="line">import &#123; ElMessage &#125; from &quot;element-plus&quot;;</span><br><span class="line"></span><br><span class="line">const data = reactive(&#123;</span><br><span class="line">  name: &quot;&quot;,</span><br><span class="line">  number: &quot;&quot;,</span><br><span class="line">  teacher: &quot;&quot;,</span><br><span class="line">  tableData: [],</span><br><span class="line">  total: 0,</span><br><span class="line">  pageNum: 1,</span><br><span class="line">  pageSize: 5,</span><br><span class="line">  formVisible: false,</span><br><span class="line">  form: &#123;&#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const load = () =&gt; &#123;</span><br><span class="line">  request</span><br><span class="line">    .get(&quot;/course/selectPage&quot;, &#123;</span><br><span class="line">      params: &#123;</span><br><span class="line">        pageNum: data.pageNum,</span><br><span class="line">        pageSize: data.pageSize,</span><br><span class="line">        name: data.name,</span><br><span class="line">        number: data.number,</span><br><span class="line">        teacher: data.teacher,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      data.tableData = res.data?.list || [];</span><br><span class="line">      data.total = res.data?.total || 0;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 加载一次 获取课程数据</span><br><span class="line">load();</span><br><span class="line"></span><br><span class="line">const handleCurrentChange = () =&gt; &#123;</span><br><span class="line">  // 当翻页的时候重新加载数据</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const reset = () =&gt; &#123;</span><br><span class="line">  data.name = &quot;&quot;;</span><br><span class="line">  data.number = &quot;&quot;;</span><br><span class="line">  data.teacher = &quot;&quot;;</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const handleAdd = () =&gt; &#123;</span><br><span class="line">  data.formVisible = true;</span><br><span class="line">  data.form = &#123;&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const save = () =&gt; &#123;</span><br><span class="line">  request</span><br><span class="line">    .post(&quot;/course/add&quot;, data.form)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">        ElMessage.success(&quot;新增成功&quot;);</span><br><span class="line">        data.formVisible = false;</span><br><span class="line">        load();</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        ElMessage.error(res.msg);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="后端-2"><a href="#后端-2" class="headerlink" title="后端"></a>后端</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Optional</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> APIRouter, Query, Depends</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> common.pageHelper <span class="keyword">import</span> PageHelper</span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> ResultModel, Result</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session, get_db_session</span><br><span class="line"><span class="keyword">from</span> model.course <span class="keyword">import</span> Course, CourseSearch, CourseCreate</span><br><span class="line"><span class="keyword">from</span> service.courseService <span class="keyword">import</span> CourseService</span><br><span class="line"></span><br><span class="line">course_router = APIRouter(prefix=<span class="string">&quot;/course&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@course_router.get(<span class="params"><span class="string">&quot;/selectPage&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">select_page</span>(<span class="params">page: <span class="built_in">int</span> = Query(<span class="params"><span class="number">1</span>, ge=<span class="number">1</span>, alias=<span class="string">&quot;pageNum&quot;</span>, description=<span class="string">&quot;Page number&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      size: <span class="built_in">int</span> = Query(<span class="params"><span class="number">5</span>, gt=<span class="number">0</span>, le=<span class="number">100</span>, alias=<span class="string">&quot;pageSize&quot;</span>, description=<span class="string">&quot;Page size&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      name: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Course name&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      number: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Course number&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      teacher: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Course teacher&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    pageInfo = PageHelper.startPage(page, size)</span><br><span class="line">    course_search = CourseSearch(name=name, number=number, teacher=teacher)</span><br><span class="line">    course_list = CourseService.select_page(course_search, db_session)</span><br><span class="line">    result = Result.success(pageInfo.of(course_list))</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@course_router.post(<span class="params"><span class="string">&quot;/add&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">course: CourseCreate, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    CourseService.add_course(course, db_session)</span><br><span class="line">    result = Result.success()</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.include_router(course_router)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> desc, select</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> CourseExistException</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session</span><br><span class="line"><span class="keyword">from</span> model.course <span class="keyword">import</span> Course, CourseSearch, CourseCreate</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseService</span>:</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">select_page</span>(<span class="params">course_search: CourseSearch, db_session: Session</span>):</span><br><span class="line">        query = select(Course).order_by(desc(Course.<span class="built_in">id</span>))</span><br><span class="line">        <span class="keyword">if</span> course_search.name:</span><br><span class="line">            query = query.where(Course.name.like(<span class="string">f&quot;%<span class="subst">&#123;course_search.name&#125;</span>%&quot;</span>))</span><br><span class="line">        <span class="keyword">if</span> course_search.number:</span><br><span class="line">            query = query.where(Course.number.like(<span class="string">f&quot;%<span class="subst">&#123;course_search.number&#125;</span>%&quot;</span>))</span><br><span class="line">        <span class="keyword">if</span> course_search.teacher:</span><br><span class="line">            query = query.where(Course.teacher.like(<span class="string">f&quot;%<span class="subst">&#123;course_search.teacher&#125;</span>%&quot;</span>))</span><br><span class="line">        result = db_session.execute(query).scalars().<span class="built_in">all</span>()</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">add_course</span>(<span class="params">course: CourseCreate, db_session: Session</span>):</span><br><span class="line">        query = select(Course).where(Course.name == course.name)</span><br><span class="line">        exist_course: Course = db_session.execute(query).scalars().<span class="built_in">all</span>()</span><br><span class="line">        <span class="keyword">if</span> exist_course:</span><br><span class="line">            <span class="keyword">raise</span> CourseExistException(<span class="string">&quot;课程名已存在&quot;</span>)</span><br><span class="line">        course = Course(**course.<span class="built_in">dict</span>())</span><br><span class="line">        db_session.add(course)</span><br><span class="line">        db_session.commit()</span><br><span class="line">        <span class="keyword">return</span> course</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> pydantic <span class="keyword">import</span> BaseModel</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> Integer, String</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> Mapped, mapped_column</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Base</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Course</span>(<span class="title class_ inherited__">Base</span>):</span><br><span class="line">    __tablename__ = <span class="string">&quot;course&quot;</span></span><br><span class="line">    <span class="built_in">id</span>: Mapped[<span class="built_in">int</span>] = mapped_column(Integer, primary_key=<span class="literal">True</span>, nullable=<span class="literal">False</span>)</span><br><span class="line">    name: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    number: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    description: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    periods: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    teacher: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseSearch</span>(<span class="title class_ inherited__">BaseModel</span>):</span><br><span class="line">    name: <span class="built_in">str</span> | <span class="literal">None</span></span><br><span class="line">    number: <span class="built_in">str</span> | <span class="literal">None</span></span><br><span class="line">    teacher: <span class="built_in">str</span> | <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseBase</span>(<span class="title class_ inherited__">BaseModel</span>):</span><br><span class="line">    name: <span class="built_in">str</span></span><br><span class="line">    number: <span class="built_in">str</span></span><br><span class="line">    description: <span class="built_in">str</span></span><br><span class="line">    periods: <span class="built_in">str</span></span><br><span class="line">    teacher: <span class="built_in">str</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseCreate</span>(<span class="title class_ inherited__">CourseBase</span>):</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UserNotFoundException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PasswordNotMatchException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TokenException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseExistException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi.encoders <span class="keyword">import</span> jsonable_encoder</span><br><span class="line"><span class="keyword">from</span> starlette.responses <span class="keyword">import</span> JSONResponse</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> Request</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> Result</span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> UserNotFoundException, PasswordNotMatchException, TokenException, \</span><br><span class="line">    CourseExistException</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">Exception</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">exception_handler</span>(<span class="params">request: Request, exc: Exception</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;500&quot;</span>, msg=<span class="built_in">str</span>(exc))</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">500</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">UserNotFoundException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">user_not_fount_exception_handler</span>(<span class="params">request: Request, exc: UserNotFoundException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;404&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">404</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">PasswordNotMatchException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">password_not_fount_exception_handler</span>(<span class="params">request: Request, exc: PasswordNotMatchException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;401&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">401</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">TokenException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">token_exception_handler</span>(<span class="params">request: Request, exc: TokenException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;401&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">401</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">CourseExistException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">course_exist_exception_handler</span>(<span class="params">request: Request, exc: CourseExistException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;400&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">400</span>, content=jsonable_encoder(result))</span><br></pre></td></tr></table></figure><h4 id="测试-3"><a href="#测试-3" class="headerlink" title="测试"></a>测试</h4><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710354157588-440bcfb5-5023-45ba-a3d9-f8e1f8e5a1ff.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710354164375-6265da8d-4675-4d88-b0a4-9ef2ed4eb4dd.png"></p><h3 id="编辑"><a href="#编辑" class="headerlink" title="编辑"></a>编辑</h3><p>点击数据中的<code>编辑</code>按钮可以对已有的课程数据，进行修改</p><h4 id="前端-3"><a href="#前端-3" class="headerlink" title="前端"></a>前端</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.name&quot;</span><br><span class="line">        placeholder=&quot;请输入要查询的课程名称&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;margin-left:10px; width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.number&quot;</span><br><span class="line">        placeholder=&quot;请输入课程编号&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;margin-left:10px; width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.teacher&quot;</span><br><span class="line">        placeholder=&quot;请输入任课老师&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-button type=&quot;info&quot; plain style=&quot;margin: 0 0 0 10px&quot; @click=&quot;reset&quot;</span><br><span class="line">        &gt;重置&lt;/el-button</span><br><span class="line">      &gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-button</span><br><span class="line">          type=&quot;primary&quot;</span><br><span class="line">          style=&quot;margin-bottom: 5px&quot;</span><br><span class="line">          plain</span><br><span class="line">          @click=&quot;handleAdd&quot;</span><br><span class="line">          &gt;新增&lt;/el-button</span><br><span class="line">        &gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-table :data=&quot;data.tableData&quot; stripe style=&quot;width: 100%&quot;&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;id&quot; label=&quot;ID&quot; width=&quot;80&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;name&quot; label=&quot;课程名称&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;number&quot; label=&quot;课程编号&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;description&quot; label=&quot;课程描述&quot; width=&quot;240&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;periods&quot; label=&quot;课时&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;teacher&quot; label=&quot;任课教师&quot; /&gt;</span><br><span class="line">          &lt;el-table-column label=&quot;操作&quot; align=&quot;center&quot;&gt;</span><br><span class="line">            &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">              &lt;el-button</span><br><span class="line">                type=&quot;primary&quot;</span><br><span class="line">                size=&quot;small&quot;</span><br><span class="line">                plain</span><br><span class="line">                @click=&quot;handleEdit(scope.row)&quot;</span><br><span class="line">                &gt;编辑&lt;/el-button</span><br><span class="line">              &gt;</span><br><span class="line">              &lt;el-button type=&quot;danger&quot; size=&quot;small&quot; plain&gt;删除&lt;/el-button&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">          &lt;/el-table-column&gt;</span><br><span class="line">        &lt;/el-table&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot;&gt;</span><br><span class="line">      &lt;el-pagination</span><br><span class="line">        v-model:current-page=&quot;data.pageNum&quot;</span><br><span class="line">        v-model:page-size=&quot;data.pageSize&quot;</span><br><span class="line">        @current-change=&quot;handleCurrentChange&quot;</span><br><span class="line">        background</span><br><span class="line">        layout=&quot;prev, pager, next&quot;</span><br><span class="line">        :total=&quot;data.total&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;el-dialog width=&quot;35%&quot; v-model=&quot;data.formVisible&quot; title=&quot;课程信息&quot;&gt;</span><br><span class="line">      &lt;el-form</span><br><span class="line">        :model=&quot;data.form&quot;</span><br><span class="line">        label-width=&quot;100px&quot;</span><br><span class="line">        label-position=&quot;right&quot;</span><br><span class="line">        style=&quot;padding-right: 45px&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;el-form-item label=&quot;课程名称&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.name&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;课程编号&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.number&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;课程描述&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.description&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;课时&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.periods&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;任课教师&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.teacher&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">      &lt;/el-form&gt;</span><br><span class="line">      &lt;template #footer&gt;</span><br><span class="line">        &lt;span class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">          &lt;el-button @click=&quot;data.formVisible = false&quot; plain&gt;取消&lt;/el-button&gt;</span><br><span class="line">          &lt;el-button type=&quot;primary&quot; @click=&quot;save&quot; plain&gt;保存&lt;/el-button&gt;</span><br><span class="line">        &lt;/span&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line">    &lt;/el-dialog&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; reactive &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; Search &#125; from &quot;@element-plus/icons-vue&quot;;</span><br><span class="line">import request from &quot;@/utils/request&quot;;</span><br><span class="line">import &#123; ElMessage &#125; from &quot;element-plus&quot;;</span><br><span class="line"></span><br><span class="line">const data = reactive(&#123;</span><br><span class="line">  name: &quot;&quot;,</span><br><span class="line">  number: &quot;&quot;,</span><br><span class="line">  teacher: &quot;&quot;,</span><br><span class="line">  tableData: [],</span><br><span class="line">  total: 0,</span><br><span class="line">  pageNum: 1,</span><br><span class="line">  pageSize: 5,</span><br><span class="line">  formVisible: false,</span><br><span class="line">  form: &#123;&#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const load = () =&gt; &#123;</span><br><span class="line">  request</span><br><span class="line">    .get(&quot;/course/selectPage&quot;, &#123;</span><br><span class="line">      params: &#123;</span><br><span class="line">        pageNum: data.pageNum,</span><br><span class="line">        pageSize: data.pageSize,</span><br><span class="line">        name: data.name,</span><br><span class="line">        number: data.number,</span><br><span class="line">        teacher: data.teacher,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      data.tableData = res.data?.list || [];</span><br><span class="line">      data.total = res.data?.total || 0;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 加载一次 获取课程数据</span><br><span class="line">load();</span><br><span class="line"></span><br><span class="line">const handleCurrentChange = () =&gt; &#123;</span><br><span class="line">  // 当翻页的时候重新加载数据</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const reset = () =&gt; &#123;</span><br><span class="line">  data.name = &quot;&quot;;</span><br><span class="line">  data.number = &quot;&quot;;</span><br><span class="line">  data.teacher = &quot;&quot;;</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const handleAdd = () =&gt; &#123;</span><br><span class="line">  data.formVisible = true;</span><br><span class="line">  data.form = &#123;&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const save = () =&gt; &#123;</span><br><span class="line">  request</span><br><span class="line">    .request(&#123;</span><br><span class="line">      url: data.form.id ? &quot;/course/update&quot; : &quot;/course/add&quot;,</span><br><span class="line">      method: data.form.id ? &quot;put&quot; : &quot;post&quot;,</span><br><span class="line">      data: data.form,</span><br><span class="line">    &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">        ElMessage.success(&quot;操作成功&quot;);</span><br><span class="line">        data.formVisible = false;</span><br><span class="line">        load();</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        ElMessage.error(res.msg);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const handleEdit = (row) =&gt; &#123;</span><br><span class="line">  data.form = JSON.parse(JSON.stringify(row));</span><br><span class="line">  data.formVisible = true;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="后端-3"><a href="#后端-3" class="headerlink" title="后端"></a>后端</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Optional</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> APIRouter, Query, Depends</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> common.pageHelper <span class="keyword">import</span> PageHelper</span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> ResultModel, Result</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session, get_db_session</span><br><span class="line"><span class="keyword">from</span> model.course <span class="keyword">import</span> Course, CourseSearch, CourseCreate, CourseUpdate</span><br><span class="line"><span class="keyword">from</span> service.courseService <span class="keyword">import</span> CourseService</span><br><span class="line"></span><br><span class="line">course_router = APIRouter(prefix=<span class="string">&quot;/course&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@course_router.get(<span class="params"><span class="string">&quot;/selectPage&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">select_page</span>(<span class="params">page: <span class="built_in">int</span> = Query(<span class="params"><span class="number">1</span>, ge=<span class="number">1</span>, alias=<span class="string">&quot;pageNum&quot;</span>, description=<span class="string">&quot;Page number&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      size: <span class="built_in">int</span> = Query(<span class="params"><span class="number">5</span>, gt=<span class="number">0</span>, le=<span class="number">100</span>, alias=<span class="string">&quot;pageSize&quot;</span>, description=<span class="string">&quot;Page size&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      name: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Course name&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      number: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Course number&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      teacher: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Course teacher&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    pageInfo = PageHelper.startPage(page, size)</span><br><span class="line">    course_search = CourseSearch(name=name, number=number, teacher=teacher)</span><br><span class="line">    course_list = CourseService.select_page(course_search, db_session)</span><br><span class="line">    result = Result.success(pageInfo.of(course_list))</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@course_router.post(<span class="params"><span class="string">&quot;/add&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">course: CourseCreate, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    CourseService.add_course(course, db_session)</span><br><span class="line">    result = Result.success()</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@course_router.put(<span class="params"><span class="string">&quot;/update&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">update</span>(<span class="params">course: CourseUpdate, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    CourseService.update_by_id(course, db_session)</span><br><span class="line">    result = Result.success()</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.include_router(course_router)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi.encoders <span class="keyword">import</span> jsonable_encoder</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> desc, select</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.utils <span class="keyword">import</span> set_attrs</span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> CourseExistException, CourseNotExistException</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session</span><br><span class="line"><span class="keyword">from</span> model.course <span class="keyword">import</span> Course, CourseSearch, CourseCreate, CourseUpdate</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseService</span>:</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">select_page</span>(<span class="params">course_search: CourseSearch, db_session: Session</span>):</span><br><span class="line">        query = select(Course).order_by(desc(Course.<span class="built_in">id</span>))</span><br><span class="line">        <span class="keyword">if</span> course_search.name:</span><br><span class="line">            query = query.where(Course.name.like(<span class="string">f&quot;%<span class="subst">&#123;course_search.name&#125;</span>%&quot;</span>))</span><br><span class="line">        <span class="keyword">if</span> course_search.number:</span><br><span class="line">            query = query.where(Course.number.like(<span class="string">f&quot;%<span class="subst">&#123;course_search.number&#125;</span>%&quot;</span>))</span><br><span class="line">        <span class="keyword">if</span> course_search.teacher:</span><br><span class="line">            query = query.where(Course.teacher.like(<span class="string">f&quot;%<span class="subst">&#123;course_search.teacher&#125;</span>%&quot;</span>))</span><br><span class="line">        result = db_session.execute(query).scalars().<span class="built_in">all</span>()</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">add_course</span>(<span class="params">course: CourseCreate, db_session: Session</span>):</span><br><span class="line">        query = select(Course).where(Course.name == course.name)</span><br><span class="line">        exist_course: Course = db_session.execute(query).scalars().<span class="built_in">all</span>()</span><br><span class="line">        <span class="keyword">if</span> exist_course:</span><br><span class="line">            <span class="keyword">raise</span> CourseExistException(<span class="string">&quot;课程名已存在&quot;</span>)</span><br><span class="line">        course = Course(**course.<span class="built_in">dict</span>())</span><br><span class="line">        db_session.add(course)</span><br><span class="line">        db_session.commit()</span><br><span class="line">        <span class="keyword">return</span> course</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">update_by_id</span>(<span class="params">course: CourseUpdate, db_session: Session</span>):</span><br><span class="line">        query = select(Course).where(Course.<span class="built_in">id</span> == course.<span class="built_in">id</span>)</span><br><span class="line">        exist_course: Course = db_session.execute(query).scalar()</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> exist_course:</span><br><span class="line">            <span class="keyword">raise</span> CourseNotExistException(<span class="string">&quot;课程不存在&quot;</span>)</span><br><span class="line">        set_attrs(exist_course, jsonable_encoder(course))</span><br><span class="line">        db_session.commit()</span><br><span class="line">        <span class="keyword">return</span> exist_course</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> pydantic <span class="keyword">import</span> BaseModel</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> Integer, String</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> Mapped, mapped_column</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Base</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Course</span>(<span class="title class_ inherited__">Base</span>):</span><br><span class="line">    __tablename__ = <span class="string">&quot;course&quot;</span></span><br><span class="line">    <span class="built_in">id</span>: Mapped[<span class="built_in">int</span>] = mapped_column(Integer, primary_key=<span class="literal">True</span>, nullable=<span class="literal">False</span>)</span><br><span class="line">    name: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    number: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    description: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    periods: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    teacher: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseSearch</span>(<span class="title class_ inherited__">BaseModel</span>):</span><br><span class="line">    name: <span class="built_in">str</span> | <span class="literal">None</span></span><br><span class="line">    number: <span class="built_in">str</span> | <span class="literal">None</span></span><br><span class="line">    teacher: <span class="built_in">str</span> | <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseBase</span>(<span class="title class_ inherited__">BaseModel</span>):</span><br><span class="line">    name: <span class="built_in">str</span></span><br><span class="line">    number: <span class="built_in">str</span></span><br><span class="line">    description: <span class="built_in">str</span></span><br><span class="line">    periods: <span class="built_in">str</span></span><br><span class="line">    teacher: <span class="built_in">str</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseCreate</span>(<span class="title class_ inherited__">CourseBase</span>):</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseUpdate</span>(<span class="title class_ inherited__">CourseBase</span>):</span><br><span class="line">    <span class="built_in">id</span>: <span class="built_in">int</span></span><br></pre></td></tr></table></figure><p>实现给对象的属性更新的一个方法，在项目目录<code>/common</code>下，新建一个<code>utils.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 用于更新对象属性</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">set_attrs</span>(<span class="params">obj, data: <span class="built_in">dict</span></span>):</span><br><span class="line">    <span class="keyword">if</span> data:</span><br><span class="line">        <span class="keyword">for</span> key, value <span class="keyword">in</span> data.items():</span><br><span class="line">            <span class="built_in">setattr</span>(obj, key, value)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UserNotFoundException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PasswordNotMatchException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TokenException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseExistException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseNotExistException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi.encoders <span class="keyword">import</span> jsonable_encoder</span><br><span class="line"><span class="keyword">from</span> starlette.responses <span class="keyword">import</span> JSONResponse</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> Request</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> Result</span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> UserNotFoundException, PasswordNotMatchException, TokenException, \</span><br><span class="line">    CourseExistException, CourseNotExistException</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">Exception</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">exception_handler</span>(<span class="params">request: Request, exc: Exception</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;500&quot;</span>, msg=<span class="built_in">str</span>(exc))</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">500</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">UserNotFoundException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">user_not_fount_exception_handler</span>(<span class="params">request: Request, exc: UserNotFoundException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;404&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">404</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">PasswordNotMatchException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">password_not_fount_exception_handler</span>(<span class="params">request: Request, exc: PasswordNotMatchException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;401&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">401</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">TokenException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">token_exception_handler</span>(<span class="params">request: Request, exc: TokenException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;401&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">401</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">CourseExistException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">course_exist_exception_handler</span>(<span class="params">request: Request, exc: CourseExistException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;400&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">400</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">CourseNotExistException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">course_not_exist_exception_handler</span>(<span class="params">request: Request, exc: CourseNotExistException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;404&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">404</span>, content=jsonable_encoder(result))</span><br></pre></td></tr></table></figure><h4 id="测试-4"><a href="#测试-4" class="headerlink" title="测试"></a>测试</h4><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710361942830-1b838073-bb1f-4c9c-8167-2c5b8bd6fc3c.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710361960257-ff8da7d5-86d5-4314-b3d6-5e5e9fe8bdf5.png"></p><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><p>点击已有课程数据中的<code>删除</code>按钮，实现删除数据表中对应数据</p><h4 id="前端-4"><a href="#前端-4" class="headerlink" title="前端"></a>前端</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.name&quot;</span><br><span class="line">        placeholder=&quot;请输入要查询的课程名称&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;margin-left:10px; width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.number&quot;</span><br><span class="line">        placeholder=&quot;请输入课程编号&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;margin-left:10px; width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.teacher&quot;</span><br><span class="line">        placeholder=&quot;请输入任课老师&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-button type=&quot;info&quot; plain style=&quot;margin: 0 0 0 10px&quot; @click=&quot;reset&quot;</span><br><span class="line">        &gt;重置&lt;/el-button</span><br><span class="line">      &gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-button</span><br><span class="line">          type=&quot;primary&quot;</span><br><span class="line">          style=&quot;margin-bottom: 5px&quot;</span><br><span class="line">          plain</span><br><span class="line">          @click=&quot;handleAdd&quot;</span><br><span class="line">          &gt;新增&lt;/el-button</span><br><span class="line">        &gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-table :data=&quot;data.tableData&quot; stripe style=&quot;width: 100%&quot;&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;id&quot; label=&quot;ID&quot; width=&quot;80&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;name&quot; label=&quot;课程名称&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;number&quot; label=&quot;课程编号&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;description&quot; label=&quot;课程描述&quot; width=&quot;240&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;periods&quot; label=&quot;课时&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;teacher&quot; label=&quot;任课教师&quot; /&gt;</span><br><span class="line">          &lt;el-table-column label=&quot;操作&quot; align=&quot;center&quot;&gt;</span><br><span class="line">            &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">              &lt;el-button</span><br><span class="line">                type=&quot;primary&quot;</span><br><span class="line">                size=&quot;small&quot;</span><br><span class="line">                plain</span><br><span class="line">                @click=&quot;handleEdit(scope.row)&quot;</span><br><span class="line">                &gt;编辑&lt;/el-button</span><br><span class="line">              &gt;</span><br><span class="line">              &lt;el-button</span><br><span class="line">                type=&quot;danger&quot;</span><br><span class="line">                size=&quot;small&quot;</span><br><span class="line">                plain</span><br><span class="line">                @click=&quot;handleDelete(scope.row.id)&quot;</span><br><span class="line">                &gt;删除&lt;/el-button</span><br><span class="line">              &gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">          &lt;/el-table-column&gt;</span><br><span class="line">        &lt;/el-table&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot;&gt;</span><br><span class="line">      &lt;el-pagination</span><br><span class="line">        v-model:current-page=&quot;data.pageNum&quot;</span><br><span class="line">        v-model:page-size=&quot;data.pageSize&quot;</span><br><span class="line">        @current-change=&quot;handleCurrentChange&quot;</span><br><span class="line">        background</span><br><span class="line">        layout=&quot;prev, pager, next&quot;</span><br><span class="line">        :total=&quot;data.total&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;el-dialog width=&quot;35%&quot; v-model=&quot;data.formVisible&quot; title=&quot;课程信息&quot;&gt;</span><br><span class="line">      &lt;el-form</span><br><span class="line">        :model=&quot;data.form&quot;</span><br><span class="line">        label-width=&quot;100px&quot;</span><br><span class="line">        label-position=&quot;right&quot;</span><br><span class="line">        style=&quot;padding-right: 45px&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;el-form-item label=&quot;课程名称&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.name&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;课程编号&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.number&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;课程描述&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.description&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;课时&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.periods&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;任课教师&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.teacher&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">      &lt;/el-form&gt;</span><br><span class="line">      &lt;template #footer&gt;</span><br><span class="line">        &lt;span class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">          &lt;el-button @click=&quot;data.formVisible = false&quot; plain&gt;取消&lt;/el-button&gt;</span><br><span class="line">          &lt;el-button type=&quot;primary&quot; @click=&quot;save&quot; plain&gt;保存&lt;/el-button&gt;</span><br><span class="line">        &lt;/span&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line">    &lt;/el-dialog&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; reactive &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; Search &#125; from &quot;@element-plus/icons-vue&quot;;</span><br><span class="line">import request from &quot;@/utils/request&quot;;</span><br><span class="line">import &#123; ElMessage, ElMessageBox &#125; from &quot;element-plus&quot;;</span><br><span class="line"></span><br><span class="line">const data = reactive(&#123;</span><br><span class="line">  name: &quot;&quot;,</span><br><span class="line">  number: &quot;&quot;,</span><br><span class="line">  teacher: &quot;&quot;,</span><br><span class="line">  tableData: [],</span><br><span class="line">  total: 0,</span><br><span class="line">  pageNum: 1,</span><br><span class="line">  pageSize: 5,</span><br><span class="line">  formVisible: false,</span><br><span class="line">  form: &#123;&#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const load = () =&gt; &#123;</span><br><span class="line">  request</span><br><span class="line">    .get(&quot;/course/selectPage&quot;, &#123;</span><br><span class="line">      params: &#123;</span><br><span class="line">        pageNum: data.pageNum,</span><br><span class="line">        pageSize: data.pageSize,</span><br><span class="line">        name: data.name,</span><br><span class="line">        number: data.number,</span><br><span class="line">        teacher: data.teacher,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      data.tableData = res.data?.list || [];</span><br><span class="line">      data.total = res.data?.total || 0;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 加载一次 获取课程数据</span><br><span class="line">load();</span><br><span class="line"></span><br><span class="line">const handleCurrentChange = () =&gt; &#123;</span><br><span class="line">  // 当翻页的时候重新加载数据</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const reset = () =&gt; &#123;</span><br><span class="line">  data.name = &quot;&quot;;</span><br><span class="line">  data.number = &quot;&quot;;</span><br><span class="line">  data.teacher = &quot;&quot;;</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const handleAdd = () =&gt; &#123;</span><br><span class="line">  data.formVisible = true;</span><br><span class="line">  data.form = &#123;&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const save = () =&gt; &#123;</span><br><span class="line">  request</span><br><span class="line">    .request(&#123;</span><br><span class="line">      url: data.form.id ? &quot;/course/update&quot; : &quot;/course/add&quot;,</span><br><span class="line">      method: data.form.id ? &quot;put&quot; : &quot;post&quot;,</span><br><span class="line">      data: data.form,</span><br><span class="line">    &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">        ElMessage.success(&quot;操作成功&quot;);</span><br><span class="line">        data.formVisible = false;</span><br><span class="line">        load();</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        ElMessage.error(res.msg);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const handleEdit = (row) =&gt; &#123;</span><br><span class="line">  data.form = JSON.parse(JSON.stringify(row));</span><br><span class="line">  data.formVisible = true;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const handleDelete = (id) =&gt; &#123;</span><br><span class="line">  ElMessageBox.confirm(&quot;删除后内容将无法恢复，您确认删除嘛？&quot;, &quot;删除确认&quot;, &#123;</span><br><span class="line">    type: &quot;warning&quot;,</span><br><span class="line">  &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      request.delete(&quot;/course/delete/&quot; + id).then((res) =&gt; &#123;</span><br><span class="line">        if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">          ElMessage.success(&quot;删除成功&quot;);</span><br><span class="line">          load();</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          ElMessage.error(res.msg);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="后端-4"><a href="#后端-4" class="headerlink" title="后端"></a>后端</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Optional</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> APIRouter, Query, Depends</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> common.pageHelper <span class="keyword">import</span> PageHelper</span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> ResultModel, Result</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session, get_db_session</span><br><span class="line"><span class="keyword">from</span> model.course <span class="keyword">import</span> Course, CourseSearch, CourseCreate, CourseUpdate</span><br><span class="line"><span class="keyword">from</span> service.courseService <span class="keyword">import</span> CourseService</span><br><span class="line"></span><br><span class="line">course_router = APIRouter(prefix=<span class="string">&quot;/course&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@course_router.get(<span class="params"><span class="string">&quot;/selectPage&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">select_page</span>(<span class="params">page: <span class="built_in">int</span> = Query(<span class="params"><span class="number">1</span>, ge=<span class="number">1</span>, alias=<span class="string">&quot;pageNum&quot;</span>, description=<span class="string">&quot;Page number&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      size: <span class="built_in">int</span> = Query(<span class="params"><span class="number">5</span>, gt=<span class="number">0</span>, le=<span class="number">100</span>, alias=<span class="string">&quot;pageSize&quot;</span>, description=<span class="string">&quot;Page size&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      name: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Course name&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      number: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Course number&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      teacher: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Course teacher&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    pageInfo = PageHelper.startPage(page, size)</span><br><span class="line">    course_search = CourseSearch(name=name, number=number, teacher=teacher)</span><br><span class="line">    course_list = CourseService.select_page(course_search, db_session)</span><br><span class="line">    result = Result.success(pageInfo.of(course_list))</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@course_router.post(<span class="params"><span class="string">&quot;/add&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">course: CourseCreate, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    CourseService.add_course(course, db_session)</span><br><span class="line">    result = Result.success()</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@course_router.put(<span class="params"><span class="string">&quot;/update&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">update</span>(<span class="params">course: CourseUpdate, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    CourseService.update_by_id(course, db_session)</span><br><span class="line">    result = Result.success()</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@course_router.delete(<span class="params"><span class="string">&quot;/delete/&#123;id&#125;&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">delete</span>(<span class="params"><span class="built_in">id</span>: <span class="built_in">int</span>, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    CourseService.delete_by_id(<span class="built_in">id</span>, db_session)</span><br><span class="line">    result = Result.success()</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.include_router(course_router)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi.encoders <span class="keyword">import</span> jsonable_encoder</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> desc, select</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.utils <span class="keyword">import</span> set_attrs</span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> CourseExistException, CourseNotExistException</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session</span><br><span class="line"><span class="keyword">from</span> model.course <span class="keyword">import</span> Course, CourseSearch, CourseCreate, CourseUpdate</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseService</span>:</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">select_page</span>(<span class="params">course_search: CourseSearch, db_session: Session</span>):</span><br><span class="line">        query = select(Course).order_by(desc(Course.<span class="built_in">id</span>))</span><br><span class="line">        <span class="keyword">if</span> course_search.name:</span><br><span class="line">            query = query.where(Course.name.like(<span class="string">f&quot;%<span class="subst">&#123;course_search.name&#125;</span>%&quot;</span>))</span><br><span class="line">        <span class="keyword">if</span> course_search.number:</span><br><span class="line">            query = query.where(Course.number.like(<span class="string">f&quot;%<span class="subst">&#123;course_search.number&#125;</span>%&quot;</span>))</span><br><span class="line">        <span class="keyword">if</span> course_search.teacher:</span><br><span class="line">            query = query.where(Course.teacher.like(<span class="string">f&quot;%<span class="subst">&#123;course_search.teacher&#125;</span>%&quot;</span>))</span><br><span class="line">        result = db_session.execute(query).scalars().<span class="built_in">all</span>()</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">add_course</span>(<span class="params">course: CourseCreate, db_session: Session</span>):</span><br><span class="line">        query = select(Course).where(Course.name == course.name)</span><br><span class="line">        exist_course: Course = db_session.execute(query).scalars().<span class="built_in">all</span>()</span><br><span class="line">        <span class="keyword">if</span> exist_course:</span><br><span class="line">            <span class="keyword">raise</span> CourseExistException(<span class="string">&quot;课程名已存在&quot;</span>)</span><br><span class="line">        course = Course(**course.<span class="built_in">dict</span>())</span><br><span class="line">        db_session.add(course)</span><br><span class="line">        db_session.commit()</span><br><span class="line">        <span class="keyword">return</span> course</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">update_by_id</span>(<span class="params">course: CourseUpdate, db_session: Session</span>):</span><br><span class="line">        exist_course: Course = check_course_exist(course.<span class="built_in">id</span>, db_session)</span><br><span class="line">        set_attrs(exist_course, jsonable_encoder(course))</span><br><span class="line">        db_session.commit()</span><br><span class="line">        <span class="keyword">return</span> exist_course</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">delete_by_id</span>(<span class="params"><span class="built_in">id</span>: <span class="built_in">int</span>, db_session: Session</span>):</span><br><span class="line">        exist_course: Course = check_course_exist(<span class="built_in">id</span>, db_session)</span><br><span class="line">        db_session.delete(exist_course)</span><br><span class="line">        db_session.commit()</span><br><span class="line">        <span class="keyword">return</span> exist_course</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check_course_exist</span>(<span class="params">course_id: <span class="built_in">int</span>, db_session: Session</span>):</span><br><span class="line">    query = select(Course).where(Course.<span class="built_in">id</span> == course_id)</span><br><span class="line">    exist_course: Course = db_session.execute(query).scalar()</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> exist_course:</span><br><span class="line">        <span class="keyword">raise</span> CourseNotExistException(<span class="string">&quot;课程不存在&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> exist_course</span><br></pre></td></tr></table></figure><h4 id="测试-5"><a href="#测试-5" class="headerlink" title="测试"></a>测试</h4><p>先创建一个课程</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710362829857-c2f0f339-f279-4816-b09d-ee9a6442cc4e.png"></p><p>然后删除</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710362849747-11c06463-9cb4-4402-bc1a-3f1d40cb3a70.png"></p><p>删除成功</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710362860933-f9cec0e6-64b1-4bf3-877b-559734cd4abc.png"></p><hr><blockquote><p>更新: 2024-05-03 22:02:17<br>原文: <a href="https://www.yuque.com/zacharyblock/iacda/lsqxkzaok37g7aaz">https://www.yuque.com/zacharyblock/iacda/lsqxkzaok37g7aaz</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;课程管理&quot;&gt;&lt;a href=&quot;#课程管理&quot; class=&quot;headerlink&quot; title=&quot;课程管理&quot;&gt;&lt;/a&gt;课程管理&lt;/h1&gt;&lt;p&gt;接下来开发一个课程管理功能，用于管理和显示学生课程的&lt;/p&gt;
&lt;h2 id=&quot;数据库&quot;&gt;&lt;a href=&quot;#数据库&quot; cla</summary>
      
    
    
    
    <category term="FastAPI入门" scheme="https://blockzachary.github.io/categories/FastAPI%E5%85%A5%E9%97%A8/"/>
    
    
    <category term="Python" scheme="https://blockzachary.github.io/tags/Python/"/>
    
    <category term="Vue3" scheme="https://blockzachary.github.io/tags/Vue3/"/>
    
    <category term="FastAPI" scheme="https://blockzachary.github.io/tags/FastAPI/"/>
    
    <category term="实战" scheme="https://blockzachary.github.io/tags/%E5%AE%9E%E6%88%98/"/>
    
  </entry>
  
  <entry>
    <title>JWT权限校验</title>
    <link href="https://blockzachary.github.io/2024/05/03/FastAPI%E5%85%A5%E9%97%A8/JWT%E6%9D%83%E9%99%90%E6%A0%A1%E9%AA%8C/"/>
    <id>https://blockzachary.github.io/2024/05/03/FastAPI%E5%85%A5%E9%97%A8/JWT%E6%9D%83%E9%99%90%E6%A0%A1%E9%AA%8C/</id>
    <published>2024-05-03T21:50:00.000Z</published>
    <updated>2024-05-03T21:50:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JWT-权限校验"><a href="#JWT-权限校验" class="headerlink" title="JWT 权限校验"></a>JWT 权限校验</h1><p>在退出登录之后，依旧可以进入到主页面；同样后续其他 api 接口也需要在登录之后才能调用，需要加上 token，使用 JWT 实现。</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710335150678-c0013c3b-c00f-4f9b-949b-78286e63d87f.png"></p><h2 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h2><p>首先从前端这块处理，除了 login 和后续会增加的 register 页面不需要登录才能访问，其他页面，都需要登录用户之后才能访问，否则自动跳转回 login 页面</p><h3 id="请求头"><a href="#请求头" class="headerlink" title="请求头"></a>请求头</h3><p>给请求头带上 token，提供给后端进行验证</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ElMessage</span> &#125; <span class="keyword">from</span> <span class="string">&quot;element-plus&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&quot;../router&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&quot;axios&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> request = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">  <span class="attr">baseURL</span>: <span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">env</span>.<span class="property">VITE_BASE_URL</span>,</span><br><span class="line">  <span class="attr">timeout</span>: <span class="number">30000</span>, <span class="comment">// 后台接口超时时间设置</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// request 拦截器</span></span><br><span class="line"><span class="comment">// 可以自请求发送前对请求做一些处理</span></span><br><span class="line">request.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(</span><br><span class="line">  <span class="function">(<span class="params">config</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> user = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;student-user&quot;</span>));</span><br><span class="line">    config.<span class="property">headers</span>[<span class="string">&quot;Content-Type&quot;</span>] = <span class="string">&quot;application/json;charset=utf-8&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (user) &#123;</span><br><span class="line">      config.<span class="property">headers</span>.<span class="property">Authorization</span> = <span class="string">`Bearer <span class="subst">$&#123;user.token&#125;</span>`</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> config;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">// response 拦截器</span></span><br><span class="line"><span class="comment">// 可以在接口响应后统一处理结果</span></span><br><span class="line">request.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(</span><br><span class="line">  <span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> res = response.<span class="property">data</span>;</span><br><span class="line">    <span class="comment">// 如果是返回的文件</span></span><br><span class="line">    <span class="keyword">if</span> (response.<span class="property">config</span>.<span class="property">responseType</span> === <span class="string">&quot;blob&quot;</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 兼容服务端返回的字符串数据</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> res === <span class="string">&quot;string&quot;</span>) &#123;</span><br><span class="line">      res = res ? <span class="title class_">JSON</span>.<span class="title function_">parse</span>(res) : res;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 当权限验证不通过的时候给出提示</span></span><br><span class="line">    <span class="keyword">if</span> (res.<span class="property">code</span> === <span class="string">&quot;401&quot;</span>) &#123;</span><br><span class="line">      <span class="title class_">ElMessage</span>.<span class="title function_">error</span>(res.<span class="property">msg</span>);</span><br><span class="line">      router.<span class="title function_">push</span>(<span class="string">&quot;/login&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;err&quot;</span> + error);</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> request;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710336890469-a77306ca-5be8-480f-9570-4a796f68df1d.png"></p><h3 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h3><p>实现在没有 token 的情况下无法进入主页而跳转到 login 页面，在路由守卫中进行判断和处理</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHistory &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">history</span>: <span class="title function_">createWebHistory</span>(<span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">env</span>.<span class="property">BASE_URL</span>),</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;Manager&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/Manager.vue&quot;</span>),</span><br><span class="line">      <span class="attr">redirect</span>: <span class="string">&quot;/home&quot;</span>,</span><br><span class="line">      <span class="attr">children</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;home&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Home&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Home.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">      ],</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/login&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;Login&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/Login.vue&quot;</span>),</span><br><span class="line">    &#125;,</span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">beforeEach</span>(<span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> requiresAuth = to.<span class="property">matched</span>.<span class="title function_">some</span>(<span class="function">(<span class="params">record</span>) =&gt;</span> record.<span class="property">meta</span>.<span class="property">requiresAuth</span>);</span><br><span class="line">  <span class="keyword">const</span> user = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;student-user&quot;</span>));</span><br><span class="line">  <span class="keyword">if</span> (requiresAuth &amp;&amp; !user) &#123;</span><br><span class="line">    <span class="comment">// 如果目标路由需要认证,并且用户未登录</span></span><br><span class="line">    <span class="title function_">next</span>(<span class="string">&quot;/login&quot;</span>); <span class="comment">// 跳转到登录页面</span></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">next</span>(); <span class="comment">// 如果目标路由不需要认证,或者用户已登录,则正常导航到目标路由</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710336834715-bbfe0bce-f29f-46dc-b65c-73afb2105f5c.png"></p><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>不登录，无法进入 home 页面</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710337011611-010bd441-a61b-4e6d-bbfe-6b67dd19b54e.png"></p><p>登录后，才可以进入 home 页面</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710337034729-eb685506-a372-44c1-a919-ec563223fd2e.png"></p><h2 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h2><p>后端这块需要实现一下 jwt，包括密码的校验和生成，以及 token 的生成和校验；那么之前的密码校验就可以舍去了，写一个统一的 auth 验证</p><h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><p>这里需要两个依赖：<code>pyjwt</code>、<code>passlib[bcrypt]</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">fastapi[all]</span><br><span class="line">mysqlclient==2.1.1</span><br><span class="line">SQLAlchemy==2.0.23</span><br><span class="line">pyjwt</span><br><span class="line">passlib[bcrypt]</span><br></pre></td></tr></table></figure><h3 id="AuthHandler"><a href="#AuthHandler" class="headerlink" title="AuthHandler"></a>AuthHandler</h3><h4 id="密码生成与校验"><a href="#密码生成与校验" class="headerlink" title="密码生成与校验"></a>密码生成与校验</h4><p>接下先来编写 密码的生成和校验，在项目目录的<code>/common</code>下创建一个<code>auth.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi.security <span class="keyword">import</span> HTTPBearer</span><br><span class="line"><span class="keyword">from</span> passlib.context <span class="keyword">import</span> CryptContext</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AuthHandler</span>:</span><br><span class="line">    security = HTTPBearer()</span><br><span class="line">    pwd_context = CryptContext(schemes=[<span class="string">&quot;bcrypt&quot;</span>], deprecated=<span class="string">&quot;auto&quot;</span>)</span><br><span class="line">    secret = <span class="string">&quot;SECRET&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_password_hash</span>(<span class="params">self, password</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.pwd_context.<span class="built_in">hash</span>(password)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">verify_password</span>(<span class="params">self, plain_password, hashed_password</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.pwd_context.verify(plain_password, hashed_password)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    auth = AuthHandler()</span><br><span class="line">    <span class="built_in">print</span>(auth.get_password_hash(<span class="string">&quot;admin&quot;</span>))</span><br><span class="line">    <span class="built_in">print</span>(auth.verify_password(<span class="string">&quot;admin&quot;</span>, <span class="string">&#x27;$2b$12$ttbSmj8jD5rW/c0XdkBZyOZI5F7GP.kMuBMWgE2.yyzreJCWdwAum&#x27;</span>))</span><br><span class="line">    <span class="built_in">print</span>(auth.verify_password(<span class="string">&quot;123&quot;</span>, <span class="string">&#x27;$2b$12$ttbSmj8jD5rW/c0XdkBZyOZI5F7GP.kMuBMWgE2.yyzreJCWdwAum&#x27;</span>))</span><br></pre></td></tr></table></figure><p>其中的<code>$2b$12$ttbSmj8jD5rW/c0XdkBZyOZI5F7GP.kMuBMWgE2.yyzreJCWdwAum</code>是数据库中存储的 admin 的密码</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710339283730-f5386141-228b-4a40-8a02-b03d5c5abdc8.png"></p><p>运行一下</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710339640006-9c71c0db-8f4e-4e2c-90f0-2719c440afb1.png"></p><p>可以看到，之前使用 bcrypt 直接生成的 hash 密码，虽然与现在生成的不一样，但是依旧可以用于验证</p><p>修改一下 adminService 的验证逻辑，尝试一下登录</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi.security <span class="keyword">import</span> HTTPBearer</span><br><span class="line"><span class="keyword">from</span> passlib.context <span class="keyword">import</span> CryptContext</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AuthHandler</span>:</span><br><span class="line">    security = HTTPBearer()</span><br><span class="line">    pwd_context = CryptContext(schemes=[<span class="string">&quot;bcrypt&quot;</span>], deprecated=<span class="string">&quot;auto&quot;</span>)</span><br><span class="line">    secret = <span class="string">&quot;SECRET&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_password_hash</span>(<span class="params">self, password</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.pwd_context.<span class="built_in">hash</span>(password)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">verify_password</span>(<span class="params">self, plain_password, hashed_password</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.pwd_context.verify(plain_password, hashed_password)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">auth_handler = AuthHandler()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> select</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.auth <span class="keyword">import</span> auth_handler</span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> UserNotFoundException, PasswordNotMatchException</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session</span><br><span class="line"><span class="keyword">from</span> model.admin <span class="keyword">import</span> Admin, AdminModel</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AdminService</span>:</span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">login</span>(<span class="params">admin: AdminModel, db_session: Session</span>) -&gt; Admin:</span><br><span class="line">        query = select(Admin).where(Admin.username == admin.username)</span><br><span class="line">        result = db_session.execute(query).scalars().first()</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> result:</span><br><span class="line">            <span class="keyword">raise</span> UserNotFoundException(<span class="string">&quot;用户不存在&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> auth_handler.verify_password(admin.password, result.password):</span><br><span class="line">            <span class="keyword">raise</span> PasswordNotMatchException(<span class="string">&quot;身份验证未通过&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710339937574-abe7280b-5945-446a-882b-8aa631eabf32.png"></p><h4 id="token-的生成与校验"><a href="#token-的生成与校验" class="headerlink" title="token 的生成与校验"></a>token 的生成与校验</h4><p>通过装饰器实现一个，登录验证</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime, timedelta</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> jwt</span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> Security</span><br><span class="line"><span class="keyword">from</span> fastapi.security <span class="keyword">import</span> HTTPBearer, HTTPAuthorizationCredentials</span><br><span class="line"><span class="keyword">from</span> passlib.context <span class="keyword">import</span> CryptContext</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> TokenException</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AuthHandler</span>:</span><br><span class="line">    security = HTTPBearer()</span><br><span class="line">    pwd_context = CryptContext(schemes=[<span class="string">&quot;bcrypt&quot;</span>], deprecated=<span class="string">&quot;auto&quot;</span>)</span><br><span class="line">    secret = <span class="string">&quot;SECRET&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_password_hash</span>(<span class="params">self, password</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.pwd_context.<span class="built_in">hash</span>(password)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">verify_password</span>(<span class="params">self, plain_password, hashed_password</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.pwd_context.verify(plain_password, hashed_password)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">encode_token</span>(<span class="params">self, user_id</span>):</span><br><span class="line">        payload = &#123;</span><br><span class="line">            <span class="string">&#x27;exp&#x27;</span>: datetime.utcnow() + timedelta(days=<span class="number">7</span>, minutes=<span class="number">0</span>, seconds=<span class="number">0</span>),</span><br><span class="line">            <span class="string">&#x27;iat&#x27;</span>: datetime.utcnow(),</span><br><span class="line">            <span class="string">&#x27;sub&#x27;</span>: user_id</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> jwt.encode(</span><br><span class="line">            payload,</span><br><span class="line">            <span class="variable language_">self</span>.secret,</span><br><span class="line">            algorithm=<span class="string">&#x27;HS256&#x27;</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">decode_token</span>(<span class="params">self, token</span>):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            payload = jwt.decode(token, <span class="variable language_">self</span>.secret, algorithms=[<span class="string">&#x27;HS256&#x27;</span>])</span><br><span class="line">            <span class="keyword">return</span> payload[<span class="string">&#x27;sub&#x27;</span>]</span><br><span class="line">        <span class="keyword">except</span> jwt.ExpiredSignatureError:</span><br><span class="line">            <span class="keyword">raise</span> TokenException(<span class="string">&quot;token过期&quot;</span>)</span><br><span class="line">        <span class="keyword">except</span> jwt.InvalidTokenError:</span><br><span class="line">            <span class="keyword">raise</span> TokenException(<span class="string">&quot;无效token&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">auth_required</span>(<span class="params">self, auth: HTTPAuthorizationCredentials = Security(<span class="params">security</span>)</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.decode_token(auth.credentials)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">auth_handler = AuthHandler()</span><br></pre></td></tr></table></figure><p>给<code>customException.py</code>添加一个自定义异常</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">TokenException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br></pre></td></tr></table></figure><p>给<code>exceptionHandler.py</code>添加一个异常处理</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi.encoders <span class="keyword">import</span> jsonable_encoder</span><br><span class="line"><span class="keyword">from</span> starlette.responses <span class="keyword">import</span> JSONResponse</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> Request</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> Result</span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> UserNotFoundException, PasswordNotMatchException, TokenException</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">Exception</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">exception_handler</span>(<span class="params">request: Request, exc: Exception</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;500&quot;</span>, msg=<span class="built_in">str</span>(exc))</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">500</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">UserNotFoundException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">user_not_fount_exception_handler</span>(<span class="params">request: Request, exc: UserNotFoundException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;404&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">404</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">PasswordNotMatchException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">password_not_fount_exception_handler</span>(<span class="params">request: Request, exc: PasswordNotMatchException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;401&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">401</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">TokenException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">token_exception_handler</span>(<span class="params">request: Request, exc: TokenException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;401&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">401</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这个先写到这，后面新增加 api 的时候进行一个验证</p><hr><blockquote><p>更新: 2024-07-30 17:40:29<br>原文: <a href="https://www.yuque.com/zacharyblock/iacda/pkecek3noxmavqwz">https://www.yuque.com/zacharyblock/iacda/pkecek3noxmavqwz</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;JWT-权限校验&quot;&gt;&lt;a href=&quot;#JWT-权限校验&quot; class=&quot;headerlink&quot; title=&quot;JWT 权限校验&quot;&gt;&lt;/a&gt;JWT 权限校验&lt;/h1&gt;&lt;p&gt;在退出登录之后，依旧可以进入到主页面；同样后续其他 api 接口也需要在登录之后才能调用，需</summary>
      
    
    
    
    <category term="FastAPI入门" scheme="https://blockzachary.github.io/categories/FastAPI%E5%85%A5%E9%97%A8/"/>
    
    
    <category term="Python" scheme="https://blockzachary.github.io/tags/Python/"/>
    
    <category term="Vue3" scheme="https://blockzachary.github.io/tags/Vue3/"/>
    
    <category term="FastAPI" scheme="https://blockzachary.github.io/tags/FastAPI/"/>
    
    <category term="实战" scheme="https://blockzachary.github.io/tags/%E5%AE%9E%E6%88%98/"/>
    
  </entry>
  
  <entry>
    <title>管理员登录</title>
    <link href="https://blockzachary.github.io/2024/05/03/FastAPI%E5%85%A5%E9%97%A8/%E7%AE%A1%E7%90%86%E5%91%98%E7%99%BB%E5%BD%95/"/>
    <id>https://blockzachary.github.io/2024/05/03/FastAPI%E5%85%A5%E9%97%A8/%E7%AE%A1%E7%90%86%E5%91%98%E7%99%BB%E5%BD%95/</id>
    <published>2024-05-03T21:30:00.000Z</published>
    <updated>2024-05-03T21:30:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="管理员登录"><a href="#管理员登录" class="headerlink" title="管理员登录"></a>管理员登录</h1><h2 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h2><h3 id="Login"><a href="#Login" class="headerlink" title="Login"></a>Login</h3><p>首先绘制一个登录页面</p><p>参考 element-plus 官网提供的表单<a href="https://element-plus.org/zh-CN/component/form.html">https://element-plus.org/zh-CN/component/form.html</a></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710081142620-3acddbcf-774a-4d82-8992-bbf5b08a991f.png"></p><p>在项目路径<code>/src/views</code>下创建一个<code>Login.vue</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;login-container&quot;&gt;</span><br><span class="line">      &lt;div style=&quot;width: 420px&quot; class=&quot;login-box&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;title&quot;&gt;学生信息管理系统 - 登录&lt;/div&gt;</span><br><span class="line">        &lt;el-form :model=&quot;data.form&quot;&gt;</span><br><span class="line">          &lt;el-form-item&gt;</span><br><span class="line">            &lt;el-input</span><br><span class="line">              style=&quot;height: 40px;font-size: 18px&quot;</span><br><span class="line">              prefix-icon=&quot;Avatar&quot;</span><br><span class="line">              v-model=&quot;data.form.username&quot;</span><br><span class="line">              placeholder=&quot;请输入账号&quot;</span><br><span class="line">            /&gt;</span><br><span class="line">          &lt;/el-form-item&gt;</span><br><span class="line">          &lt;el-form-item&gt;</span><br><span class="line">            &lt;el-input</span><br><span class="line">              style=&quot;height: 40px;font-size: 18px&quot;</span><br><span class="line">              prefix-icon=&quot;Lock&quot;</span><br><span class="line">              v-model=&quot;data.form.password&quot;</span><br><span class="line">              placeholder=&quot;请输入密码&quot;</span><br><span class="line">            /&gt;</span><br><span class="line">          &lt;/el-form-item&gt;</span><br><span class="line">          &lt;el-form-item&gt;</span><br><span class="line">            &lt;el-button type=&quot;primary&quot; style=&quot;width: 100%;font-size: 18px&quot;</span><br><span class="line">              &gt;登 录&lt;/el-button</span><br><span class="line">            &gt;</span><br><span class="line">          &lt;/el-form-item&gt;</span><br><span class="line">        &lt;/el-form&gt;</span><br><span class="line">        &lt;div style=&quot;margin-top:35px;text-align: right;font-size: 15px&quot;&gt;</span><br><span class="line">          还没有账号？请&lt;a href=&quot;/register&quot;&gt;注册&lt;/a&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; reactive &#125; from &quot;vue&quot;;</span><br><span class="line"></span><br><span class="line">const data = reactive(&#123;</span><br><span class="line">  form: &#123;&#125;,</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.login-container &#123;</span><br><span class="line">  min-height: 100vh;</span><br><span class="line">  overflow: hidden;</span><br><span class="line">  display: flex;</span><br><span class="line">  align-items: center;</span><br><span class="line">  justify-content: center;</span><br><span class="line">  background-image: url(&quot;@/assets/imgs/login_background.png&quot;);</span><br><span class="line">  background-size: cover;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.login-box &#123;</span><br><span class="line">  background-color: rgb(255, 255, 255, 50%);</span><br><span class="line">  box-shadow: 0 0 10px rgba(84, 221, 245, 0.41);</span><br><span class="line">  padding: 30px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.title &#123;</span><br><span class="line">  font-weight: bold;</span><br><span class="line">  font-size: 30px;</span><br><span class="line">  text-align: center;</span><br><span class="line">  margin-bottom: 35px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="背景图片"><a href="#背景图片" class="headerlink" title="背景图片"></a>背景图片</h3><p>添加一张登录背景图片到<code>/src/assets/imags/login_background.png</code></p><p><a href="https://iconscout.com/free-illustration/children-are-doing-chemical-experiments-10946611">https://iconscout.com/free-illustration/children-are-doing-chemical-experiments-10946611</a></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710082231293-c528b0f7-371d-4f7b-9f01-6d10be6dd257.png"></p><h3 id="路由添加"><a href="#路由添加" class="headerlink" title="路由添加"></a>路由添加</h3><p>在<code>/src/router/index.js</code>中添加一下上面这个<code>Login</code>的路由</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHistory &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">history</span>: <span class="title function_">createWebHistory</span>(<span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">env</span>.<span class="property">BASE_URL</span>),</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;Manager&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/Manager.vue&quot;</span>),</span><br><span class="line">      <span class="attr">redirect</span>: <span class="string">&quot;/home&quot;</span>,</span><br><span class="line">      <span class="attr">children</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;home&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Home&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Home.vue&quot;</span>),</span><br><span class="line">        &#125;,</span><br><span class="line">      ],</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/login&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;Login&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/Login.vue&quot;</span>),</span><br><span class="line">    &#125;,</span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710082953287-5609d967-2864-44d1-ae13-201bfb968727.png"></p><p>通过<a href="http://localhost:5173/login">http://localhost:5173/login</a>可以访问到登录页面</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710083039407-bc17182f-32f8-4ecc-9742-ce9c634f7b6e.png"></p><h3 id="表单校验和登录"><a href="#表单校验和登录" class="headerlink" title="表单校验和登录"></a>表单校验和登录</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;login-container&quot;&gt;</span><br><span class="line">      &lt;div style=&quot;width: 420px&quot; class=&quot;login-box&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;title&quot;&gt;学生信息管理系统 - 登录&lt;/div&gt;</span><br><span class="line">        &lt;el-form :model=&quot;data.form&quot; ref=&quot;formRef&quot; :rules=&quot;rules&quot;&gt;</span><br><span class="line">          &lt;el-form-item prop=&quot;username&quot;&gt;</span><br><span class="line">            &lt;el-input</span><br><span class="line">              style=&quot;height: 40px;font-size: 18px&quot;</span><br><span class="line">              prefix-icon=&quot;Avatar&quot;</span><br><span class="line">              v-model=&quot;data.form.username&quot;</span><br><span class="line">              placeholder=&quot;请输入账号&quot;</span><br><span class="line">            /&gt;</span><br><span class="line">          &lt;/el-form-item&gt;</span><br><span class="line">          &lt;el-form-item prop=&quot;password&quot;&gt;</span><br><span class="line">            &lt;el-input</span><br><span class="line">              show-password</span><br><span class="line">              style=&quot;height: 40px;font-size: 18px&quot;</span><br><span class="line">              prefix-icon=&quot;Lock&quot;</span><br><span class="line">              v-model=&quot;data.form.password&quot;</span><br><span class="line">              placeholder=&quot;请输入密码&quot;</span><br><span class="line">            /&gt;</span><br><span class="line">          &lt;/el-form-item&gt;</span><br><span class="line">          &lt;el-form-item&gt;</span><br><span class="line">            &lt;el-button</span><br><span class="line">              type=&quot;primary&quot;</span><br><span class="line">              style=&quot;width: 100%;font-size: 18px&quot;</span><br><span class="line">              @click=&quot;login&quot;</span><br><span class="line">              &gt;登 录&lt;/el-button</span><br><span class="line">            &gt;</span><br><span class="line">          &lt;/el-form-item&gt;</span><br><span class="line">        &lt;/el-form&gt;</span><br><span class="line">        &lt;div style=&quot;margin-top:35px;text-align: right;font-size: 15px&quot;&gt;</span><br><span class="line">          还没有账号？请&lt;a href=&quot;/register&quot;&gt;注册&lt;/a&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; reactive, ref &#125; from &quot;vue&quot;;</span><br><span class="line">import request from &quot;@/utils/request&quot;;</span><br><span class="line">import &#123; ElMessage &#125; from &quot;element-plus&quot;;</span><br><span class="line">import router from &quot;@/router&quot;;</span><br><span class="line"></span><br><span class="line">const data = reactive(&#123;</span><br><span class="line">  form: &#123;&#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const rules = reactive(&#123;</span><br><span class="line">  username: [&#123; required: true, message: &quot;请输入账号&quot;, trigger: &quot;blur&quot; &#125;],</span><br><span class="line">  password: [&#123; required: true, message: &quot;请输入密码&quot;, trigger: &quot;blur&quot; &#125;],</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const formRef = ref();</span><br><span class="line"></span><br><span class="line">const login = () =&gt; &#123;</span><br><span class="line">  formRef.value.validate((valid) =&gt; &#123;</span><br><span class="line">    if (valid) &#123;</span><br><span class="line">      request</span><br><span class="line">        .post(&quot;/login&quot;, data.form)</span><br><span class="line">        .then((res) =&gt; &#123;</span><br><span class="line">          if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">            localStorage.setItem(&quot;student-user&quot;, JSON.stringify(res.data));</span><br><span class="line">            ElMessage.success(&quot;登录成功&quot;);</span><br><span class="line">            router.push(&quot;/home&quot;);</span><br><span class="line">          &#125; else &#123;</span><br><span class="line">            ElMessage.error(res.msg);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch((err) =&gt; &#123;</span><br><span class="line">          ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.login-container &#123;</span><br><span class="line">  min-height: 100vh;</span><br><span class="line">  overflow: hidden;</span><br><span class="line">  display: flex;</span><br><span class="line">  align-items: center;</span><br><span class="line">  justify-content: center;</span><br><span class="line">  background-image: url(&quot;@/assets/imgs/login_background.png&quot;);</span><br><span class="line">  background-size: cover;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.login-box &#123;</span><br><span class="line">  background-color: rgb(255, 255, 255, 50%);</span><br><span class="line">  box-shadow: 0 0 10px rgba(84, 221, 245, 0.41);</span><br><span class="line">  padding: 30px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.title &#123;</span><br><span class="line">  font-weight: bold;</span><br><span class="line">  font-size: 30px;</span><br><span class="line">  text-align: center;</span><br><span class="line">  margin-bottom: 35px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h2><h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3><h4 id="IDE-连接-MySQL"><a href="#IDE-连接-MySQL" class="headerlink" title="IDE 连接 MySQL"></a>IDE 连接 MySQL</h4><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710085705678-d51970ce-f35a-4582-95aa-a05156df4838.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710085783761-e03f3a33-edb0-481c-9d8f-747eb9d0d9c4.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710085814318-d7b039ea-490d-41c2-b744-b088af37fe67.png"></p><h4 id="创建库"><a href="#创建库" class="headerlink" title="创建库"></a>创建库</h4><p>首先在数据库中创建一个 student_info 库</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710085943623-eee4c6a8-24d2-4cbe-af89-fd7badf6485f.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710086149939-85b20d45-d2ce-424c-afcb-af1878495898.png"></p><h4 id="创建-admin-表"><a href="#创建-admin-表" class="headerlink" title="创建 admin 表"></a>创建 admin 表</h4><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710086214220-4ed6fe62-305d-4b2c-9b1d-ca2e0368d1b7.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710086442240-8393e748-717f-4178-bc73-0fdc64e1a260.png"></p><p>插入一条数据</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710086572996-c8379960-6bc4-4da3-b369-10c788aed8b0.png"></p><h3 id="数据库配置"><a href="#数据库配置" class="headerlink" title="数据库配置"></a>数据库配置</h3><p>查看 sqlalchemy 官方文档<a href="https://docs.sqlalchemy.org/en/20/dialects/mysql.html#module-sqlalchemy.dialects.mysql.mysqldb">https://docs.sqlalchemy.org/en/20/dialects/mysql.html#module-sqlalchemy.dialects.mysql.mysqldb</a></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710086788369-74f56963-dc07-4175-92fb-afabb26d6919.png"></p><h4 id="requirements-txt"><a href="#requirements-txt" class="headerlink" title="requirements.txt"></a>requirements.txt</h4><p>通过 sqlalchemy 连接数据库需要增加两个驱动</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fastapi[all]</span><br><span class="line">mysqlclient==2.1.1</span><br><span class="line">SQLAlchemy==2.0.23</span><br></pre></td></tr></table></figure><h4 id="env"><a href="#env" class="headerlink" title=".env"></a>.env</h4><p>在.env 文件下添加数据库的配置信息（记得改成你们自己的内容）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">HOST = &quot;localhost&quot;</span><br><span class="line">PORT = &quot;9090&quot;</span><br><span class="line"></span><br><span class="line">MYSQL_DIALECT = &quot;mysql+mysqldb&quot;</span><br><span class="line">MYSQL_HOST = &quot;localhost&quot;</span><br><span class="line">MYSQL_PORT = &quot;3306&quot;</span><br><span class="line">MYSQL_USER = &quot;root&quot;</span><br><span class="line">MYSQL_PASSWORD = &quot;XXXXXX&quot;</span><br><span class="line">MYSQL_DATABASE = &quot;student_info&quot;</span><br></pre></td></tr></table></figure><h4 id="constant-py"><a href="#constant-py" class="headerlink" title="constant.py"></a>constant.py</h4><p>添加数据库配置常量</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.config <span class="keyword">import</span> config</span><br><span class="line"></span><br><span class="line">HOST = config.env.get(<span class="string">&quot;HOST&quot;</span>)</span><br><span class="line">PORT = config.env.get(<span class="string">&quot;PORT&quot;</span>)</span><br><span class="line"></span><br><span class="line">MYSQL_DIALECT = config.env.get(<span class="string">&quot;MYSQL_DIALECT&quot;</span>)</span><br><span class="line">MYSQL_HOST = config.env.get(<span class="string">&quot;MYSQL_HOST&quot;</span>)</span><br><span class="line">MYSQL_PORT = config.env.get(<span class="string">&quot;MYSQL_PORT&quot;</span>)</span><br><span class="line">MYSQL_USER = config.env.get(<span class="string">&quot;MYSQL_USER&quot;</span>)</span><br><span class="line">MYSQL_PASSWORD = config.env.get(<span class="string">&quot;MYSQL_PASSWORD&quot;</span>)</span><br><span class="line">MYSQL_DATABASE = config.env.get(<span class="string">&quot;MYSQL_DATABASE&quot;</span>)</span><br></pre></td></tr></table></figure><h4 id="model-init-py"><a href="#model-init-py" class="headerlink" title="model&#x2F;init.py"></a>model&#x2F;<strong>init</strong>.py</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> create_engine</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> DeclarativeBase, sessionmaker</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.constant <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Base</span>(<span class="title class_ inherited__">DeclarativeBase</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># mysql+mysqldb://&lt;user&gt;:&lt;password&gt;@&lt;host&gt;[:&lt;port&gt;]/&lt;dbname&gt;</span></span><br><span class="line">engine = create_engine(</span><br><span class="line">    <span class="string">f&quot;<span class="subst">&#123;MYSQL_DIALECT&#125;</span>://<span class="subst">&#123;MYSQL_USER&#125;</span>:<span class="subst">&#123;MYSQL_PASSWORD&#125;</span>@<span class="subst">&#123;MYSQL_HOST&#125;</span>:<span class="subst">&#123;MYSQL_PORT&#125;</span>/<span class="subst">&#123;MYSQL_DATABASE&#125;</span>?charset=utf8mb4&quot;</span>,</span><br><span class="line">    echo=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">Base.metadata.create_all(engine)</span><br><span class="line">Session = sessionmaker(bind=engine)</span><br></pre></td></tr></table></figure><h3 id="管理员实体类定义"><a href="#管理员实体类定义" class="headerlink" title="管理员实体类定义"></a>管理员实体类定义</h3><p>在<code>/model</code>下创建一个<code>admin.py</code>文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> pydantic <span class="keyword">import</span> BaseModel</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> Integer, String</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> Mapped, mapped_column</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Base</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Admin</span>(<span class="title class_ inherited__">Base</span>):</span><br><span class="line">    __tablename__ = <span class="string">&quot;admin&quot;</span></span><br><span class="line">    <span class="built_in">id</span>: Mapped[<span class="built_in">int</span>] = mapped_column(Integer, primary_key=<span class="literal">True</span>, nullable=<span class="literal">False</span>)</span><br><span class="line">    username: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    password: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AdminModel</span>(<span class="title class_ inherited__">BaseModel</span>):</span><br><span class="line">    username: <span class="built_in">str</span></span><br><span class="line">    password: <span class="built_in">str</span></span><br></pre></td></tr></table></figure><h3 id="管理员登录的-api-接口"><a href="#管理员登录的-api-接口" class="headerlink" title="管理员登录的 api 接口"></a>管理员登录的 api 接口</h3><p>为了实现每一个 api 都能拿到一个连接数据库的 session，在<code>/model/__init__.py</code>中实现一个 session 的获取方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> create_engine</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> DeclarativeBase, sessionmaker</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.constant <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Base</span>(<span class="title class_ inherited__">DeclarativeBase</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># mysql+mysqldb://&lt;user&gt;:&lt;password&gt;@&lt;host&gt;[:&lt;port&gt;]/&lt;dbname&gt;</span></span><br><span class="line">engine = create_engine(</span><br><span class="line">    <span class="string">f&quot;<span class="subst">&#123;MYSQL_DIALECT&#125;</span>://<span class="subst">&#123;MYSQL_USER&#125;</span>:<span class="subst">&#123;MYSQL_PASSWORD&#125;</span>@<span class="subst">&#123;MYSQL_HOST&#125;</span>:<span class="subst">&#123;MYSQL_PORT&#125;</span>/<span class="subst">&#123;MYSQL_DATABASE&#125;</span>?charset=utf8mb4&quot;</span>,</span><br><span class="line">    echo=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">Base.metadata.create_all(engine)</span><br><span class="line">Session = sessionmaker(bind=engine)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_db_session</span>():</span><br><span class="line">    session = Session()</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">yield</span> session</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        session.close()</span><br></pre></td></tr></table></figure><h4 id="adminApi"><a href="#adminApi" class="headerlink" title="adminApi"></a>adminApi</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> Body, Depends</span><br><span class="line"><span class="keyword">from</span> fastapi.encoders <span class="keyword">import</span> jsonable_encoder</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> Result, ResultModel</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session, get_db_session</span><br><span class="line"><span class="keyword">from</span> model.admin <span class="keyword">import</span> AdminModel</span><br><span class="line"><span class="keyword">from</span> service.adminService <span class="keyword">import</span> AdminService</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.post(<span class="params"><span class="string">&quot;/login&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">login</span>(<span class="params">admin: AdminModel = Body(<span class="params">...</span>), db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    dbadmin = AdminService.login(admin, db_session)</span><br><span class="line">    <span class="keyword">return</span> Result.success(jsonable_encoder(dbadmin))</span><br></pre></td></tr></table></figure><h4 id="adminService"><a href="#adminService" class="headerlink" title="adminService"></a>adminService</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> select</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> UserNotFoundException, PasswordNotMatchException</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session</span><br><span class="line"><span class="keyword">from</span> model.admin <span class="keyword">import</span> Admin, AdminModel</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AdminService</span>:</span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">login</span>(<span class="params">admin: AdminModel, db_session: Session</span>) -&gt; Admin:</span><br><span class="line">        query = select(Admin).where(Admin.username == admin.username)</span><br><span class="line">        result = db_session.execute(query).scalars().first()</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> result:</span><br><span class="line">            <span class="keyword">raise</span> UserNotFoundException(<span class="string">&quot;用户不存在&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> result.password != admin.password:</span><br><span class="line">            <span class="keyword">raise</span> PasswordNotMatchException(<span class="string">&quot;身份验证未通过&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><h4 id="exception"><a href="#exception" class="headerlink" title="exception"></a>exception</h4><p>创建自定义异常的<code>exception</code>的 package</p><p>然后创建一个<code>customException.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UserNotFoundException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PasswordNotMatchException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br></pre></td></tr></table></figure><h4 id="exceptionHandler"><a href="#exceptionHandler" class="headerlink" title="exceptionHandler"></a>exceptionHandler</h4><p>在<code>/api</code>包下面创建一个<code>exceptionHandler.py</code>用于处理异常</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi.encoders <span class="keyword">import</span> jsonable_encoder</span><br><span class="line"><span class="keyword">from</span> starlette.responses <span class="keyword">import</span> JSONResponse</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> Request</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> Result</span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> UserNotFoundException, PasswordNotMatchException</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">UserNotFoundException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">user_not_fount_exception_handler</span>(<span class="params">request: Request, exc: UserNotFoundException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;404&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">404</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">PasswordNotMatchException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">password_not_fount_exception_handler</span>(<span class="params">request: Request, exc: PasswordNotMatchException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;401&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">401</span>, content=jsonable_encoder(result))</span><br></pre></td></tr></table></figure><h4 id="api-init-py"><a href="#api-init-py" class="headerlink" title="&#x2F;api&#x2F;init.py"></a>&#x2F;api&#x2F;<strong>init</strong>.py</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> FastAPI</span><br><span class="line"></span><br><span class="line">app = FastAPI()</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> adminApi, exceptionHandler</span><br></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><h3 id="postman-测试后端接口"><a href="#postman-测试后端接口" class="headerlink" title="postman 测试后端接口"></a>postman 测试后端接口</h3><p>正确登录：</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710090169264-78775744-eb08-4d59-8716-ea72837aa214.png"></p><p>密码错误：</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710090242243-c94a897d-57d8-4a1f-9f75-e5021c671e83.png"></p><p>账号错误：</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710090279026-33ef7189-2ec6-4812-a64d-0e9c4dc036f6.png"></p><h3 id="前后端测试"><a href="#前后端测试" class="headerlink" title="前后端测试"></a>前后端测试</h3><h4 id="跨域问题"><a href="#跨域问题" class="headerlink" title="跨域问题"></a>跨域问题</h4><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710093723455-2a5ba47e-cc59-4337-9bc1-64af595d7676.png"></p><p>发生了跨域 CORS 的问题</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> FastAPI</span><br><span class="line"><span class="keyword">from</span> starlette.middleware.cors <span class="keyword">import</span> CORSMiddleware</span><br><span class="line"></span><br><span class="line">app = FastAPI()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 跨域问题</span></span><br><span class="line">origins = [<span class="string">&quot;http://localhost:5173&quot;</span>, <span class="string">&quot;http://127.0.0.1:5173&quot;</span>]  <span class="comment"># 替换为你的前端应用的实际地址</span></span><br><span class="line"></span><br><span class="line">app.add_middleware(</span><br><span class="line">    CORSMiddleware,</span><br><span class="line">    allow_origins=origins,  <span class="comment"># 允许跨域访问的来源域名列表</span></span><br><span class="line">    allow_credentials=<span class="literal">True</span>,  <span class="comment"># 是否允许携带cookie</span></span><br><span class="line">    allow_methods=[<span class="string">&quot;*&quot;</span>],  <span class="comment"># 允许的方法，默认包含常见的GET、POST等，&quot;*&quot;表示所有方法</span></span><br><span class="line">    allow_headers=[<span class="string">&quot;*&quot;</span>],  <span class="comment"># 允许的请求头，默认包含常见的Content-Type等，&quot;*&quot;表示所有请求头</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> adminApi, exceptionHandler</span><br></pre></td></tr></table></figure><p>正确账号密码：</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710094075420-b59a37ac-a447-49b0-a88a-712414a6e96c.png"></p><p>错误账号：</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710094119593-32a92c73-05cc-4ca8-a4e4-91c040c6a693.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710094126043-4277dec3-a187-4520-915b-89fbc42be75b.png"></p><p>错误密码：</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710094143695-dd039dad-c6a9-4693-878b-a7749cb52dd3.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710094152200-0402f3c8-7a81-49bc-9f4a-fb667b4e0ea3.png"></p><h2 id="数据库密码"><a href="#数据库密码" class="headerlink" title="数据库密码"></a>数据库密码</h2><p>为了安全，数据库中的 password 不应该以明文显示，需要做个加密</p><p>这里需要使用到一个库 bcrypt</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">fastapi[all]</span><br><span class="line">mysqlclient==2.1.1</span><br><span class="line">SQLAlchemy==2.0.23</span><br><span class="line">bcrypt==4.1.1</span><br></pre></td></tr></table></figure><h3 id="密码加密"><a href="#密码加密" class="headerlink" title="密码加密"></a>密码加密</h3><p>通过<code>hashed_pw = bcrypt.hashpw(password.encode(), bcrypt.gensalt())</code> 依据生成的盐值，生成 hash 后的密码值，结果是字节码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">(venv) ➜  studentbackend python3</span><br><span class="line">Python 3.10.11 (v3.10.11:7d4cc5aa85, Apr  4 2023, 19:05:19) [Clang 13.0.0 (clang-1300.0.29.30)] on darwin</span><br><span class="line">Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.</span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; import bcrypt</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; password = <span class="string">&quot;admin&quot;</span></span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; hashed_pw = bcrypt.hashpw(password.encode(), bcrypt.gensalt())</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; <span class="built_in">print</span>(hashed_pw)</span></span><br><span class="line">b&#x27;$2b$12$ttbSmj8jD5rW/c0XdkBZyOZI5F7GP.kMuBMWgE2.yyzreJCWdwAum&#x27;</span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; <span class="built_in">print</span>(hashed_pw.decode(<span class="string">&#x27;utf-8&#x27;</span>))</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">2b$12<span class="variable">$ttbSmj8jD5rW</span>/c0XdkBZyOZI5F7GP.kMuBMWgE2.yyzreJCWdwAum</span></span><br></pre></td></tr></table></figure><p>将密码对应的加密密码 <code>$2b$12$ttbSmj8jD5rW/c0XdkBZyOZI5F7GP.kMuBMWgE2.yyzreJCWdwAum</code> 替换到数据库中的 admin 账号中（这一步操作其实应该是，在注册的时候将这个密码值写入数据库 de~）</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710184351868-37a0e9d3-2535-43d8-9b1c-3a43e9b36be7.png"></p><h3 id="密码验证"><a href="#密码验证" class="headerlink" title="密码验证"></a>密码验证</h3><p>通过<code>bcrypt.check(check_pw.encode(), hashed_pw)</code>检验密码是否匹配</p><p>给 Admin 实体类定义一个密码检查方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">import</span> bcrypt</span><br><span class="line"><span class="keyword">from</span> pydantic <span class="keyword">import</span> BaseModel</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> Integer, String</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> Mapped, mapped_column</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Base</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Admin</span>(<span class="title class_ inherited__">Base</span>):</span><br><span class="line">    __tablename__ = <span class="string">&quot;admin&quot;</span></span><br><span class="line">    <span class="built_in">id</span>: Mapped[<span class="built_in">int</span>] = mapped_column(Integer, primary_key=<span class="literal">True</span>, nullable=<span class="literal">False</span>)</span><br><span class="line">    username: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    password: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">password_check</span>(<span class="params">self, password</span>):</span><br><span class="line">        <span class="keyword">return</span> bcrypt.checkpw(password.encode(), <span class="variable language_">self</span>.password.encode())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AdminModel</span>(<span class="title class_ inherited__">BaseModel</span>):</span><br><span class="line">    username: <span class="built_in">str</span></span><br><span class="line">    password: <span class="built_in">str</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> select</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> UserNotFoundException, PasswordNotMatchException</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session</span><br><span class="line"><span class="keyword">from</span> model.admin <span class="keyword">import</span> Admin, AdminModel</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AdminService</span>:</span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">login</span>(<span class="params">admin: AdminModel, db_session: Session</span>) -&gt; Admin:</span><br><span class="line">        query = select(Admin).where(Admin.username == admin.username)</span><br><span class="line">        result = db_session.execute(query).scalars().first()</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> result:</span><br><span class="line">            <span class="keyword">raise</span> UserNotFoundException(<span class="string">&quot;用户不存在&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> result.password_check(admin.password) <span class="keyword">is</span> <span class="literal">False</span>:</span><br><span class="line">            <span class="keyword">raise</span> PasswordNotMatchException(<span class="string">&quot;身份验证未通过&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><h3 id="前后端测试-1"><a href="#前后端测试-1" class="headerlink" title="前后端测试"></a>前后端测试</h3><p>密码错误：</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710185314797-f8b42918-353f-44ff-86e3-16a92834f391.png"></p><p>密码正确：</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710185361178-79c22824-8f0c-4bd0-8aa8-12e477bfd4fb.png"></p><hr><blockquote><p>更新: 2024-05-03 22:08:05<br>原文: <a href="https://www.yuque.com/zacharyblock/iacda/qhg30r2hbk5wb58m">https://www.yuque.com/zacharyblock/iacda/qhg30r2hbk5wb58m</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;管理员登录&quot;&gt;&lt;a href=&quot;#管理员登录&quot; class=&quot;headerlink&quot; title=&quot;管理员登录&quot;&gt;&lt;/a&gt;管理员登录&lt;/h1&gt;&lt;h2 id=&quot;前端&quot;&gt;&lt;a href=&quot;#前端&quot; class=&quot;headerlink&quot; title=&quot;前端&quot;&gt;&lt;/a&gt;前</summary>
      
    
    
    
    <category term="FastAPI入门" scheme="https://blockzachary.github.io/categories/FastAPI%E5%85%A5%E9%97%A8/"/>
    
    
    <category term="Python" scheme="https://blockzachary.github.io/tags/Python/"/>
    
    <category term="Vue3" scheme="https://blockzachary.github.io/tags/Vue3/"/>
    
    <category term="FastAPI" scheme="https://blockzachary.github.io/tags/FastAPI/"/>
    
    <category term="实战" scheme="https://blockzachary.github.io/tags/%E5%AE%9E%E6%88%98/"/>
    
  </entry>
  
  <entry>
    <title>环境及项目初始化</title>
    <link href="https://blockzachary.github.io/2024/05/03/FastAPI%E5%85%A5%E9%97%A8/%E7%8E%AF%E5%A2%83%E5%8F%8A%E9%A1%B9%E7%9B%AE%E5%88%9D%E5%A7%8B%E5%8C%96/"/>
    <id>https://blockzachary.github.io/2024/05/03/FastAPI%E5%85%A5%E9%97%A8/%E7%8E%AF%E5%A2%83%E5%8F%8A%E9%A1%B9%E7%9B%AE%E5%88%9D%E5%A7%8B%E5%8C%96/</id>
    <published>2024-05-03T21:00:30.000Z</published>
    <updated>2024-05-03T21:00:30.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="环境及项目初始化"><a href="#环境及项目初始化" class="headerlink" title="环境及项目初始化"></a>环境及项目初始化</h1><h1 id="环境介绍"><a href="#环境介绍" class="headerlink" title="环境介绍"></a>环境介绍</h1><p>开发环境版本：</p><p><font style="color:rgb(63, 74, 84);">Python3.10.11、Node.js16.9.0、Vue3、MySQL5.7.31</font></p><h1 id="官方文档"><a href="#官方文档" class="headerlink" title="官方文档"></a><font style="color:rgb(63, 74, 84);">官方文档</font></h1><p>Node.js：<a href="https://nodejs.org/en">https://nodejs.org/en</a></p><p>Vue：<a href="https://cn.vuejs.org/">https://cn.vuejs.org/</a></p><p>Vite：<a href="https://cn.vitejs.dev/guide/">https://cn.vitejs.dev/guide/</a></p><p>Element-Plus：<a href="https://element-plus.org/zh-CN/">https://element-plus.org/zh-CN/</a></p><p>FastAPI：<a href="https://fastapi.tiangolo.com/zh/">https://fastapi.tiangolo.com/zh/</a></p><p>SQLAlchemy：<a href="https://docs.sqlalchemy.org/en/20/dialects/mysql.html#module-sqlalchemy.dialects.mysql.mysqldb">https://docs.sqlalchemy.org/en/20/dialects/mysql.html#module-sqlalchemy.dialects.mysql.mysqldb</a></p><p>图片素材库：<a href="https://iconscout.com/">https://iconscout.com/</a></p><h1 id="前端-Vue"><a href="#前端-Vue" class="headerlink" title="前端 Vue"></a>前端 Vue</h1><h3 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h3><p>进入官网 <a href="https://nodejs.org/download/release/v16.19.0/">https://nodejs.org/download/release/v16.19.0/</a>安装好 node.js</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710063799995-b795f9b2-b844-4281-aa06-797eaeb7540e.png"></p><h3 id="安装-vue-cli"><a href="#安装-vue-cli" class="headerlink" title="安装 vue-cli"></a>安装 vue-cli</h3><p>然后使用<code>npm install -g @vue/cli</code>命令安装 vue-cli</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710064251821-6359ed25-0048-4327-9665-92d9427cc4c4.png"></p><h3 id="创建-vue-项目"><a href="#创建-vue-项目" class="headerlink" title="创建 vue 项目"></a>创建 vue 项目</h3><p>使用 vite 进行构建</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710064798538-2fcb3e12-aba3-4b83-8f7a-22bbcd4bb066.png"></p><p>通过<code>npm create vite@latest studentfontend -- --template vue</code>构建前端项目</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ cd Documents/PythonCode</span><br><span class="line">➜  PythonCode mkdir studentProject</span><br><span class="line">➜  PythonCode cd studentProject</span><br><span class="line">➜  studentProject npm create vite@latest studentfontend -- --template vue</span><br><span class="line"></span><br><span class="line">Scaffolding project in /Users/zachary/Documents/PythonCode/studentProject/studentfontend...</span><br><span class="line"></span><br><span class="line">Done. Now run:</span><br><span class="line"></span><br><span class="line">  cd studentfontend</span><br><span class="line">  npm install</span><br><span class="line">  npm run dev</span><br><span class="line"></span><br><span class="line">➜  studentProject cd studentfontend</span><br><span class="line">➜  studentfontend ls</span><br><span class="line">README.md      package.json   src</span><br><span class="line">index.html     public         vite.config.js</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710065004239-161031a6-9bc3-4c47-8591-6a6cf76114a5.png"></p><h3 id="npm-源"><a href="#npm-源" class="headerlink" title="npm 源"></a>npm 源</h3><p>如果 npm 命令运行的时候很卡的话，尝试换源</p><p><code>npm config set registry [https://registry.npmmirror.com](https://registry.npmmirror.com)</code></p><h3 id="打开-vue-项目"><a href="#打开-vue-项目" class="headerlink" title="打开 vue 项目"></a>打开 vue 项目</h3><p>使用 WebStorm 打开创建好的前端项目</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710065436602-f66e538b-cdcc-4f8a-a0b0-1fde6cc990e9.png"></p><p>先什么都不做，尝试把项目运行起来</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">➜  studentfontend npm install</span><br><span class="line">npm WARN EBADENGINE Unsupported engine &#123;</span><br><span class="line">npm WARN EBADENGINE   package: &#x27;@vitejs/plugin-vue@5.0.4&#x27;,</span><br><span class="line">npm WARN EBADENGINE   required: &#123; node: &#x27;^18.0.0 || &gt;=20.0.0&#x27; &#125;,</span><br><span class="line">npm WARN EBADENGINE   current: &#123; node: &#x27;v16.19.0&#x27;, npm: &#x27;8.19.3&#x27; &#125;</span><br><span class="line">npm WARN EBADENGINE &#125;</span><br><span class="line">npm WARN EBADENGINE Unsupported engine &#123;</span><br><span class="line">npm WARN EBADENGINE   package: &#x27;rollup@4.12.1&#x27;,</span><br><span class="line">npm WARN EBADENGINE   required: &#123; node: &#x27;&gt;=18.0.0&#x27;, npm: &#x27;&gt;=8.0.0&#x27; &#125;,</span><br><span class="line">npm WARN EBADENGINE   current: &#123; node: &#x27;v16.19.0&#x27;, npm: &#x27;8.19.3&#x27; &#125;</span><br><span class="line">npm WARN EBADENGINE &#125;</span><br><span class="line">npm WARN EBADENGINE Unsupported engine &#123;</span><br><span class="line">npm WARN EBADENGINE   package: &#x27;vite@5.1.5&#x27;,</span><br><span class="line">npm WARN EBADENGINE   required: &#123; node: &#x27;^18.0.0 || &gt;=20.0.0&#x27; &#125;,</span><br><span class="line">npm WARN EBADENGINE   current: &#123; node: &#x27;v16.19.0&#x27;, npm: &#x27;8.19.3&#x27; &#125;</span><br><span class="line">npm WARN EBADENGINE &#125;</span><br><span class="line"></span><br><span class="line">up to date in 649ms</span><br><span class="line">➜  studentfontend npm run dev</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">studentfontend@0.0.0 dev</span></span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">vite</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  VITE v5.1.5  ready in 814 ms</span><br><span class="line"></span><br><span class="line">  ➜  Local:   http://127.0.0.1:5173/</span><br><span class="line">  ➜  Network: use --host to expose</span><br><span class="line">  ➜  press h + enter to show help</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710065907865-bf45b0ec-1f33-4399-8013-ee1cd9a85c30.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710065926633-560bff63-2de0-4f09-bcd8-921fdad2ad7a.png"></p><h3 id="项目整改"><a href="#项目整改" class="headerlink" title="项目整改"></a>项目整改</h3><p>现在我们把这个项目做好看些，为了学生信息管理系统做准备的，</p><p>需要把路由写好，同时修改主题色，还有 request http 的请求封装，选择一个自己喜欢的页面标题及 icon</p><h4 id="index-html"><a href="#index-html" class="headerlink" title="index.html"></a>index.html</h4><p>修改项目下的 index.html 文件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/favicon.ico&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>学生信息管理系统<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;module&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/src/main.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="css-imgs"><a href="#css-imgs" class="headerlink" title="css&amp;imgs"></a>css&amp;imgs</h4><p>删除<code>/assets</code>下的<code>vue.svg</code></p><p>在<code>/src/assets</code>路径下创建一个<code>css</code>和<code>imgs</code>目录</p><p>在创建好的<code>/css</code>目录下分别创建<code>global.css</code>和<code>index.scss</code></p><p>全局 css 样式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#252424</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.card</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主题色配置文件</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@forward</span> <span class="string">&quot;element-plus/theme-chalk/src/common/var.scss&quot;</span> with (</span><br><span class="line">  $<span class="attribute">colors</span>: (</span><br><span class="line">    <span class="string">&quot;primary&quot;</span>: (</span><br><span class="line">      <span class="string">&quot;base&quot;</span>: #<span class="number">0</span>a7fce</span><br><span class="line">    ),</span><br><span class="line">    <span class="string">&quot;success&quot;</span>: (</span><br><span class="line">      <span class="string">&quot;base&quot;</span>: #<span class="number">08</span>b41f</span><br><span class="line">    ),</span><br><span class="line">    <span class="string">&quot;warning&quot;</span>: (</span><br><span class="line">      <span class="string">&quot;base&quot;</span>: #e8af56</span><br><span class="line">    ),</span><br><span class="line">    <span class="string">&quot;danger&quot;</span>: (</span><br><span class="line">      <span class="string">&quot;base&quot;</span>: #ef3030</span><br><span class="line">    ),</span><br><span class="line">    <span class="string">&quot;info&quot;</span>: (</span><br><span class="line">      <span class="string">&quot;base&quot;</span>: #<span class="number">5</span>d66ea</span><br><span class="line">    )</span><br><span class="line">  )</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h4 id="路由设置"><a href="#路由设置" class="headerlink" title="路由设置"></a>路由设置</h4><p>在<code>/src</code>路径下创建一个<code>router</code>目录，在其中创建一个<code>index.js</code>文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHistory &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">history</span>: <span class="title function_">createWebHistory</span>(<span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">env</span>.<span class="property">BASE_URL</span>),</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;Manager&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/Manager.vue&quot;</span>),</span><br><span class="line">      <span class="attr">redirect</span>: <span class="string">&quot;/home&quot;</span>,</span><br><span class="line">      <span class="attr">children</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;home&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Home&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Home.vue&quot;</span>),</span><br><span class="line">        &#125;,</span><br><span class="line">      ],</span><br><span class="line">    &#125;,</span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router;</span><br></pre></td></tr></table></figure><h4 id="request-请求"><a href="#request-请求" class="headerlink" title="request 请求"></a>request 请求</h4><p><code>/src</code>路径下创建一个<code>utils</code>目录，在其中创建一个<code>request.js</code>文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ElMessage</span> &#125; <span class="keyword">from</span> <span class="string">&quot;element-plus&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&quot;../router&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&quot;axios&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> request = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">  <span class="attr">baseURL</span>: <span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">env</span>.<span class="property">VITE_BASE_URL</span>,</span><br><span class="line">  <span class="attr">timeout</span>: <span class="number">30000</span>, <span class="comment">// 后台接口超时时间设置</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// request 拦截器</span></span><br><span class="line"><span class="comment">// 可以自请求发送前对请求做一些处理</span></span><br><span class="line">request.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(</span><br><span class="line">  <span class="function">(<span class="params">config</span>) =&gt;</span> &#123;</span><br><span class="line">    config.<span class="property">headers</span>[<span class="string">&quot;Content-Type&quot;</span>] = <span class="string">&quot;application/json;charset=utf-8&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> config;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">// response 拦截器</span></span><br><span class="line"><span class="comment">// 可以在接口响应后统一处理结果</span></span><br><span class="line">request.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(</span><br><span class="line">  <span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> res = response.<span class="property">data</span>;</span><br><span class="line">    <span class="comment">// 如果是返回的文件</span></span><br><span class="line">    <span class="keyword">if</span> (response.<span class="property">config</span>.<span class="property">responseType</span> === <span class="string">&quot;blob&quot;</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 兼容服务端返回的字符串数据</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> res === <span class="string">&quot;string&quot;</span>) &#123;</span><br><span class="line">      res = res ? <span class="title class_">JSON</span>.<span class="title function_">parse</span>(res) : res;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 当权限验证不通过的时候给出提示</span></span><br><span class="line">    <span class="keyword">if</span> (res.<span class="property">code</span> === <span class="string">&quot;401&quot;</span>) &#123;</span><br><span class="line">      <span class="title class_">ElMessage</span>.<span class="title function_">error</span>(res.<span class="property">msg</span>);</span><br><span class="line">      router.<span class="title function_">push</span>(<span class="string">&quot;/login&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;err&quot;</span> + error);</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> request;</span><br></pre></td></tr></table></figure><h4 id="views"><a href="#views" class="headerlink" title="views"></a>views</h4><p><code>/src</code>路径下的<code>/components</code>修改为<code>/views</code>目录，将其中的<code>HelloWorld.vue</code>修改成<code>Manager.vue</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div</span><br><span class="line">      style=&quot;height: 60px; background-color: #eae8e8; display: flex; align-items: center; border-bottom: 1px solid #c4c2c2&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;div style=&quot;flex: 1&quot;&gt;</span><br><span class="line">        &lt;div style=&quot;padding-left: 20px; display: flex; align-items: center&quot;&gt;</span><br><span class="line">          &lt;img src=&quot;@/assets/imgs/logo.png&quot; alt=&quot;&quot; style=&quot;width: 40px&quot; /&gt;</span><br><span class="line">          &lt;div style=&quot;font-weight: bold; font-size: 24px; margin-left: 5px&quot;&gt;</span><br><span class="line">            学生信息管理系统</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        style=&quot;width: fit-content; padding-right: 10px; display: flex; align-items: center;&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;img</span><br><span class="line">          src=&quot;https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png&quot;</span><br><span class="line">          alt=&quot;&quot;</span><br><span class="line">          style=&quot;width: 40px; height: 40px&quot;</span><br><span class="line">        /&gt;</span><br><span class="line">        &lt;span style=&quot;margin-left: 5px&quot;&gt;管理员&lt;/span&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div style=&quot;display: flex&quot;&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        style=&quot;width: 200px; border-right: 1px solid #f3eeee; min-height: calc(100vh - 60px)&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;el-menu</span><br><span class="line">          router</span><br><span class="line">          style=&quot;border: none&quot;</span><br><span class="line">          :default-active=&quot;$route.path&quot;</span><br><span class="line">          :default-openeds=&quot;[&#x27;/home&#x27;]&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          &lt;el-menu-item index=&quot;/home&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;&lt;HomeFilled /&gt;&lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;系统首页&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line">          &lt;el-menu-item index=&quot;/person&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;&lt;User /&gt;&lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;个人资料&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line">          &lt;el-menu-item index=&quot;login&quot; @click=&quot;logout&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;&lt;SwitchButton /&gt;&lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;退出系统&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line">        &lt;/el-menu&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">      &lt;div style=&quot;flex: 1; width: 0; background-color: #eaeaee; padding: 10px&quot;&gt;</span><br><span class="line">        &lt;router-view /&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; useRoute &#125; from &quot;vue-router&quot;;</span><br><span class="line">const $route = useRoute();</span><br><span class="line">console.log($route.path);</span><br><span class="line"></span><br><span class="line">const logout = () =&gt; &#123;</span><br><span class="line">  localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.el-menu-item.is-active &#123;</span><br><span class="line">  background-color: #c3d7d3 !important;</span><br><span class="line">&#125;</span><br><span class="line">.el-menu-item:hover &#123;</span><br><span class="line">  color: #0c98d5;</span><br><span class="line">&#125;</span><br><span class="line">:deep(th) &#123;</span><br><span class="line">  color: #333;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>接着在<code>/src/views</code>路径下创建一个<code>manager</code>目录，在其中创建一个<code>Home.vue</code>文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;welcome-container&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;custom-card bg-white shadow rounded p-4 mb-5&quot;&gt;</span><br><span class="line">      &lt;h2 class=&quot;text-center text-primary&quot;&gt;欢迎来到本系统&lt;/h2&gt;</span><br><span class="line">      &lt;p class=&quot;text-center mt-3&quot;&gt;</span><br><span class="line">        您好 &lt;span :style=&quot;&#123; color: &#x27;#116ca9&#x27; &#125;&quot;&gt;&#123;&#123; user.username &#125;&#125;&lt;/span</span><br><span class="line">        &gt;，祝您使用愉快！</span><br><span class="line">      &lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import request from &quot;@/utils/request&quot;;</span><br><span class="line"></span><br><span class="line">const user = JSON.parse(localStorage.getItem(&quot;student-user&quot;) || &quot;&#123;&#125;&quot;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.welcome-container &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  justify-content: center;</span><br><span class="line">  align-items: center;</span><br><span class="line">  min-height: calc(100vh - 100px); /* 根据实际项目需要调整高度 */</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.custom-card &#123;</span><br><span class="line">  max-width: 400px;</span><br><span class="line">  border: none;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h4 id="App-vue"><a href="#App-vue" class="headerlink" title="App.vue"></a>App.vue</h4><p>修改项目中的<code>/src/App.vue</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;RouterView /&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><h4 id="main-js"><a href="#main-js" class="headerlink" title="main.js"></a>main.js</h4><p>修改项目中的<code>/src/main.js</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&quot;./App.vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&quot;./router&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ElementPlus</span> <span class="keyword">from</span> <span class="string">&quot;element-plus&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> zhCn <span class="keyword">from</span> <span class="string">&quot;element-plus/dist/locale/zh-cn.mjs&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="title class_">ElementPlusIconsVue</span> <span class="keyword">from</span> <span class="string">&quot;@element-plus/icons-vue&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;@/assets/css/global.css&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">createApp</span>(<span class="title class_">App</span>);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(router);</span><br><span class="line">app.<span class="title function_">use</span>(<span class="title class_">ElementPlus</span>, &#123;</span><br><span class="line">  <span class="attr">locale</span>: zhCn,</span><br><span class="line">&#125;);</span><br><span class="line">app.<span class="title function_">mount</span>(<span class="string">&quot;#app&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> [key, component] <span class="keyword">of</span> <span class="title class_">Object</span>.<span class="title function_">entries</span>(<span class="title class_">ElementPlusIconsVue</span>)) &#123;</span><br><span class="line">  app.<span class="title function_">component</span>(key, component);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="env"><a href="#env" class="headerlink" title=".env"></a>.env</h4><p>在项目路径下创建两个文件<code>.env.development</code>、<code>.env.production</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VITE_BASE_URL=&#x27;http://localhost:9090&#x27;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VITE_BASE_URL=&#x27;http://:9090&#x27;</span><br></pre></td></tr></table></figure><h4 id="json-配置"><a href="#json-配置" class="headerlink" title="json 配置"></a>json 配置</h4><p>修改项目路径下的文件：<code>package.json</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;studentfontend&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;private&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;dev&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vite&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;build&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vite build&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;preview&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vite preview&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;dependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;@element-plus/icons-vue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.1.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;axios&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.6.2&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;element-plus&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.4.2&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;sass&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.69.5&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;unplugin-element-plus&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.8.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;vue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.3.4&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;vue-router&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.2.5&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;devDependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;@vitejs/plugin-vue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.4.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;unplugin-auto-import&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.16.7&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;unplugin-vue-components&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.25.2&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;vite&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.4.11&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="vite-config-js"><a href="#vite-config-js" class="headerlink" title="vite.config.js"></a>vite.config.js</h4><p>修改项目路径下的文件：<code>vite.config.js</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; fileURLToPath, <span class="variable constant_">URL</span> &#125; <span class="keyword">from</span> <span class="string">&quot;node:url&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; defineConfig &#125; <span class="keyword">from</span> <span class="string">&quot;vite&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> vue <span class="keyword">from</span> <span class="string">&quot;@vitejs/plugin-vue&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">AutoImport</span> <span class="keyword">from</span> <span class="string">&quot;unplugin-auto-import/vite&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Components</span> <span class="keyword">from</span> <span class="string">&quot;unplugin-vue-components/vite&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ElementPlusResolver</span> &#125; <span class="keyword">from</span> <span class="string">&quot;unplugin-vue-components/resolvers&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ElementPlus</span> <span class="keyword">from</span> <span class="string">&quot;unplugin-element-plus/vite&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="title function_">vue</span>(),</span><br><span class="line">    <span class="title class_">AutoImport</span>(&#123;</span><br><span class="line">      <span class="attr">resolvers</span>: [<span class="title class_">ElementPlusResolver</span>(&#123; <span class="attr">importStyle</span>: <span class="string">&quot;sass&quot;</span> &#125;)],</span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="title class_">Components</span>(&#123;</span><br><span class="line">      <span class="attr">resolvers</span>: [<span class="title class_">ElementPlusResolver</span>(&#123; <span class="attr">importStyle</span>: <span class="string">&quot;sass&quot;</span> &#125;)],</span><br><span class="line">    &#125;),</span><br><span class="line"></span><br><span class="line">    <span class="title class_">ElementPlus</span>(&#123;</span><br><span class="line">      <span class="attr">useSource</span>: <span class="literal">true</span>,</span><br><span class="line">    &#125;),</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">resolve</span>: &#123;</span><br><span class="line">    <span class="attr">alias</span>: &#123;</span><br><span class="line">      <span class="string">&quot;@&quot;</span>: <span class="title function_">fileURLToPath</span>(<span class="keyword">new</span> <span class="title function_">URL</span>(<span class="string">&quot;./src&quot;</span>, <span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">url</span>)),</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">css</span>: &#123;</span><br><span class="line">    <span class="attr">preprocessorOptions</span>: &#123;</span><br><span class="line">      <span class="attr">scss</span>: &#123;</span><br><span class="line">        <span class="attr">additionalData</span>: <span class="string">`</span></span><br><span class="line"><span class="string">          @use &quot;@/assets/css/index.scss&quot; as *;</span></span><br><span class="line"><span class="string">        `</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="logo"><a href="#logo" class="headerlink" title="logo"></a>logo</h4><p>修改一下 logo 和标题的 icon</p><p>分别放在<code>/public/favicon.ico</code>和<code>/src/assets/imgs/logo.png</code>路径下</p><p>删除<code>/public/vite.svg</code></p><p>可以去这个网站下载<a href="https://iconscout.com/icons">https://iconscout.com/icons</a></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710072944856-06f0b813-035e-47a6-97bb-4cef728d4d96.png"></p><p><a href="https://iconscout.com/free-icon/library-2642818">https://iconscout.com/free-icon/library-2642818</a>，将该图片保存为<code>/src/assets/imgs/logo.png</code></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710072841938-4d2b4f5c-bdcc-44b1-a9e1-547acad96314.png"></p><p>或者<a href="https://iconscout.com/free-icon/student-79">https://iconscout.com/free-icon/student-79</a></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710073182135-0de083f0-80ed-4581-88cd-4206625351d2.png"></p><p><a href="https://iconscout.com/free-icon/student-reading-2909468">https://iconscout.com/free-icon/student-reading-2909468</a>，保存为<code>/public/favicon.ico</code></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710073454459-14d7fe76-e2e9-42ba-bf66-b053b3361d8b.png"></p><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><h4 id="命令运行"><a href="#命令运行" class="headerlink" title="命令运行"></a>命令运行</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">➜  studentfontend npm install</span><br><span class="line"></span><br><span class="line">added 93 packages, removed 1 package, and changed 5 packages in 16s</span><br><span class="line">➜  studentfontend npm run dev</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">studentfontend@0.0.0 dev</span></span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">vite</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  VITE v4.5.2  ready in 1169 ms</span><br><span class="line"></span><br><span class="line">  ➜  Local:   http://127.0.0.1:5173/</span><br><span class="line">  ➜  Network: use --host to expose</span><br><span class="line">  ➜  press h to show help</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710073748592-e493c9f4-d4e2-4bd4-85b4-8453500970bc.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710081458951-c6a801f9-8eae-46bb-b325-6a19fca7e328.png"></p><h4 id="一键运行"><a href="#一键运行" class="headerlink" title="一键运行"></a>一键运行</h4><p>通过配置一个启动项，便捷运行项目</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710073954088-25c7af70-0be2-4565-bb0e-177becbcb268.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710074006858-4dd1ac08-6ee9-4d53-bfc5-453e64efb6ce.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710074069281-da351ef0-e419-4e68-b63b-039792a9a967.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710074171111-8ac13c5e-13ab-4976-921a-4060b9ff8427.png"></p><hr><h1 id="后端-FastAPI"><a href="#后端-FastAPI" class="headerlink" title="后端 FastAPI"></a>后端 FastAPI</h1><h3 id="创建空项目"><a href="#创建空项目" class="headerlink" title="创建空项目"></a>创建空项目</h3><p>新建一个项目进入 FastAPI 的世界</p><p>先创建项目文件夹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">➜  studentProject ll</span><br><span class="line">total 0</span><br><span class="line">drwxr-xr-x@ 16 zachary  staff   512B  3 10 20:25 studentfontend</span><br><span class="line">➜  studentProject mkdir studentbackend</span><br><span class="line">➜  studentProject ll</span><br><span class="line">total 0</span><br><span class="line">drwxr-xr-x@  2 zachary  staff    64B  3 10 20:41 studentbackend</span><br><span class="line">drwxr-xr-x@ 16 zachary  staff   512B  3 10 20:25 studentfontend</span><br></pre></td></tr></table></figure><p>然后使用 Pycharm 创建一个空项目</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710074648550-44040fe2-4fd2-4567-bd0f-7f7144e8b28c.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710074693683-58e58844-db50-485e-8141-f77ba005143b.png"></p><h3 id="依赖包安装"><a href="#依赖包安装" class="headerlink" title="依赖包安装"></a>依赖包安装</h3><p>需要安装一个 FastAPI 的依赖包</p><h4 id="命令安装"><a href="#命令安装" class="headerlink" title="命令安装"></a>命令安装</h4><p><code>pip install fastapi[all]</code></p><h4 id="requirements-txt-安装"><a href="#requirements-txt-安装" class="headerlink" title="requirements.txt 安装"></a>requirements.txt 安装</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fastapi[all]</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710075023414-21bae007-671a-4c15-86ed-a8266626db4f.png"></p><h3 id="实现一个-api"><a href="#实现一个-api" class="headerlink" title="实现一个 api"></a>实现一个 api</h3><h4 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h4><p>项目目录下创建一个<code>main.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> FastAPI</span><br><span class="line"></span><br><span class="line">app = FastAPI()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.get(<span class="params"><span class="string">&quot;/&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">hello</span>():</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;Hello World&quot;</span>&#125;</span><br></pre></td></tr></table></figure><h4 id="运行-1"><a href="#运行-1" class="headerlink" title="运行"></a>运行</h4><p>需要使用 fastapi 提供的一个<code>uvicorn</code>ASGI 网关服务器来启动 api 服务</p><h5 id="命令运行-1"><a href="#命令运行-1" class="headerlink" title="命令运行"></a>命令运行</h5><p><code>uvicorn main:app --reload</code></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710075474004-85328fc1-6c65-419b-a642-556a371c6d4e.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710075491989-b1ebc0c3-4d85-4e46-acca-76e439fb32f7.png"></p><h5 id="一键运行-1"><a href="#一键运行-1" class="headerlink" title="一键运行"></a>一键运行</h5><ul><li>配置 main 函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">import</span> uvicorn</span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> FastAPI</span><br><span class="line"></span><br><span class="line">app = FastAPI()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.get(<span class="params"><span class="string">&quot;/&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">hello</span>():</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;Hello World&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    uvicorn.run(<span class="string">&quot;main:app&quot;</span>, reload=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710075648021-89cf5781-dc93-4ff2-ae28-3569b7b92cd4.png"></p><ul><li>启动配置项</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710075761116-bff52145-5d69-49fc-b6e4-130f05f659a4.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710075846696-632b2590-c791-48cd-a5f6-1b8ff86cf9df.png"></p><p>以上两种方式均可以实现，具体看个人习惯</p><h3 id="项目整改-1"><a href="#项目整改-1" class="headerlink" title="项目整改"></a>项目整改</h3><h4 id="env-1"><a href="#env-1" class="headerlink" title=".env"></a>.env</h4><p>这个文件用于存放环境变量，包括项目的运行 ip、端口号等，后面的数据库环境变量也在这里存放</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HOST = &quot;localhost&quot;</span><br><span class="line">PORT = &quot;9090&quot;</span><br></pre></td></tr></table></figure><h4 id="common"><a href="#common" class="headerlink" title="common"></a>common</h4><p>在项目路径下创建一个<code>/common</code>的 package，用于实现公共类或者公共方法</p><h5 id="环境变量配置文件"><a href="#环境变量配置文件" class="headerlink" title="环境变量配置文件"></a>环境变量配置文件</h5><p>在<code>/common</code>包下创建一个<code>config.py</code>文件，实现对环境变量的获取</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> pathlib <span class="keyword">import</span> Path</span><br><span class="line"><span class="keyword">from</span> dotenv <span class="keyword">import</span> load_dotenv</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Config</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        dotenv_path = Path(__file__).parent.parent / <span class="string">&quot;.env&quot;</span></span><br><span class="line">        load_dotenv(dotenv_path=dotenv_path)</span><br><span class="line">        <span class="variable language_">self</span>._env = <span class="built_in">dict</span>(os.environ)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">env</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>._env</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">config = Config()</span><br></pre></td></tr></table></figure><p>在<code>/common</code>包下创建一个<code>constant.py</code>文件，用于配置常量</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.config <span class="keyword">import</span> config</span><br><span class="line"></span><br><span class="line">HOST = config.env.get(<span class="string">&quot;HOST&quot;</span>)</span><br><span class="line">PORT = config.env.get(<span class="string">&quot;PORT&quot;</span>)</span><br></pre></td></tr></table></figure><h5 id="返回类-Result"><a href="#返回类-Result" class="headerlink" title="返回类 Result"></a>返回类 Result</h5><p>实现一下 api 的通用返回类，在<code>/common</code>包下创建一个<code>result.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> pydantic <span class="keyword">import</span> BaseModel</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ResultBase</span>:</span><br><span class="line">    code: <span class="built_in">str</span></span><br><span class="line">    msg: <span class="built_in">str</span></span><br><span class="line">    data: <span class="built_in">dict</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ResultModel</span>(BaseModel, ResultBase):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Result</span>(<span class="title class_ inherited__">ResultBase</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, code, msg, data</span>):</span><br><span class="line">        <span class="variable language_">self</span>.code = code</span><br><span class="line">        <span class="variable language_">self</span>.msg = msg</span><br><span class="line">        <span class="variable language_">self</span>.data = data</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">success</span>(<span class="params">cls, data: <span class="built_in">object</span> = <span class="literal">None</span>, code: <span class="built_in">str</span> = <span class="string">&quot;200&quot;</span>, msg: <span class="built_in">str</span> = <span class="string">&quot;success&quot;</span></span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> data:</span><br><span class="line">            data = &#123;&#125;</span><br><span class="line">        <span class="keyword">return</span> cls(code, msg, data)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">error</span>(<span class="params">cls, data: <span class="built_in">object</span> = <span class="literal">None</span>, code: <span class="built_in">str</span> = <span class="string">&quot;500&quot;</span>, msg: <span class="built_in">str</span> = <span class="string">&quot;error&quot;</span></span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> data:</span><br><span class="line">            data = &#123;&#125;</span><br><span class="line">        <span class="keyword">return</span> cls(code, msg, data)</span><br></pre></td></tr></table></figure><h4 id="exception"><a href="#exception" class="headerlink" title="exception"></a>exception</h4><p>创建一个<code>/exception</code>的 package 用于自定义异常</p><h4 id="api"><a href="#api" class="headerlink" title="api"></a>api</h4><p>创建一个<code>/api</code>的 package，用于创建后端的 API，实际就是 Controller 层</p><h5 id="init-py"><a href="#init-py" class="headerlink" title="init.py"></a><strong>init</strong>.py</h5><p>用于创建 FastAPI 应用初始化</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> FastAPI</span><br><span class="line"></span><br><span class="line">app = FastAPI()</span><br></pre></td></tr></table></figure><h5 id="adminApi-py"><a href="#adminApi-py" class="headerlink" title="adminApi.py"></a>adminApi.py</h5><p>创建一个 hello fastapi 接口测试一下项目</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> Result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.get(<span class="params"><span class="string">&quot;/&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">hello</span>():</span><br><span class="line">    <span class="keyword">return</span> Result.success()</span><br></pre></td></tr></table></figure><p>然后新增了一个 api 文件之后需要给 api 的<strong>init</strong>.py 说明一下新增了一个 api 文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> FastAPI</span><br><span class="line"></span><br><span class="line">app = FastAPI()</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> adminApi</span><br></pre></td></tr></table></figure><h4 id="service"><a href="#service" class="headerlink" title="service"></a>service</h4><p>创建一个<code>/service</code>的 package 用于实现 Service 层的业务代码</p><h4 id="model"><a href="#model" class="headerlink" title="model"></a>model</h4><p>创建一个<code>/model</code>的 package 用于实现数据库的映射类</p><h4 id="main"><a href="#main" class="headerlink" title="main"></a>main</h4><p>用于启动 FastAPI 的主入口程序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">import</span> uvicorn</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.constant <span class="keyword">import</span> HOST, PORT</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    uvicorn.run(<span class="string">&quot;main:app&quot;</span>, host=HOST, port=<span class="built_in">int</span>(PORT), reload=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><h3 id="运行-2"><a href="#运行-2" class="headerlink" title="运行"></a>运行</h3><p>直接运行 main.py 文件即可</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710079493940-afe468b5-57b5-4875-b3c0-03ff2cf75b03.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710085301150-7c6b0c7b-a89a-4bc5-b314-c090850cfcac.png"></p><p>出现这个就是访问成功啦</p><p>至此，我们的前端后端项目就都初始化好了</p><hr><blockquote><p>更新: 2024-05-03 22:13:04<br>原文: <a href="https://www.yuque.com/zacharyblock/iacda/sengqtgphw3hc0hv">https://www.yuque.com/zacharyblock/iacda/sengqtgphw3hc0hv</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;环境及项目初始化&quot;&gt;&lt;a href=&quot;#环境及项目初始化&quot; class=&quot;headerlink&quot; title=&quot;环境及项目初始化&quot;&gt;&lt;/a&gt;环境及项目初始化&lt;/h1&gt;&lt;h1 id=&quot;环境介绍&quot;&gt;&lt;a href=&quot;#环境介绍&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    <category term="FastAPI入门" scheme="https://blockzachary.github.io/categories/FastAPI%E5%85%A5%E9%97%A8/"/>
    
    
    <category term="Python" scheme="https://blockzachary.github.io/tags/Python/"/>
    
    <category term="Vue3" scheme="https://blockzachary.github.io/tags/Vue3/"/>
    
    <category term="FastAPI" scheme="https://blockzachary.github.io/tags/FastAPI/"/>
    
    <category term="实战" scheme="https://blockzachary.github.io/tags/%E5%AE%9E%E6%88%98/"/>
    
  </entry>
  
  <entry>
    <title>项目介绍</title>
    <link href="https://blockzachary.github.io/2024/05/03/FastAPI%E5%85%A5%E9%97%A8/%E9%A1%B9%E7%9B%AE%E4%BB%8B%E7%BB%8D/"/>
    <id>https://blockzachary.github.io/2024/05/03/FastAPI%E5%85%A5%E9%97%A8/%E9%A1%B9%E7%9B%AE%E4%BB%8B%E7%BB%8D/</id>
    <published>2024-05-03T20:30:00.000Z</published>
    <updated>2024-05-03T20:30:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="项目介绍"><a href="#项目介绍" class="headerlink" title="项目介绍"></a>项目介绍</h1><h1 id="学生信息管理系统——前后端分离"><a href="#学生信息管理系统——前后端分离" class="headerlink" title="学生信息管理系统——前后端分离"></a>学生信息管理系统——前后端分离</h1><h1 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h1><p>后端：FastAPI + SQLAlchemy</p><p>前端：Vue3 + Element-plus</p><p>数据库：MySQL</p><h1 id="所需工具"><a href="#所需工具" class="headerlink" title="所需工具"></a>所需工具</h1><p>Pycharm、WebStorm、Postman</p><h1 id="项目功能"><a href="#项目功能" class="headerlink" title="项目功能"></a>项目功能</h1><h2 id="管理员"><a href="#管理员" class="headerlink" title="管理员"></a>管理员</h2><ul><li>登录</li><li>学生管理</li><li>课程管理</li><li>选课管理</li><li>成绩管理</li></ul><h2 id="学生"><a href="#学生" class="headerlink" title="学生"></a>学生</h2><ul><li>登录、注册</li><li>查看、修改个人信息</li><li>查看课程、选课</li><li>查看成绩</li><li>查看、修改评价</li></ul><h1 id="链接-🔗"><a href="#链接-🔗" class="headerlink" title="链接 🔗"></a>链接 🔗</h1><ul><li>BiliBili：<a href="https://www.bilibili.com/video/BV1Rx4y1U79A/?vd_source=4eb61e12ff64fa3d03cfec0f2eb09ce7">https://www.bilibili.com/video/BV1Rx4y1U79A/?vd_source&#x3D;4eb61e12ff64fa3d03cfec0f2eb09ce7</a></li><li>语雀：[<a href="https://www.yuque.com/zacharyblock/iacda#">https://www.yuque.com/zacharyblock/iacda?#</a> 《PythonLearning》](<a href="https://www.yuque.com/zacharyblock/iacda#">https://www.yuque.com/zacharyblock/iacda?#</a> 《PythonLearning》)</li><li>Github：<ul><li>前端：<a href="https://github.com/BlockZachary/studentfontend">https://github.com/BlockZachary/studentfontend</a></li><li>后端：<a href="https://github.com/BlockZachary/studentbackend">https://github.com/BlockZachary/studentbackend</a></li></ul></li></ul><hr><blockquote><p>更新: 2024-05-26 21:30:46<br>原文: <a href="https://www.yuque.com/zacharyblock/iacda/wlw9b68ykem94qi1">https://www.yuque.com/zacharyblock/iacda/wlw9b68ykem94qi1</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;项目介绍&quot;&gt;&lt;a href=&quot;#项目介绍&quot; class=&quot;headerlink&quot; title=&quot;项目介绍&quot;&gt;&lt;/a&gt;项目介绍&lt;/h1&gt;&lt;h1 id=&quot;学生信息管理系统——前后端分离&quot;&gt;&lt;a href=&quot;#学生信息管理系统——前后端分离&quot; class=&quot;header</summary>
      
    
    
    
    <category term="FastAPI入门" scheme="https://blockzachary.github.io/categories/FastAPI%E5%85%A5%E9%97%A8/"/>
    
    
    <category term="Python" scheme="https://blockzachary.github.io/tags/Python/"/>
    
    <category term="Vue3" scheme="https://blockzachary.github.io/tags/Vue3/"/>
    
    <category term="FastAPI" scheme="https://blockzachary.github.io/tags/FastAPI/"/>
    
    <category term="实战" scheme="https://blockzachary.github.io/tags/%E5%AE%9E%E6%88%98/"/>
    
  </entry>
  
  <entry>
    <title>面经2</title>
    <link href="https://blockzachary.github.io/2024/03/19/%E9%9D%A2%E7%BB%8F_%E9%9D%A2%E8%AF%95%E9%A2%98/%E9%9D%A2%E7%BB%8F2/"/>
    <id>https://blockzachary.github.io/2024/03/19/%E9%9D%A2%E7%BB%8F_%E9%9D%A2%E8%AF%95%E9%A2%98/%E9%9D%A2%E7%BB%8F2/</id>
    <published>2024-03-19T00:10:00.000Z</published>
    <updated>2024-03-19T00:10:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="面经-2"><a href="#面经-2" class="headerlink" title="面经 2"></a>面经 2</h1><h5 id="题目-001-在-Python-中如何实现单例模式。"><a href="#题目-001-在-Python-中如何实现单例模式。" class="headerlink" title="题目 001: 在 Python 中如何实现单例模式。"></a><font style="color:rgb(85, 87, 112);">题目 001: 在 Python 中如何实现单例模式。</font></h5><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">点评</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：单例模式是指让一个类只能创建出唯一的实例，这个题目在面试中出现的频率极高，因为它考察的不仅仅是单例模式，更是对 Python 语言到底掌握到何种程度，建议大家用装饰器和元类这两种方式来实现单例模式，因为这两种方式的通用性最强，而且也可以顺便展示自己对装饰器和元类中两个关键知识点的理解。</font></p><p>方法一：使用装饰器实现单例模式。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> wraps</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">singleton</span>(<span class="params">cls</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;单例类装饰器&quot;&quot;&quot;</span></span><br><span class="line">    instances = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">    @wraps(<span class="params">cls</span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">wrapper</span>(<span class="params">*args, **kwargs</span>):</span><br><span class="line">        <span class="keyword">if</span> cls <span class="keyword">not</span> <span class="keyword">in</span> instances:</span><br><span class="line">            instances[cls] = cls(*args, **kwargs)</span><br><span class="line">        <span class="keyword">return</span> instances[cls]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> wrapper</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@singleton</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">President</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">扩展</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：装饰器是 Python 中非常有特色的语法，用一个函数去装饰另一个函数或类，为其添加额外的能力。通常通过装饰来实现的功能都属横切关注功能，也就是跟正常的业务逻辑没有必然联系，可以动态添加或移除的功能。装饰器可以为代码提供缓存、代理、上下文环境等服务，它是对设计模式中代理模式的践行。在写装饰器的时候，带装饰功能的函数（上面代码中的</font><font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">wrapper</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">函数）通常都会用</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">functools</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">模块中的</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">wraps</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">再加以装饰，这个装饰器最重要的作用是给被装饰的类或函数动态添加一个</font><em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>wrapped</strong></font></em><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">属性，这个属性会将被装饰之前的类或函数保留下来，这样在我们不需要装饰功能的时候，可以通过它来取消装饰器，例如可以使用</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">President</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">&#x3D;</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">President.<strong>wrapped</strong></font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">来取消对</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">President</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">类做的单例处理。需要提醒大家的是：上面的单例并不是线程安全的，如果要做到线程安全，需要对创建对象的代码进行加锁的处理。在 Python 中可以使用</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">threading</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">模块的</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">RLock</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">对象来提供锁，可以使用锁对象的</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">acquire</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">和</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">release</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">方法来实现加锁和解锁的操作。当然，更为简便的做法是使用锁对象的</font><font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">with</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">上下文语法来进行隐式的加锁和解锁操作。</font></p><p>方法二：使用元类实现单例模式。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">SingletonMeta</span>(<span class="title class_ inherited__">type</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;自定义单例元类&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">cls, *args, **kwargs</span>):</span><br><span class="line">        cls.__instance = <span class="literal">None</span></span><br><span class="line">        <span class="built_in">super</span>().__init__(*args, **kwargs)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__call__</span>(<span class="params">cls, *args, **kwargs</span>):</span><br><span class="line">        <span class="keyword">if</span> cls.__instance <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            cls.__instance = <span class="built_in">super</span>().__call__(*args, **kwargs)</span><br><span class="line">        <span class="keyword">return</span> cls.__instance</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">President</span>(metaclass=SingletonMeta):</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">扩展</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：Python 是面向对象的编程语言，在面向对象的世界中，一切皆为对象。对象是通过类来创建的，而类本身也是对象，类这样的对象是通过元类来创建的。我们在定义类时，如果没有给一个类指定父类，那么默认的父类是</font><font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">object</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">，如果没有给一个类指定元类，那么默认的元类是</font><font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">type</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">。通过自定义的元类，我们可以改变一个类默认的行为，就如同上面的代码中，我们通过元类的</font><em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>call</strong></font></em><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">魔术方法，改变了</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">President</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">类的构造器那样。</font></p><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">补充</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：关于单例模式，在面试中还有可能被问到它的应用场景。通常一个对象的状态是被其他对象共享的，就可以将其设计为单例，例如项目中使用的数据库连接池对象和配置对象通常都是单例，这样才能保证所有地方获取到的</font><a href="https://link.csdn.net/?target=https://gitcode.com/SequoiaDB/SequoiaDB/overview">数据库</a><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">连接和配置信息是完全一致的；而且由于对象只有唯一的实例，因此从根本上避免了重复创建对象造成的时间和空间上的开销，也避免了对资源的多重占用。再举个例子，项目中的日志操作通常也会使用单例模式，这是因为共享的日志文件一直处于打开状态，只能有一个实例去操作它，否则在写入日志的时候会产生混乱。</font></p><h5 id="题目-002：不使用中间变量，交换两个变量a和b的值。"><a href="#题目-002：不使用中间变量，交换两个变量a和b的值。" class="headerlink" title="题目 002：不使用中间变量，交换两个变量a和b的值。"></a><font style="color:rgb(85, 87, 112);">题目 002：不使用中间变量，交换两个变量<code>a</code>和<code>b</code>的值。</font></h5><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">点评</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：典型的送人头的题目，通常交换两个变量需要借助一个中间变量，如果不允许使用中间变量，在其他编程语言中可以使用异或运算的方式来实现交换两个变量的值，但是 Python 中有更为简单明了的做法。</font></p><p>方法一：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = a ^ b</span><br><span class="line">b = a ^ b</span><br><span class="line">a = a ^ b</span><br></pre></td></tr></table></figure><p>方法二：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a, b = b, a</span><br></pre></td></tr></table></figure><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">扩展</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：需要注意，</font><font style="color:rgb(224, 108, 117);background-color:rgb(40, 44, 52);">a</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">,</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(224, 108, 117);background-color:rgb(40, 44, 52);">b</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">&#x3D;</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(224, 108, 117);background-color:rgb(40, 44, 52);">b</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">, a</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">这种做法其实并不是元组解包，虽然很多人都这样认为。Python 字节码指令中有</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">ROT_TWO</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">指令来支持这个操作，类似的还有</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">ROT_THREE</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">，对于 3 个以上的元素，如</font><font style="color:rgb(224, 108, 117);background-color:rgb(40, 44, 52);">a</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">,</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(224, 108, 117);background-color:rgb(40, 44, 52);">b</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">, c, d &#x3D;</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(224, 108, 117);background-color:rgb(40, 44, 52);">b</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">, c, d, a</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">，才会用到创建元组和元组解包。想知道你的代码对应的字节码指令，可以使用 Python 标准库中</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">dis</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">模块的</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">dis</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">函数来反汇编你的 Python 代码。</font></p><h5 id="题目-003：写一个删除列表中重复元素的函数，要求去重后元素相对位置保持不变。"><a href="#题目-003：写一个删除列表中重复元素的函数，要求去重后元素相对位置保持不变。" class="headerlink" title="题目 003：写一个删除列表中重复元素的函数，要求去重后元素相对位置保持不变。"></a><font style="color:rgb(85, 87, 112);">题目 003：写一个删除列表中重复元素的函数，要求去重后元素相对位置保持不变。</font></h5><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">点评</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：这个题目在初中级 Python 岗位面试的时候经常出现，题目源于《Python Cookbook》这本书第一章的第 10 个问题，有很多面试题其实都是这本书上的原题，所以建议大家有时间好好研读一下这本书。</font></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">dedup</span>(<span class="params">items</span>):</span><br><span class="line">    no_dup_items = []</span><br><span class="line">    seen = <span class="built_in">set</span>()</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> items:</span><br><span class="line">        <span class="keyword">if</span> item <span class="keyword">not</span> <span class="keyword">in</span> seen:</span><br><span class="line">            no_dup_items.append(item)</span><br><span class="line">            seen.add(item)</span><br><span class="line">    <span class="keyword">return</span> no_dup_items</span><br></pre></td></tr></table></figure><p>如果愿意也可以把上面的函数改造成一个生成器，代码如下所示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">dedup</span>(<span class="params">items</span>):</span><br><span class="line">    seen = <span class="built_in">set</span>()</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> items:</span><br><span class="line">        <span class="keyword">if</span> item <span class="keyword">not</span> <span class="keyword">in</span> seen:</span><br><span class="line">            <span class="keyword">yield</span> item</span><br><span class="line">            seen.add(item)</span><br></pre></td></tr></table></figure><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">扩展</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：由于 Python 中的集合底层使用哈希存储，所以集合的</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">in</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">和</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">not in</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">成员运算在性能上远远优于列表，所以上面的代码我们使用了集合来保存已经出现过的元素。集合中的元素必须是</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">hashable</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">对象，因此上面的代码在列表元素不是</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">hashable</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">对象时会失效，要解决这个问题可以给函数增加一个参数，该参数可以设计为返回哈希码或</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">hashable</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">对象的函数。</font></p><h5 id="题目-004：假设你使用的是官方的-CPython，说出下面代码的运行结果。"><a href="#题目-004：假设你使用的是官方的-CPython，说出下面代码的运行结果。" class="headerlink" title="题目 004：假设你使用的是官方的 CPython，说出下面代码的运行结果。"></a><font style="color:rgb(85, 87, 112);">题目 004：假设你使用的是官方的 CPython，说出下面代码的运行结果。</font></h5><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">点评</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：下面的程序对实际开发并没有什么意义，但却是 CPython 中的一个大坑，这道题旨在考察面试者对官方的 Python 解释器到底了解到什么程度。</font></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">a, b, c, d = <span class="number">1</span>, <span class="number">1</span>, <span class="number">1000</span>, <span class="number">1000</span></span><br><span class="line"><span class="built_in">print</span>(a <span class="keyword">is</span> b, c <span class="keyword">is</span> d)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">foo</span>():</span><br><span class="line">    e = <span class="number">1000</span></span><br><span class="line">    f = <span class="number">1000</span></span><br><span class="line">    <span class="built_in">print</span>(e <span class="keyword">is</span> f, e <span class="keyword">is</span> d)</span><br><span class="line">    g = <span class="number">1</span></span><br><span class="line">    <span class="built_in">print</span>(g <span class="keyword">is</span> a)</span><br><span class="line"></span><br><span class="line">foo()</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">True False</span><br><span class="line">True False</span><br><span class="line">True</span><br></pre></td></tr></table></figure><p>上面代码中<font style="color:rgb(224, 108, 117);background-color:rgb(40, 44, 52);">a</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">is</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(224, 108, 117);background-color:rgb(40, 44, 52);">b</font>的结果是<font style="color:rgb(86, 182, 194);background-color:rgb(40, 44, 52);">True</font>但<font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">c</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">is</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">d</font>的结果是<font style="color:rgb(86, 182, 194);background-color:rgb(40, 44, 52);">False</font>，这一点的确让人费解。CPython 解释器出于性能优化的考虑，把频繁使用的整数对象用一个叫<font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">small</font><font style="color:rgb(209, 154, 102);background-color:rgb(40, 44, 52);"><em></font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">ints</font>的对象池缓存起来造成的。<font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">small</font><font style="color:rgb(209, 154, 102);background-color:rgb(40, 44, 52);"></em></font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">ints</font>缓存的整数值被设定为<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">[-5, 256]</font>这个区间，也就是说，在任何引用这些整数的地方，都不需要重新创建<font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">int</font>对象，而是直接引用缓存池中的对象。如果整数不在该范围内，那么即便两个整数的值相同，它们也是不同的对象。</p><p>CPython 底层为了进一步提升性能还做了另一个设定，对于同一个代码块中值不在<font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">small</font><font style="color:rgb(209, 154, 102);background-color:rgb(40, 44, 52);">_</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">ints</font>缓存范围内的整数，如果同一个代码块中已经存在一个值与其相同的整数对象，那么就直接引用该对象，否则创建新的<font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">int</font>对象。需要大家注意的是，这条规则对数值型适用，但对字符串则需要考虑字符串的长度，这一点大家可以自行证明。</p><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">扩展</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：如果你用 PyPy（另一种 Python 解释器实现，支持 JIT，对 CPython 的缺点进行了改良，在性能上优于 CPython，但对三方库的支持略差）来运行上面的代码，你会发现所有的输出都是 True。</font></p><h5 id="题目-005：Lambda-函数是什么，举例说明的它的应用场景。"><a href="#题目-005：Lambda-函数是什么，举例说明的它的应用场景。" class="headerlink" title="题目 005：Lambda 函数是什么，举例说明的它的应用场景。"></a><font style="color:rgb(85, 87, 112);">题目 005：Lambda 函数是什么，举例说明的它的应用场景。</font></h5><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">点评</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：这个题目主要想考察的是 Lambda 函数的应用场景，潜台词是问你在项目中有没有使用过 Lambda 函数，具体在什么场景下会用到 Lambda 函数，借此来判断你写代码的能力。因为 Lambda 函数通常用在高阶函数中，主要的作用是通过向函数传入函数或让函数返回函数最终实现代码的解耦合。</font></p><p>Lambda 函数也叫匿名函数，它是功能简单用一行代码就能实现的小型函数。Python 中的 Lambda 函数只能写一个表达式，这个表达式的执行结果就是函数的返回值，不用写<font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">return</font>关键字。Lambda 函数因为没有名字，所以也不会跟其他函数发生命名冲突的问题。</p><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">扩展</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：面试的时候有可能还会考你用 Lambda 函数来实现一些功能，也就是用一行代码来实现题目要求的功能，例如：用一行代码实现求阶乘的函数，用一行代码实现求最大公约数的函数等。</font></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fac = <span class="keyword">lambda</span> x: <span class="built_in">__import__</span>(<span class="string">&#x27;functools&#x27;</span>).reduce(<span class="built_in">int</span>.__mul__, <span class="built_in">range</span>(<span class="number">1</span>, x + <span class="number">1</span>), <span class="number">1</span>)</span><br><span class="line">gcd = <span class="keyword">lambda</span> x, y: y % x <span class="keyword">and</span> gcd(y % x, x) <span class="keyword">or</span> x</span><br></pre></td></tr></table></figure><p>Lambda 函数其实最为主要的用途是把一个函数传入另一个高阶函数（如 Python 内置的<font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">filter</font>、<font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">map</font>等）中来为函数做解耦合，增强函数的灵活性和通用性。下面的例子通过使用<font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">filter</font>和<font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">map</font>函数，实现了从列表中筛选出奇数并求平方构成新列表的操作，因为用到了高阶函数，过滤和映射数据的规则都是函数的调用者通过另外一个函数传入的，因此这<font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">filter</font>和<font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">map</font>函数没有跟特定的过滤和映射数据的规则耦合在一起。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">items = [<span class="number">12</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">19</span>]</span><br><span class="line">items = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x: x ** <span class="number">2</span>, <span class="built_in">filter</span>(<span class="keyword">lambda</span> x: x % <span class="number">2</span>, items)))</span><br><span class="line"><span class="built_in">print</span>(items)    <span class="comment"># [25, 49, 361]</span></span><br></pre></td></tr></table></figure><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">扩展</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：用列表的生成式来实现上面的代码会更加简单明了，代码如下所示。</font></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">items = [<span class="number">12</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">19</span>]</span><br><span class="line">items = [x ** <span class="number">2</span> <span class="keyword">for</span> x <span class="keyword">in</span> items <span class="keyword">if</span> x % <span class="number">2</span>]</span><br><span class="line"><span class="built_in">print</span>(items)    <span class="comment"># [25, 49, 361]</span></span><br></pre></td></tr></table></figure><h5 id="题目-006：说说-Python-中的浅拷贝和深拷贝。"><a href="#题目-006：说说-Python-中的浅拷贝和深拷贝。" class="headerlink" title="题目 006：说说 Python 中的浅拷贝和深拷贝。"></a><font style="color:rgb(85, 87, 112);">题目 006：说说 Python 中的浅拷贝和深拷贝。</font></h5><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">点评</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：这个题目本身出现的频率非常高，但是就题论题而言没有什么技术含量。对于这种面试题，在</font><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">回答的时候一定要让你的答案能够超出面试官的预期</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">，这样才能</font><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">获得更好的印象分</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">。所以回答这个题目的要点不仅仅是能够说出浅拷贝和深拷贝的区别，深拷贝的时候可能遇到的两大问题，还要说出 Python 标准库对浅拷贝和深拷贝的支持，然后可以说说列表、字典如何实现拷贝操作以及如何通过序列化和反序列的方式实现深拷贝，最后还可以提到设计模式中的原型模式以及它在项目中的应用。</font></p><p>浅拷贝通常只复制对象本身，而深拷贝不仅会复制对象，还会递归的复制对象所关联的对象。深拷贝可能会遇到两个问题：一是一个对象如果直接或间接的引用了自身，会导致无休止的递归拷贝；二是深拷贝可能对原本设计为多个对象共享的数据也进行拷贝。Python 通过<font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">copy</font>模块中的<font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">copy</font>和<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">deepcopy</font>函数来实现浅拷贝和深拷贝操作，其中<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">deepcopy</font>可以通过<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">memo</font>字典来保存已经拷贝过的对象，从而避免刚才所说的自引用递归问题；此外，可以通过<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">copyreg</font>模块的<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">pickle</font>函数来定制指定类型对象的拷贝行为。</p><p><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">deepcopy</font>函数的本质其实就是对象的一次序列化和一次返回序列化，面试题中还考过用自定义函数实现对象的深拷贝操作，显然我们可以使用<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">pickle</font>模块的<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">dumps</font>和<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">loads</font>来做到，代码如下所示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"></span><br><span class="line">my_deep_copy = <span class="keyword">lambda</span> obj: pickle.loads(pickle.dumps(obj))</span><br></pre></td></tr></table></figure><p>列表的切片操作<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">[:]</font>相当于实现了列表对象的浅拷贝，而字典的<font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">copy</font>方法可以实现字典对象的浅拷贝。对象拷贝其实是更为快捷的创建对象的方式。在 Python 中，通过构造器创建对象属于两阶段构造，首先是分配内存空间，然后是初始化。在创建对象时，我们也可以基于“原型”对象来创建新对象，通过对原型对象的拷贝（复制内存）就完成了对象的创建和初始化，这种做法更加高效，这也就是设计模式中的原型模式。在 Python 中，我们可以通过元类的方式来实现原型模式，代码如下所示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> copy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PrototypeMeta</span>(<span class="title class_ inherited__">type</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;实现原型模式的元类&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">cls, *args, **kwargs</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__(*args, **kwargs)</span><br><span class="line">        <span class="comment"># 为对象绑定clone方法来实现对象拷贝</span></span><br><span class="line">        cls.clone = <span class="keyword">lambda</span> <span class="variable language_">self</span>, is_deep=<span class="literal">True</span>: \</span><br><span class="line">        copy.deepcopy(<span class="variable language_">self</span>) <span class="keyword">if</span> is_deep <span class="keyword">else</span> copy.copy(<span class="variable language_">self</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>(metaclass=PrototypeMeta):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p1 = Person()</span><br><span class="line">p2 = p1.clone()                 <span class="comment"># 深拷贝</span></span><br><span class="line">p3 = p1.clone(is_deep=<span class="literal">False</span>)    <span class="comment"># 浅拷贝</span></span><br></pre></td></tr></table></figure><h5 id="题目-007：Python-是如何实现内存管理的？"><a href="#题目-007：Python-是如何实现内存管理的？" class="headerlink" title="题目 007：Python 是如何实现内存管理的？"></a><font style="color:rgb(85, 87, 112);">题目 007：Python 是如何实现内存管理的？</font></h5><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">点评</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：当面试官问到这个问题的时候，一个展示自己的机会就摆在面前了。你要先反问面试官：“你说的是官方的 CPython 解释器吗？”。这个反问可以展示出你了解过 Python 解释器的不同的实现版本，而且你也知道面试官想问的是 CPython。当然，很多面试官对不同的 Python 解释器底层实现到底有什么差别也没有概念。所以，</font><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">千万不要觉得面试官一定比你强</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">，怀揣着这份自信可以让你更好的完成面试。</font></p><p>Python 提供了自动化的内存管理，也就是说内存空间的分配与释放都是由 Python 解释器在运行时自动进行的，自动管理内存功能极大的减轻程序员的工作负担，也能够帮助程序员在一定程度上解决内存泄露的问题。以 CPython 解释器为例，它的内存管理有三个关键点：引用计数、标记清理、分代收集。</p><p><strong>引用计数</strong>：对于 CPython 解释器来说，Python 中的每一个对象其实就是<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">PyObject</font>结构体，它的内部有一个名为<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">ob_refcnt</font> 的引用计数器成员变量。程序在运行的过程中<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">ob_refcnt</font>的值会被更新并藉此来反映引用有多少个变量引用到该对象。当对象的引用计数值为 0 时，它的内存就会被释放掉。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">typedef struct _object &#123;</span><br><span class="line">    _PyObject_HEAD_EXTRA</span><br><span class="line">    Py_ssize_t ob_refcnt;</span><br><span class="line">    struct _typeobject *ob_type;</span><br><span class="line">&#125; PyObject;</span><br></pre></td></tr></table></figure><p>以下情况会导致引用计数加<font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">1</font>：</p><ul><li>对象被创建</li><li>对象被引用</li><li>对象作为参数传入到一个函数中</li><li>对象作为元素存储到一个容器中</li></ul><p>以下情况会导致引用计数减<font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">1</font>：</p><ul><li>用<font style="color:rgb(224, 108, 117);background-color:rgb(40, 44, 52);">del</font>语句显示删除对象引用</li><li>对象引用被重新赋值其他对象</li><li>一个对象离开它所在的作用域</li><li>持有该对象的容器自身被销毁</li><li>持有该对象的容器删除该对象</li></ul><p>可以通过<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">sys</font>模块的<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">getrefcount</font>函数来获得对象的引用计数。引用计数的内存管理方式在遇到循环引用的时候就会出现致命伤，因此需要其他的垃圾回收算法对其进行补充。</p><p><strong>标记清理</strong>：CPython 使用了“标记-清理”（Mark and Sweep）算法解决容器类型可能产生的循环引用问题。该算法在垃圾回收时分为两个阶段：标记阶段，遍历所有的对象，如果对象是可达的（被其他对象引用），那么就标记该对象为可达；清除阶段，再次遍历对象，如果发现某个对象没有标记为可达，则就将其回收。CPython 底层维护了两个双端链表，一个链表存放着需要被扫描的容器对象（姑且称之为链表 A），另一个链表存放着临时不可达对象（姑且称之为链表 B）。为了实现“标记-清理”算法，链表中的每个节点除了有记录当前引用计数的<font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">ref</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">_count</font>变量外，还有一个<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">gc_ref</font>变量，这个<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">gc_ref</font>是<font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">ref</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">_count</font>的一个副本，所以初始值为<font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">ref</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">_count</font>的大小。执行垃圾回收时，首先遍历链表 A 中的节点，并且将当前对象所引用的所有对象的<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">gc_ref</font>减<font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">1</font>，这一步主要作用是解除循环引用对引用计数的影响。再次遍历链表 A 中的节点，如果节点的<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">gc_ref</font>值为<font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">0</font>，那么这个对象就被标记为“暂时不可达”（<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">GC_TENTATIVELY_UNREACHABLE</font>）并被移动到链表 B 中；如果节点的<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">gc_ref</font>不为<font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">0</font>，那么这个对象就会被标记为“可达“（<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">GC_REACHABLE</font>），对于”可达“对象，还要递归的将该节点可以到达的节点标记为”可达“；链表 B 中被标记为”可达“的节点要重新放回到链表 A 中。在两次遍历之后，链表 B 中的节点就是需要释放内存的节点。</p><p><strong>分代回收</strong>：在循环引用对象的回收中，整个应用程序会被暂停，为了减少应用程序暂停的时间，Python 通过分代回收（空间换时间）的方法提高垃圾回收效率。分代回收的基本思想是：<strong>对象存在的时间越长，是垃圾的可能性就越小，应该尽量不对这样的对象进行垃圾回收</strong>。CPython 将对象分为三种世代分别记为<font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">0</font>、<font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">1</font>、<font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">2</font>，每一个新生对象都在第<font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">0</font>代中，如果该对象在一轮垃圾回收扫描中存活下来，那么它将被移到第<font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">1</font>代中，存在于第<font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">1</font>代的对象将较少的被垃圾回收扫描到；如果在对第<font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">1</font>代进行垃圾回收扫描时，这个对象又存活下来，那么它将被移至第 2 代中，在那里它被垃圾回收扫描的次数将会更少。分代回收扫描的门限值可以通过<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">gc</font>模块的<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">get_threshold</font>函数来获得，该函数返回一个三元组，分别表示多少次内存分配操作后会执行<font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">0</font>代垃圾回收，多少次<font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">0</font>代垃圾回收后会执行<font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">1</font>代垃圾回收，多少次<font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">1</font>代垃圾回收后会执行<font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">2</font>代垃圾回收。需要说明的是，如果执行一次<font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">2</font>代垃圾回收，那么比它年轻的代都要执行垃圾回收。如果想修改这几个门限值，可以通过<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">gc</font>模块的<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">set_threshold</font>函数来做到。</p><h5 id="题目-008：说一下你对-Python-中迭代器和生成器的理解。"><a href="#题目-008：说一下你对-Python-中迭代器和生成器的理解。" class="headerlink" title="题目 008：说一下你对 Python 中迭代器和生成器的理解。"></a><font style="color:rgb(85, 87, 112);">题目 008：说一下你对 Python 中迭代器和生成器的理解。</font></h5><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">点评</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：很多人面试者都会写迭代器和生成器，但是却无法准确的解释什么是迭代器和生成器。如果你也有同样的困惑，可以参考下面的回答。</font></p><p>迭代器是实现了迭代器协议的对象。跟其他编程语言不通，Python 中没有用于定义协议或表示约定的关键字，像<font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">interface</font>、<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">protocol</font>这些单词并不在 Python 语言的关键字列表中。Python 语言通过魔法方法来表示约定，也就是我们所说的协议，而*<font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>next</strong></font><em>和</em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>iter</strong></font>*这两个魔法方法就代表了迭代器协议。可以通过<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">for-in</font>循环从迭代器对象中取出值，也可以使用<font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">next</font>函数取出迭代器对象中的下一个值。生成器是迭代器的语法升级版本，可以用更为简单的代码来实现一个迭代器。</p><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">扩展</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：面试中经常让写生成斐波那契数列的迭代器，大家可以参考下面的代码。</font></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Fib</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, num</span>):</span><br><span class="line">        <span class="variable language_">self</span>.num = num</span><br><span class="line">        <span class="variable language_">self</span>.a, <span class="variable language_">self</span>.b = <span class="number">0</span>, <span class="number">1</span></span><br><span class="line">        <span class="variable language_">self</span>.idx = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__iter__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__next__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>.idx &lt; <span class="variable language_">self</span>.num:</span><br><span class="line">            <span class="variable language_">self</span>.a, <span class="variable language_">self</span>.b = <span class="variable language_">self</span>.b, <span class="variable language_">self</span>.a + <span class="variable language_">self</span>.b</span><br><span class="line">            <span class="variable language_">self</span>.idx += <span class="number">1</span></span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">self</span>.a</span><br><span class="line">        <span class="keyword">raise</span> StopIteration()</span><br></pre></td></tr></table></figure><p><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">如果用生成器的语法来改写上面的代码，代码会简单优雅很多。</font></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">fib</span>(<span class="params">num</span>):</span><br><span class="line">    a, b = <span class="number">0</span>, <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(num):</span><br><span class="line">        a, b = b, a + b</span><br><span class="line">        <span class="keyword">yield</span> a</span><br></pre></td></tr></table></figure><h5 id="题目-009：正则表达式的-match-方法和-search-方法有什么区别？"><a href="#题目-009：正则表达式的-match-方法和-search-方法有什么区别？" class="headerlink" title="题目 009：正则表达式的 match 方法和 search 方法有什么区别？"></a><font style="color:rgb(85, 87, 112);">题目 009：正则表达式的 match 方法和 search 方法有什么区别？</font></h5><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">点评</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：正则表达式是字符串处理的重要工具，所以也是面试中经常考察的知识点。在 Python 中，使用正则表达式有两种方式，一种是直接调用</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">re</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">模块中的函数，传入正则表达式和需要处理的字符串；一种是先通过</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">re</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">模块的</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">compile</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">函数创建正则表达式对象，然后再通过对象调用方法并传入需要处理的字符串。</font><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">如果一个正则表达式被频繁的使用，我们推荐用</font>**</strong><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">re.</font>*<strong>*<font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">compile</font>**</strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">函数创建正则表达式对象，这样会减少频繁编译同一个正则表达式所造成的开销</font>**<font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">。</font></p><p><font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">match</font>方法是从字符串的起始位置进行正则表达式匹配，返回<font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">Match</font>对象或 None。<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">search</font>方法会扫描整个字符串来找寻匹配的模式，同样也是返回 Match 对象或 None。</p><h5 id="题目-010：下面这段代码的执行结果是什么。"><a href="#题目-010：下面这段代码的执行结果是什么。" class="headerlink" title="题目 010：下面这段代码的执行结果是什么。"></a><font style="color:rgb(85, 87, 112);">题目 010：下面这段代码的执行结果是什么。</font></h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">multiply</span>():</span><br><span class="line">    <span class="keyword">return</span> [<span class="keyword">lambda</span> x: i * x <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>)]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>([m(<span class="number">100</span>) <span class="keyword">for</span> m <span class="keyword">in</span> multiply()])</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[300, 300, 300, 300]</span><br></pre></td></tr></table></figure><p>上面代码的运行结果很容易被误判为<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">[0, 100, 200, 300]</font>。首先需要注意的是<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">multiply</font>函数用生成式语法返回了一个列表，列表中保存了 4 个 Lambda 函数，这 4 个 Lambda 函数会返回传入的参数乘以<font style="color:rgb(224, 108, 117);background-color:rgb(40, 44, 52);">i</font>的结果。需要注意的是这里有闭包（closure）现象，<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">multiply</font>函数中的局部变量<font style="color:rgb(224, 108, 117);background-color:rgb(40, 44, 52);">i</font>的生命周期被延展了，由于<font style="color:rgb(224, 108, 117);background-color:rgb(40, 44, 52);">i</font>最终的值是<font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">3</font>，所以通过<font style="color:rgb(97, 174, 238);background-color:rgb(40, 44, 52);">m</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">(</font><font style="color:rgb(209, 154, 102);background-color:rgb(40, 44, 52);">100</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">)</font>调列表中的 Lambda 函数时会返回<font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">300</font>，而且 4 个调用都是如此。</p><p>如果想得到<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">[0, 100, 200, 300]</font>这个结果，可以按照下面几种方式来修改<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">multiply</font>函数。</p><p>方法一：使用生成器，让函数获得<font style="color:rgb(224, 108, 117);background-color:rgb(40, 44, 52);">i</font>的当前值。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">multiply</span>():</span><br><span class="line">    <span class="keyword">return</span> (<span class="keyword">lambda</span> x: i * x <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>([m(<span class="number">100</span>) <span class="keyword">for</span> m <span class="keyword">in</span> multiply()])</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">multiply</span>():</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line">        <span class="keyword">yield</span> <span class="keyword">lambda</span> x: x * i</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>([m(<span class="number">100</span>) <span class="keyword">for</span> m <span class="keyword">in</span> multiply()])</span><br></pre></td></tr></table></figure><p>方法二：使用偏函数，彻底避开闭包。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> partial</span><br><span class="line"><span class="keyword">from</span> operator <span class="keyword">import</span> __mul__</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">multiply</span>():</span><br><span class="line">    <span class="keyword">return</span> [partial(__mul__, i) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>)]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>([m(<span class="number">100</span>) <span class="keyword">for</span> m <span class="keyword">in</span> multiply()])</span><br></pre></td></tr></table></figure><h5 id="题目-011：Python-中为什么没有函数重载？"><a href="#题目-011：Python-中为什么没有函数重载？" class="headerlink" title="题目 011：Python 中为什么没有函数重载？"></a><font style="color:rgb(85, 87, 112);">题目 011：Python 中为什么没有函数重载？</font></h5><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">点评</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：C++、Java、C#等诸多编程语言都支持函数重载，所谓函数重载指的是在同一个作用域中有多个同名函数，它们拥有不同的参数列表（参数个数不同或参数类型不同或二者皆不同），可以相互区分。重载也是一种多态性，因为通常是在编译时通过参数的个数和类型来确定到底调用哪个重载函数，所以也被称为编译时多态性或者叫前绑定。这个问题的潜台词其实是问面试者是否有其他编程语言的经验，是否理解 Python 是动态类型语言，是否知道 Python 中函数的可变参数、关键字参数这些概念。</font></p><p>首先 Python 是解释型语言，函数重载现象通常出现在编译型语言中。其次 Python 是动态类型语言，函数的参数没有类型约束，也就无法根据参数类型来区分重载。再者 Python 中函数的参数可以有默认值，可以使用可变参数和关键字参数，因此即便没有函数重载，也要可以让一个函数根据调用者传入的参数产生不同的行为。</p><h5 id="题目-012：用-Python-代码实现-Python-内置函数-max。"><a href="#题目-012：用-Python-代码实现-Python-内置函数-max。" class="headerlink" title="题目 012：用 Python 代码实现 Python 内置函数 max。"></a><font style="color:rgb(85, 87, 112);">题目 012：用 Python 代码实现 Python 内置函数 max。</font></h5><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">点评</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：这个题目看似简单，但实际上还是比较考察面试者的功底。因为 Python 内置的</font><font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">max</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">函数既可以传入可迭代对象找出最大，又可以传入两个或多个参数找出最大；最为关键的是还可以通过命名关键字参数</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">key</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">来指定一个用于元素比较的函数，还可以通过</font><font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">default</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">命名关键字参数来指定当可迭代对象为空时返回的默认值。</font></p><p>下面的代码仅供参考：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">my_max</span>(<span class="params">*args, key=<span class="literal">None</span>, default=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    获取可迭代对象中最大的元素或两个及以上实参中最大的元素</span></span><br><span class="line"><span class="string">    :param args: 一个可迭代对象或多个元素</span></span><br><span class="line"><span class="string">    :param key: 提取用于元素比较的特征值的函数，默认为None</span></span><br><span class="line"><span class="string">    :param default: 如果可迭代对象为空则返回该默认值，如果没有给默认值则引发ValueError异常</span></span><br><span class="line"><span class="string">    :return: 返回可迭代对象或多个元素中的最大元素</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(args) == <span class="number">1</span> <span class="keyword">and</span> <span class="built_in">len</span>(args[<span class="number">0</span>]) == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">if</span> default:</span><br><span class="line">            <span class="keyword">return</span> default</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">raise</span> ValueError(<span class="string">&#x27;max() arg is an empty sequence&#x27;</span>)</span><br><span class="line">    items = args[<span class="number">0</span>] <span class="keyword">if</span> <span class="built_in">len</span>(args) == <span class="number">1</span> <span class="keyword">else</span> args</span><br><span class="line">    max_elem, max_value = items[<span class="number">0</span>], items[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">if</span> key:</span><br><span class="line">        max_value = key(max_value)</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> items:</span><br><span class="line">        value = item</span><br><span class="line">        <span class="keyword">if</span> key:</span><br><span class="line">            value = key(item)</span><br><span class="line">        <span class="keyword">if</span> value &gt; max_value:</span><br><span class="line">            max_elem, max_value = item, value</span><br><span class="line">    <span class="keyword">return</span> max_elem</span><br></pre></td></tr></table></figure><h5 id="题目-013：写一个函数统计传入的列表中每个数字出现的次数并返回对应的字典。"><a href="#题目-013：写一个函数统计传入的列表中每个数字出现的次数并返回对应的字典。" class="headerlink" title="题目 013：写一个函数统计传入的列表中每个数字出现的次数并返回对应的字典。"></a><font style="color:rgb(85, 87, 112);">题目 013：写一个函数统计传入的列表中每个数字出现的次数并返回对应的字典。</font></h5><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">点评</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：送人头的题目，不解释。</font></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">count_letters</span>(<span class="params">items</span>):</span><br><span class="line">    result = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> items:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(item, (<span class="built_in">int</span>, <span class="built_in">float</span>)):</span><br><span class="line">            result[item] = result.get(item, <span class="number">0</span>) + <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><p>也可以直接使用 Python 标准库中<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">collections</font>模块的<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">Counter</font>类来解决这个问题，<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">Counter</font>是<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">dict</font>的子类，它会将传入的序列中的每个元素作为键，元素出现的次数作为值来构造字典。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">count_letters</span>(<span class="params">items</span>):</span><br><span class="line">    counter = Counter(items)</span><br><span class="line">    <span class="keyword">return</span> &#123;key: value <span class="keyword">for</span> key, value <span class="keyword">in</span> counter.items() \</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">isinstance</span>(key, (<span class="built_in">int</span>, <span class="built_in">float</span>))&#125;</span><br></pre></td></tr></table></figure><h5 id="题目-014：使用-Python-代码实现遍历一个文件夹的操作。"><a href="#题目-014：使用-Python-代码实现遍历一个文件夹的操作。" class="headerlink" title="题目 014：使用 Python 代码实现遍历一个文件夹的操作。"></a><font style="color:rgb(85, 87, 112);">题目 014：使用 Python 代码实现遍历一个文件夹的操作。</font></h5><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">点评</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：基本也是送人头的题目，只要用过</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">os</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">模块就应该知道怎么做。</font></p><p>Python 标准库<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">os</font>模块的<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">walk</font>函数提供了遍历一个文件夹的功能，它返回一个生成器。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">g = os.walk(<span class="string">&#x27;/Users/Hao/Downloads/&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> path, dir_list, file_list <span class="keyword">in</span> g:</span><br><span class="line">    <span class="keyword">for</span> dir_name <span class="keyword">in</span> dir_list:</span><br><span class="line">        <span class="built_in">print</span>(os.path.join(path, dir_name))</span><br><span class="line">    <span class="keyword">for</span> file_name <span class="keyword">in</span> file_list:</span><br><span class="line">        <span class="built_in">print</span>(os.path.join(path, file_name))</span><br></pre></td></tr></table></figure><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">说明</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：</font><font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">os</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">.</font><font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">path</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">模块提供了很多进行路径操作的工具函数，在项目开发中也是经常会用到的。如果题目明确要求不能使用</font><font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">os</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">.walk</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">函数，那么可以使用</font><font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">os</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">.listdir</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">函数来获取指定目录下的文件和文件夹，然后再通过循环遍历用</font><font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">os</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">.isdir</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">函数判断哪些是文件夹，对于文件夹可以通过</font><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">递归调用</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">进行遍历，这样也可以实现遍历一个文件夹的操作。</font></p><h5 id="题目-015：现有-2-元、3-元、5-元共三种面额的货币，如果需要找零-99-元，一共有多少种找零的方式？"><a href="#题目-015：现有-2-元、3-元、5-元共三种面额的货币，如果需要找零-99-元，一共有多少种找零的方式？" class="headerlink" title="题目 015：现有 2 元、3 元、5 元共三种面额的货币，如果需要找零 99 元，一共有多少种找零的方式？"></a><font style="color:rgb(85, 87, 112);">题目 015：现有 2 元、3 元、5 元共三种面额的货币，如果需要找零 99 元，一共有多少种找零的方式？</font></h5><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">点评</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：还有一个非常类似的题目：“一个小朋友走楼梯，一次可以走 1 个台阶、2 个台阶或 3 个台阶，问走完 10 个台阶一共有多少种走法？”，这两个题目的思路是一样，如果用递归函数来写的话非常简单。</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">from functools import lru_cache</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@lru_cache()</span><br><span class="line">def change_money(total):</span><br><span class="line">    if total == 0:</span><br><span class="line">        return 1</span><br><span class="line">    if total &lt; 0:</span><br><span class="line">        return 0</span><br><span class="line">    return change_money(total - 2) + change_money(total - 3) + \</span><br><span class="line">        change_money(total - 5)</span><br></pre></td></tr></table></figure><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">说明</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：在上面的代码中，我们用</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">lru_cache</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">装饰器装饰了递归函数</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">change_money</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">，如果不做这个优化，上面代码的渐近时间复杂度将会是</font><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710778212608-15021bec-58e2-4a1c-bbce-648755adb08d.png"><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">，而如果参数</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">total</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">的值是</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">99</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">，这个运算量是非常巨大的。</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">lru_cache</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">装饰器会缓存函数的执行结果，这样就可以减少重复运算所造成的开销，这是空间换时间的策略，也是动态规划的编程思想。</font></p><h5 id="题目-016：写一个函数，给定矩阵的阶数n，输出一个螺旋式数字矩阵。"><a href="#题目-016：写一个函数，给定矩阵的阶数n，输出一个螺旋式数字矩阵。" class="headerlink" title="题目 016：写一个函数，给定矩阵的阶数&lt;font style=&quot;color:rgb(85, 87, 112);&quot;&gt;n&lt;/font&gt;，输出一个螺旋式数字矩阵。"></a><font style="color:rgb(85, 87, 112);">题目 016：写一个函数，给定矩阵的阶数</font><code>&lt;font style=&quot;color:rgb(85, 87, 112);&quot;&gt;n&lt;/font&gt;</code><font style="color:rgb(85, 87, 112);">，输出一个螺旋式数字矩阵。</font></h5><p><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">例如：n &#x3D; 2，返回：</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1 2</span><br><span class="line">4 3</span><br></pre></td></tr></table></figure><p><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">例如：n &#x3D; 3，返回：</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1 2 3</span><br><span class="line">8 9 4</span><br><span class="line">7 6 5</span><br></pre></td></tr></table></figure><p>这个题目本身并不复杂，下面的代码仅供参考。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">show_spiral_matrix</span>(<span class="params">n</span>):</span><br><span class="line">    matrix = [[<span class="number">0</span>] * n <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line">    row, col = <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">    num, direction = <span class="number">1</span>, <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> num &lt;= n ** <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">if</span> matrix[row][col] == <span class="number">0</span>:</span><br><span class="line">            matrix[row][col] = num</span><br><span class="line">            num += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> direction == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">if</span> col &lt; n - <span class="number">1</span> <span class="keyword">and</span> matrix[row][col + <span class="number">1</span>] == <span class="number">0</span>:</span><br><span class="line">                col += <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                direction += <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> direction == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">if</span> row &lt; n - <span class="number">1</span> <span class="keyword">and</span> matrix[row + <span class="number">1</span>][col] == <span class="number">0</span>:</span><br><span class="line">                row += <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                direction += <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> direction == <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">if</span> col &gt; <span class="number">0</span> <span class="keyword">and</span> matrix[row][col - <span class="number">1</span>] == <span class="number">0</span>:</span><br><span class="line">                col -= <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                direction += <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> row &gt; <span class="number">0</span> <span class="keyword">and</span> matrix[row - <span class="number">1</span>][col] == <span class="number">0</span>:</span><br><span class="line">                row -= <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                direction += <span class="number">1</span></span><br><span class="line">        direction %= <span class="number">4</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> matrix:</span><br><span class="line">        <span class="keyword">for</span> y <span class="keyword">in</span> x:</span><br><span class="line">            <span class="built_in">print</span>(y, end=<span class="string">&#x27;\t&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>()</span><br></pre></td></tr></table></figure><h5 id="题目-017：阅读下面的代码，写出程序的运行结果。"><a href="#题目-017：阅读下面的代码，写出程序的运行结果。" class="headerlink" title="题目 017：阅读下面的代码，写出程序的运行结果。"></a><font style="color:rgb(85, 87, 112);">题目 017：阅读下面的代码，写出程序的运行结果。</font></h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">items = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line"><span class="built_in">print</span>([i <span class="keyword">for</span> i <span class="keyword">in</span> items <span class="keyword">if</span> i &gt; <span class="number">2</span>])</span><br><span class="line"><span class="built_in">print</span>([i <span class="keyword">for</span> i <span class="keyword">in</span> items <span class="keyword">if</span> i % <span class="number">2</span>])</span><br><span class="line"><span class="built_in">print</span>([(x, y) <span class="keyword">for</span> x, y <span class="keyword">in</span> <span class="built_in">zip</span>(<span class="string">&#x27;abcd&#x27;</span>, (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>))])</span><br><span class="line"><span class="built_in">print</span>(&#123;x: <span class="string">f&#x27;item<span class="subst">&#123;x ** <span class="number">2</span>&#125;</span>&#x27;</span> <span class="keyword">for</span> x <span class="keyword">in</span> (<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>)&#125;)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(&#123;x <span class="keyword">for</span> x <span class="keyword">in</span> <span class="string">&#x27;hello world&#x27;</span> <span class="keyword">if</span> x <span class="keyword">not</span> <span class="keyword">in</span> <span class="string">&#x27;abcdefg&#x27;</span>&#125;))</span><br></pre></td></tr></table></figure><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">点评</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：</font><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">生成式（推导式）属于 Python 的特色语法之一，几乎是面试必考内容</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">。Python 中通过生成式字面量语法，可以创建出列表、集合、字典。</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[3, 4]</span><br><span class="line">[1, 3]</span><br><span class="line">[(&#x27;a&#x27;, 1), (&#x27;b&#x27;, 2), (&#x27;c&#x27;, 3), (&#x27;d&#x27;, 4)]</span><br><span class="line">&#123;2: &#x27;item4&#x27;, 4: &#x27;item16&#x27;, 6: &#x27;item36&#x27;&#125;</span><br><span class="line">6</span><br></pre></td></tr></table></figure><h5 id="题目-018：说出下面代码的运行结果。"><a href="#题目-018：说出下面代码的运行结果。" class="headerlink" title="题目 018：说出下面代码的运行结果。"></a><font style="color:rgb(85, 87, 112);">题目 018：说出下面代码的运行结果。</font></h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Parent</span>:</span><br><span class="line">    x = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Child1</span>(<span class="title class_ inherited__">Parent</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Child2</span>(<span class="title class_ inherited__">Parent</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(Parent.x, Child1.x, Child2.x)</span><br><span class="line">Child1.x = <span class="number">2</span></span><br><span class="line"><span class="built_in">print</span>(Parent.x, Child1.x, Child2.x)</span><br><span class="line">Parent.x = <span class="number">3</span></span><br><span class="line"><span class="built_in">print</span>(Parent.x, Child1.x, Child2.x)</span><br></pre></td></tr></table></figure><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">点评</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：运行上面的代码首先输出</font><font style="color:rgb(97, 174, 238);background-color:rgb(40, 44, 52);">1</font><font style="color:rgb(97, 174, 238);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(209, 154, 102);background-color:rgb(40, 44, 52);">1</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(209, 154, 102);background-color:rgb(40, 44, 52);">1</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">，这一点大家应该没有什么疑问。接下来，通过</font><font style="color:rgb(209, 154, 102);background-color:rgb(40, 44, 52);">Child1.x</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">&#x3D;</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(209, 154, 102);background-color:rgb(40, 44, 52);">2</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">给类</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">Child1</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">重新绑定了属性</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">x</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">并赋值为</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">2</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">，所以</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">Child</font><font style="color:rgb(209, 154, 102);background-color:rgb(40, 44, 52);">1</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">.</font><font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">x</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">会输出</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">2</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">，而</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">Parent</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">和</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">Child2</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">并不受影响。执行</font><font style="color:rgb(209, 154, 102);background-color:rgb(40, 44, 52);">Parent.x</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">&#x3D;</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(209, 154, 102);background-color:rgb(40, 44, 52);">3</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">会重新给</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">Parent</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">类的</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">x</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">属性赋值为</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">3</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">，由于</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">Child2</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">的</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">x</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">属性继承自</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">Parent</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">，所以</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">Child</font><font style="color:rgb(209, 154, 102);background-color:rgb(40, 44, 52);">2</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">.</font><font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">x</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">的值也是</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">3</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">；而之前我们为</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">Child1</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">重新绑定了</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">x</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">属性，那么它的</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">x</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">属性值不会受到</font><font style="color:rgb(209, 154, 102);background-color:rgb(40, 44, 52);">Parent.x</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">&#x3D;</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(209, 154, 102);background-color:rgb(40, 44, 52);">3</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">的影响，还是之前的值</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">2</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">。</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1 1 1</span><br><span class="line">1 2 1</span><br><span class="line">3 2 3</span><br></pre></td></tr></table></figure><h5 id="题目-19：说说你用过-Python-标准库中的哪些模块。"><a href="#题目-19：说说你用过-Python-标准库中的哪些模块。" class="headerlink" title="题目 19：说说你用过 Python 标准库中的哪些模块。"></a><font style="color:rgb(85, 87, 112);">题目 19：说说你用过 Python 标准库中的哪些模块。</font></h5><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">点评</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：Python 标准库中的模块非常多，建议大家根据自己过往的项目经历来介绍你用过的标准库和三方库，因为这些是你最为熟悉的，经得起面试官深挖的。</font></p><table><thead><tr><th align="left"><strong><font style="color:rgb(79, 79, 79);">模块名</font></strong></th><th align="left"><strong><font style="color:rgb(79, 79, 79);">介绍</font></strong></th></tr></thead><tbody><tr><td align="left"><font style="color:rgb(79, 79, 79);">sys</font></td><td align="left"><font style="color:rgb(79, 79, 79);">跟 Python 解释器相关的变量和函数，例如：</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">sys.</font><font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">version</font><font style="color:rgb(79, 79, 79);">、</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">sys.</font><font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">exit</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">()</font></td></tr><tr><td align="left"><font style="color:rgb(79, 79, 79);">os</font></td><td align="left"><font style="color:rgb(79, 79, 79);">和操作系统相关的功能，例如：</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">os.listdir</font><em><font style="color:rgb(92, 99, 112);background-color:rgb(40, 44, 52);">()</font></em><font style="color:rgb(79, 79, 79);">、</font><font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">os</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">.</font><font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">remove</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">()</font></td></tr><tr><td align="left"><font style="color:rgb(79, 79, 79);">re</font></td><td align="left"><font style="color:rgb(79, 79, 79);">和正则表达式相关的功能，例如：</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">re.compile</font><em><font style="color:rgb(92, 99, 112);background-color:rgb(40, 44, 52);">()</font></em><font style="color:rgb(79, 79, 79);">、</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">re.search</font><em><font style="color:rgb(92, 99, 112);background-color:rgb(40, 44, 52);">()</font></em></td></tr><tr><td align="left"><font style="color:rgb(79, 79, 79);">math</font></td><td align="left"><font style="color:rgb(79, 79, 79);">和数学运算相关的功能，例如：</font><font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">math</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">.</font><font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">pi</font><font style="color:rgb(79, 79, 79);">、</font><font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">math</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">.e</font><font style="color:rgb(79, 79, 79);">、</font><font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">math</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">.</font><font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">cos</font></td></tr><tr><td align="left"><font style="color:rgb(79, 79, 79);">logging</font></td><td align="left"><font style="color:rgb(79, 79, 79);">和日志系统相关的类和函数，例如：</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">logging.Logger</font><font style="color:rgb(79, 79, 79);">、</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">logging.</font><font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">Handler</font></td></tr><tr><td align="left"><font style="color:rgb(79, 79, 79);">json &#x2F; pickle</font></td><td align="left"><font style="color:rgb(79, 79, 79);">实现对象序列化和反序列的模块，例如：</font><font style="color:rgb(209, 154, 102);background-color:rgb(40, 44, 52);">json</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">.loads</font><font style="color:rgb(79, 79, 79);">、</font><font style="color:rgb(209, 154, 102);background-color:rgb(40, 44, 52);">json</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">.dumps</font></td></tr><tr><td align="left"><font style="color:rgb(79, 79, 79);">hashlib</font></td><td align="left"><font style="color:rgb(79, 79, 79);">封装了多种哈希摘要算法的模块，例如：</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">hashlib.</font><font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">md5</font><font style="color:rgb(79, 79, 79);">、</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">hashlib.sha1</font></td></tr><tr><td align="left"><font style="color:rgb(79, 79, 79);">urllib</font></td><td align="left"><font style="color:rgb(79, 79, 79);">包含了和 URL 相关的子模块，例如：</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">urllib.</font><font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">request</font><font style="color:rgb(79, 79, 79);">、</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">urllib.</font><font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">parse</font></td></tr><tr><td align="left"><font style="color:rgb(79, 79, 79);">itertools</font></td><td align="left"><font style="color:rgb(79, 79, 79);">提供各种迭代器的模块，例如：</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">itertools.</font><font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">cycle</font><font style="color:rgb(79, 79, 79);">、</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">itertools.</font><font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">product</font></td></tr><tr><td align="left"><font style="color:rgb(79, 79, 79);">functools</font></td><td align="left"><font style="color:rgb(79, 79, 79);">函数相关工具模块，例如：</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">functools.</font><font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">partial</font><font style="color:rgb(79, 79, 79);">、</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">functools.lru_cache</font></td></tr><tr><td align="left"><font style="color:rgb(79, 79, 79);">collections &#x2F; heapq</font></td><td align="left"><font style="color:rgb(79, 79, 79);">封装了常用数据结构和算法的模块，例如：</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">collections.deque</font></td></tr><tr><td align="left"><font style="color:rgb(79, 79, 79);">threading &#x2F; multiprocessing</font></td><td align="left"><font style="color:rgb(79, 79, 79);">多线程&#x2F;多进程相关类和函数的模块，例如：</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">threading.</font><font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">Thread</font></td></tr><tr><td align="left"><font style="color:rgb(79, 79, 79);">concurrent.futures &#x2F; asyncio</font></td><td align="left"><font style="color:rgb(79, 79, 79);">并发编程&#x2F;异步编程相关的类和函数的模块，例如：</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">ThreadPoolExecutor</font></td></tr><tr><td align="left"><font style="color:rgb(79, 79, 79);">base64</font></td><td align="left"><font style="color:rgb(79, 79, 79);">提供 BASE-64 编码相关函数的模块，例如：</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">bas64.</font><font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">encode</font></td></tr><tr><td align="left"><font style="color:rgb(79, 79, 79);">csv</font></td><td align="left"><font style="color:rgb(79, 79, 79);">和读写 CSV 文件相关的模块，例如：</font><font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">csv</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">.reader</font><font style="color:rgb(79, 79, 79);">、</font><font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">csv</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">.writer</font></td></tr><tr><td align="left"><font style="color:rgb(79, 79, 79);">profile &#x2F; cProfile &#x2F; pstats</font></td><td align="left"><font style="color:rgb(79, 79, 79);">和代码性能剖析相关的模块，例如：</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">cProfile.</font><font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">run</font><font style="color:rgb(79, 79, 79);">、</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">pstats.Stats</font></td></tr><tr><td align="left"><font style="color:rgb(79, 79, 79);">unittest</font></td><td align="left"><font style="color:rgb(79, 79, 79);">和单元测试相关的模块，例如：</font><font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">unittest</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">.TestCase</font></td></tr></tbody></table><h5 id="题目-20：-init-和-new-方法有什么区别？"><a href="#题目-20：-init-和-new-方法有什么区别？" class="headerlink" title="题目 20：&lt;font style=&quot;color:rgb(85, 87, 112);&quot;&gt;__&lt;/font&gt;**&lt;font style=&quot;color:rgb(85, 87, 112);&quot;&gt;init__&lt;/font&gt;**和**&lt;font style=&quot;color:rgb(85, 87, 112);&quot;&gt;__new__&lt;/font&gt;**方法有什么区别？"></a><font style="color:rgb(85, 87, 112);">题目 20：</font><code>&lt;font style=&quot;color:rgb(85, 87, 112);&quot;&gt;__&lt;/font&gt;**&lt;font style=&quot;color:rgb(85, 87, 112);&quot;&gt;init__&lt;/font&gt;**</code><strong><font style="color:rgb(85, 87, 112);">和</font></strong><code>**&lt;font style=&quot;color:rgb(85, 87, 112);&quot;&gt;__new__&lt;/font&gt;**</code><font style="color:rgb(85, 87, 112);">方法有什么区别？</font></h5><p>Python 中调用构造器创建对象属于两阶段构造过程，首先执行*<font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>new</strong></font><em>方法获得保存对象所需的内存空间，再通过</em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>init</strong></font><em>执行对内存空间数据的填充（对象属性的初始化）。</em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>new</strong></font><em>方法的返回值是创建好的 Python 对象（的引用），而</em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>init</strong></font><em>方法的第一个参数就是这个对象（的引用），所以在</em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>init</strong></font><em>中可以完成对对象的初始化操作。</em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>new</strong></font><em>是类方法，它的第一个参数是类，</em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>init</strong></font>*是对象方法，它的第一个参数是对象。</p><h5 id="题目-21：输入年月日，判断这个日期是这一年的第几天。"><a href="#题目-21：输入年月日，判断这个日期是这一年的第几天。" class="headerlink" title="题目 21：输入年月日，判断这个日期是这一年的第几天。"></a><font style="color:rgb(85, 87, 112);">题目 21：输入年月日，判断这个日期是这一年的第几天。</font></h5><p>方法一：不使用标准库中的模块和函数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">is_leap_year</span>(<span class="params">year</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;判断指定的年份是不是闰年，平年返回False，闰年返回True&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> year % <span class="number">4</span> == <span class="number">0</span> <span class="keyword">and</span> year % <span class="number">100</span> != <span class="number">0</span> <span class="keyword">or</span> year % <span class="number">400</span> == <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">which_day</span>(<span class="params">year, month, date</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;计算传入的日期是这一年的第几天&quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># 用嵌套的列表保存平年和闰年每个月的天数</span></span><br><span class="line">    days_of_month = [</span><br><span class="line">        [<span class="number">31</span>, <span class="number">28</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>],</span><br><span class="line">        [<span class="number">31</span>, <span class="number">29</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>]</span><br><span class="line">    ]</span><br><span class="line">    days = days_of_month[is_leap_year(year)][:month - <span class="number">1</span>]</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sum</span>(days) + date</span><br></pre></td></tr></table></figure><p>方法二：使用标准库中的<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">datetime</font>模块。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">which_day</span>(<span class="params">year, month, date</span>):</span><br><span class="line">    end = datetime.date(year, month, date)</span><br><span class="line">    start = datetime.date(year, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> (end - start).days + <span class="number">1</span></span><br></pre></td></tr></table></figure><h5 id="题目-22：平常工作中用什么工具进行静态代码分析。"><a href="#题目-22：平常工作中用什么工具进行静态代码分析。" class="headerlink" title="题目 22：平常工作中用什么工具进行静态代码分析。"></a><font style="color:rgb(85, 87, 112);">题目 22：平常工作中用什么工具进行静态代码分析。</font></h5><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">点评</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：静态代码分析工具可以从代码中提炼出各种静态属性，这使得开发者可以对代码的复杂性、可维护性和可读性有更好的了解，这里所说的静态属性包括：</font></p><ol><li><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">代码是否符合编码规范，例如：PEP-8。</font></li><li><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">代码中潜在的问题，包括：语法错误、缩进问题、导入缺失、变量覆盖等。</font></li><li><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">代码中的坏味道。</font></li><li><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">代码的复杂度。</font></li><li><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">代码的逻辑问题。</font></li></ol><p>工作中静态代码分析主要用到的是 Pylint 和 Flake8。Pylint 可以检查出代码错误、坏味道、不规范的代码等问题，较新的版本中还提供了代码复杂度统计数据，可以生成检查报告。Flake8 封装了 Pyflakes（检查代码逻辑错误）、McCabe（检查代码复杂性）和 Pycodestyle（检查代码是否符合 PEP-8 规范）工具，它可以执行这三个工具提供的检查。</p><h5 id="题目-23：说一下你知道的-Python-中的魔术方法。"><a href="#题目-23：说一下你知道的-Python-中的魔术方法。" class="headerlink" title="题目 23：说一下你知道的 Python 中的魔术方法。"></a><font style="color:rgb(85, 87, 112);">题目 23：说一下你知道的 Python 中的魔术方法。</font></h5><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">点评</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：魔术方法也称为魔法方法，是 Python 中的特色语法，也是面试中的高频问题。</font></p><table><thead><tr><th align="left"><strong><font style="color:rgb(79, 79, 79);">魔术方法</font></strong></th><th align="left"><strong><font style="color:rgb(79, 79, 79);">作用</font></strong></th></tr></thead><tbody><tr><td align="left"><em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>new</strong></font></em><font style="color:rgb(79, 79, 79);">、</font><em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>init</strong></font></em><font style="color:rgb(79, 79, 79);">、</font><em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>del</strong></font></em></td><td align="left"><font style="color:rgb(79, 79, 79);">创建和销毁对象相关</font></td></tr><tr><td align="left"><em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>add</strong></font></em><font style="color:rgb(79, 79, 79);">、</font><em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>sub</strong></font></em><font style="color:rgb(79, 79, 79);">、</font><em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>mul</strong></font></em><font style="color:rgb(79, 79, 79);">、</font><em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>div</strong></font></em><font style="color:rgb(79, 79, 79);">、</font><em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>floordiv</strong></font></em><font style="color:rgb(79, 79, 79);">、</font><em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>mod</strong></font></em></td><td align="left"><font style="color:rgb(79, 79, 79);">算术运算符相关</font></td></tr><tr><td align="left"><em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>eq</strong></font></em><font style="color:rgb(79, 79, 79);">、</font><em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>ne</strong></font></em><font style="color:rgb(79, 79, 79);">、</font><em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>lt</strong></font></em><font style="color:rgb(79, 79, 79);">、</font><em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>gt</strong></font></em><font style="color:rgb(79, 79, 79);">、</font><em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>le</strong></font></em><font style="color:rgb(79, 79, 79);">、</font><em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>ge</strong></font></em></td><td align="left"><font style="color:rgb(79, 79, 79);">关系运算符相关</font></td></tr><tr><td align="left"><em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>pos</strong></font></em><font style="color:rgb(79, 79, 79);">、</font><em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>neg</strong></font></em><font style="color:rgb(79, 79, 79);">、</font><em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>invert</strong></font></em></td><td align="left"><font style="color:rgb(79, 79, 79);">一元运算符相关</font></td></tr><tr><td align="left"><em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>lshift</strong></font></em><font style="color:rgb(79, 79, 79);">、</font><em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>rshift</strong></font></em><font style="color:rgb(79, 79, 79);">、</font><em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>and</strong></font></em><font style="color:rgb(79, 79, 79);">、</font><em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>or</strong></font></em><font style="color:rgb(79, 79, 79);">、</font><em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>xor</strong></font></em></td><td align="left"><font style="color:rgb(79, 79, 79);">位运算相关</font></td></tr><tr><td align="left"><em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>enter</strong></font></em><font style="color:rgb(79, 79, 79);">、</font><em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>exit</strong></font></em></td><td align="left"><font style="color:rgb(79, 79, 79);">上下文管理器协议</font></td></tr><tr><td align="left"><em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>iter</strong></font></em><font style="color:rgb(79, 79, 79);">、</font><em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>next</strong></font></em><font style="color:rgb(79, 79, 79);">、</font><em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>reversed</strong></font></em></td><td align="left"><font style="color:rgb(79, 79, 79);">迭代器协议</font></td></tr><tr><td align="left"><em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>int</strong></font></em><font style="color:rgb(79, 79, 79);">、</font><em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>long</strong></font></em><font style="color:rgb(79, 79, 79);">、</font><em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>float</strong></font></em><font style="color:rgb(79, 79, 79);">、</font><em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>oct</strong></font></em><font style="color:rgb(79, 79, 79);">、</font><em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>hex</strong></font></em></td><td align="left"><font style="color:rgb(79, 79, 79);">类型&#x2F;进制转换相关</font></td></tr><tr><td align="left"><em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>str</strong></font></em><font style="color:rgb(79, 79, 79);">、</font><em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>repr</strong></font></em><font style="color:rgb(79, 79, 79);">、</font><em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>hash</strong></font></em><font style="color:rgb(79, 79, 79);">、</font><em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>dir</strong></font></em></td><td align="left"><font style="color:rgb(79, 79, 79);">对象表述相关</font></td></tr><tr><td align="left"><em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>len</strong></font></em><font style="color:rgb(79, 79, 79);">、</font><em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>getitem</strong></font></em><font style="color:rgb(79, 79, 79);">、</font><em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>setitem</strong></font></em><font style="color:rgb(79, 79, 79);">、</font><em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>contains</strong></font></em><font style="color:rgb(79, 79, 79);">、</font><em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>missing</strong></font></em></td><td align="left"><font style="color:rgb(79, 79, 79);">序列相关</font></td></tr><tr><td align="left"><em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>copy</strong></font></em><font style="color:rgb(79, 79, 79);">、</font><em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>deepcopy</strong></font></em></td><td align="left"><font style="color:rgb(79, 79, 79);">对象拷贝相关</font></td></tr><tr><td align="left"><em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>call</strong></font></em><font style="color:rgb(79, 79, 79);">、</font><em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>setattr</strong></font></em><font style="color:rgb(79, 79, 79);">、</font><em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>getattr</strong></font></em><font style="color:rgb(79, 79, 79);">、</font><em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>delattr</strong></font></em></td><td align="left"><font style="color:rgb(79, 79, 79);">其他魔术方法</font></td></tr></tbody></table><h5 id="题目-24：函数参数-arg-和-kwargs分别代表什么？"><a href="#题目-24：函数参数-arg-和-kwargs分别代表什么？" class="headerlink" title="题目 24：函数参数_&lt;font style=&quot;color:rgb(85, 87, 112);&quot;&gt;arg&lt;/font&gt;_和&lt;font style=&quot;color:rgb(85, 87, 112);&quot;&gt;*kwargs&lt;/font&gt;分别代表什么？"></a><font style="color:rgb(85, 87, 112);">题目 24：函数参数</font><code>_&lt;font style=&quot;color:rgb(85, 87, 112);&quot;&gt;arg&lt;/font&gt;_</code><em><font style="color:rgb(85, 87, 112);">和</font></em><code>&lt;font style=&quot;color:rgb(85, 87, 112);&quot;&gt;*kwargs&lt;/font&gt;</code><font style="color:rgb(85, 87, 112);">分别代表什么？</font></h5><p>Python 中，函数的参数分为位置参数、可变参数、关键字参数、命名关键字参数。*<font style="color:rgb(92, 99, 112);background-color:rgb(40, 44, 52);">*args</font><em>代表可变参数，可以接收<font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">0</font>个或任意多个参数，当不确定调用者会传入多少个位置参数时，就可以使用可变参数，它会将传入的参数打包成一个元组。</em><font style="color:rgb(92, 99, 112);background-color:rgb(40, 44, 52);">**kwargs</font><em>代表关键字参数，可以接收用<font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">参数名</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">&#x3D;</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">参数值</font>的方式传入的参数，传入的参数的会打包成一个字典。定义函数时如果同时使用</em><font style="color:rgb(92, 99, 112);background-color:rgb(40, 44, 52);">*args</font><em>和</em><font style="color:rgb(92, 99, 112);background-color:rgb(40, 44, 52);">**kwargs</font>*，那么函数可以接收任意参数。</p><h5 id="题目-25：写一个记录函数执行时间的装饰器。"><a href="#题目-25：写一个记录函数执行时间的装饰器。" class="headerlink" title="题目 25：写一个记录函数执行时间的装饰器。"></a><font style="color:rgb(85, 87, 112);">题目 25：写一个记录函数执行时间的装饰器。</font></h5><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">点评</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：高频面试题，也是最简单的装饰器，面试者</font><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">必须要掌握的内容</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">。</font></p><p>方法一：用函数实现装饰器。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> wraps</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">record_time</span>(<span class="params">func</span>):</span><br><span class="line"></span><br><span class="line"><span class="meta">    @wraps(<span class="params">func</span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">wrapper</span>(<span class="params">*args, **kwargs</span>):</span><br><span class="line">        start = time()</span><br><span class="line">        result = func(*args, **kwargs)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;func.__name__&#125;</span>执行时间: <span class="subst">&#123;time() - start&#125;</span>秒&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> wrapper</span><br></pre></td></tr></table></figure><p>方法二：用类实现装饰器。类有*<font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>call</strong></font>*魔术方法，该类对象就是可调用对象，可以当做装饰器来使用。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> wraps</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Record</span>:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__call__</span>(<span class="params">self, func</span>):</span><br><span class="line"></span><br><span class="line"><span class="meta">        @wraps(<span class="params">func</span>)</span></span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">wrapper</span>(<span class="params">*args, **kwargs</span>):</span><br><span class="line">            start = time()</span><br><span class="line">            result = func(*args, **kwargs)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;func.__name__&#125;</span>执行时间: <span class="subst">&#123;time() - start&#125;</span>秒&#x27;</span>)</span><br><span class="line">            <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> wrapper</span><br></pre></td></tr></table></figure><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">说明</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：装饰器可以用来装饰类或函数，为其提供额外的能力，属于设计模式中的</font><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">代理模式</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">。</font></p><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">扩展</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：</font><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">装饰器本身也可以参数化</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">，例如上面的例子中，如果不希望在终端中显示函数的执行时间而是希望由调用者来决定如何输出函数的执行时间，可以通过参数化装饰器的方式来做到，代码如下所示。</font></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> wraps</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">record_time</span>(<span class="params">output</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;可以参数化的装饰器&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">decorate</span>(<span class="params">func</span>):</span><br><span class="line"></span><br><span class="line"><span class="meta">        @wraps(<span class="params">func</span>)</span></span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">wrapper</span>(<span class="params">*args, **kwargs</span>):</span><br><span class="line">            start = time()</span><br><span class="line">            result = func(*args, **kwargs)</span><br><span class="line">            output(func.__name__, time() - start)</span><br><span class="line">            <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> wrapper</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> decorate</span><br></pre></td></tr></table></figure><h5 id="题目-26：什么是鸭子类型（duck-typing）？"><a href="#题目-26：什么是鸭子类型（duck-typing）？" class="headerlink" title="题目 26：什么是鸭子类型（duck typing）？"></a><font style="color:rgb(85, 87, 112);">题目 26：什么是鸭子类型（duck typing）？</font></h5><p>鸭子类型是动态类型语言判断一个对象是不是某种类型时使用的方法，也叫做鸭子判定法。简单的说，鸭子类型是指判断一只鸟是不是鸭子，我们只关心它游泳像不像鸭子、叫起来像不像鸭子、走路像不像鸭子就足够了。换言之，如果对象的行为跟我们的预期是一致的（能够接受某些消息），我们就认定它是某种类型的对象。</p><p>在 Python 语言中，有很多 bytes-like 对象（如：<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">bytes</font>、<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">bytearray</font>、<font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">array</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">.</font><font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">array</font>、<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">memoryview</font>）、file-like 对象（如：<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">StringIO</font>、<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">BytesIO</font>、<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">GzipFile</font>、<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">socket</font>）、path-like 对象（如：<font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">str</font>、<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">bytes</font>），其中 file-like 对象都能支持<font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">read</font>和<font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">write</font>操作，可以像文件一样读写，这就是所谓的对象有鸭子的行为就可以判定为鸭子的判定方法。再比如 Python 中列表的<font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">extend</font>方法，它需要的参数并不一定要是列表，只要是可迭代对象就没有问题。</p><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">说明</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：动态语言的鸭子类型使得设计模式的应用被大大简化。</font></p><h5 id="题目-27：说一下-Python-中变量的作用域。"><a href="#题目-27：说一下-Python-中变量的作用域。" class="headerlink" title="题目 27：说一下 Python 中变量的作用域。"></a><font style="color:rgb(85, 87, 112);">题目 27：说一下 Python 中变量的作用域。</font></h5><p>Python 中有四种作用域，分别是局部作用域（<strong>L</strong>ocal）、嵌套作用域（<strong>E</strong>mbedded）、全局作用域（<strong>G</strong>lobal）、内置作用域（<strong>B</strong>uilt-in），搜索一个标识符时，会按照<strong>LEGB</strong>的顺序进行搜索，如果所有的作用域中都没有找到这个标识符，就会引发<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">NameError</font>异常。</p><h5 id="题目-28：说一下你对闭包的理解。"><a href="#题目-28：说一下你对闭包的理解。" class="headerlink" title="题目 28：说一下你对闭包的理解。"></a><font style="color:rgb(85, 87, 112);">题目 28：说一下你对闭包的理解。</font></h5><p>闭包是支持一等函数的编程语言（Python、JavaScript 等）中实现词法绑定的一种技术。当捕捉闭包的时候，它的自由变量（在函数外部定义但在函数内部使用的变量）会在捕捉时被确定，这样即便脱离了捕捉时的上下文，它也能照常运行。简单的说，可以将闭包理解为<strong>能够读取其他函数内部变量的函数</strong>。正在情况下，函数的局部变量在函数调用结束之后就结束了生命周期，但是<strong>闭包使得局部变量的生命周期得到了延展</strong>。使用闭包的时候需要注意，闭包会使得函数中创建的对象不会被垃圾回收，可能会导致很大的内存开销，所以<strong>闭包一定不能滥用</strong>。</p><h5 id="题目-29：说一下-Python-中的多线程和多进程的应用场景和优缺点。"><a href="#题目-29：说一下-Python-中的多线程和多进程的应用场景和优缺点。" class="headerlink" title="题目 29：说一下 Python 中的多线程和多进程的应用场景和优缺点。"></a><font style="color:rgb(85, 87, 112);">题目 29：说一下 Python 中的多线程和多进程的应用场景和优缺点。</font></h5><p>线程是操作系统分配 CPU 的基本单位，进程是操作系统分配内存的基本单位。通常我们运行的程序会包含一个或多个进程，而每个进程中又包含一个或多个线程。多线程的优点在于多个线程可以共享进程的内存空间，所以线程间的通信非常容易实现；但是如果使用官方的 CPython 解释器，多线程受制于 GIL（全局解释器锁），并不能利用 CPU 的多核特性，这是一个很大的问题。使用多进程可以充分利用 CPU 的多核特性，但是进程间通信相对比较麻烦，需要使用 IPC 机制（管道、套接字等）。</p><p>多线程适合那些会花费大量时间在 I&#x2F;O 操作上，但没有太多并行计算需求且不需占用太多内存的 I&#x2F;O 密集型应用。多进程适合执行计算密集型任务（如：视频编码解码、数据处理、科学计算等）、可以分解为多个并行子任务并能合并子任务执行结果的任务以及在内存使用方面没有任何限制且不强依赖于 I&#x2F;O 操作的任务。</p><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">扩展</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：Python 中实现并发编程通常有多线程、多进程和异步编程三种选择。异步编程实现了协作式并发，通过多个相互协作的子程序的用户态切换，实现对 CPU 的高效利用，这种方式也是非常适合 I&#x2F;O 密集型应用的。</font></p><h5 id="题目-30：说一下-Python-2-和-Python-3-的区别。"><a href="#题目-30：说一下-Python-2-和-Python-3-的区别。" class="headerlink" title="题目 30：说一下 Python 2 和 Python 3 的区别。"></a><font style="color:rgb(85, 87, 112);">题目 30：说一下 Python 2 和 Python 3 的区别。</font></h5><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">点评</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：这种问题千万不要背所谓的参考答案，说一些自己最熟悉的就足够了。</font></p><ol><li>Python 2 中的<font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">print</font>和<font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">exec</font>都是关键字，在 Python 3 中变成了函数。</li><li>Python 3 中没有<font style="color:rgb(209, 154, 102);background-color:rgb(40, 44, 52);">long</font>类型，整数都是<font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">int</font>类型。</li><li>Python 2 中的不等号<font style="color:rgb(97, 174, 238);background-color:rgb(40, 44, 52);">&lt;</font><font style="color:rgb(97, 174, 238);background-color:rgb(40, 44, 52);">&gt;</font>在 Python 3 中被废弃，统一使用<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">!&#x3D;</font>。</li><li>Python 2 中的<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">xrange</font>函数在 Python 3 中被<font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">range</font>函数取代。</li><li>Python 3 对 Python 2 中不安全的<font style="color:rgb(224, 108, 117);background-color:rgb(40, 44, 52);">input</font>函数做出了改进，废弃了<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">raw_input</font>函数。</li><li>Python 2 中的<font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">file</font>函数被 Python 3 中的<font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">open</font>函数取代。</li><li>Python 2 中的<font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">&#x2F;</font>运算对于<font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">int</font>类型是整除，在 Python 3 中要用*<font style="color:rgb(92, 99, 112);background-color:rgb(40, 44, 52);">&#x2F;&#x2F;</font>*来做整除除法。</li><li>Python 3 中改进了 Python 2 捕获异常的代码，很明显 Python 3 的写法更合理。</li><li>Python 3 生成式中循环变量的作用域得到了更好的控制，不会影响到生成式之外的同名变量。</li><li>Python 3 中的<font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">round</font>函数可以返回<font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">int</font>或<font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">float</font>类型，Python 2 中的<font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">round</font>函数返回<font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">float</font>类型。</li><li>Python 3 的<font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">str</font>类型是 Unicode 字符串，Python 2 的<font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">str</font>类型是字节串，相当于 Python 3 中的<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">bytes</font>。</li><li>Python 3 中的比较运算符必须比较同类对象。</li><li>Python 3 中定义类的都是新式类，Python 2 中定义的类有新式类（显式继承自<font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">object</font>的类）和旧式类（经典类）之分，新式类和旧式类在 MRO 问题上有非常显著的区别，新式类可以使用<font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>class</strong><code>属性获取自身类型，新式类可以使用</code><strong>slots</strong></font>魔法。</li><li>Python 3 对代码缩进的要求更加严格，如果混用空格和制表键会引发<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">TabError</font>。</li><li>Python 3 中字典的<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">keys</font>、<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">values</font>、<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">items</font>方法都不再返回<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">list</font>对象，而是返回<font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">view</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">object</font>，内置的<font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">map</font>、<font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">filter</font>等函数也不再返回<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">list</font>对象，而是返回迭代器对象。</li><li>Python 3 标准库中某些模块的名字跟 Python 2 是有区别的；而在三方库方面，有些三方库只支持 Python 2，有些只能支持 Python 3。</li></ol><h5 id="题目-31：谈谈你对“猴子补丁”（monkey-patching）的理解。"><a href="#题目-31：谈谈你对“猴子补丁”（monkey-patching）的理解。" class="headerlink" title="题目 31：谈谈你对“猴子补丁”（monkey patching）的理解。"></a><font style="color:rgb(85, 87, 112);">题目 31：谈谈你对“猴子补丁”（monkey patching）的理解。</font></h5><p>“猴子补丁”是动态类型语言的一个特性，代码运行时在不修改源代码的前提下改变代码中的方法、属性、函数等以达到热补丁（hot patch）的效果。很多系统的安全补丁也是通过猴子补丁的方式来实现的，但实际开发中应该避免对猴子补丁的使用，以免造成代码行为不一致的问题。</p><p>在使用<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">gevent</font>库的时候，我们会在代码开头的地方执行<font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">gevent</font><font style="color:rgb(209, 154, 102);background-color:rgb(40, 44, 52);">.monkey</font><font style="color:rgb(209, 154, 102);background-color:rgb(40, 44, 52);">.patch_all</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">()</font>，这行代码的作用是把标准库中的<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">socket</font>模块给替换掉，这样我们在使用<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">socket</font>的时候，不用修改任何代码就可以实现对代码的协程化，达到提升性能的目的，这就是对猴子补丁的应用。</p><p>另外，如果希望用<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">ujson</font>三方库替换掉标准库中的<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">json</font>，也可以使用猴子补丁的方式，代码如下所示。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import json, ujson</span><br><span class="line"></span><br><span class="line">json.__name__ = &#x27;ujson&#x27;</span><br><span class="line">json.dumps = ujson.dumps</span><br><span class="line">json.loads = ujson.loads</span><br></pre></td></tr></table></figure><p>单元测试中的<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">Mock</font>技术也是对猴子补丁的应用，Python 中的<font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">unittest</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">.mock</font>模块就是解决单元测试中用<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">Mock</font>对象替代被测对象所依赖的对象的模块。</p><h5 id="题目-32：阅读下面的代码说出运行结果。"><a href="#题目-32：阅读下面的代码说出运行结果。" class="headerlink" title="题目 32：阅读下面的代码说出运行结果。"></a><font style="color:rgb(85, 87, 112);">题目 32：阅读下面的代码说出运行结果。</font></h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">who</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;A&#x27;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">B</span>(<span class="title class_ inherited__">A</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">who</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(B, <span class="variable language_">self</span>).who()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;B&#x27;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">C</span>(<span class="title class_ inherited__">A</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">who</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(C, <span class="variable language_">self</span>).who()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;C&#x27;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">D</span>(B, C):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">who</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(D, <span class="variable language_">self</span>).who()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;D&#x27;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">item = D()</span><br><span class="line">item.who()</span><br></pre></td></tr></table></figure><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">点评</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：这道题考查到了两个知识点：</font></p><ol><li><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">Python 中的 MRO（方法解析顺序）。在没有多重继承的情况下，向对象发出一个消息，如果对象没有对应的方法，那么向上（父类）搜索的顺序是非常清晰的。如果向上追溯到</font><font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">object</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">类（所有类的父类）都没有找到对应的方法，那么将会引发</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">AttributeError</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">异常。但是有多重继承尤其是出现菱形继承（钻石继承）的时候，向上追溯到底应该找到那个方法就得确定 MRO。Python 3 中的类以及 Python 2 中的新式类使用 C3 算法来确定 MRO，它是一种类似于广度优先搜索的方法；Python 2 中的旧式类（经典类）使用深度优先搜索来确定 MRO。在搞不清楚 MRO 的情况下，可以使用类的</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">mro</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">方法或</font><strong><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>mro</strong></font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">属性来获得类的 MRO 列表。</font></li><li><font style="color:rgb(97, 174, 238);background-color:rgb(40, 44, 52);">super</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">()</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">函数的使用。在使用</font><font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">super</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">函数时，可以通过</font><font style="color:rgb(97, 174, 238);background-color:rgb(40, 44, 52);">super</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">(类型, 对象)</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">来指定对哪个对象以哪个类为起点向上搜索父类方法。所以上面</font><font style="color:rgb(224, 108, 117);background-color:rgb(40, 44, 52);">B</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">类代码中的</font><font style="color:rgb(97, 174, 238);background-color:rgb(40, 44, 52);">super</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">(B, self)</font><font style="color:rgb(209, 154, 102);background-color:rgb(40, 44, 52);">.who</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">()</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">表示以 B 类为起点，向上搜索</font><font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">self</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">（D 类对象）的</font><font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">who</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">方法，所以会找到</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">C</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">类中的</font><font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">who</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">方法，因为</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">D</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">类对象的 MRO 列表是</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">D –</font><font style="color:rgb(97, 174, 238);background-color:rgb(40, 44, 52);">&gt;</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">B –</font><font style="color:rgb(97, 174, 238);background-color:rgb(40, 44, 52);">&gt;</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">C –</font><font style="color:rgb(97, 174, 238);background-color:rgb(40, 44, 52);">&gt;</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">A –</font><font style="color:rgb(97, 174, 238);background-color:rgb(40, 44, 52);">&gt;</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">object</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">。</font></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ACBD</span><br></pre></td></tr></table></figure><h5 id="题目-33：编写一个函数实现对逆波兰表达式求值，不能使用-Python-的内置函数。"><a href="#题目-33：编写一个函数实现对逆波兰表达式求值，不能使用-Python-的内置函数。" class="headerlink" title="题目 33：编写一个函数实现对逆波兰表达式求值，不能使用 Python 的内置函数。"></a><font style="color:rgb(85, 87, 112);">题目 33：编写一个函数实现对逆波兰表达式求值，不能使用 Python 的内置函数。</font></h5><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">点评</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：逆波兰表达式也称为“后缀表达式”，相较于平常我们使用的“中缀表达式”，逆波兰表达式不需要括号来确定运算的优先级，例如</font><font style="color:rgb(97, 174, 238);background-color:rgb(40, 44, 52);">5</font><font style="color:rgb(97, 174, 238);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">_ (</font><font style="color:rgb(209, 154, 102);background-color:rgb(40, 44, 52);">2</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">+</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(209, 154, 102);background-color:rgb(40, 44, 52);">3</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">)</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">对应的逆波兰表达式是</font><font style="color:rgb(97, 174, 238);background-color:rgb(40, 44, 52);">5</font><font style="color:rgb(97, 174, 238);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(209, 154, 102);background-color:rgb(40, 44, 52);">2</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(209, 154, 102);background-color:rgb(40, 44, 52);">3</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">+ _</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">。逆波兰表达式求值需要借助栈结构，扫描表达式遇到运算数就入栈，遇到运算符就出栈两个元素做运算，将运算结果入栈。表达式扫描结束后，栈中只有一个数，这个数就是最终的运算结果，直接出栈即可。</font></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> operator</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Stack</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;栈（FILO）&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.elems = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">push</span>(<span class="params">self, elem</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;入栈&quot;&quot;&quot;</span></span><br><span class="line">        <span class="variable language_">self</span>.elems.append(elem)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">pop</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;出栈&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.elems.pop()</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">is_empty</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;检查栈是否为空&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">len</span>(<span class="variable language_">self</span>.elems) == <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">eval_suffix</span>(<span class="params">expr</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;逆波兰表达式求值&quot;&quot;&quot;</span></span><br><span class="line">    operators = &#123;</span><br><span class="line">        <span class="string">&#x27;+&#x27;</span>: operator.add,</span><br><span class="line">        <span class="string">&#x27;-&#x27;</span>: operator.sub,</span><br><span class="line">        <span class="string">&#x27;*&#x27;</span>: operator.mul,</span><br><span class="line">        <span class="string">&#x27;/&#x27;</span>: operator.truediv</span><br><span class="line">    &#125;</span><br><span class="line">    stack = Stack()</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> expr.split():</span><br><span class="line">        <span class="keyword">if</span> item.isdigit():</span><br><span class="line">            stack.push(<span class="built_in">float</span>(item))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            num2 = stack.pop()</span><br><span class="line">            num1 = stack.pop()</span><br><span class="line">            stack.push(operators[item](num1, num2))</span><br><span class="line">    <span class="keyword">return</span> stack.pop()</span><br></pre></td></tr></table></figure><h5 id="题目-34：Python-中如何实现字符串替换操作？"><a href="#题目-34：Python-中如何实现字符串替换操作？" class="headerlink" title="题目 34：Python 中如何实现字符串替换操作？"></a><font style="color:rgb(85, 87, 112);">题目 34：Python 中如何实现字符串替换操作？</font></h5><p>Python 中实现字符串替换大致有两类方法：字符串的<font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">replace</font>方法和正则表达式的<font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">sub</font>方法。</p><p>方法一：使用字符串的<font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">replace</font>方法。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">message = <span class="string">&#x27;hello, world!&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(message.replace(<span class="string">&#x27;o&#x27;</span>, <span class="string">&#x27;O&#x27;</span>).replace(<span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;L&#x27;</span>).replace(<span class="string">&#x27;he&#x27;</span>, <span class="string">&#x27;HE&#x27;</span>))</span><br></pre></td></tr></table></figure><p>方法二：使用正则表达式的<font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">sub</font>方法。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">message = <span class="string">&#x27;hello, world!&#x27;</span></span><br><span class="line">pattern = re.<span class="built_in">compile</span>(<span class="string">&#x27;[aeiou]&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(pattern.sub(<span class="string">&#x27;#&#x27;</span>, message))</span><br></pre></td></tr></table></figure><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">扩展</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：还有一个相关的面试题，对保存文件名的列表排序，要求文件名按照字母表和数字大小进行排序，例如对于列表</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">filenames &#x3D; [</font><font style="color:rgb(97, 174, 238);background-color:rgb(40, 44, 52);">‘a12</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">.txt’,</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(97, 174, 238);background-color:rgb(40, 44, 52);">‘a8</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">.txt’,</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(97, 174, 238);background-color:rgb(40, 44, 52);">‘b10</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">.txt’,</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(97, 174, 238);background-color:rgb(40, 44, 52);">‘b2</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">.txt’,</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(97, 174, 238);background-color:rgb(40, 44, 52);">‘b19</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">.txt’,</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(97, 174, 238);background-color:rgb(40, 44, 52);">‘a3</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">.txt’]</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">，排序的结果是</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">[</font><font style="color:rgb(97, 174, 238);background-color:rgb(40, 44, 52);">‘a3.txt</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">‘,</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(97, 174, 238);background-color:rgb(40, 44, 52);">‘a8.txt</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">‘,</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(97, 174, 238);background-color:rgb(40, 44, 52);">‘a12.txt</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">‘,</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(97, 174, 238);background-color:rgb(40, 44, 52);">‘b2.txt</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">‘,</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(97, 174, 238);background-color:rgb(40, 44, 52);">‘b10.txt</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">‘,</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(97, 174, 238);background-color:rgb(40, 44, 52);">‘b19.txt</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">‘]</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">。提示一下，可以通过字符串替换的方式为文件名补位，根据补位后的文件名用</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">sorted</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">函数来排序，大家可以思考下这个问题如何解决。</font></p><h5 id="题目-35：如何剖析-Python-代码的执行性能？"><a href="#题目-35：如何剖析-Python-代码的执行性能？" class="headerlink" title="题目 35：如何剖析 Python 代码的执行性能？"></a><font style="color:rgb(85, 87, 112);">题目 35：如何剖析 Python 代码的执行性能？</font></h5><p>剖析代码性能可以使用 Python 标准库中的<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">cProfile</font>和<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">pstats</font>模块，<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">cProfile</font>的<font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">run</font>函数可以执行代码并收集统计信息，创建出<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">Stats</font>对象并打印简单的剖析报告。<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">Stats</font>是<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">pstats</font>模块中的类，它是一个统计对象。当然，也可以使用三方工具<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">line_profiler</font>和<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">memory_profiler</font>来剖析每一行代码耗费的时间和内存，这两个三方工具都会用非常友好的方式输出剖析结构。如果使用 PyCharm，可以利用“Run”菜单的“Profile”菜单项对代码进行性能分析，PyCharm 中可以用表格或者调用图（Call Graph）的方式来显示性能剖析的结果。</p><p>下面是使用<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">cProfile</font>剖析代码性能的例子。</p><p><font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">example</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">.py</font></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cProfile</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">is_prime</span>(<span class="params">num</span>):</span><br><span class="line">    <span class="keyword">for</span> factor <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, <span class="built_in">int</span>(num ** <span class="number">0.5</span>) + <span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span> num % factor == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PrimeIter</span>:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, total</span>):</span><br><span class="line">        <span class="variable language_">self</span>.counter = <span class="number">0</span></span><br><span class="line">        <span class="variable language_">self</span>.current = <span class="number">1</span></span><br><span class="line">        <span class="variable language_">self</span>.total = total</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__iter__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__next__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>.counter &lt; <span class="variable language_">self</span>.total:</span><br><span class="line">            <span class="variable language_">self</span>.current += <span class="number">1</span></span><br><span class="line">            <span class="keyword">while</span> <span class="keyword">not</span> is_prime(<span class="variable language_">self</span>.current):</span><br><span class="line">                <span class="variable language_">self</span>.current += <span class="number">1</span></span><br><span class="line">            <span class="variable language_">self</span>.counter += <span class="number">1</span></span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">self</span>.current</span><br><span class="line">        <span class="keyword">raise</span> StopIteration()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cProfile.run(<span class="string">&#x27;list(PrimeIter(10000))&#x27;</span>)</span><br></pre></td></tr></table></figure><p>如果使用<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">line_profiler</font>三方工具，可以直接剖析<font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">is</font><font style="color:rgb(209, 154, 102);background-color:rgb(40, 44, 52);">_p</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">rime</font>函数每行代码的性能，需要给<font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">is</font><font style="color:rgb(209, 154, 102);background-color:rgb(40, 44, 52);">_p</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">rime</font>函数添加一个<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">profiler</font>装饰器，代码如下所示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@profiler</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">is_prime</span>(<span class="params">num</span>):</span><br><span class="line">    <span class="keyword">for</span> factor <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, <span class="built_in">int</span>(num ** <span class="number">0.5</span>) + <span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span> num % factor == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br></pre></td></tr></table></figure><p>安装<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">line_profiler</font>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install line_profiler</span><br></pre></td></tr></table></figure><p>使用<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">line_profiler</font>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kernprof -lv example.py</span><br></pre></td></tr></table></figure><p>运行结果如下所示。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Line #    Hits    Time      Per Hit  % Time  Line Contents</span><br><span class="line">==============================================================</span><br><span class="line">     1                                       @profile</span><br><span class="line">     2                                       def is_prime(num):</span><br><span class="line">     3    86624   48420.0   0.6      50.5        for factor in range(2, int(num ** 0.5) + 1):</span><br><span class="line">     4    85624   44000.0   0.5      45.9            if num % factor == 0:</span><br><span class="line">     5    6918     3080.0   0.4       3.2                return False</span><br><span class="line">     6    1000      430.0   0.4       0.4        return True</span><br></pre></td></tr></table></figure><h5 id="题目-36：如何使用random模块生成随机数、实现随机乱序和随机抽样？"><a href="#题目-36：如何使用random模块生成随机数、实现随机乱序和随机抽样？" class="headerlink" title="题目 36：如何使用&lt;font style=&quot;color:rgb(85, 87, 112);&quot;&gt;random&lt;/font&gt;模块生成随机数、实现随机乱序和随机抽样？"></a><font style="color:rgb(85, 87, 112);">题目 36：如何使用</font><code>&lt;font style=&quot;color:rgb(85, 87, 112);&quot;&gt;random&lt;/font&gt;</code><font style="color:rgb(85, 87, 112);">模块生成随机数、实现随机乱序和随机抽样？</font></h5><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">点评</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：送人头的题目，因为 Python 标准库中的常用模块应该是 Python 开发者都比较熟悉的内容，这个问题回如果答不上来，整个面试基本也就砸锅了。</font></p><ol><li><font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">random</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">.</font><font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">random</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">()</font>函数可以生成<font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">[0.0, 1.0)</font>之间的随机浮点数。</li><li><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">random</font><font style="color:rgb(209, 154, 102);background-color:rgb(40, 44, 52);">.uniform</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">(</font><font style="color:rgb(224, 108, 117);background-color:rgb(40, 44, 52);">a</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">,</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(224, 108, 117);background-color:rgb(40, 44, 52);">b</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">)</font>函数可以生成<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">[a, b]</font>或<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">[b, a]</font>之间的随机浮点数。</li><li><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">random</font><font style="color:rgb(209, 154, 102);background-color:rgb(40, 44, 52);">.randint</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">(</font><font style="color:rgb(224, 108, 117);background-color:rgb(40, 44, 52);">a</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">,</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(224, 108, 117);background-color:rgb(40, 44, 52);">b</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">)</font>函数可以生成<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">[a, b]</font>或<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">[b, a]</font>之间的随机整数。</li><li><font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">random</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">.shuffle(x)</font>函数可以实现对序列<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">x</font>的原地随机乱序。</li><li><font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">random</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">.choice(seq)</font>函数可以从非空序列中取出一个随机元素。</li><li><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">random.choices(population,</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">weights</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">&#x3D;None, *,</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">cum_weights</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">&#x3D;None,</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">k</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">&#x3D;1)</font>函数可以从总体中随机抽取（有放回抽样）出容量为<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">k</font>的样本并返回样本的列表，可以通过参数指定个体的权重，如果没有指定权重，个体被选中的概率均等。</li><li><font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">random</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">.sample(population, k)</font>函数可以从总体中随机抽取（无放回抽样）出容量为<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">k</font>的样本并返回样本的列表。</li></ol><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">扩展</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：</font><font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">random</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">模块提供的函数除了生成均匀分布的随机数外，还可以生成其他分布的随机数，例如</font><font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">random</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">.</font><font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">gauss</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">(mu, sigma)</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">函数可以生成高斯分布（正态分布）的随机数；</font><font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">random</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">.</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">paretovariate</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">(</font><font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">alpha</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">)</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">函数会生成帕累托分布的随机数；</font><font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">random</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">.gammavariate(alpha,</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">beta</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">)</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">函数会生成伽马分布的随机数。</font></p><h5 id="题目-37：解释一下线程池的工作原理。"><a href="#题目-37：解释一下线程池的工作原理。" class="headerlink" title="题目 37：解释一下线程池的工作原理。"></a><font style="color:rgb(85, 87, 112);background-color:#EDCE02;">题目 37：解释一下线程池的工作原理。</font></h5><p><strong><font style="color:rgb(79, 79, 79);background-color:#EDCE02;">点评</font></strong><font style="color:rgb(79, 79, 79);background-color:#EDCE02;">：池化技术就是一种典型空间换时间的策略，我们使用的</font><a href="https://link.csdn.net/?target=https://gitcode.com/SequoiaDB/SequoiaDB/overview"><font style="background-color:#EDCE02;">数据库</font></a><font style="color:rgb(79, 79, 79);background-color:#EDCE02;">连接池、线程池等都是池化技术的应用，Python 标准库</font><font style="color:rgb(171, 178, 191);background-color:#EDCE02;">currrent.futures</font><font style="color:rgb(79, 79, 79);background-color:#EDCE02;">模块的</font><font style="color:rgb(152, 195, 121);background-color:#EDCE02;">ThreadPoolExecutor</font><font style="color:rgb(79, 79, 79);background-color:#EDCE02;">就是线程池的实现，如果要弄清楚它的工作原理，可以参考下面的内容。</font></p><p><font style="background-color:#EDCE02;">线程池是一种用于减少线程本身创建和销毁造成的开销的技术，属于典型的空间换时间操作。如果应用程序需要频繁的将任务派发到线程中执行，线程池就是必选项，因为创建和释放线程涉及到大量的系统底层操作，开销较大，如果能够在应用程序工作期间，将创建和释放线程的操作变成预创建和借还操作，将大大减少底层开销。线程池在应用程序启动后，立即创建一定数量的线程，放入空闲队列中。这些线程最开始都处于阻塞状态，不会消耗 CPU 资源，但会占用少量的内存空间。当任务到来后，从队列中取出一个空闲线程，把任务派发到这个线程中运行，并将该线程标记为已占用。当线程池中所有的线程都被占用后，可以选择自动创建一定数量的新线程，用于处理更多的任务，也可以选择让任务排队等待直到有空闲的线程可用。在任务执行完毕后，线程并不退出结束，而是继续保持在池中等待下一次的任务。当系统比较空闲时，大部分线程长时间处于闲置状态时，线程池可以自动销毁一部分线程，回收系统资源。基于这种预创建技术，线程池将线程创建和销毁本身所带来的开销分摊到了各个具体的任务上，执行次数越多，每个任务所分担到的线程本身开销则越小。</font></p><p><font style="background-color:#EDCE02;">一般线程池都必须具备下面几个组成部分：</font></p><ol><li><font style="background-color:#EDCE02;">线程池管理器：用于创建并管理线程池。</font></li><li><font style="background-color:#EDCE02;">工作线程和线程队列：线程池中实际执行的线程以及保存这些线程的容器。</font></li><li><font style="background-color:#EDCE02;">任务接口：将线程执行的任务抽象出来，形成任务接口，确保线程池与具体的任务无关。</font></li><li><font style="background-color:#EDCE02;">任务队列：线程池中保存等待被执行的任务的容器。</font></li></ol><h5 id="题目-38：举例说明什么情况下会出现KeyError、TypeError、ValueError。"><a href="#题目-38：举例说明什么情况下会出现KeyError、TypeError、ValueError。" class="headerlink" title="题目 38：举例说明什么情况下会出现&lt;font style=&quot;color:rgb(85, 87, 112);&quot;&gt;KeyError&lt;/font&gt;、&lt;font style=&quot;color:rgb(85, 87, 112);&quot;&gt;TypeError&lt;/font&gt;、&lt;font style=&quot;color:rgb(85, 87, 112);&quot;&gt;ValueError&lt;/font&gt;。"></a><font style="color:rgb(85, 87, 112);">题目 38：举例说明什么情况下会出现</font><code>&lt;font style=&quot;color:rgb(85, 87, 112);&quot;&gt;KeyError&lt;/font&gt;</code><font style="color:rgb(85, 87, 112);">、</font><code>&lt;font style=&quot;color:rgb(85, 87, 112);&quot;&gt;TypeError&lt;/font&gt;</code><font style="color:rgb(85, 87, 112);">、</font><code>&lt;font style=&quot;color:rgb(85, 87, 112);&quot;&gt;ValueError&lt;/font&gt;</code><font style="color:rgb(85, 87, 112);">。</font></h5><p>举一个简单的例子，变量<font style="color:rgb(224, 108, 117);background-color:rgb(40, 44, 52);">a</font>是一个字典，执行<font style="color:rgb(97, 174, 238);background-color:rgb(40, 44, 52);">int</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">(a[</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">‘x’</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">])</font>这个操作就有可能引发上述三种类型的异常。如果字典中没有键<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">x</font>，会引发<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">KeyError</font>；如果键<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">x</font>对应的值不是<font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">str</font>、<font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">float</font>、<font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">int</font>、<font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">bool</font>以及<font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">bytes-</font><font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">like</font>类型，在调用<font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">int</font>函数构造<font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">int</font>类型的对象时，会引发<font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">TypeError</font>；如果<font style="color:rgb(224, 108, 117);background-color:rgb(40, 44, 52);">a</font><font style="color:rgb(209, 154, 102);background-color:rgb(40, 44, 52);">[x]</font>是一个字符串或者字节串，而对应的内容又无法处理成<font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">int</font>时，将引发<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">ValueError</font>。</p><h5 id="题目-39：说出下面代码的运行结果。"><a href="#题目-39：说出下面代码的运行结果。" class="headerlink" title="题目 39：说出下面代码的运行结果。"></a><font style="color:rgb(85, 87, 112);">题目 39：说出下面代码的运行结果。</font></h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">extend_list</span>(<span class="params">val, items=[]</span>):</span><br><span class="line">    items.append(val)</span><br><span class="line">    <span class="keyword">return</span> items</span><br><span class="line"></span><br><span class="line">list1 = extend_list(<span class="number">10</span>)</span><br><span class="line">list2 = extend_list(<span class="number">123</span>, [])</span><br><span class="line">list3 = extend_list(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(list1)</span><br><span class="line"><span class="built_in">print</span>(list2)</span><br><span class="line"><span class="built_in">print</span>(list3)</span><br></pre></td></tr></table></figure><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">点评</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：Python 函数在定义的时候，默认参数</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">items</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">的值就被计算出来了，即</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">[]</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">。因为默认参数</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">items</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">引用了对象</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">[]</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">，每次调用该函数，如果对</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">items</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">引用的列表进行了操作，下次调用时，默认参数还是引用之前的那个列表而不是重新赋值为</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">[]</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">，所以列表中会有之前添加的元素。如果通过传参的方式为</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">items</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">重新赋值，那么</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">items</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">将引用到新的列表对象，而不再引用默认的那个列表对象。这个题在面试中经常被问到，通常不建议使用容器类型的默认参数，像 PyLint 这样的代码检查工具也会对这种代码提出质疑和警告。</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[10, &#x27;a&#x27;]</span><br><span class="line">[123]</span><br><span class="line">[10, &#x27;a&#x27;]</span><br></pre></td></tr></table></figure><h5 id="题目-40：如何读取大文件，例如内存只有-4G，如何读取一个大小为-8G-的文件？"><a href="#题目-40：如何读取大文件，例如内存只有-4G，如何读取一个大小为-8G-的文件？" class="headerlink" title="题目 40：如何读取大文件，例如内存只有 4G，如何读取一个大小为 8G 的文件？"></a><font style="color:rgb(85, 87, 112);">题目 40：如何读取大文件，例如内存只有 4G，如何读取一个大小为 8G 的文件？</font></h5><p>很显然 4G 内存要一次性的加载大小为 8G 的文件是不现实的，遇到这种情况必须要考虑多次读取和分批次处理。在 Python 中读取文件可以先通过<font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">open</font>函数获取文件对象，在读取文件时，可以通过<font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">read</font>方法的<font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">size</font>参数指定读取的大小，也可以通过<font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">seek</font>方法的<font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">offset</font>参数指定读取的位置，这样就可以控制单次读取数据的字节数和总字节数。除此之外，可以使用内置函数<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">iter</font>将文件对象处理成迭代器对象，每次只读取少量的数据进行处理，代码大致写法如下所示。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">with open(&#x27;...&#x27;, &#x27;rb&#x27;) as file:</span><br><span class="line">    for data in iter(lambda: file.read(2097152), b&#x27;&#x27;):</span><br><span class="line">        pass</span><br></pre></td></tr></table></figure><p>在 Linux 系统上，可以通过<font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">split</font>命令将大文件切割为小片，然后通过读取切割后的小文件对数据进行处理。例如下面的命令将名为<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">filename</font>的大文件切割为大小为 512M 的多个文件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">split -b 512m filename</span><br></pre></td></tr></table></figure><p>如果愿意， 也可以将名为<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">filename</font>的文件切割为 10 个文件，命令如下所示。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">split -n 10 filename</span><br></pre></td></tr></table></figure><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">扩展</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：外部排序跟上述的情况非常类似，由于处理的数据不能一次装入内存，只能放在读写较慢的外存储器（通常是硬盘）上。“</font><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">排序-归并算法</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">”就是一种常用的外部排序策略。在排序阶段，先读入能放在内存中的数据量，将其排序输出到一个临时文件，依此进行，将待排序数据组织为多个有序的临时文件，然后在归并阶段将这些临时文件组合为一个大的有序文件，这个大的有序文件就是排序的结果。</font></p><h5 id="题目-41：说一下你对-Python-中模块和包的理解。"><a href="#题目-41：说一下你对-Python-中模块和包的理解。" class="headerlink" title="题目 41：说一下你对 Python 中模块和包的理解。"></a><font style="color:rgb(85, 87, 112);">题目 41：说一下你对 Python 中模块和包的理解。</font></h5><p>每个 Python 文件就是一个模块，而保存这些文件的文件夹就是一个包，但是这个作为 Python 包的文件夹必须要有一个名为*<font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>init</strong></font><em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">.py</font>的文件，否则无法导入这个包。通常一个文件夹下还可以有子文件夹，这也就意味着一个包下还可以有子包，子包中的</em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>init</strong></font>*<font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">.py</font>并不是必须的。模块和包解决了 Python 中命名冲突的问题，不同的包下可以有同名的模块，不同的模块下可以有同名的变量、函数或类。在 Python 中可以使用<font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">import</font>或<font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">from</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">…</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">import</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">…</font>来导入包和模块，在导入的时候还可以使用<font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">as</font>关键字对包、模块、类、函数、变量等进行别名，从而彻底解决编程中尤其是多人协作团队开发时的命名冲突问题。</p><h5 id="题目-42：说一下你知道的-Python-编码规范。"><a href="#题目-42：说一下你知道的-Python-编码规范。" class="headerlink" title="题目 42：说一下你知道的 Python 编码规范。"></a><font style="color:rgb(85, 87, 112);">题目 42：说一下你知道的 Python 编码规范。</font></h5><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">点评</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：企业的 Python 编码规范基本上是参照 PEP-8 或谷歌开源项目风格指南来制定的，后者还提到了可以使用 Lint 工具来检查代码的规范程度，面试的时候遇到这类问题，可以先说下这两个参照标准，然后挑重点说一下 Python 编码的注意事项。</font></p><ol><li><font style="color:rgb(85, 87, 112);">空格的使用</font></li></ol><ul><li>使用空格来表示缩进而不要用制表符（Tab）。</li><li>和语法相关的每一层缩进都用 4 个空格来表示。</li><li>每行的字符数不要超过 79 个字符，如果表达式因太长而占据了多行，除了首行之外的其余各行都应该在正常的缩进宽度上再加上 4 个空格。</li><li>函数和类的定义，代码前后都要用两个空行进行分隔。</li><li>在同一个类中，各个方法之间应该用一个空行进行分隔。</li><li>二元运算符的左右两侧应该保留一个空格，而且只要一个空格就好。</li></ul><ol><li><font style="color:rgb(85, 87, 112);">标识符命名</font></li></ol><ul><li>变量、函数和属性应该使用小写字母来拼写，如果有多个单词就使用下划线进行连接。</li><li>类中受保护的实例属性，应该以一个下划线开头。</li><li>类中私有的实例属性，应该以两个下划线开头。</li><li>类和异常的命名，应该每个单词首字母大写。</li><li>模块级别的常量，应该采用全大写字母，如果有多个单词就用下划线进行连接。</li><li>类的实例方法，应该把第一个参数命名为<font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">self</font>以表示对象自身。</li><li>类的类方法，应该把第一个参数命名为<font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">cls</font>以表示该类自身。</li></ul><ol><li><font style="color:rgb(85, 87, 112);">表达式和语句</font></li></ol><ul><li>采用内联形式的否定词，而不要把否定词放在整个表达式的前面。例如：<font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">if</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(224, 108, 117);background-color:rgb(40, 44, 52);">a</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">is not</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(224, 108, 117);background-color:rgb(40, 44, 52);">b</font>就比<font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">if not</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(224, 108, 117);background-color:rgb(40, 44, 52);">a</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">is</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(224, 108, 117);background-color:rgb(40, 44, 52);">b</font>更容易让人理解。</li><li>不要用检查长度的方式来判断字符串、列表等是否为<font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">None</font>或者没有元素，应该用<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">if not x</font>这样的写法来检查它。</li><li>就算<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">if</font>分支、<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">for</font>循环、<font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">except</font>异常捕获等中只有一行代码，也不要将代码和<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">if</font>、<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">for</font>、<font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">except</font>等写在一起，分开写才会让代码更清晰。</li><li><font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">import</font>语句总是放在文件开头的地方。</li><li>引入模块的时候，<font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">from</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">math</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">import</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">sqrt</font>比<font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">import</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">math</font>更好。</li><li>如果有多个<font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">import</font>语句，应该将其分为三部分，从上到下分别是 Python<strong>标准模块</strong>、<strong>第三方模块</strong>和<strong>自定义模块</strong>，每个部分内部应该按照模块名称的<strong>字母表顺序</strong>来排列。</li></ul><h5 id="题目-43：运行下面的代码是否会报错，如果报错请说明哪里有什么样的错，如果不报错请说出代码的执行结果。"><a href="#题目-43：运行下面的代码是否会报错，如果报错请说明哪里有什么样的错，如果不报错请说出代码的执行结果。" class="headerlink" title="题目 43：运行下面的代码是否会报错，如果报错请说明哪里有什么样的错，如果不报错请说出代码的执行结果。"></a><font style="color:rgb(85, 87, 112);">题目 43：运行下面的代码是否会报错，如果报错请说明哪里有什么样的错，如果不报错请说出代码的执行结果。</font></h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, value</span>):</span><br><span class="line">        <span class="variable language_">self</span>.__value = value</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">value</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.__value</span><br><span class="line"></span><br><span class="line">obj = A(<span class="number">1</span>)</span><br><span class="line">obj.__value = <span class="number">2</span></span><br><span class="line"><span class="built_in">print</span>(obj.value)</span><br><span class="line"><span class="built_in">print</span>(obj.__value)</span><br></pre></td></tr></table></figure><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">点评</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：这道题有两个考察点，一个考察点是对</font><font style="color:rgb(86, 182, 194);background-color:rgb(40, 44, 52);">_</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">和</font><font style="color:rgb(97, 174, 238);background-color:rgb(40, 44, 52);">__</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">开头的对象属性访问权限以及</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">@</font><font style="color:rgb(198, 120, 221);background-color:rgb(40, 44, 52);">property</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">装饰器的了解，另外一个考察的点是对动态语言的理解，不需要过多的解释。</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td></tr></table></figure><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">扩展</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：如果不希望代码运行时动态的给对象添加新属性，可以在定义类时使用</font><em><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"><strong>slots</strong></font></em><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">魔法。例如，我们可以在上面的</font><font style="color:rgb(224, 108, 117);background-color:rgb(40, 44, 52);">A</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">中添加一行</font><font style="color:rgb(209, 154, 102);background-color:rgb(40, 44, 52);"><strong>slots</strong></font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">&#x3D; (</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">‘__value’</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">, )</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">，再次运行上面的代码，将会在原来的第 10 行处产生</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">AttributeError</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">错误。</font></p><h5 id="题目-44：对下面给出的字典按值从大到小对键进行排序。"><a href="#题目-44：对下面给出的字典按值从大到小对键进行排序。" class="headerlink" title="题目 44：对下面给出的字典按值从大到小对键进行排序。"></a><font style="color:rgb(85, 87, 112);">题目 44：对下面给出的字典按值从大到小对键进行排序。</font></h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">prices = &#123;</span><br><span class="line">    &#x27;AAPL&#x27;: 191.88,</span><br><span class="line">    &#x27;GOOG&#x27;: 1186.96,</span><br><span class="line">    &#x27;IBM&#x27;: 149.24,</span><br><span class="line">    &#x27;ORCL&#x27;: 48.44,</span><br><span class="line">    &#x27;ACN&#x27;: 166.89,</span><br><span class="line">    &#x27;FB&#x27;: 208.09,</span><br><span class="line">    &#x27;SYMC&#x27;: 21.29</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">点评</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">sorted</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">函数的高阶用法在面试的时候经常出现，</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">key</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">参数可以传入一个函数名或一个 Lambda 函数，该函数的返回值代表了在排序时比较元素的依据。</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sorted(prices, key=lambda x: prices[x], reverse=True)</span><br></pre></td></tr></table></figure><h5 id="题目-45：说一下namedtuple的用法和作用。"><a href="#题目-45：说一下namedtuple的用法和作用。" class="headerlink" title="题目 45：说一下&lt;font style=&quot;color:rgb(85, 87, 112);&quot;&gt;namedtuple&lt;/font&gt;的用法和作用。"></a><font style="color:rgb(85, 87, 112);">题目 45：说一下</font><code>&lt;font style=&quot;color:rgb(85, 87, 112);&quot;&gt;namedtuple&lt;/font&gt;</code><font style="color:rgb(85, 87, 112);">的用法和作用。</font></h5><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">点评</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：Python 标准库的</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">collections</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">模块提供了很多有用的数据结构，这些内容并不是每个开发者都清楚，就比如题目问到的</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">namedtuple</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">，在我参加过的面试中，90%的面试者都不能准确的说出它的作用和应用场景。此外，</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">deque</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">也是一个非常有用但又经常被忽视的类，还有</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">Counter</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">、</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">OrderedDict</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);"> </font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">、</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">defaultdict</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);"> </font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">、</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">UserDict</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">等类，大家清楚它们的用法吗？</font></p><p>在使用面向对象编程语言的时候，定义类是最常见的一件事情，有的时候，我们会用到只有属性没有方法的类，这种类的对象通常只用于组织数据，并不能接收消息，所以我们把这种类称为数据类或者退化的类，就像 C 语言中的结构体那样。我们并不建议使用这种退化的类，在 Python 中可以用<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">namedtuple</font>（命名元组）来替代这种类。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> namedtuple</span><br><span class="line"></span><br><span class="line">Card = namedtuple(<span class="string">&#x27;Card&#x27;</span>, (<span class="string">&#x27;suite&#x27;</span>, <span class="string">&#x27;face&#x27;</span>))</span><br><span class="line">card1 = Card(<span class="string">&#x27;红桃&#x27;</span>, <span class="number">13</span>)</span><br><span class="line">card2 = Card(<span class="string">&#x27;草花&#x27;</span>, <span class="number">5</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;card1.suite&#125;</span><span class="subst">&#123;card1.face&#125;</span>&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;card2.suite&#125;</span><span class="subst">&#123;card2.face&#125;</span>&#x27;</span>)</span><br></pre></td></tr></table></figure><p>命名元组与普通元组一样是不可变容器，一旦将数据存储在<font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">namedtuple</font>的顶层属性中，数据就不能再修改了，也就意味着对象上的所有属性都遵循“一次写入，多次读取”的原则。和普通元组不同的是，命名元组中的数据有访问名称，可以通过名称而不是索引来获取保存的数据，不仅在操作上更加简单，代码的可读性也会更好。</p><p>命名元组的本质就是一个类，所以它还可以作为父类创建子类。除此之外，命名元组内置了一系列的方法，例如，可以通过<font style="color:rgb(209, 154, 102);background-color:rgb(40, 44, 52);"><em>asdict</font>方法将命名元组处理成字典，也可以通过<font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"></em></font><font style="color:rgb(230, 192, 123);background-color:rgb(40, 44, 52);">replace</font>方法创建命名元组对象的浅拷贝。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyCard</span>(<span class="title class_ inherited__">Card</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">show</span>(<span class="params">self</span>):</span><br><span class="line">        faces = [<span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;7&#x27;</span>, <span class="string">&#x27;8&#x27;</span>, <span class="string">&#x27;9&#x27;</span>, <span class="string">&#x27;10&#x27;</span>, <span class="string">&#x27;J&#x27;</span>, <span class="string">&#x27;Q&#x27;</span>, <span class="string">&#x27;K&#x27;</span>]</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&#x27;<span class="subst">&#123;self.suite&#125;</span><span class="subst">&#123;faces[self.face]&#125;</span>&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(Card)    <span class="comment"># &lt;class &#x27;__main__.Card&#x27;&gt;</span></span><br><span class="line">card3 = MyCard(<span class="string">&#x27;方块&#x27;</span>, <span class="number">12</span>)</span><br><span class="line"><span class="built_in">print</span>(card3.show())    <span class="comment"># 方块Q</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">dict</span>(card1._asdict()))    <span class="comment"># &#123;&#x27;suite&#x27;: &#x27;红桃&#x27;, &#x27;face&#x27;: 13&#125;</span></span><br><span class="line"><span class="built_in">print</span>(card2._replace(suite=<span class="string">&#x27;方块&#x27;</span>))    <span class="comment"># Card(suite=&#x27;方块&#x27;, face=5)</span></span><br></pre></td></tr></table></figure><p>总而言之，命名元组能更好的组织数据结构，让代码更加清晰和可读，在很多场景下是元组、字典和数据类的替代品。在需要创建占用空间更少的不可变类时，命名元组就是很好的选择。</p><h5 id="题目-46：按照题目要求写出对应的函数。"><a href="#题目-46：按照题目要求写出对应的函数。" class="headerlink" title="题目 46：按照题目要求写出对应的函数。"></a><font style="color:rgb(85, 87, 112);">题目 46：按照题目要求写出对应的函数。</font></h5><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">要求</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：写一个函数，传入一个有若干个整数的列表，该列表中某个元素出现的次数超过了 50%，返回这个元素。</font></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">more_than_half</span>(<span class="params">items</span>):</span><br><span class="line">    temp, times = <span class="literal">None</span>, <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> items:</span><br><span class="line">        <span class="keyword">if</span> times == <span class="number">0</span>:</span><br><span class="line">            temp = item</span><br><span class="line">            times += <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> item == temp:</span><br><span class="line">                times += <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                times -= <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> temp</span><br></pre></td></tr></table></figure><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">点评</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：LeetCode 上的题目，在 Python 面试中出现过，利用元素出现次数超过了 50%这一特征，出现和</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">temp</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">相同的元素就将计数值加 1，出现和</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">temp</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">不同的元素就将计数值减 1。如果计数值为</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">0</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">，说明之前出现的元素已经对最终的结果没有影响，用</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">temp</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">记下当前元素并将计数值置为</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">1</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">。最终，出现次数超过了 50%的这个元素一定会被赋值给变量</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">temp</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">。</font></p><h5 id="题目-47：按照题目要求写出对应的函数。"><a href="#题目-47：按照题目要求写出对应的函数。" class="headerlink" title="题目 47：按照题目要求写出对应的函数。"></a><font style="color:rgb(85, 87, 112);">题目 47：按照题目要求写出对应的函数。</font></h5><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">要求</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：写一个函数，传入的参数是一个列表（列表中的元素可能也是一个列表），返回该列表最大的嵌套深度。例如：列表</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">[1, 2, 3]</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">的嵌套深度为</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">1</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">，列表</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">[[1], [2, [3]]</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">]</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">的嵌套深度为</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">3</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">。</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">def list_depth(items):</span><br><span class="line">    if isinstance(items, list):</span><br><span class="line">        max_depth = 1</span><br><span class="line">        for item in items:</span><br><span class="line">            max_depth = max(list_depth(item) + 1, max_depth)</span><br><span class="line">        return max_depth</span><br><span class="line">    return 0</span><br></pre></td></tr></table></figure><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">点评</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：看到题目应该能够比较自然的想到使用递归的方式检查列表中的每个元素。</font></p><h5 id="题目-48：按照题目要求写出对应的装饰器。"><a href="#题目-48：按照题目要求写出对应的装饰器。" class="headerlink" title="题目 48：按照题目要求写出对应的装饰器。"></a><font style="color:rgb(85, 87, 112);">题目 48：按照题目要求写出对应的装饰器。</font></h5><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">要求</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：有一个通过网络获取数据的函数（可能会因为网络原因出现异常），写一个装饰器让这个函数在出现指定异常时可以重试指定的次数，并在每次重试之前随机延迟一段时间，最长延迟时间可以通过参数进行控制。</font></p><p>方法一：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> wraps</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">retry</span>(<span class="params">*, retry_times=<span class="number">3</span>, max_wait_secs=<span class="number">5</span>, errors=(<span class="params">Exception, </span>)</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">decorate</span>(<span class="params">func</span>):</span><br><span class="line"></span><br><span class="line"><span class="meta">        @wraps(<span class="params">func</span>)</span></span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">wrapper</span>(<span class="params">*args, **kwargs</span>):</span><br><span class="line">            <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(retry_times):</span><br><span class="line">                <span class="keyword">try</span>:</span><br><span class="line">                    <span class="keyword">return</span> func(*args, **kwargs)</span><br><span class="line">                <span class="keyword">except</span> errors:</span><br><span class="line">                    sleep(random() * max_wait_secs)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> wrapper</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> decorate</span><br></pre></td></tr></table></figure><p>方法二：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">from functools import wraps</span><br><span class="line">from random import random</span><br><span class="line">from time import sleep</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class Retry(object):</span><br><span class="line"></span><br><span class="line">    def __init__(self, *, retry_times=3, max_wait_secs=5, errors=(Exception, )):</span><br><span class="line">        self.retry_times = retry_times</span><br><span class="line">        self.max_wait_secs = max_wait_secs</span><br><span class="line">        self.errors = errors</span><br><span class="line"></span><br><span class="line">    def __call__(self, func):</span><br><span class="line"></span><br><span class="line">        @wraps(func)</span><br><span class="line">        def wrapper(*args, **kwargs):</span><br><span class="line">            for _ in range(self.retry_times):</span><br><span class="line">                try:</span><br><span class="line">                    return func(*args, **kwargs)</span><br><span class="line">                except self.errors:</span><br><span class="line">                    sleep(random() * self.max_wait_secs)</span><br><span class="line">            return None</span><br><span class="line"></span><br><span class="line">        return wrapper</span><br></pre></td></tr></table></figure><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">点评</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：我们不止一次强调过，装饰器几乎是 Python 面试必问内容，这个题目比之前的题目稍微复杂一些，它需要的是一个参数化的装饰器。</font></p><h5 id="题目-49：写一个函数实现字符串反转，尽可能写出你知道的所有方法。"><a href="#题目-49：写一个函数实现字符串反转，尽可能写出你知道的所有方法。" class="headerlink" title="题目 49：写一个函数实现字符串反转，尽可能写出你知道的所有方法。"></a><font style="color:rgb(85, 87, 112);">题目 49：写一个函数实现字符串反转，尽可能写出你知道的所有方法。</font></h5><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">点评</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：烂大街的题目，基本上算是送人头的题目。</font></p><p><strong>方法一</strong>：反向切片</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">def reverse_string(content):</span><br><span class="line">    return content[::-1]</span><br></pre></td></tr></table></figure><p><strong>方法二</strong>：反转拼接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">def reverse_string(content):</span><br><span class="line">    return &#x27;&#x27;.join(reversed(content))</span><br></pre></td></tr></table></figure><p><strong>方法三</strong>：递归调用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">def reverse_string(content):</span><br><span class="line">    if len(content) &lt;= 1:</span><br><span class="line">        return content</span><br><span class="line">    return reverse_string(content[1:]) + content[0]</span><br></pre></td></tr></table></figure><p><strong>方法四</strong>：双端队列</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">from collections import deque</span><br><span class="line"></span><br><span class="line">def reverse_string(content):</span><br><span class="line">    q = deque()</span><br><span class="line">    q.extendleft(content)</span><br><span class="line">    return &#x27;&#x27;.join(q)</span><br></pre></td></tr></table></figure><p><strong>方法五</strong>：反向组装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">from io import StringIO</span><br><span class="line"></span><br><span class="line">def reverse_string(content):</span><br><span class="line">    buffer = StringIO()</span><br><span class="line">    for i in range(len(content) - 1, -1, -1):</span><br><span class="line">        buffer.write(content[i])</span><br><span class="line">    return buffer.getvalue()</span><br></pre></td></tr></table></figure><p><strong>方法六</strong>：反转拼接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">def reverse_string(content):</span><br><span class="line">    return &#x27;&#x27;.join([content[i] for i in range(len(content) - 1, -1, -1)])</span><br></pre></td></tr></table></figure><p><strong>方法七</strong>：半截交换</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">def reverse_string(content):</span><br><span class="line">    length, content= len(content), list(content)</span><br><span class="line">    for i in range(length // 2):</span><br><span class="line">        content[i], content[length - 1 - i] = content[length - 1 - i], content[i]</span><br><span class="line">    return &#x27;&#x27;.join(content)</span><br></pre></td></tr></table></figure><p><strong>方法八</strong>：对位交换</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">def reverse_string(content):</span><br><span class="line">    length, content= len(content), list(content)</span><br><span class="line">    for i, j in zip(range(length // 2), range(length - 1, length // 2 - 1, -1)):</span><br><span class="line">        content[i], content[j] = content[j], content[i]</span><br><span class="line">    return &#x27;&#x27;.join(content)</span><br></pre></td></tr></table></figure><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">扩展</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：这些方法其实都是大同小异的，面试的时候能够给出几种有代表性的就足够了。给大家留一个思考题，上面这些方法，哪些做法的性能较好呢？我们之前提到过剖析代码性能的方法，大家可以用这些方法来检验下你给出的答案是否正确。</font></p><h5 id="题目-50：按照题目要求写出对应的函数。"><a href="#题目-50：按照题目要求写出对应的函数。" class="headerlink" title="题目 50：按照题目要求写出对应的函数。"></a><font style="color:rgb(85, 87, 112);">题目 50：按照题目要求写出对应的函数。</font></h5><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">要求</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：列表中有</font><font style="color:rgb(209, 154, 102);background-color:rgb(40, 44, 52);">1000000</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">个元素，取值范围是</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">[</font><font style="color:rgb(209, 154, 102);background-color:rgb(40, 44, 52);">1000</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">,</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);"> </font><font style="color:rgb(209, 154, 102);background-color:rgb(40, 44, 52);">10000</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">)</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">，设计一个函数找出列表中的重复元素。</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">def find_dup(items: list):</span><br><span class="line">    dups = [0] * 9000</span><br><span class="line">    for item in items:</span><br><span class="line">        dups[item - 1000] += 1</span><br><span class="line">    for idx, val in enumerate(dups):</span><br><span class="line">        if val &gt; 1:</span><br><span class="line">            yield idx + 1000</span><br></pre></td></tr></table></figure><p><strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">点评</font></strong><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">：这道题的解法和计数排序的原理一致，虽然元素的数量非常多，但是取值范围</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">[</font><font style="color:rgb(209, 154, 102);background-color:rgb(40, 44, 52);">1000</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">, </font><font style="color:rgb(209, 154, 102);background-color:rgb(40, 44, 52);">10000</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">)</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">并不是很大，只有 9000 个可能的取值，所以可以用一个能够保存 9000 个元素的</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">dups</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">列表来记录每个元素出现的次数，</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">dups</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">列表所有元素的初始值都是</font><font style="color:rgb(171, 178, 191);background-color:rgb(40, 44, 52);">0</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">，通过对</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">items</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">列表中元素的遍历，当出现某个元素时，将</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">dups</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">列表对应位置的值加 1，最后</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">dups</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">列表中值大于 1 的元素对应的就是</font><font style="color:rgb(152, 195, 121);background-color:rgb(40, 44, 52);">items</font><font style="color:rgb(79, 79, 79);background-color:rgb(238, 240, 244);">列表中重复出现过的元素。</font></p><blockquote><p>更新: 2024-05-02 11:38:36<br>原文: <a href="https://www.yuque.com/zacharyblock/cx2om6/slgtyqlpzyibq4yr">https://www.yuque.com/zacharyblock/cx2om6/slgtyqlpzyibq4yr</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;面经-2&quot;&gt;&lt;a href=&quot;#面经-2&quot; class=&quot;headerlink&quot; title=&quot;面经 2&quot;&gt;&lt;/a&gt;面经 2&lt;/h1&gt;&lt;h5 id=&quot;题目-001-在-Python-中如何实现单例模式。&quot;&gt;&lt;a href=&quot;#题目-001-在-Python-中如何</summary>
      
    
    
    
    <category term="Python 面经" scheme="https://blockzachary.github.io/categories/Python-%E9%9D%A2%E7%BB%8F/"/>
    
    
    <category term="Python" scheme="https://blockzachary.github.io/tags/Python/"/>
    
    <category term="面经" scheme="https://blockzachary.github.io/tags/%E9%9D%A2%E7%BB%8F/"/>
    
  </entry>
  
  <entry>
    <title>面经</title>
    <link href="https://blockzachary.github.io/2024/03/18/%E9%9D%A2%E7%BB%8F_%E9%9D%A2%E8%AF%95%E9%A2%98/%E9%9D%A2%E7%BB%8F/"/>
    <id>https://blockzachary.github.io/2024/03/18/%E9%9D%A2%E7%BB%8F_%E9%9D%A2%E8%AF%95%E9%A2%98/%E9%9D%A2%E7%BB%8F/</id>
    <published>2024-03-18T23:42:00.000Z</published>
    <updated>2024-03-18T23:42:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="面经"><a href="#面经" class="headerlink" title="面经"></a>面经</h1><h4 id="一面"><a href="#一面" class="headerlink" title="一面"></a>一面</h4><h5 id="网络和操作系统方面"><a href="#网络和操作系统方面" class="headerlink" title="网络和操作系统方面"></a>网络和操作系统方面</h5><ul><li>说一下 TCP 的三次握手？</li><li>什么时候用多线程？多线程的优势是什么？为什么用多线程不用多进程？python 的多线程 start 以后立马能起来吗？</li><li>讲一下 IO 多路复用？</li></ul><h5 id="flask-方面"><a href="#flask-方面" class="headerlink" title="flask 方面"></a>flask 方面</h5><ul><li>Flask 的底层原理讲一下？描述一下 flask 是怎么处理 url 请求的，整个底层流程是怎么样大概说下就行；</li><li>endpoint 是啥，讲一下？</li><li>before request 有用过吗？触发 before request 钩子是在 view function 以前还是以后？</li><li>常用的 rest 接口有哪些？你是怎么写类视图的？例子讲一下；</li><li>大概就这么多，其他问题的想不起来了</li></ul><h5 id="mysql-方面"><a href="#mysql-方面" class="headerlink" title="mysql 方面"></a>mysql 方面</h5><ul><li>讲下聚簇索引？</li><li>聚簇索引的优点？</li><li>为什么使用 B+树作为索引数据结构？</li><li>你是怎么 sql 或者索引调优的？慢查询日志里面的内容是啥？</li></ul><p>数据库方面问的不多，比较简单，如果忘了可以看我右边这篇博客<a href="https://github.com/ewenliu/Learning_Note/blob/master/Mysql%E7%83%AD%E7%82%B9%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93.md">Github-Mysql 热点问题总结</a></p><h5 id="redis-方面"><a href="#redis-方面" class="headerlink" title="redis 方面"></a>redis 方面</h5><ul><li>redis 常用的数据类型有哪些？</li><li>持久化 rdb 和 aof 讲一下</li><li>知道 redis 中 list 的底层实现原理吗？</li></ul><p>redis 问也比较基础，如果忘了可以看右边这篇博客<a href="https://github.com/ewenliu/Learning_Note/blob/master/Redis%E7%83%AD%E7%82%B9%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93.md">Github-Redis 热点问题总结</a></p><h5 id="python-基础"><a href="#python-基础" class="headerlink" title="python 基础"></a>python 基础</h5><ul><li>用的是 python2 还是 3？为什么用 3？知道最新的稳定版本是哪个吗？</li><li>知道 python3 的新特性吗？</li><li>迭代器和生成器说一下？</li><li>类方法用过吗？<strong>str</strong>和<strong>repr</strong>区别？</li><li>类里面怎么实现<strong>iter</strong>？</li><li>GIL 讲一下？讲一下多线程下 GIL 和线程的关系？</li><li>协程用过吗？yield 讲一下</li></ul><h4 id="二面"><a href="#二面" class="headerlink" title="二面"></a>二面</h4><ul><li>未来有什么职业规划？</li><li>觉得杭州怎么样？</li><li>觉得技术该如何深入？哪方面深入有想过吗？</li><li>觉得 python 未来怎么样？python 机会这么少有考虑以后怎么深入学习吗？</li><li>聊一下高并发下缓存和数据库双写一致问题？</li><li>你有什么要问我的吗</li></ul><h3 id="https-zhuanlan-zhihu-com-p-657610494"><a href="#https-zhuanlan-zhihu-com-p-657610494" class="headerlink" title="https://zhuanlan.zhihu.com/p/657610494"></a><a href="https://zhuanlan.zhihu.com/p/657610494">https://zhuanlan.zhihu.com/p/657610494</a></h3><blockquote><p>更新: 2024-03-19 00:02:17<br>原文: <a href="https://www.yuque.com/zacharyblock/cx2om6/htbuqvxbegprrme6">https://www.yuque.com/zacharyblock/cx2om6/htbuqvxbegprrme6</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;面经&quot;&gt;&lt;a href=&quot;#面经&quot; class=&quot;headerlink&quot; title=&quot;面经&quot;&gt;&lt;/a&gt;面经&lt;/h1&gt;&lt;h4 id=&quot;一面&quot;&gt;&lt;a href=&quot;#一面&quot; class=&quot;headerlink&quot; title=&quot;一面&quot;&gt;&lt;/a&gt;一面&lt;/h4&gt;&lt;h5 id</summary>
      
    
    
    
    <category term="Python 面经" scheme="https://blockzachary.github.io/categories/Python-%E9%9D%A2%E7%BB%8F/"/>
    
    
    <category term="Python" scheme="https://blockzachary.github.io/tags/Python/"/>
    
    <category term="面经" scheme="https://blockzachary.github.io/tags/%E9%9D%A2%E7%BB%8F/"/>
    
  </entry>
  
  <entry>
    <title>面试题</title>
    <link href="https://blockzachary.github.io/2024/03/18/%E9%9D%A2%E7%BB%8F_%E9%9D%A2%E8%AF%95%E9%A2%98/%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    <id>https://blockzachary.github.io/2024/03/18/%E9%9D%A2%E7%BB%8F_%E9%9D%A2%E8%AF%95%E9%A2%98/%E9%9D%A2%E8%AF%95%E9%A2%98/</id>
    <published>2024-03-18T23:37:00.000Z</published>
    <updated>2024-03-18T23:37:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="面试题"><a href="#面试题" class="headerlink" title="面试题"></a>面试题</h1><h1 id="Python-基础语言特性"><a href="#Python-基础语言特性" class="headerlink" title="Python 基础语言特性"></a>Python 基础语言特性</h1><h2 id="1-Python-反转序列-列表、元组、字符串-的几种方法"><a href="#1-Python-反转序列-列表、元组、字符串-的几种方法" class="headerlink" title="1 Python 反转序列(列表、元组、字符串)的几种方法"></a>1 Python 反转序列(列表、元组、字符串)的几种方法</h2><p>原文参考：<a href="https://revotu.github.io/reverse-sequence-list-tuple-str-in-python.html">Python 反转序列(列表、元组、字符串)的几种方法</a></p><h2 id="2-Python-矩阵转置方法-二维列表行列互换"><a href="#2-Python-矩阵转置方法-二维列表行列互换" class="headerlink" title="2 Python 矩阵转置方法(二维列表行列互换)"></a>2 Python 矩阵转置方法(二维列表行列互换)</h2><p>原文参考：<a href="https://revotu.github.io/matrix-transpose-in-python.html">Python 矩阵转置方法(二维列表行列互换)</a></p><h2 id="3-Python-合并两个字典成一个新字典的几种方法分析比较"><a href="#3-Python-合并两个字典成一个新字典的几种方法分析比较" class="headerlink" title="3 Python 合并两个字典成一个新字典的几种方法分析比较"></a>3 Python 合并两个字典成一个新字典的几种方法分析比较</h2><p>原文参考：<a href="https://revotu.github.io/python-merge-two-dicts-into-one-dict.html">Python 合并两个字典成一个新字典的几种方法分析比较</a></p><h2 id="4-用-pythonic-的方法合并两个列表成一个字典"><a href="#4-用-pythonic-的方法合并两个列表成一个字典" class="headerlink" title="4 用 pythonic 的方法合并两个列表成一个字典"></a>4 用 pythonic 的方法合并两个列表成一个字典</h2><p>原文参考：<a href="https://revotu.github.io/pythonic-method-merge-two-list-to-one-dict.html">用 pythonic 的方法合并两个列表成一个字典</a></p><h2 id="5-三种-pythonic-的方法交换字典的键-keys-和值-values"><a href="#5-三种-pythonic-的方法交换字典的键-keys-和值-values" class="headerlink" title="5 三种 pythonic 的方法交换字典的键 keys 和值 values"></a>5 三种 pythonic 的方法交换字典的键 keys 和值 values</h2><p>原文参考：<a href="https://revotu.github.io/three-pythonic-ways-to-swap-dict-keys-and-values.html">三种 pythonic 的方法交换字典的键 keys 和值 values</a></p><h2 id="6-Python-文件内容按行读取到列表中"><a href="#6-Python-文件内容按行读取到列表中" class="headerlink" title="6 Python 文件内容按行读取到列表中"></a>6 Python 文件内容按行读取到列表中</h2><p>原文参考：<a href="https://revotu.github.io/read-file-to-list-by-line.html">Python 文件内容按行读取到列表中</a></p><h2 id="7-Python-内置函数-any-和-all-的用法及示例"><a href="#7-Python-内置函数-any-和-all-的用法及示例" class="headerlink" title="7 Python 内置函数 any 和 all 的用法及示例"></a>7 Python 内置函数 any 和 all 的用法及示例</h2><p>原文参考：<a href="https://revotu.github.io/python-built-in-function-any-and-all.html">Python 内置函数 any 和 all 的用法及示例</a></p><h2 id="8-Python2-和-Python3-中字典的-keys-、values-、items-方法的区别"><a href="#8-Python2-和-Python3-中字典的-keys-、values-、items-方法的区别" class="headerlink" title="8 Python2 和 Python3 中字典的 keys()、values()、items()方法的区别"></a>8 Python2 和 Python3 中字典的 keys()、values()、items()方法的区别</h2><p>原文参考：<a href="https://revotu.github.io/difference-dict-keys-values-items-between-python2-and-python3.html">Python2 和 Python3 中字典的 keys()、values()、items()方法的区别</a></p><h1 id="Python-数据结构与算法"><a href="#Python-数据结构与算法" class="headerlink" title="Python 数据结构与算法"></a>Python 数据结构与算法</h1><h2 id="1-剑指-offer-Python-版答案"><a href="#1-剑指-offer-Python-版答案" class="headerlink" title="1 剑指 offer-Python 版答案"></a>1 剑指 offer-Python 版答案</h2><p>原文参考：<a href="https://revotu.github.io/coding-interviews-python-solutions.html">剑指 offer-Python 版答案</a></p><h2 id="2-Python-基于列表实现数据结构栈-stack-和队列-queue"><a href="#2-Python-基于列表实现数据结构栈-stack-和队列-queue" class="headerlink" title="2 Python 基于列表实现数据结构栈 stack 和队列 queue"></a>2 Python 基于列表实现数据结构栈 stack 和队列 queue</h2><p>原文参考：<a href="https://revotu.github.io/python-implement-data-stucture-stack-and-queue-base-on-list.html">Python 基于列表实现数据结构栈 stack 和队列 queue</a></p><h1 id="Python-实现经典编程题"><a href="#Python-实现经典编程题" class="headerlink" title="Python 实现经典编程题"></a>Python 实现经典编程题</h1><h2 id="1-Python-求斐波那契数列的第-n-项几种方法"><a href="#1-Python-求斐波那契数列的第-n-项几种方法" class="headerlink" title="1 Python 求斐波那契数列的第 n 项几种方法"></a>1 Python 求斐波那契数列的第 n 项几种方法</h2><p>原文参考：<a href="https://revotu.github.io/python-get-fibonacci-n-number.html">Python 求斐波那契数列的第 n 项几种方法</a></p><h2 id="2-Python-解决跳台阶、变态跳台阶、矩形覆盖问题"><a href="#2-Python-解决跳台阶、变态跳台阶、矩形覆盖问题" class="headerlink" title="2 Python 解决跳台阶、变态跳台阶、矩形覆盖问题"></a>2 Python 解决跳台阶、变态跳台阶、矩形覆盖问题</h2><p>原文参考：[Python 解决跳台阶、变态跳台阶、矩形覆盖问题](</p><blockquote><p>更新: 2024-03-18 23:38:17<br>原文: <a href="https://www.yuque.com/zacharyblock/cx2om6/mhqafzzferxw1206">https://www.yuque.com/zacharyblock/cx2om6/mhqafzzferxw1206</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;面试题&quot;&gt;&lt;a href=&quot;#面试题&quot; class=&quot;headerlink&quot; title=&quot;面试题&quot;&gt;&lt;/a&gt;面试题&lt;/h1&gt;&lt;h1 id=&quot;Python-基础语言特性&quot;&gt;&lt;a href=&quot;#Python-基础语言特性&quot; class=&quot;headerlink&quot; ti</summary>
      
    
    
    
    <category term="Python 面经" scheme="https://blockzachary.github.io/categories/Python-%E9%9D%A2%E7%BB%8F/"/>
    
    
    <category term="Python" scheme="https://blockzachary.github.io/tags/Python/"/>
    
    <category term="面经" scheme="https://blockzachary.github.io/tags/%E9%9D%A2%E7%BB%8F/"/>
    
  </entry>
  
</feed>
