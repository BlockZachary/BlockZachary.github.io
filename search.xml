<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>FastAPI入门-学生成绩管理</title>
      <link href="/2024/05/26/FastAPI%E5%85%A5%E9%97%A8/%E5%AD%A6%E7%94%9F%E6%88%90%E7%BB%A9%E7%AE%A1%E7%90%86/"/>
      <url>/2024/05/26/FastAPI%E5%85%A5%E9%97%A8/%E5%AD%A6%E7%94%9F%E6%88%90%E7%BB%A9%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="学生成绩管理"><a href="#学生成绩管理" class="headerlink" title="学生成绩管理"></a>学生成绩管理</h1><h2 id="成绩表设计"><a href="#成绩表设计" class="headerlink" title="成绩表设计"></a>成绩表设计</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710672515547-06744996-10e2-4629-895f-049353a26c84.png"></p><h2 id="管理员课程打分"><a href="#管理员课程打分" class="headerlink" title="管理员课程打分"></a>管理员课程打分</h2><h3 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h3><p>添加课程打分弹窗</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.name&quot;</span><br><span class="line">        placeholder=&quot;请输入要查询的课程名称&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;margin-left:10px; width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.number&quot;</span><br><span class="line">        placeholder=&quot;请输入课程编号&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-button type=&quot;info&quot; plain style=&quot;margin: 0 0 0 10px&quot; @click=&quot;reset&quot;</span><br><span class="line">        &gt;重置&lt;/el-button</span><br><span class="line">      &gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-table :data=&quot;data.tableData&quot; stripe style=&quot;width: 100%&quot;&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;id&quot; label=&quot;ID&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;name&quot; label=&quot;课程名称&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;number&quot; label=&quot;课程编号&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;student.name&quot; label=&quot;学生名称&quot; /&gt;</span><br><span class="line">          &lt;el-table-column label=&quot;操作&quot; align=&quot;center&quot; width=&quot;180px&quot;&gt;</span><br><span class="line">            &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">              &lt;el-button</span><br><span class="line">                type=&quot;primary&quot;</span><br><span class="line">                size=&quot;small&quot;</span><br><span class="line">                plain</span><br><span class="line">                @click=&quot;addGrade(scope.row)&quot;</span><br><span class="line">                v-if=&quot;data.user.role === &#x27;ADMIN&#x27;&quot;</span><br><span class="line">                &gt;评分</span><br><span class="line">              &lt;/el-button&gt;</span><br><span class="line">              &lt;el-button</span><br><span class="line">                type=&quot;danger&quot;</span><br><span class="line">                size=&quot;small&quot;</span><br><span class="line">                plain</span><br><span class="line">                @click=&quot;del(scope.row.id)&quot;</span><br><span class="line">                &gt;删除&lt;/el-button</span><br><span class="line">              &gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">          &lt;/el-table-column&gt;</span><br><span class="line">        &lt;/el-table&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot;&gt;</span><br><span class="line">      &lt;el-pagination</span><br><span class="line">        v-model:current-page=&quot;data.pageNum&quot;</span><br><span class="line">        v-model:page-size=&quot;data.pageSize&quot;</span><br><span class="line">        @current-change=&quot;handleCurrentChange&quot;</span><br><span class="line">        background</span><br><span class="line">        layout=&quot;prev, pager, next&quot;</span><br><span class="line">        :total=&quot;data.total&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--    评分表单--&gt;</span><br><span class="line">    &lt;el-dialog v-model=&quot;data.formVisible&quot; title=&quot;成绩信息&quot; width=&quot;35%&quot;&gt;</span><br><span class="line">      &lt;el-form</span><br><span class="line">        :model=&quot;data.gradeForm&quot;</span><br><span class="line">        label-width=&quot;100px&quot;</span><br><span class="line">        label-position=&quot;right&quot;</span><br><span class="line">        style=&quot;padding-right: 40px&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;el-form-item label=&quot;课程名称&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.gradeForm.name&quot; autocomplete=&quot;off&quot; disabled /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;分数&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.gradeForm.score&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;评语&quot;&gt;</span><br><span class="line">          &lt;el-input</span><br><span class="line">            type=&quot;textarea&quot;</span><br><span class="line">            v-model=&quot;data.gradeForm.comment&quot;</span><br><span class="line">            autocomplete=&quot;off&quot;</span><br><span class="line">          /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">      &lt;/el-form&gt;</span><br><span class="line">      &lt;template #footer&gt;</span><br><span class="line">        &lt;span class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">          &lt;el-button plain @click=&quot;data.formVisible = false&quot;&gt;取消&lt;/el-button&gt;</span><br><span class="line">          &lt;el-button type=&quot;primary&quot; plain @click=&quot;save&quot;&gt;保存&lt;/el-button&gt;</span><br><span class="line">        &lt;/span&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line">    &lt;/el-dialog&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; reactive &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; Search &#125; from &quot;@element-plus/icons-vue&quot;;</span><br><span class="line">import request from &quot;@/utils/request&quot;;</span><br><span class="line">import &#123; ElMessage, ElMessageBox &#125; from &quot;element-plus&quot;;</span><br><span class="line"></span><br><span class="line">const data = reactive(&#123;</span><br><span class="line">  name: &quot;&quot;,</span><br><span class="line">  number: &quot;&quot;,</span><br><span class="line">  tableData: [],</span><br><span class="line">  total: 0,</span><br><span class="line">  pageNum: 1,</span><br><span class="line">  pageSize: 10,</span><br><span class="line">  user: JSON.parse(localStorage.getItem(&quot;student-user&quot;) || &quot;&#123;&#125;&quot;),</span><br><span class="line">  gradeForm: &#123;&#125;,</span><br><span class="line">  formVisible: false,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const load = () =&gt; &#123;</span><br><span class="line">  let params = &#123;</span><br><span class="line">    pageNum: data.pageNum,</span><br><span class="line">    pageSize: data.pageSize,</span><br><span class="line">    name: data.name,</span><br><span class="line">    number: data.number,</span><br><span class="line">  &#125;;</span><br><span class="line">  if (data.user.role === &quot;STUDENT&quot;) &#123;</span><br><span class="line">    params.studentId = data.user.id;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  request</span><br><span class="line">    .get(&quot;/studentCourse/selectPage&quot;, &#123;</span><br><span class="line">      params: params,</span><br><span class="line">    &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">        data.tableData = res.data?.list || [];</span><br><span class="line">        data.total = res.data?.total || 0;</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        ElMessage.error(res.msg);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">        localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 加载一次 获取学生选课数据</span><br><span class="line">load();</span><br><span class="line"></span><br><span class="line">const handleCurrentChange = () =&gt; &#123;</span><br><span class="line">  // 当翻页的时候重新加载数据</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const reset = () =&gt; &#123;</span><br><span class="line">  data.name = &quot;&quot;;</span><br><span class="line">  data.number = &quot;&quot;;</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const del = (id) =&gt; &#123;</span><br><span class="line">  ElMessageBox.confirm(&quot;删除后内容将无法恢复，您确认删除嘛？&quot;, &quot;删除确认&quot;, &#123;</span><br><span class="line">    type: &quot;warning&quot;,</span><br><span class="line">  &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      request.delete(&quot;/studentCourse/delete/&quot; + id).then((res) =&gt; &#123;</span><br><span class="line">        if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">          ElMessage.success(&quot;操作成功&quot;);</span><br><span class="line">          load();</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          ElMessage.error(res.msg);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">        localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 打分函数，弹窗</span><br><span class="line">const addGrade = (row) =&gt; &#123;</span><br><span class="line">  // 弹窗</span><br><span class="line">  data.formVisible = true;</span><br><span class="line">  data.gradeForm.name = row.name;</span><br><span class="line">  data.gradeForm.studentId = row.studentId;</span><br><span class="line">  data.gradeForm.courseId = row.courseId;</span><br><span class="line">  data.gradeForm.score = &quot;&quot;;</span><br><span class="line">  data.gradeForm.comment = &quot;&quot;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const save = () =&gt; &#123;</span><br><span class="line">  request</span><br><span class="line">    .post(&quot;/grade/add&quot;, data.gradeForm)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">        ElMessage.success(&quot;操作成功&quot;);</span><br><span class="line">        data.formVisible = false;</span><br><span class="line">        load();</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        ElMessage.error(res.msg);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">        localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h3><p>依次创建上：<code>gradeApi.py</code>、<code>gradeService.py</code>、<code>grade.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> APIRouter, Depends</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> ResultModel, Result</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session, get_db_session</span><br><span class="line"><span class="keyword">from</span> model.grade <span class="keyword">import</span> GradeCreate</span><br><span class="line"><span class="keyword">from</span> service.gradeService <span class="keyword">import</span> GradeService</span><br><span class="line"></span><br><span class="line">grade_router = APIRouter(prefix=<span class="string">&quot;/grade&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@grade_router.post(<span class="params"><span class="string">&quot;/add&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">grade: GradeCreate, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    GradeService.add_grade(grade, db_session)</span><br><span class="line">    <span class="keyword">return</span> Result.success()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.include_router(grade_router)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> FastAPI</span><br><span class="line"><span class="keyword">from</span> starlette.middleware.cors <span class="keyword">import</span> CORSMiddleware</span><br><span class="line"></span><br><span class="line">app = FastAPI()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 跨域问题</span></span><br><span class="line">origins = [<span class="string">&quot;http://localhost:5173&quot;</span>, <span class="string">&quot;http://127.0.0.1:5173&quot;</span>]  <span class="comment"># 替换为你的前端应用的实际地址</span></span><br><span class="line"></span><br><span class="line">app.add_middleware(</span><br><span class="line">    CORSMiddleware,</span><br><span class="line">    allow_origins=origins,  <span class="comment"># 允许跨域访问的来源域名列表</span></span><br><span class="line">    allow_credentials=<span class="literal">True</span>,  <span class="comment"># 是否允许携带cookie</span></span><br><span class="line">    allow_methods=[<span class="string">&quot;*&quot;</span>],  <span class="comment"># 允许的方法，默认包含常见的GET、POST等，&quot;*&quot;表示所有方法</span></span><br><span class="line">    allow_headers=[<span class="string">&quot;*&quot;</span>],  <span class="comment"># 允许的请求头，默认包含常见的Content-Type等，&quot;*&quot;表示所有请求头</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> adminApi, exceptionHandler, courseApi, studentApi, fileApi, studentCourseApi, gradeApi</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi.encoders <span class="keyword">import</span> jsonable_encoder</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> select, and_</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.utils <span class="keyword">import</span> set_attrs</span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> GradeExistException</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session</span><br><span class="line"><span class="keyword">from</span> model.grade <span class="keyword">import</span> GradeCreate, Grade</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GradeService</span>:</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">add_grade</span>(<span class="params">grade: GradeCreate, db_session: Session</span>):</span><br><span class="line">        query = select(Grade).where(</span><br><span class="line">            and_(Grade.studentId == grade.studentId,</span><br><span class="line">                 Grade.courseId == grade.courseId))</span><br><span class="line">        exist_grade: Grade = db_session.execute(query).scalar()</span><br><span class="line">        <span class="keyword">if</span> exist_grade:</span><br><span class="line">            <span class="keyword">raise</span> GradeExistException(<span class="string">&quot;课程已打分&quot;</span>)</span><br><span class="line">        new_grade = Grade()</span><br><span class="line">        set_attrs(new_grade, jsonable_encoder(grade))</span><br><span class="line">        db_session.add(new_grade)</span><br><span class="line">        db_session.commit()</span><br><span class="line">        <span class="keyword">return</span> new_grade</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Optional</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pydantic <span class="keyword">import</span> BaseModel</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> Integer, Double, String</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> Mapped, mapped_column</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Base</span><br><span class="line"><span class="keyword">from</span> model.course <span class="keyword">import</span> Course</span><br><span class="line"><span class="keyword">from</span> model.student <span class="keyword">import</span> Student</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Grade</span>(<span class="title class_ inherited__">Base</span>):</span><br><span class="line">    __tablename__ = <span class="string">&quot;grade&quot;</span></span><br><span class="line">    <span class="built_in">id</span>: Mapped[<span class="built_in">int</span>] = mapped_column(Integer, primary_key=<span class="literal">True</span>, nullable=<span class="literal">False</span>)</span><br><span class="line">    courseId: Mapped[<span class="built_in">int</span>] = mapped_column(<span class="string">&quot;course_id&quot;</span>, Integer, nullable=<span class="literal">False</span>)</span><br><span class="line">    studentId: Mapped[<span class="built_in">int</span>] = mapped_column(<span class="string">&quot;student_id&quot;</span>, Integer, nullable=<span class="literal">False</span>)</span><br><span class="line">    score: Mapped[<span class="built_in">str</span>] = mapped_column(Double, nullable=<span class="literal">False</span>)</span><br><span class="line">    comment: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    feedback: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GradeBase</span>(<span class="title class_ inherited__">BaseModel</span>):</span><br><span class="line">    courseId: <span class="built_in">int</span></span><br><span class="line">    studentId: <span class="built_in">int</span></span><br><span class="line">    score: <span class="type">Optional</span>[<span class="built_in">float</span>] = <span class="literal">None</span></span><br><span class="line">    comment: <span class="type">Optional</span>[<span class="built_in">str</span>] = <span class="literal">None</span></span><br><span class="line">    feedback: <span class="type">Optional</span>[<span class="built_in">str</span>] = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GradeCreate</span>(<span class="title class_ inherited__">GradeBase</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UserNotFoundException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UserExistException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PasswordNotMatchException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TokenException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseExistException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseNotExistException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">FileNotFoundException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentCourseExistException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentCourseNotExistException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GradeExistException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi.encoders <span class="keyword">import</span> jsonable_encoder</span><br><span class="line"><span class="keyword">from</span> starlette.responses <span class="keyword">import</span> JSONResponse</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> Request</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> Result</span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> UserNotFoundException, PasswordNotMatchException, TokenException, \</span><br><span class="line">    CourseExistException, CourseNotExistException, UserExistException, FileNotFoundException, \</span><br><span class="line">    StudentCourseExistException, StudentCourseNotExistException, GradeExistException</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">Exception</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">exception_handler</span>(<span class="params">request: Request, exc: Exception</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;500&quot;</span>, msg=<span class="built_in">str</span>(exc))</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">500</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">UserNotFoundException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">user_not_fount_exception_handler</span>(<span class="params">request: Request, exc: UserNotFoundException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;404&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">404</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">PasswordNotMatchException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">password_not_fount_exception_handler</span>(<span class="params">request: Request, exc: PasswordNotMatchException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;401&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">401</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">TokenException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">token_exception_handler</span>(<span class="params">request: Request, exc: TokenException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;401&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">401</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">CourseExistException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">course_exist_exception_handler</span>(<span class="params">request: Request, exc: CourseExistException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;400&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">400</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">CourseNotExistException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">course_not_exist_exception_handler</span>(<span class="params">request: Request, exc: CourseNotExistException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;404&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">404</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">UserExistException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">user_exist_exception_handler</span>(<span class="params">request: Request, exc: UserExistException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;400&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">400</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">FileNotFoundException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">file_not_found_exception_handler</span>(<span class="params">request: Request, exc: FileNotFoundException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;404&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">404</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">StudentCourseExistException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">student_course_exist_exception_handler</span>(<span class="params">request: Request, exc: StudentCourseExistException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;400&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">400</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">StudentCourseNotExistException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">student_course_not_exist_exception_handler</span>(<span class="params">request: Request, exc: StudentCourseNotExistException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;404&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">404</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">GradeExistException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">grade_exist_exception_handler</span>(<span class="params">request: Request, exc: GradeExistException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;400&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">400</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>管理员评分</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710675251367-8006657d-70b1-4466-827e-8b6b2224e83d.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710675277634-bae53b43-899d-4c13-bbdf-6618caaf77c6.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710675286983-171e5613-910d-43d8-ab55-d340d24eda54.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710675316480-e70f1dc4-2dc2-4d27-8587-9c41b08b2f95.png"></p><h2 id="显示课程分数"><a href="#显示课程分数" class="headerlink" title="显示课程分数"></a>显示课程分数</h2><h3 id="前端-1"><a href="#前端-1" class="headerlink" title="前端"></a>前端</h3><p>复制<code>StudentCourse.vue</code>重命名为<code>Grade.vue</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.courseName&quot;</span><br><span class="line">        placeholder=&quot;请输入要查询的课程名称&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;margin-left:10px; width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.studentName&quot;</span><br><span class="line">        placeholder=&quot;请输入要查询的学生名称&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-button type=&quot;info&quot; plain style=&quot;margin: 0 0 0 10px&quot; @click=&quot;reset&quot;</span><br><span class="line">        &gt;重置&lt;/el-button</span><br><span class="line">      &gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-table :data=&quot;data.tableData&quot; stripe style=&quot;width: 100%&quot;&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;id&quot; label=&quot;ID&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;course.name&quot; label=&quot;课程名称&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;student.name&quot; label=&quot;学生名称&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;score&quot; label=&quot;成绩&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;comment&quot; label=&quot;教师评语&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;feedback&quot; label=&quot;学生评价&quot; /&gt;</span><br><span class="line">          &lt;el-table-column label=&quot;操作&quot; align=&quot;center&quot; width=&quot;180px&quot;&gt;</span><br><span class="line">            &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">              &lt;el-button</span><br><span class="line">                type=&quot;danger&quot;</span><br><span class="line">                size=&quot;small&quot;</span><br><span class="line">                plain</span><br><span class="line">                @click=&quot;del(scope.row.id)&quot;</span><br><span class="line">                v-if=&quot;data.user.role === &#x27;ADMIN&#x27;&quot;</span><br><span class="line">                &gt;删除</span><br><span class="line">              &lt;/el-button&gt;</span><br><span class="line">              &lt;el-button</span><br><span class="line">                type=&quot;primary&quot;</span><br><span class="line">                size=&quot;small&quot;</span><br><span class="line">                plain</span><br><span class="line">                @click=&quot;setFeedback(scope.row)&quot;</span><br><span class="line">                v-if=&quot;data.user.role === &#x27;STUDENT&#x27;&quot;</span><br><span class="line">                &gt;评价</span><br><span class="line">              &lt;/el-button&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">          &lt;/el-table-column&gt;</span><br><span class="line">        &lt;/el-table&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot;&gt;</span><br><span class="line">      &lt;el-pagination</span><br><span class="line">        v-model:current-page=&quot;data.pageNum&quot;</span><br><span class="line">        v-model:page-size=&quot;data.pageSize&quot;</span><br><span class="line">        @current-change=&quot;handleCurrentChange&quot;</span><br><span class="line">        background</span><br><span class="line">        layout=&quot;prev, pager, next&quot;</span><br><span class="line">        :total=&quot;data.total&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--    评分表单--&gt;</span><br><span class="line">    &lt;el-dialog v-model=&quot;data.formVisible&quot; title=&quot;反馈信息&quot; width=&quot;35%&quot;&gt;</span><br><span class="line">      &lt;el-form</span><br><span class="line">        :model=&quot;data.form&quot;</span><br><span class="line">        label-width=&quot;100px&quot;</span><br><span class="line">        label-position=&quot;right&quot;</span><br><span class="line">        style=&quot;padding-right: 40px&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;el-form-item label=&quot;反馈&quot;&gt;</span><br><span class="line">          &lt;el-input</span><br><span class="line">            type=&quot;textarea&quot;</span><br><span class="line">            v-model=&quot;data.form.feedback&quot;</span><br><span class="line">            autocomplete=&quot;off&quot;</span><br><span class="line">          /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">      &lt;/el-form&gt;</span><br><span class="line">      &lt;template #footer&gt;</span><br><span class="line">        &lt;span class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">          &lt;el-button plain @click=&quot;data.formVisible = false&quot;&gt;取消&lt;/el-button&gt;</span><br><span class="line">          &lt;el-button type=&quot;primary&quot; plain @click=&quot;save&quot;&gt;保存&lt;/el-button&gt;</span><br><span class="line">        &lt;/span&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line">    &lt;/el-dialog&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; reactive &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; Search &#125; from &quot;@element-plus/icons-vue&quot;;</span><br><span class="line">import request from &quot;@/utils/request&quot;;</span><br><span class="line">import &#123; ElMessage, ElMessageBox &#125; from &quot;element-plus&quot;;</span><br><span class="line"></span><br><span class="line">const data = reactive(&#123;</span><br><span class="line">  form: &#123;&#125;,</span><br><span class="line">  courseName: &quot;&quot;,</span><br><span class="line">  studentName: &quot;&quot;,</span><br><span class="line">  tableData: [],</span><br><span class="line">  total: 0,</span><br><span class="line">  pageNum: 1,</span><br><span class="line">  pageSize: 10,</span><br><span class="line">  user: JSON.parse(localStorage.getItem(&quot;student-user&quot;) || &quot;&#123;&#125;&quot;),</span><br><span class="line">  formVisible: false,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const load = () =&gt; &#123;</span><br><span class="line">  let params = &#123;</span><br><span class="line">    pageNum: data.pageNum,</span><br><span class="line">    pageSize: data.pageSize,</span><br><span class="line">    courseName: data.courseName,</span><br><span class="line">    studentName: data.studentName,</span><br><span class="line">  &#125;;</span><br><span class="line">  if (data.user.role === &quot;STUDENT&quot;) &#123;</span><br><span class="line">    params.studentId = data.user.id;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  request</span><br><span class="line">    .get(&quot;/grade/selectPage&quot;, &#123;</span><br><span class="line">      params: params,</span><br><span class="line">    &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">        data.tableData = res.data?.list || [];</span><br><span class="line">        data.total = res.data?.total || 0;</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        ElMessage.error(res.msg);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">        localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 加载一次 获取学生选课数据</span><br><span class="line">load();</span><br><span class="line"></span><br><span class="line">const handleCurrentChange = () =&gt; &#123;</span><br><span class="line">  // 当翻页的时候重新加载数据</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const reset = () =&gt; &#123;</span><br><span class="line">  data.courseName = &quot;&quot;;</span><br><span class="line">  data.studentName = &quot;&quot;;</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const del = (id) =&gt; &#123;</span><br><span class="line">  ElMessageBox.confirm(&quot;删除后内容将无法恢复，您确认删除嘛？&quot;, &quot;删除确认&quot;, &#123;</span><br><span class="line">    type: &quot;warning&quot;,</span><br><span class="line">  &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      request.delete(&quot;/studentCourse/delete/&quot; + id).then((res) =&gt; &#123;</span><br><span class="line">        if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">          ElMessage.success(&quot;操作成功&quot;);</span><br><span class="line">          load();</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          ElMessage.error(res.msg);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">        localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 打分</span><br><span class="line">const setFeedback = (row) =&gt; &#123;</span><br><span class="line">  // 弹窗</span><br><span class="line">  data.formVisible = true;</span><br><span class="line">  data.form = JSON.parse(JSON.stringify(row));</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const save = () =&gt; &#123;</span><br><span class="line">  request</span><br><span class="line">    .post(&quot;/grade/update&quot;, data.form)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">        ElMessage.success(&quot;操作成功&quot;);</span><br><span class="line">        data.formVisible = false;</span><br><span class="line">        load();</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        ElMessage.error(res.msg);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">        localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHistory &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">history</span>: <span class="title function_">createWebHistory</span>(<span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">env</span>.<span class="property">BASE_URL</span>),</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;Manager&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/Manager.vue&quot;</span>),</span><br><span class="line">      <span class="attr">redirect</span>: <span class="string">&quot;/home&quot;</span>,</span><br><span class="line">      <span class="attr">children</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;home&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Home&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Home.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;course&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Course&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Course.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;student&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Student&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Student.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;person&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Person&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Person.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;courseList&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;CourseList&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/CourseList.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;studentCourse&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;StudentCourse&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/StudentCourse.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;grade&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Grade&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Grade.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">      ],</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/login&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;Login&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/Login.vue&quot;</span>),</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/register&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;Register&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/Register.vue&quot;</span>),</span><br><span class="line">    &#125;,</span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">beforeEach</span>(<span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> requiresAuth = to.<span class="property">matched</span>.<span class="title function_">some</span>(<span class="function">(<span class="params">record</span>) =&gt;</span> record.<span class="property">meta</span>.<span class="property">requiresAuth</span>);</span><br><span class="line">  <span class="keyword">const</span> user = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;student-user&quot;</span>));</span><br><span class="line">  <span class="keyword">if</span> (requiresAuth &amp;&amp; !user) &#123;</span><br><span class="line">    <span class="comment">// 如果目标路由需要认证,并且用户未登录</span></span><br><span class="line">    <span class="title function_">next</span>(<span class="string">&quot;/login&quot;</span>); <span class="comment">// 跳转到登录页面</span></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">next</span>(); <span class="comment">// 如果目标路由不需要认证,或者用户已登录,则正常导航到目标路由</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div</span><br><span class="line">      style=&quot;height: 60px; background-color: #eae8e8; display: flex; align-items: center; border-bottom: 1px solid #c4c2c2&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;div style=&quot;flex: 1&quot;&gt;</span><br><span class="line">        &lt;div style=&quot;padding-left: 20px; display: flex; align-items: center&quot;&gt;</span><br><span class="line">          &lt;img src=&quot;@/assets/imgs/logo.png&quot; alt=&quot;&quot; style=&quot;width: 40px&quot; /&gt;</span><br><span class="line">          &lt;div style=&quot;font-weight: bold; font-size: 24px; margin-left: 5px&quot;&gt;</span><br><span class="line">            学生信息管理系统</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        style=&quot;width: fit-content; padding-right: 10px; display: flex; align-items: center;&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;img</span><br><span class="line">          :src=&quot;</span><br><span class="line">            user.avatar ||</span><br><span class="line">            &#x27;https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png&#x27;</span><br><span class="line">          &quot;</span><br><span class="line">          alt=&quot;&quot;</span><br><span class="line">          style=&quot;width: 40px; height: 40px; border-radius: 50%&quot;</span><br><span class="line">        /&gt;</span><br><span class="line">        &lt;span style=&quot;margin-left: 5px&quot;&gt;&#123;&#123; user.name &#125;&#125;&lt;/span&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div style=&quot;display: flex&quot;&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        style=&quot;width: 200px; border-right: 1px solid #f3eeee; min-height: calc(100vh - 60px)&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;el-menu</span><br><span class="line">          router</span><br><span class="line">          style=&quot;border: none&quot;</span><br><span class="line">          :default-active=&quot;$route.path&quot;</span><br><span class="line">          :default-openeds=&quot;[&#x27;/home&#x27;, &#x27;2&#x27;, &#x27;3&#x27;, &#x27;4&#x27;]&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          &lt;el-menu-item index=&quot;/home&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;</span><br><span class="line">              &lt;HomeFilled /&gt;</span><br><span class="line">            &lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;系统首页&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line"></span><br><span class="line">          &lt;el-sub-menu index=&quot;2&quot; v-if=&quot;user.role === &#x27;ADMIN&#x27;&quot;&gt;</span><br><span class="line">            &lt;template #title&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;Management /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;学生管理&lt;/span&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">            &lt;el-menu-item index=&quot;/student&quot;&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;UserFilled /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;学生信息&lt;/span&gt;</span><br><span class="line">            &lt;/el-menu-item&gt;</span><br><span class="line">          &lt;/el-sub-menu&gt;</span><br><span class="line"></span><br><span class="line">          &lt;el-sub-menu index=&quot;3&quot;&gt;</span><br><span class="line">            &lt;template #title&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;Memo /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;课程管理&lt;/span&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">            &lt;el-menu-item index=&quot;/course&quot; v-if=&quot;user.role === &#x27;ADMIN&#x27;&quot;&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;Document /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;课程信息&lt;/span&gt;</span><br><span class="line">            &lt;/el-menu-item&gt;</span><br><span class="line">            &lt;el-menu-item index=&quot;/courseList&quot; v-if=&quot;user.role === &#x27;STUDENT&#x27;&quot;&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;Document /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;学生选课&lt;/span&gt;</span><br><span class="line">            &lt;/el-menu-item&gt;</span><br><span class="line">            &lt;el-menu-item index=&quot;/studentCourse&quot;&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;Document /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;选课记录&lt;/span&gt;</span><br><span class="line">            &lt;/el-menu-item&gt;</span><br><span class="line">          &lt;/el-sub-menu&gt;</span><br><span class="line"></span><br><span class="line">          &lt;el-sub-menu index=&quot;4&quot;&gt;</span><br><span class="line">            &lt;template #title&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;Management /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;成绩信息&lt;/span&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">            &lt;el-menu-item index=&quot;/grade&quot;&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;List /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;学生成绩&lt;/span&gt;</span><br><span class="line">            &lt;/el-menu-item&gt;</span><br><span class="line">          &lt;/el-sub-menu&gt;</span><br><span class="line"></span><br><span class="line">          &lt;el-menu-item index=&quot;/person&quot; v-if=&quot;user.role === &#x27;STUDENT&#x27;&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;</span><br><span class="line">              &lt;User /&gt;</span><br><span class="line">            &lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;个人资料&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line">          &lt;el-menu-item index=&quot;/login&quot; @click=&quot;logout&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;</span><br><span class="line">              &lt;SwitchButton /&gt;</span><br><span class="line">            &lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;退出系统&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line">        &lt;/el-menu&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">      &lt;div style=&quot;flex: 1; width: 0; background-color: #eaeaee; padding: 10px&quot;&gt;</span><br><span class="line">        &lt;router-view /&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; useRoute &#125; from &quot;vue-router&quot;;</span><br><span class="line"></span><br><span class="line">const $route = useRoute();</span><br><span class="line">console.log($route.path);</span><br><span class="line"></span><br><span class="line">const logout = () =&gt; &#123;</span><br><span class="line">  localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const user = JSON.parse(localStorage.getItem(&quot;student-user&quot;) || &quot;&#123;&#125;&quot;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.el-menu-item.is-active &#123;</span><br><span class="line">  background-color: #c3d7d3 !important;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.el-menu-item:hover &#123;</span><br><span class="line">  color: #0c98d5;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">:deep(th) &#123;</span><br><span class="line">  color: #333;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="后端-1"><a href="#后端-1" class="headerlink" title="后端"></a>后端</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Optional</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> APIRouter, Depends, Query</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> common.pageHelper <span class="keyword">import</span> PageHelper</span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> ResultModel, Result</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session, get_db_session</span><br><span class="line"><span class="keyword">from</span> model.grade <span class="keyword">import</span> GradeCreate, GradeSearch, GradeUpdate</span><br><span class="line"><span class="keyword">from</span> service.gradeService <span class="keyword">import</span> GradeService</span><br><span class="line"></span><br><span class="line">grade_router = APIRouter(prefix=<span class="string">&quot;/grade&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@grade_router.post(<span class="params"><span class="string">&quot;/add&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">grade: GradeCreate, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    GradeService.add_grade(grade, db_session)</span><br><span class="line">    <span class="keyword">return</span> Result.success()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@grade_router.get(<span class="params"><span class="string">&quot;/selectPage&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">select_page</span>(<span class="params">page: <span class="built_in">int</span> = Query(<span class="params"><span class="number">1</span>, ge=<span class="number">1</span>, alias=<span class="string">&quot;pageNum&quot;</span>, description=<span class="string">&quot;Page number&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      size: <span class="built_in">int</span> = Query(<span class="params"><span class="number">5</span>, gt=<span class="number">0</span>, le=<span class="number">100</span>, alias=<span class="string">&quot;pageSize&quot;</span>, description=<span class="string">&quot;Page size&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      studentName: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Student name&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      courseName: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Course name&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      studentId: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Student id&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    pageInfo = PageHelper.startPage(page, size)</span><br><span class="line">    grade_search: GradeSearch = GradeSearch(studentName=studentName, courseName=courseName, studentId=studentId)</span><br><span class="line">    grade_list = GradeService.select_page(grade_search, db_session)</span><br><span class="line">    <span class="keyword">return</span> Result.success(pageInfo.of(grade_list))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@grade_router.put(<span class="params"><span class="string">&quot;/update&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">update</span>(<span class="params">grade: GradeUpdate, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    GradeService.update_by_id(grade, db_session)</span><br><span class="line">    <span class="keyword">return</span> Result.success()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.include_router(grade_router)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi.encoders <span class="keyword">import</span> jsonable_encoder</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> select, and_, asc</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.utils <span class="keyword">import</span> set_attrs</span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> GradeExistException</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session</span><br><span class="line"><span class="keyword">from</span> model.course <span class="keyword">import</span> Course</span><br><span class="line"><span class="keyword">from</span> model.grade <span class="keyword">import</span> GradeCreate, Grade, GradeSearch, GradeUpdate</span><br><span class="line"><span class="keyword">from</span> model.student <span class="keyword">import</span> Student</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GradeService</span>:</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">add_grade</span>(<span class="params">grade: GradeCreate, db_session: Session</span>):</span><br><span class="line">        query = select(Grade).where(</span><br><span class="line">            and_(Grade.studentId == grade.studentId,</span><br><span class="line">                 Grade.courseId == grade.courseId))</span><br><span class="line">        exist_grade: Grade = db_session.execute(query).scalar()</span><br><span class="line">        <span class="keyword">if</span> exist_grade:</span><br><span class="line">            <span class="keyword">raise</span> GradeExistException(<span class="string">&quot;课程已打分&quot;</span>)</span><br><span class="line">        new_grade = Grade()</span><br><span class="line">        set_attrs(new_grade, jsonable_encoder(grade))</span><br><span class="line">        db_session.add(new_grade)</span><br><span class="line">        db_session.commit()</span><br><span class="line">        <span class="keyword">return</span> new_grade</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">select_page</span>(<span class="params">grade_search: GradeSearch, db_session: Session</span>):</span><br><span class="line">        query = select(Grade, Student, Course).outerjoin(Grade.student).outerjoin(Grade.course).order_by(asc(Grade.<span class="built_in">id</span>))</span><br><span class="line">        <span class="keyword">if</span> grade_search.courseName:</span><br><span class="line">            query = query.where(Course.name.like(<span class="string">f&quot;%<span class="subst">&#123;grade_search.courseName&#125;</span>%&quot;</span>))</span><br><span class="line">        <span class="keyword">if</span> grade_search.studentName:</span><br><span class="line">            query = query.where(Student.name.like(<span class="string">f&quot;%<span class="subst">&#123;grade_search.studentName&#125;</span>%&quot;</span>))</span><br><span class="line">        <span class="keyword">if</span> grade_search.studentId:</span><br><span class="line">            query = query.where(Grade.studentId == grade_search.studentId)</span><br><span class="line">        result = db_session.execute(query).scalars().<span class="built_in">all</span>()</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">update_by_id</span>(<span class="params">grade: GradeUpdate, db_session: Session</span>):</span><br><span class="line">        exist_grade: Grade = check_grade_exist(grade.<span class="built_in">id</span>, db_session)</span><br><span class="line">        set_attrs(exist_grade, jsonable_encoder(grade))</span><br><span class="line">        db_session.commit()</span><br><span class="line">        <span class="keyword">return</span> exist_grade</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check_grade_exist</span>(<span class="params">grade_id: <span class="built_in">int</span>, db_session: Session</span>):</span><br><span class="line">    query = select(Grade).where(Grade.<span class="built_in">id</span> == grade_id)</span><br><span class="line">    exist_grade: Grade = db_session.execute(query).scalar()</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> exist_grade:</span><br><span class="line">        <span class="keyword">raise</span> GradeExistException(<span class="string">&quot;成绩记录不存在&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> exist_grade</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Optional</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pydantic <span class="keyword">import</span> BaseModel</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> Integer, Double, ForeignKey, String</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> Mapped, mapped_column, relationship</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Base</span><br><span class="line"><span class="keyword">from</span> model.course <span class="keyword">import</span> Course</span><br><span class="line"><span class="keyword">from</span> model.student <span class="keyword">import</span> Student</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Grade</span>(<span class="title class_ inherited__">Base</span>):</span><br><span class="line">    __tablename__ = <span class="string">&quot;grade&quot;</span></span><br><span class="line">    <span class="built_in">id</span>: Mapped[<span class="built_in">int</span>] = mapped_column(Integer, primary_key=<span class="literal">True</span>, nullable=<span class="literal">False</span>)</span><br><span class="line">    courseId: Mapped[<span class="built_in">int</span>] = mapped_column(<span class="string">&quot;course_id&quot;</span>, Integer, ForeignKey(<span class="string">&#x27;course.id&#x27;</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    studentId: Mapped[<span class="built_in">int</span>] = mapped_column(<span class="string">&quot;student_id&quot;</span>, Integer, ForeignKey(<span class="string">&#x27;student.id&#x27;</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    score: Mapped[<span class="built_in">str</span>] = mapped_column(Double, nullable=<span class="literal">False</span>)</span><br><span class="line">    comment: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    feedback: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">    student: Mapped[Student] = relationship(lazy=<span class="literal">False</span>, backref=<span class="string">&quot;grade&quot;</span>)</span><br><span class="line">    course: Mapped[Course] = relationship(lazy=<span class="literal">False</span>, backref=<span class="string">&quot;grade&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GradeBase</span>(<span class="title class_ inherited__">BaseModel</span>):</span><br><span class="line">    courseId: <span class="built_in">int</span></span><br><span class="line">    studentId: <span class="built_in">int</span></span><br><span class="line">    score: <span class="type">Optional</span>[<span class="built_in">float</span>] = <span class="literal">None</span></span><br><span class="line">    comment: <span class="type">Optional</span>[<span class="built_in">str</span>] = <span class="literal">None</span></span><br><span class="line">    feedback: <span class="type">Optional</span>[<span class="built_in">str</span>] = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GradeCreate</span>(<span class="title class_ inherited__">GradeBase</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GradeSearch</span>(<span class="title class_ inherited__">BaseModel</span>):</span><br><span class="line">    courseName: <span class="built_in">str</span> | <span class="literal">None</span></span><br><span class="line">    studentName: <span class="built_in">str</span> | <span class="literal">None</span></span><br><span class="line">    studentId: <span class="built_in">str</span> | <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GradeUpdate</span>(<span class="title class_ inherited__">GradeBase</span>):</span><br><span class="line">    <span class="built_in">id</span>: <span class="built_in">int</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h3><p>管理员</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710677201407-3b1dcc5f-5d41-482a-8a92-00848a7df6fa.png"></p><h2 id="课程分数编辑"><a href="#课程分数编辑" class="headerlink" title="课程分数编辑"></a>课程分数编辑</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.courseName&quot;</span><br><span class="line">        placeholder=&quot;请输入要查询的课程名称&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;margin-left:10px; width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.studentName&quot;</span><br><span class="line">        placeholder=&quot;请输入要查询的学生名称&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-button type=&quot;info&quot; plain style=&quot;margin: 0 0 0 10px&quot; @click=&quot;reset&quot;</span><br><span class="line">        &gt;重置&lt;/el-button</span><br><span class="line">      &gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-table :data=&quot;data.tableData&quot; stripe style=&quot;width: 100%&quot;&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;id&quot; label=&quot;ID&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;course.name&quot; label=&quot;课程名称&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;student.name&quot; label=&quot;学生名称&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;score&quot; label=&quot;成绩&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;comment&quot; label=&quot;教师评语&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;feedback&quot; label=&quot;学生评价&quot; /&gt;</span><br><span class="line">          &lt;el-table-column label=&quot;操作&quot; align=&quot;center&quot; width=&quot;180px&quot;&gt;</span><br><span class="line">            &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">              &lt;el-button</span><br><span class="line">                type=&quot;primary&quot;</span><br><span class="line">                size=&quot;small&quot;</span><br><span class="line">                plain</span><br><span class="line">                @click=&quot;handleEdit(scope.row)&quot;</span><br><span class="line">                v-if=&quot;data.user.role === &#x27;ADMIN&#x27;&quot;</span><br><span class="line">                &gt;编辑</span><br><span class="line">              &lt;/el-button&gt;</span><br><span class="line">              &lt;el-button</span><br><span class="line">                type=&quot;danger&quot;</span><br><span class="line">                size=&quot;small&quot;</span><br><span class="line">                plain</span><br><span class="line">                @click=&quot;del(scope.row.id)&quot;</span><br><span class="line">                v-if=&quot;data.user.role === &#x27;ADMIN&#x27;&quot;</span><br><span class="line">                &gt;删除</span><br><span class="line">              &lt;/el-button&gt;</span><br><span class="line">              &lt;el-button</span><br><span class="line">                type=&quot;primary&quot;</span><br><span class="line">                size=&quot;small&quot;</span><br><span class="line">                plain</span><br><span class="line">                @click=&quot;handleEdit(scope.row)&quot;</span><br><span class="line">                v-if=&quot;data.user.role === &#x27;STUDENT&#x27;&quot;</span><br><span class="line">                &gt;评价</span><br><span class="line">              &lt;/el-button&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">          &lt;/el-table-column&gt;</span><br><span class="line">        &lt;/el-table&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot;&gt;</span><br><span class="line">      &lt;el-pagination</span><br><span class="line">        v-model:current-page=&quot;data.pageNum&quot;</span><br><span class="line">        v-model:page-size=&quot;data.pageSize&quot;</span><br><span class="line">        @current-change=&quot;handleCurrentChange&quot;</span><br><span class="line">        background</span><br><span class="line">        layout=&quot;prev, pager, next&quot;</span><br><span class="line">        :total=&quot;data.total&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--    评分表单--&gt;</span><br><span class="line">    &lt;el-dialog v-model=&quot;data.formVisible&quot; title=&quot;反馈信息&quot; width=&quot;35%&quot;&gt;</span><br><span class="line">      &lt;el-form</span><br><span class="line">        :model=&quot;data.form&quot;</span><br><span class="line">        label-width=&quot;100px&quot;</span><br><span class="line">        label-position=&quot;right&quot;</span><br><span class="line">        style=&quot;padding-right: 40px&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;el-form-item label=&quot;分数&quot; v-if=&quot;data.user.role === &#x27;ADMIN&#x27;&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.score&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;教师评语&quot; v-if=&quot;data.user.role === &#x27;ADMIN&#x27;&quot;&gt;</span><br><span class="line">          &lt;el-input</span><br><span class="line">            type=&quot;textarea&quot;</span><br><span class="line">            v-model=&quot;data.form.comment&quot;</span><br><span class="line">            autocomplete=&quot;off&quot;</span><br><span class="line">          /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;学生评价&quot; v-if=&quot;data.user.role === &#x27;STUDENT&#x27;&quot;&gt;</span><br><span class="line">          &lt;el-input</span><br><span class="line">            type=&quot;textarea&quot;</span><br><span class="line">            v-model=&quot;data.form.feedback&quot;</span><br><span class="line">            autocomplete=&quot;off&quot;</span><br><span class="line">          /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">      &lt;/el-form&gt;</span><br><span class="line">      &lt;template #footer&gt;</span><br><span class="line">        &lt;span class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">          &lt;el-button plain @click=&quot;data.formVisible = false&quot;&gt;取消&lt;/el-button&gt;</span><br><span class="line">          &lt;el-button type=&quot;primary&quot; plain @click=&quot;save&quot;&gt;保存&lt;/el-button&gt;</span><br><span class="line">        &lt;/span&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line">    &lt;/el-dialog&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; reactive &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; Search &#125; from &quot;@element-plus/icons-vue&quot;;</span><br><span class="line">import request from &quot;@/utils/request&quot;;</span><br><span class="line">import &#123; ElMessage, ElMessageBox &#125; from &quot;element-plus&quot;;</span><br><span class="line"></span><br><span class="line">const data = reactive(&#123;</span><br><span class="line">  form: &#123;&#125;,</span><br><span class="line">  courseName: &quot;&quot;,</span><br><span class="line">  studentName: &quot;&quot;,</span><br><span class="line">  tableData: [],</span><br><span class="line">  total: 0,</span><br><span class="line">  pageNum: 1,</span><br><span class="line">  pageSize: 10,</span><br><span class="line">  user: JSON.parse(localStorage.getItem(&quot;student-user&quot;) || &quot;&#123;&#125;&quot;),</span><br><span class="line">  formVisible: false,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const load = () =&gt; &#123;</span><br><span class="line">  let params = &#123;</span><br><span class="line">    pageNum: data.pageNum,</span><br><span class="line">    pageSize: data.pageSize,</span><br><span class="line">    courseName: data.courseName,</span><br><span class="line">    studentName: data.studentName,</span><br><span class="line">  &#125;;</span><br><span class="line">  if (data.user.role === &quot;STUDENT&quot;) &#123;</span><br><span class="line">    params.studentId = data.user.id;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  request</span><br><span class="line">    .get(&quot;/grade/selectPage&quot;, &#123;</span><br><span class="line">      params: params,</span><br><span class="line">    &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">        data.tableData = res.data?.list || [];</span><br><span class="line">        data.total = res.data?.total || 0;</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        ElMessage.error(res.msg);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">        localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 加载一次 获取学生选课数据</span><br><span class="line">load();</span><br><span class="line"></span><br><span class="line">const handleCurrentChange = () =&gt; &#123;</span><br><span class="line">  // 当翻页的时候重新加载数据</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const reset = () =&gt; &#123;</span><br><span class="line">  data.courseName = &quot;&quot;;</span><br><span class="line">  data.studentName = &quot;&quot;;</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const del = (id) =&gt; &#123;</span><br><span class="line">  ElMessageBox.confirm(&quot;删除后内容将无法恢复，您确认删除嘛？&quot;, &quot;删除确认&quot;, &#123;</span><br><span class="line">    type: &quot;warning&quot;,</span><br><span class="line">  &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      request.delete(&quot;/studentCourse/delete/&quot; + id).then((res) =&gt; &#123;</span><br><span class="line">        if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">          ElMessage.success(&quot;操作成功&quot;);</span><br><span class="line">          load();</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          ElMessage.error(res.msg);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">        localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 打分</span><br><span class="line">const handleEdit = (row) =&gt; &#123;</span><br><span class="line">  // 弹窗</span><br><span class="line">  data.formVisible = true;</span><br><span class="line">  data.form = JSON.parse(JSON.stringify(row));</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const save = () =&gt; &#123;</span><br><span class="line">  request</span><br><span class="line">    .put(&quot;/grade/update&quot;, data.form)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">        ElMessage.success(&quot;操作成功&quot;);</span><br><span class="line">        data.formVisible = false;</span><br><span class="line">        load();</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        ElMessage.error(res.msg);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">        localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>学生：</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710677951814-7b1991b2-8113-4f85-963c-d8387ba996b0.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710677959948-2638843d-3be8-468b-ac69-340f5748173f.png"></p><p>管理员：</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710678028780-780c5ab0-4be8-4d3e-86b7-64dcad143cb9.png"><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710678035811-c86a8508-8c75-48cb-b543-767be4bcc735.png"></p><h2 id="课程分数删除"><a href="#课程分数删除" class="headerlink" title="课程分数删除"></a>课程分数删除</h2><h3 id="前端-2"><a href="#前端-2" class="headerlink" title="前端"></a>前端</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.courseName&quot;</span><br><span class="line">        placeholder=&quot;请输入要查询的课程名称&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;margin-left:10px; width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.studentName&quot;</span><br><span class="line">        placeholder=&quot;请输入要查询的学生名称&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-button type=&quot;info&quot; plain style=&quot;margin: 0 0 0 10px&quot; @click=&quot;reset&quot;</span><br><span class="line">        &gt;重置&lt;/el-button</span><br><span class="line">      &gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-table :data=&quot;data.tableData&quot; stripe style=&quot;width: 100%&quot;&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;id&quot; label=&quot;ID&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;course.name&quot; label=&quot;课程名称&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;student.name&quot; label=&quot;学生名称&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;score&quot; label=&quot;成绩&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;comment&quot; label=&quot;教师评语&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;feedback&quot; label=&quot;学生评价&quot; /&gt;</span><br><span class="line">          &lt;el-table-column label=&quot;操作&quot; align=&quot;center&quot; width=&quot;180px&quot;&gt;</span><br><span class="line">            &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">              &lt;el-button</span><br><span class="line">                type=&quot;primary&quot;</span><br><span class="line">                size=&quot;small&quot;</span><br><span class="line">                plain</span><br><span class="line">                @click=&quot;handleEdit(scope.row)&quot;</span><br><span class="line">                v-if=&quot;data.user.role === &#x27;ADMIN&#x27;&quot;</span><br><span class="line">                &gt;编辑</span><br><span class="line">              &lt;/el-button&gt;</span><br><span class="line">              &lt;el-button</span><br><span class="line">                type=&quot;danger&quot;</span><br><span class="line">                size=&quot;small&quot;</span><br><span class="line">                plain</span><br><span class="line">                @click=&quot;del(scope.row.id)&quot;</span><br><span class="line">                v-if=&quot;data.user.role === &#x27;ADMIN&#x27;&quot;</span><br><span class="line">                &gt;删除</span><br><span class="line">              &lt;/el-button&gt;</span><br><span class="line">              &lt;el-button</span><br><span class="line">                type=&quot;primary&quot;</span><br><span class="line">                size=&quot;small&quot;</span><br><span class="line">                plain</span><br><span class="line">                @click=&quot;handleEdit(scope.row)&quot;</span><br><span class="line">                v-if=&quot;data.user.role === &#x27;STUDENT&#x27;&quot;</span><br><span class="line">                &gt;评价</span><br><span class="line">              &lt;/el-button&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">          &lt;/el-table-column&gt;</span><br><span class="line">        &lt;/el-table&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot;&gt;</span><br><span class="line">      &lt;el-pagination</span><br><span class="line">        v-model:current-page=&quot;data.pageNum&quot;</span><br><span class="line">        v-model:page-size=&quot;data.pageSize&quot;</span><br><span class="line">        @current-change=&quot;handleCurrentChange&quot;</span><br><span class="line">        background</span><br><span class="line">        layout=&quot;prev, pager, next&quot;</span><br><span class="line">        :total=&quot;data.total&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--    评分表单--&gt;</span><br><span class="line">    &lt;el-dialog v-model=&quot;data.formVisible&quot; title=&quot;反馈信息&quot; width=&quot;35%&quot;&gt;</span><br><span class="line">      &lt;el-form</span><br><span class="line">        :model=&quot;data.form&quot;</span><br><span class="line">        label-width=&quot;100px&quot;</span><br><span class="line">        label-position=&quot;right&quot;</span><br><span class="line">        style=&quot;padding-right: 40px&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;el-form-item label=&quot;分数&quot; v-if=&quot;data.user.role === &#x27;ADMIN&#x27;&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.score&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;教师评语&quot; v-if=&quot;data.user.role === &#x27;ADMIN&#x27;&quot;&gt;</span><br><span class="line">          &lt;el-input</span><br><span class="line">            type=&quot;textarea&quot;</span><br><span class="line">            v-model=&quot;data.form.comment&quot;</span><br><span class="line">            autocomplete=&quot;off&quot;</span><br><span class="line">          /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;学生评价&quot; v-if=&quot;data.user.role === &#x27;STUDENT&#x27;&quot;&gt;</span><br><span class="line">          &lt;el-input</span><br><span class="line">            type=&quot;textarea&quot;</span><br><span class="line">            v-model=&quot;data.form.feedback&quot;</span><br><span class="line">            autocomplete=&quot;off&quot;</span><br><span class="line">          /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">      &lt;/el-form&gt;</span><br><span class="line">      &lt;template #footer&gt;</span><br><span class="line">        &lt;span class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">          &lt;el-button plain @click=&quot;data.formVisible = false&quot;&gt;取消&lt;/el-button&gt;</span><br><span class="line">          &lt;el-button type=&quot;primary&quot; plain @click=&quot;save&quot;&gt;保存&lt;/el-button&gt;</span><br><span class="line">        &lt;/span&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line">    &lt;/el-dialog&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; reactive &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; Search &#125; from &quot;@element-plus/icons-vue&quot;;</span><br><span class="line">import request from &quot;@/utils/request&quot;;</span><br><span class="line">import &#123; ElMessage, ElMessageBox &#125; from &quot;element-plus&quot;;</span><br><span class="line"></span><br><span class="line">const data = reactive(&#123;</span><br><span class="line">  form: &#123;&#125;,</span><br><span class="line">  courseName: &quot;&quot;,</span><br><span class="line">  studentName: &quot;&quot;,</span><br><span class="line">  tableData: [],</span><br><span class="line">  total: 0,</span><br><span class="line">  pageNum: 1,</span><br><span class="line">  pageSize: 10,</span><br><span class="line">  user: JSON.parse(localStorage.getItem(&quot;student-user&quot;) || &quot;&#123;&#125;&quot;),</span><br><span class="line">  formVisible: false,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const load = () =&gt; &#123;</span><br><span class="line">  let params = &#123;</span><br><span class="line">    pageNum: data.pageNum,</span><br><span class="line">    pageSize: data.pageSize,</span><br><span class="line">    courseName: data.courseName,</span><br><span class="line">    studentName: data.studentName,</span><br><span class="line">  &#125;;</span><br><span class="line">  if (data.user.role === &quot;STUDENT&quot;) &#123;</span><br><span class="line">    params.studentId = data.user.id;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  request</span><br><span class="line">    .get(&quot;/grade/selectPage&quot;, &#123;</span><br><span class="line">      params: params,</span><br><span class="line">    &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">        data.tableData = res.data?.list || [];</span><br><span class="line">        data.total = res.data?.total || 0;</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        ElMessage.error(res.msg);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">        localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 加载一次 获取学生选课数据</span><br><span class="line">load();</span><br><span class="line"></span><br><span class="line">const handleCurrentChange = () =&gt; &#123;</span><br><span class="line">  // 当翻页的时候重新加载数据</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const reset = () =&gt; &#123;</span><br><span class="line">  data.courseName = &quot;&quot;;</span><br><span class="line">  data.studentName = &quot;&quot;;</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const del = (id) =&gt; &#123;</span><br><span class="line">  ElMessageBox.confirm(&quot;删除后内容将无法恢复，您确认删除嘛？&quot;, &quot;删除确认&quot;, &#123;</span><br><span class="line">    type: &quot;warning&quot;,</span><br><span class="line">  &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      request.delete(&quot;/grade/delete/&quot; + id).then((res) =&gt; &#123;</span><br><span class="line">        if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">          ElMessage.success(&quot;操作成功&quot;);</span><br><span class="line">          load();</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          ElMessage.error(res.msg);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">        localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 打分</span><br><span class="line">const handleEdit = (row) =&gt; &#123;</span><br><span class="line">  // 弹窗</span><br><span class="line">  data.formVisible = true;</span><br><span class="line">  data.form = JSON.parse(JSON.stringify(row));</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const save = () =&gt; &#123;</span><br><span class="line">  request</span><br><span class="line">    .put(&quot;/grade/update&quot;, data.form)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">        ElMessage.success(&quot;操作成功&quot;);</span><br><span class="line">        data.formVisible = false;</span><br><span class="line">        load();</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        ElMessage.error(res.msg);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">        localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="后端-2"><a href="#后端-2" class="headerlink" title="后端"></a>后端</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Optional</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> APIRouter, Depends, Query</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> common.pageHelper <span class="keyword">import</span> PageHelper</span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> ResultModel, Result</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session, get_db_session</span><br><span class="line"><span class="keyword">from</span> model.grade <span class="keyword">import</span> GradeCreate, GradeSearch, GradeUpdate</span><br><span class="line"><span class="keyword">from</span> service.gradeService <span class="keyword">import</span> GradeService</span><br><span class="line"></span><br><span class="line">grade_router = APIRouter(prefix=<span class="string">&quot;/grade&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@grade_router.post(<span class="params"><span class="string">&quot;/add&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">grade: GradeCreate, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    GradeService.add_grade(grade, db_session)</span><br><span class="line">    <span class="keyword">return</span> Result.success()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@grade_router.get(<span class="params"><span class="string">&quot;/selectPage&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">select_page</span>(<span class="params">page: <span class="built_in">int</span> = Query(<span class="params"><span class="number">1</span>, ge=<span class="number">1</span>, alias=<span class="string">&quot;pageNum&quot;</span>, description=<span class="string">&quot;Page number&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      size: <span class="built_in">int</span> = Query(<span class="params"><span class="number">5</span>, gt=<span class="number">0</span>, le=<span class="number">100</span>, alias=<span class="string">&quot;pageSize&quot;</span>, description=<span class="string">&quot;Page size&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      studentName: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Student name&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      courseName: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Course name&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      studentId: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Student id&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    pageInfo = PageHelper.startPage(page, size)</span><br><span class="line">    grade_search: GradeSearch = GradeSearch(studentName=studentName, courseName=courseName, studentId=studentId)</span><br><span class="line">    grade_list = GradeService.select_page(grade_search, db_session)</span><br><span class="line">    <span class="keyword">return</span> Result.success(pageInfo.of(grade_list))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@grade_router.put(<span class="params"><span class="string">&quot;/update&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">update</span>(<span class="params">grade: GradeUpdate, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    GradeService.update_by_id(grade, db_session)</span><br><span class="line">    <span class="keyword">return</span> Result.success()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@grade_router.delete(<span class="params"><span class="string">&quot;/delete/&#123;id&#125;&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">delete</span>(<span class="params"><span class="built_in">id</span>: <span class="built_in">int</span>, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    GradeService.delete_by_id(<span class="built_in">id</span>, db_session)</span><br><span class="line">    <span class="keyword">return</span> Result.success()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.include_router(grade_router)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi.encoders <span class="keyword">import</span> jsonable_encoder</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> select, and_, asc</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.utils <span class="keyword">import</span> set_attrs</span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> GradeExistException</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session</span><br><span class="line"><span class="keyword">from</span> model.course <span class="keyword">import</span> Course</span><br><span class="line"><span class="keyword">from</span> model.grade <span class="keyword">import</span> GradeCreate, Grade, GradeSearch, GradeUpdate</span><br><span class="line"><span class="keyword">from</span> model.student <span class="keyword">import</span> Student</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GradeService</span>:</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">add_grade</span>(<span class="params">grade: GradeCreate, db_session: Session</span>):</span><br><span class="line">        query = select(Grade).where(</span><br><span class="line">            and_(Grade.studentId == grade.studentId,</span><br><span class="line">                 Grade.courseId == grade.courseId))</span><br><span class="line">        exist_grade: Grade = db_session.execute(query).scalar()</span><br><span class="line">        <span class="keyword">if</span> exist_grade:</span><br><span class="line">            <span class="keyword">raise</span> GradeExistException(<span class="string">&quot;课程已打分&quot;</span>)</span><br><span class="line">        new_grade = Grade()</span><br><span class="line">        set_attrs(new_grade, jsonable_encoder(grade))</span><br><span class="line">        db_session.add(new_grade)</span><br><span class="line">        db_session.commit()</span><br><span class="line">        <span class="keyword">return</span> new_grade</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">select_page</span>(<span class="params">grade_search: GradeSearch, db_session: Session</span>):</span><br><span class="line">        query = select(Grade, Student, Course).outerjoin(Grade.student).outerjoin(Grade.course).order_by(asc(Grade.<span class="built_in">id</span>))</span><br><span class="line">        <span class="keyword">if</span> grade_search.courseName:</span><br><span class="line">            query = query.where(Course.name.like(<span class="string">f&quot;%<span class="subst">&#123;grade_search.courseName&#125;</span>%&quot;</span>))</span><br><span class="line">        <span class="keyword">if</span> grade_search.studentName:</span><br><span class="line">            query = query.where(Student.name.like(<span class="string">f&quot;%<span class="subst">&#123;grade_search.studentName&#125;</span>%&quot;</span>))</span><br><span class="line">        <span class="keyword">if</span> grade_search.studentId:</span><br><span class="line">            query = query.where(Grade.studentId == grade_search.studentId)</span><br><span class="line">        result = db_session.execute(query).scalars().<span class="built_in">all</span>()</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">update_by_id</span>(<span class="params">grade: GradeUpdate, db_session: Session</span>):</span><br><span class="line">        exist_grade: Grade = check_grade_exist(grade.<span class="built_in">id</span>, db_session)</span><br><span class="line">        set_attrs(exist_grade, jsonable_encoder(grade))</span><br><span class="line">        db_session.commit()</span><br><span class="line">        <span class="keyword">return</span> exist_grade</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">delete_by_id</span>(<span class="params"><span class="built_in">id</span>: <span class="built_in">int</span>, db_session: Session</span>):</span><br><span class="line">        exist_grade: Grade = check_grade_exist(<span class="built_in">id</span>, db_session)</span><br><span class="line">        db_session.delete(exist_grade)</span><br><span class="line">        db_session.commit()</span><br><span class="line">        <span class="keyword">return</span> exist_grade</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check_grade_exist</span>(<span class="params">grade_id: <span class="built_in">int</span>, db_session: Session</span>):</span><br><span class="line">    query = select(Grade).where(Grade.<span class="built_in">id</span> == grade_id)</span><br><span class="line">    exist_grade: Grade = db_session.execute(query).scalar()</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> exist_grade:</span><br><span class="line">        <span class="keyword">raise</span> GradeExistException(<span class="string">&quot;成绩记录不存在&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> exist_grade</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="测试-2"><a href="#测试-2" class="headerlink" title="测试"></a>测试</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710678715152-35dd8383-9e4c-4d96-b75f-56eda2266de6.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710678731077-6041b07e-bae2-413a-89cb-c08681df37ba.png"></p><h1 id=""><a href="#" class="headerlink" title=""></a></h1><blockquote><p>更新: 2024-05-26 21:20:47<br>原文: <a href="https://www.yuque.com/zacharyblock/iacda/izxixxgu5aq8g2nw">https://www.yuque.com/zacharyblock/iacda/izxixxgu5aq8g2nw</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> FastAPI入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Vue3 </tag>
            
            <tag> FastAPI </tag>
            
            <tag> 实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FastAPI入门-学生选课功能</title>
      <link href="/2024/05/26/FastAPI%E5%85%A5%E9%97%A8/%E5%AD%A6%E7%94%9F%E9%80%89%E8%AF%BE%E5%8A%9F%E8%83%BD/"/>
      <url>/2024/05/26/FastAPI%E5%85%A5%E9%97%A8/%E5%AD%A6%E7%94%9F%E9%80%89%E8%AF%BE%E5%8A%9F%E8%83%BD/</url>
      
        <content type="html"><![CDATA[<h1 id="学生选课功能"><a href="#学生选课功能" class="headerlink" title="学生选课功能"></a>学生选课功能</h1><h1 id="学生选课功能-1"><a href="#学生选课功能-1" class="headerlink" title="学生选课功能"></a>学生选课功能</h1><h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><p>新增一张学生选课表</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710661868105-c089191b-2c9a-4bcd-a48a-de4fb53fa15f.png"></p><h2 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h2><p>学生选课页面，把 Course 页面复制粘贴一份，命名为<code>CourseList.vue</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.name&quot;</span><br><span class="line">        placeholder=&quot;请输入要查询的课程名称&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;margin-left:10px; width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.number&quot;</span><br><span class="line">        placeholder=&quot;请输入课程编号&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;margin-left:10px; width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.teacher&quot;</span><br><span class="line">        placeholder=&quot;请输入任课老师&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-button type=&quot;info&quot; plain style=&quot;margin: 0 0 0 10px&quot; @click=&quot;reset&quot;</span><br><span class="line">        &gt;重置&lt;/el-button</span><br><span class="line">      &gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-table :data=&quot;data.tableData&quot; stripe style=&quot;width: 100%&quot;&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;id&quot; label=&quot;ID&quot; width=&quot;80&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;name&quot; label=&quot;课程名称&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;number&quot; label=&quot;课程编号&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;description&quot; label=&quot;课程描述&quot; width=&quot;240&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;periods&quot; label=&quot;课时&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;teacher&quot; label=&quot;任课教师&quot; /&gt;</span><br><span class="line">          &lt;el-table-column label=&quot;操作&quot; align=&quot;center&quot;&gt;</span><br><span class="line">            &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">              &lt;el-button</span><br><span class="line">                type=&quot;primary&quot;</span><br><span class="line">                size=&quot;small&quot;</span><br><span class="line">                plain</span><br><span class="line">                @click=&quot;selectCourse(scope.row)&quot;</span><br><span class="line">                &gt;选课&lt;/el-button</span><br><span class="line">              &gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">          &lt;/el-table-column&gt;</span><br><span class="line">        &lt;/el-table&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot;&gt;</span><br><span class="line">      &lt;el-pagination</span><br><span class="line">        v-model:current-page=&quot;data.pageNum&quot;</span><br><span class="line">        v-model:page-size=&quot;data.pageSize&quot;</span><br><span class="line">        @current-change=&quot;handleCurrentChange&quot;</span><br><span class="line">        background</span><br><span class="line">        layout=&quot;prev, pager, next&quot;</span><br><span class="line">        :total=&quot;data.total&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; reactive &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; Search &#125; from &quot;@element-plus/icons-vue&quot;;</span><br><span class="line">import request from &quot;@/utils/request&quot;;</span><br><span class="line">import &#123; ElMessage, ElMessageBox &#125; from &quot;element-plus&quot;;</span><br><span class="line"></span><br><span class="line">const data = reactive(&#123;</span><br><span class="line">  name: &quot;&quot;,</span><br><span class="line">  number: &quot;&quot;,</span><br><span class="line">  teacher: &quot;&quot;,</span><br><span class="line">  tableData: [],</span><br><span class="line">  total: 0,</span><br><span class="line">  pageNum: 1,</span><br><span class="line">  pageSize: 5,</span><br><span class="line">  user: JSON.parse(localStorage.getItem(&quot;student-user&quot;) || &quot;&#123;&#125;&quot;),</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const load = () =&gt; &#123;</span><br><span class="line">  request</span><br><span class="line">    .get(&quot;/course/selectPage&quot;, &#123;</span><br><span class="line">      params: &#123;</span><br><span class="line">        pageNum: data.pageNum,</span><br><span class="line">        pageSize: data.pageSize,</span><br><span class="line">        name: data.name,</span><br><span class="line">        number: data.number,</span><br><span class="line">        teacher: data.teacher,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">        data.tableData = res.data?.list || [];</span><br><span class="line">        data.total = res.data?.total || 0;</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        ElMessage.error(res.msg);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">        localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 加载一次 获取课程数据</span><br><span class="line">load();</span><br><span class="line"></span><br><span class="line">const handleCurrentChange = () =&gt; &#123;</span><br><span class="line">  // 当翻页的时候重新加载数据</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const reset = () =&gt; &#123;</span><br><span class="line">  data.name = &quot;&quot;;</span><br><span class="line">  data.number = &quot;&quot;;</span><br><span class="line">  data.teacher = &quot;&quot;;</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const selectCourse = (row) =&gt; &#123;</span><br><span class="line">  request</span><br><span class="line">    .post(&quot;/studentCourse/add&quot;, &#123;</span><br><span class="line">      studentId: data.user.id,</span><br><span class="line">      name: row.name,</span><br><span class="line">      number: row.number,</span><br><span class="line">      courseId: row.id,</span><br><span class="line">    &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">        ElMessage.success(&quot;选课成功&quot;);</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        ElMessage.error(res.msg);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">        localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHistory &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">history</span>: <span class="title function_">createWebHistory</span>(<span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">env</span>.<span class="property">BASE_URL</span>),</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;Manager&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/Manager.vue&quot;</span>),</span><br><span class="line">      <span class="attr">redirect</span>: <span class="string">&quot;/home&quot;</span>,</span><br><span class="line">      <span class="attr">children</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;home&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Home&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Home.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;course&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Course&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Course.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;student&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Student&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Student.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;person&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Person&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Person.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;courseList&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;CourseList&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/CourseList.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">      ],</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/login&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;Login&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/Login.vue&quot;</span>),</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/register&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;Register&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/Register.vue&quot;</span>),</span><br><span class="line">    &#125;,</span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">beforeEach</span>(<span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> requiresAuth = to.<span class="property">matched</span>.<span class="title function_">some</span>(<span class="function">(<span class="params">record</span>) =&gt;</span> record.<span class="property">meta</span>.<span class="property">requiresAuth</span>);</span><br><span class="line">  <span class="keyword">const</span> user = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;student-user&quot;</span>));</span><br><span class="line">  <span class="keyword">if</span> (requiresAuth &amp;&amp; !user) &#123;</span><br><span class="line">    <span class="comment">// 如果目标路由需要认证,并且用户未登录</span></span><br><span class="line">    <span class="title function_">next</span>(<span class="string">&quot;/login&quot;</span>); <span class="comment">// 跳转到登录页面</span></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">next</span>(); <span class="comment">// 如果目标路由不需要认证,或者用户已登录,则正常导航到目标路由</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div</span><br><span class="line">      style=&quot;height: 60px; background-color: #eae8e8; display: flex; align-items: center; border-bottom: 1px solid #c4c2c2&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;div style=&quot;flex: 1&quot;&gt;</span><br><span class="line">        &lt;div style=&quot;padding-left: 20px; display: flex; align-items: center&quot;&gt;</span><br><span class="line">          &lt;img src=&quot;@/assets/imgs/logo.png&quot; alt=&quot;&quot; style=&quot;width: 40px&quot; /&gt;</span><br><span class="line">          &lt;div style=&quot;font-weight: bold; font-size: 24px; margin-left: 5px&quot;&gt;</span><br><span class="line">            学生信息管理系统</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        style=&quot;width: fit-content; padding-right: 10px; display: flex; align-items: center;&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;img</span><br><span class="line">          :src=&quot;</span><br><span class="line">            user.avatar ||</span><br><span class="line">            &#x27;https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png&#x27;</span><br><span class="line">          &quot;</span><br><span class="line">          alt=&quot;&quot;</span><br><span class="line">          style=&quot;width: 40px; height: 40px; border-radius: 50%&quot;</span><br><span class="line">        /&gt;</span><br><span class="line">        &lt;span style=&quot;margin-left: 5px&quot;&gt;&#123;&#123; user.name &#125;&#125;&lt;/span&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div style=&quot;display: flex&quot;&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        style=&quot;width: 200px; border-right: 1px solid #f3eeee; min-height: calc(100vh - 60px)&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;el-menu</span><br><span class="line">          router</span><br><span class="line">          style=&quot;border: none&quot;</span><br><span class="line">          :default-active=&quot;$route.path&quot;</span><br><span class="line">          :default-openeds=&quot;[&#x27;/home&#x27;, &#x27;2&#x27;, &#x27;3&#x27;]&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          &lt;el-menu-item index=&quot;/home&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;</span><br><span class="line">              &lt;HomeFilled /&gt;</span><br><span class="line">            &lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;系统首页&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line"></span><br><span class="line">          &lt;el-sub-menu index=&quot;2&quot; v-if=&quot;user.role === &#x27;ADMIN&#x27;&quot;&gt;</span><br><span class="line">            &lt;template #title&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;Management /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;学生管理&lt;/span&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">            &lt;el-menu-item index=&quot;/student&quot;&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;UserFilled /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;学生信息&lt;/span&gt;</span><br><span class="line">            &lt;/el-menu-item&gt;</span><br><span class="line">          &lt;/el-sub-menu&gt;</span><br><span class="line"></span><br><span class="line">          &lt;el-sub-menu index=&quot;3&quot;&gt;</span><br><span class="line">            &lt;template #title&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;Memo /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;课程管理&lt;/span&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">            &lt;el-menu-item index=&quot;/course&quot; v-if=&quot;user.role === &#x27;ADMIN&#x27;&quot;&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;Document /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;课程信息&lt;/span&gt;</span><br><span class="line">            &lt;/el-menu-item&gt;</span><br><span class="line">            &lt;el-menu-item index=&quot;/courseList&quot; v-if=&quot;user.role === &#x27;STUDENT&#x27;&quot;&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;Document /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;学生选课&lt;/span&gt;</span><br><span class="line">            &lt;/el-menu-item&gt;</span><br><span class="line">          &lt;/el-sub-menu&gt;</span><br><span class="line"></span><br><span class="line">          &lt;el-menu-item index=&quot;/person&quot; v-if=&quot;user.role === &#x27;STUDENT&#x27;&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;</span><br><span class="line">              &lt;User /&gt;</span><br><span class="line">            &lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;个人资料&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line">          &lt;el-menu-item index=&quot;/login&quot; @click=&quot;logout&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;</span><br><span class="line">              &lt;SwitchButton /&gt;</span><br><span class="line">            &lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;退出系统&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line">        &lt;/el-menu&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">      &lt;div style=&quot;flex: 1; width: 0; background-color: #eaeaee; padding: 10px&quot;&gt;</span><br><span class="line">        &lt;router-view /&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; useRoute &#125; from &quot;vue-router&quot;;</span><br><span class="line"></span><br><span class="line">const $route = useRoute();</span><br><span class="line">console.log($route.path);</span><br><span class="line"></span><br><span class="line">const logout = () =&gt; &#123;</span><br><span class="line">  localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const user = JSON.parse(localStorage.getItem(&quot;student-user&quot;) || &quot;&#123;&#125;&quot;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.el-menu-item.is-active &#123;</span><br><span class="line">  background-color: #c3d7d3 !important;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.el-menu-item:hover &#123;</span><br><span class="line">  color: #0c98d5;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">:deep(th) &#123;</span><br><span class="line">  color: #333;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710663024513-c0ac7ae4-706a-47b6-85cc-4056c92c95a7.png"></p><h2 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h2><h3 id="选课实体类定义"><a href="#选课实体类定义" class="headerlink" title="选课实体类定义"></a>选课实体类定义</h3><p>在项目目录<code>/model</code>下创建一个<code>studentCourse.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> Integer, String, ForeignKey</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> Mapped, mapped_column, relationship</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Base</span><br><span class="line"><span class="keyword">from</span> model.student <span class="keyword">import</span> Student</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentCourse</span>(<span class="title class_ inherited__">Base</span>):</span><br><span class="line">    __tablename__ = <span class="string">&quot;student_course&quot;</span></span><br><span class="line">    <span class="built_in">id</span>: Mapped[<span class="built_in">int</span>] = mapped_column(Integer, primary_key=<span class="literal">True</span>, nullable=<span class="literal">False</span>)</span><br><span class="line">    name: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    number: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    studentId: Mapped[<span class="built_in">int</span>] = mapped_column(<span class="string">&quot;student_id&quot;</span>, Integer, nullable=<span class="literal">False</span>)</span><br><span class="line">    courseId: Mapped[<span class="built_in">int</span>] = mapped_column(<span class="string">&quot;course_id&quot;</span>, Integer, nullable=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><h3 id="学生选课"><a href="#学生选课" class="headerlink" title="学生选课"></a>学生选课</h3><p>接着实现学生选课的 api 部分，在<code>/api</code>下创建一个<code>studentCourseApi.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> APIRouter, Depends</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> ResultModel, Result</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session, get_db_session</span><br><span class="line"><span class="keyword">from</span> model.studentCourse <span class="keyword">import</span> StudentCourseCreate</span><br><span class="line"><span class="keyword">from</span> service.studentCourseService <span class="keyword">import</span> StudentCourseService</span><br><span class="line"></span><br><span class="line">student_course_router = APIRouter(prefix=<span class="string">&quot;/studentCourse&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@student_course_router.post(<span class="params"><span class="string">&quot;/add&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">student_course: StudentCourseCreate, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    StudentCourseService.add_student_course(student_course, db_session)</span><br><span class="line">    <span class="keyword">return</span> Result.success()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.include_router(student_course_router)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> FastAPI</span><br><span class="line"><span class="keyword">from</span> starlette.middleware.cors <span class="keyword">import</span> CORSMiddleware</span><br><span class="line"></span><br><span class="line">app = FastAPI()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 跨域问题</span></span><br><span class="line">origins = [<span class="string">&quot;http://localhost:5173&quot;</span>, <span class="string">&quot;http://127.0.0.1:5173&quot;</span>]  <span class="comment"># 替换为你的前端应用的实际地址</span></span><br><span class="line"></span><br><span class="line">app.add_middleware(</span><br><span class="line">    CORSMiddleware,</span><br><span class="line">    allow_origins=origins,  <span class="comment"># 允许跨域访问的来源域名列表</span></span><br><span class="line">    allow_credentials=<span class="literal">True</span>,  <span class="comment"># 是否允许携带cookie</span></span><br><span class="line">    allow_methods=[<span class="string">&quot;*&quot;</span>],  <span class="comment"># 允许的方法，默认包含常见的GET、POST等，&quot;*&quot;表示所有方法</span></span><br><span class="line">    allow_headers=[<span class="string">&quot;*&quot;</span>],  <span class="comment"># 允许的请求头，默认包含常见的Content-Type等，&quot;*&quot;表示所有请求头</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> adminApi, exceptionHandler, courseApi, studentApi, fileApi, studentCourseApi</span><br></pre></td></tr></table></figure><p>在<code>/servie</code>下创建一个<code>studentCourseService.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi.encoders <span class="keyword">import</span> jsonable_encoder</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> select, and_</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.utils <span class="keyword">import</span> set_attrs</span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> StudentCourseExistException</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session</span><br><span class="line"><span class="keyword">from</span> model.studentCourse <span class="keyword">import</span> StudentCourseCreate, StudentCourse</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentCourseService</span>:</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">add_student_course</span>(<span class="params">student_course: StudentCourseCreate, db_session: Session</span>):</span><br><span class="line">        query = select(StudentCourse).where(</span><br><span class="line">            and_(StudentCourse.studentId == student_course.studentId,</span><br><span class="line">                 StudentCourse.courseId == student_course.courseId))</span><br><span class="line">        exist_student_course: StudentCourse = db_session.execute(query).scalar()</span><br><span class="line">        <span class="keyword">if</span> exist_student_course:</span><br><span class="line">            <span class="keyword">raise</span> StudentCourseExistException(<span class="string">&quot;课程已选过&quot;</span>)</span><br><span class="line">        new_student_course = StudentCourse()</span><br><span class="line">        set_attrs(new_student_course, jsonable_encoder(student_course))</span><br><span class="line">        db_session.add(new_student_course)</span><br><span class="line">        db_session.commit()</span><br><span class="line">        <span class="keyword">return</span> new_student_course</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> pydantic <span class="keyword">import</span> BaseModel</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> Integer, String, ForeignKey</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> Mapped, mapped_column, relationship</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Base</span><br><span class="line"><span class="keyword">from</span> model.student <span class="keyword">import</span> Student</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentCourse</span>(<span class="title class_ inherited__">Base</span>):</span><br><span class="line">    __tablename__ = <span class="string">&quot;student_course&quot;</span></span><br><span class="line">    <span class="built_in">id</span>: Mapped[<span class="built_in">int</span>] = mapped_column(Integer, primary_key=<span class="literal">True</span>, nullable=<span class="literal">False</span>)</span><br><span class="line">    name: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    number: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    studentId: Mapped[<span class="built_in">int</span>] = mapped_column(<span class="string">&quot;student_id&quot;</span>, Integer, nullable=<span class="literal">False</span>)</span><br><span class="line">    courseId: Mapped[<span class="built_in">int</span>] = mapped_column(<span class="string">&quot;course_id&quot;</span>, Integer, nullable=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentCourseBase</span>(<span class="title class_ inherited__">BaseModel</span>):</span><br><span class="line">    name: <span class="built_in">str</span></span><br><span class="line">    number: <span class="built_in">str</span></span><br><span class="line">    studentId: <span class="built_in">int</span></span><br><span class="line">    courseId: <span class="built_in">int</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentCourseCreate</span>(<span class="title class_ inherited__">StudentCourseBase</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UserNotFoundException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UserExistException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PasswordNotMatchException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TokenException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseExistException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseNotExistException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">FileNotFoundException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentCourseExistException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi.encoders <span class="keyword">import</span> jsonable_encoder</span><br><span class="line"><span class="keyword">from</span> starlette.responses <span class="keyword">import</span> JSONResponse</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> Request</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> Result</span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> UserNotFoundException, PasswordNotMatchException, TokenException, \</span><br><span class="line">    CourseExistException, CourseNotExistException, UserExistException, FileNotFoundException, \</span><br><span class="line">    StudentCourseExistException</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">Exception</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">exception_handler</span>(<span class="params">request: Request, exc: Exception</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;500&quot;</span>, msg=<span class="built_in">str</span>(exc))</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">500</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">UserNotFoundException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">user_not_fount_exception_handler</span>(<span class="params">request: Request, exc: UserNotFoundException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;404&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">404</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">PasswordNotMatchException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">password_not_fount_exception_handler</span>(<span class="params">request: Request, exc: PasswordNotMatchException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;401&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">401</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">TokenException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">token_exception_handler</span>(<span class="params">request: Request, exc: TokenException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;401&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">401</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">CourseExistException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">course_exist_exception_handler</span>(<span class="params">request: Request, exc: CourseExistException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;400&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">400</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">CourseNotExistException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">course_not_exist_exception_handler</span>(<span class="params">request: Request, exc: CourseNotExistException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;404&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">404</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">UserExistException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">user_exist_exception_handler</span>(<span class="params">request: Request, exc: UserExistException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;400&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">400</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">FileNotFoundException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">file_not_found_exception_handler</span>(<span class="params">request: Request, exc: FileNotFoundException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;404&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">404</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">StudentCourseExistException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">student_course_exist_exception_handler</span>(<span class="params">request: Request, exc: StudentCourseExistException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;400&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">400</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710664237416-830483ff-a709-499c-9d8f-f2f60a902e86.png"></p><p>查看数据库有无数据插入</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710664237390-1da0ccbf-e229-4afe-87a8-487bff6f3074.png"></p><h2 id="管理员-学生查看已选课程"><a href="#管理员-学生查看已选课程" class="headerlink" title="管理员&#x2F;学生查看已选课程"></a>管理员&#x2F;学生查看已选课程</h2><p>这个需要做到：</p><ul><li>学生只看自己的</li><li>管理员看全部的</li></ul><h3 id="前端-1"><a href="#前端-1" class="headerlink" title="前端"></a>前端</h3><p>学生选课页面，将<code>CourseList.vue</code>复制粘贴一下作为<code>StudentCourse.vue</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.name&quot;</span><br><span class="line">        placeholder=&quot;请输入要查询的课程名称&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;margin-left:10px; width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.number&quot;</span><br><span class="line">        placeholder=&quot;请输入课程编号&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-button type=&quot;info&quot; plain style=&quot;margin: 0 0 0 10px&quot; @click=&quot;reset&quot;</span><br><span class="line">        &gt;重置&lt;/el-button</span><br><span class="line">      &gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-table :data=&quot;data.tableData&quot; stripe style=&quot;width: 100%&quot;&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;id&quot; label=&quot;ID&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;name&quot; label=&quot;课程名称&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;number&quot; label=&quot;课程编号&quot; /&gt;</span><br><span class="line">          &lt;el-table-column label=&quot;操作&quot; align=&quot;center&quot; width=&quot;180px&quot;&gt;</span><br><span class="line">            &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">              &lt;el-button</span><br><span class="line">                type=&quot;primary&quot;</span><br><span class="line">                size=&quot;small&quot;</span><br><span class="line">                plain</span><br><span class="line">                @click=&quot;del(scope.row.id)&quot;</span><br><span class="line">                &gt;删除&lt;/el-button</span><br><span class="line">              &gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">          &lt;/el-table-column&gt;</span><br><span class="line">        &lt;/el-table&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot;&gt;</span><br><span class="line">      &lt;el-pagination</span><br><span class="line">        v-model:current-page=&quot;data.pageNum&quot;</span><br><span class="line">        v-model:page-size=&quot;data.pageSize&quot;</span><br><span class="line">        @current-change=&quot;handleCurrentChange&quot;</span><br><span class="line">        background</span><br><span class="line">        layout=&quot;prev, pager, next&quot;</span><br><span class="line">        :total=&quot;data.total&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; reactive &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; Search &#125; from &quot;@element-plus/icons-vue&quot;;</span><br><span class="line">import request from &quot;@/utils/request&quot;;</span><br><span class="line">import &#123; ElMessage, ElMessageBox &#125; from &quot;element-plus&quot;;</span><br><span class="line"></span><br><span class="line">const data = reactive(&#123;</span><br><span class="line">  name: &quot;&quot;,</span><br><span class="line">  number: &quot;&quot;,</span><br><span class="line">  tableData: [],</span><br><span class="line">  total: 0,</span><br><span class="line">  pageNum: 1,</span><br><span class="line">  pageSize: 10,</span><br><span class="line">  user: JSON.parse(localStorage.getItem(&quot;student-user&quot;) || &quot;&#123;&#125;&quot;),</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const load = () =&gt; &#123;</span><br><span class="line">  let params = &#123;</span><br><span class="line">    pageNum: data.pageNum,</span><br><span class="line">    pageSize: data.pageSize,</span><br><span class="line">    name: data.name,</span><br><span class="line">    number: data.number,</span><br><span class="line">  &#125;;</span><br><span class="line">  if (data.user.role === &quot;STUDENT&quot;) &#123;</span><br><span class="line">    params.studentId = data.user.id;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  request</span><br><span class="line">    .get(&quot;/studentCourse/selectPage&quot;, &#123;</span><br><span class="line">      params: params,</span><br><span class="line">    &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">        data.tableData = res.data?.list || [];</span><br><span class="line">        data.total = res.data?.total || 0;</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        ElMessage.error(res.msg);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">        localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 加载一次 获取学生选课数据</span><br><span class="line">load();</span><br><span class="line"></span><br><span class="line">const handleCurrentChange = () =&gt; &#123;</span><br><span class="line">  // 当翻页的时候重新加载数据</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const reset = () =&gt; &#123;</span><br><span class="line">  data.name = &quot;&quot;;</span><br><span class="line">  data.number = &quot;&quot;;</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const del = (id) =&gt; &#123;&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHistory &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">history</span>: <span class="title function_">createWebHistory</span>(<span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">env</span>.<span class="property">BASE_URL</span>),</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;Manager&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/Manager.vue&quot;</span>),</span><br><span class="line">      <span class="attr">redirect</span>: <span class="string">&quot;/home&quot;</span>,</span><br><span class="line">      <span class="attr">children</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;home&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Home&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Home.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;course&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Course&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Course.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;student&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Student&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Student.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;person&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Person&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Person.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;courseList&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;CourseList&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/CourseList.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;studentCourse&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;StudentCourse&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/StudentCourse.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">      ],</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/login&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;Login&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/Login.vue&quot;</span>),</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/register&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;Register&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/Register.vue&quot;</span>),</span><br><span class="line">    &#125;,</span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">beforeEach</span>(<span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> requiresAuth = to.<span class="property">matched</span>.<span class="title function_">some</span>(<span class="function">(<span class="params">record</span>) =&gt;</span> record.<span class="property">meta</span>.<span class="property">requiresAuth</span>);</span><br><span class="line">  <span class="keyword">const</span> user = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;student-user&quot;</span>));</span><br><span class="line">  <span class="keyword">if</span> (requiresAuth &amp;&amp; !user) &#123;</span><br><span class="line">    <span class="comment">// 如果目标路由需要认证,并且用户未登录</span></span><br><span class="line">    <span class="title function_">next</span>(<span class="string">&quot;/login&quot;</span>); <span class="comment">// 跳转到登录页面</span></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">next</span>(); <span class="comment">// 如果目标路由不需要认证,或者用户已登录,则正常导航到目标路由</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div</span><br><span class="line">      style=&quot;height: 60px; background-color: #eae8e8; display: flex; align-items: center; border-bottom: 1px solid #c4c2c2&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;div style=&quot;flex: 1&quot;&gt;</span><br><span class="line">        &lt;div style=&quot;padding-left: 20px; display: flex; align-items: center&quot;&gt;</span><br><span class="line">          &lt;img src=&quot;@/assets/imgs/logo.png&quot; alt=&quot;&quot; style=&quot;width: 40px&quot; /&gt;</span><br><span class="line">          &lt;div style=&quot;font-weight: bold; font-size: 24px; margin-left: 5px&quot;&gt;</span><br><span class="line">            学生信息管理系统</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        style=&quot;width: fit-content; padding-right: 10px; display: flex; align-items: center;&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;img</span><br><span class="line">          :src=&quot;</span><br><span class="line">            user.avatar ||</span><br><span class="line">            &#x27;https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png&#x27;</span><br><span class="line">          &quot;</span><br><span class="line">          alt=&quot;&quot;</span><br><span class="line">          style=&quot;width: 40px; height: 40px; border-radius: 50%&quot;</span><br><span class="line">        /&gt;</span><br><span class="line">        &lt;span style=&quot;margin-left: 5px&quot;&gt;&#123;&#123; user.name &#125;&#125;&lt;/span&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div style=&quot;display: flex&quot;&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        style=&quot;width: 200px; border-right: 1px solid #f3eeee; min-height: calc(100vh - 60px)&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;el-menu</span><br><span class="line">          router</span><br><span class="line">          style=&quot;border: none&quot;</span><br><span class="line">          :default-active=&quot;$route.path&quot;</span><br><span class="line">          :default-openeds=&quot;[&#x27;/home&#x27;, &#x27;2&#x27;, &#x27;3&#x27;]&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          &lt;el-menu-item index=&quot;/home&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;</span><br><span class="line">              &lt;HomeFilled /&gt;</span><br><span class="line">            &lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;系统首页&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line"></span><br><span class="line">          &lt;el-sub-menu index=&quot;2&quot; v-if=&quot;user.role === &#x27;ADMIN&#x27;&quot;&gt;</span><br><span class="line">            &lt;template #title&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;Management /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;学生管理&lt;/span&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">            &lt;el-menu-item index=&quot;/student&quot;&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;UserFilled /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;学生信息&lt;/span&gt;</span><br><span class="line">            &lt;/el-menu-item&gt;</span><br><span class="line">          &lt;/el-sub-menu&gt;</span><br><span class="line"></span><br><span class="line">          &lt;el-sub-menu index=&quot;3&quot;&gt;</span><br><span class="line">            &lt;template #title&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;Memo /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;课程管理&lt;/span&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">            &lt;el-menu-item index=&quot;/course&quot; v-if=&quot;user.role === &#x27;ADMIN&#x27;&quot;&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;Document /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;课程信息&lt;/span&gt;</span><br><span class="line">            &lt;/el-menu-item&gt;</span><br><span class="line">            &lt;el-menu-item index=&quot;/courseList&quot; v-if=&quot;user.role === &#x27;STUDENT&#x27;&quot;&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;Document /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;学生选课&lt;/span&gt;</span><br><span class="line">            &lt;/el-menu-item&gt;</span><br><span class="line">            &lt;el-menu-item index=&quot;/studentCourse&quot;&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;Document /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;选课记录&lt;/span&gt;</span><br><span class="line">            &lt;/el-menu-item&gt;</span><br><span class="line">          &lt;/el-sub-menu&gt;</span><br><span class="line"></span><br><span class="line">          &lt;el-menu-item index=&quot;/person&quot; v-if=&quot;user.role === &#x27;STUDENT&#x27;&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;</span><br><span class="line">              &lt;User /&gt;</span><br><span class="line">            &lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;个人资料&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line">          &lt;el-menu-item index=&quot;/login&quot; @click=&quot;logout&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;</span><br><span class="line">              &lt;SwitchButton /&gt;</span><br><span class="line">            &lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;退出系统&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line">        &lt;/el-menu&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">      &lt;div style=&quot;flex: 1; width: 0; background-color: #eaeaee; padding: 10px&quot;&gt;</span><br><span class="line">        &lt;router-view /&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; useRoute &#125; from &quot;vue-router&quot;;</span><br><span class="line"></span><br><span class="line">const $route = useRoute();</span><br><span class="line">console.log($route.path);</span><br><span class="line"></span><br><span class="line">const logout = () =&gt; &#123;</span><br><span class="line">  localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const user = JSON.parse(localStorage.getItem(&quot;student-user&quot;) || &quot;&#123;&#125;&quot;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.el-menu-item.is-active &#123;</span><br><span class="line">  background-color: #c3d7d3 !important;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.el-menu-item:hover &#123;</span><br><span class="line">  color: #0c98d5;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">:deep(th) &#123;</span><br><span class="line">  color: #333;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="后端-1"><a href="#后端-1" class="headerlink" title="后端"></a>后端</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Optional</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> APIRouter, Depends, Query</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> common.pageHelper <span class="keyword">import</span> PageHelper</span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> ResultModel, Result</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session, get_db_session</span><br><span class="line"><span class="keyword">from</span> model.studentCourse <span class="keyword">import</span> StudentCourseCreate, StudentCourseSearch</span><br><span class="line"><span class="keyword">from</span> service.studentCourseService <span class="keyword">import</span> StudentCourseService</span><br><span class="line"></span><br><span class="line">student_course_router = APIRouter(prefix=<span class="string">&quot;/studentCourse&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@student_course_router.post(<span class="params"><span class="string">&quot;/add&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">student_course: StudentCourseCreate, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    StudentCourseService.add_student_course(student_course, db_session)</span><br><span class="line">    <span class="keyword">return</span> Result.success()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@student_course_router.get(<span class="params"><span class="string">&quot;/selectPage&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">select_page</span>(<span class="params">page: <span class="built_in">int</span> = Query(<span class="params"><span class="number">1</span>, ge=<span class="number">1</span>, alias=<span class="string">&quot;pageNum&quot;</span>, description=<span class="string">&quot;Page number&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      size: <span class="built_in">int</span> = Query(<span class="params"><span class="number">5</span>, gt=<span class="number">0</span>, le=<span class="number">100</span>, alias=<span class="string">&quot;pageSize&quot;</span>, description=<span class="string">&quot;Page size&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      name: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Student name&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      number: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Student number&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      studentId: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Student id&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    pageInfo = PageHelper.startPage(page, size)</span><br><span class="line">    student_course_search = StudentCourseSearch(name=name, number=number, studentId=studentId)</span><br><span class="line">    student_list = StudentCourseService.select_page(student_course_search, db_session)</span><br><span class="line">    <span class="keyword">return</span> Result.success(pageInfo.of(student_list))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.include_router(student_course_router)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi.encoders <span class="keyword">import</span> jsonable_encoder</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> select, and_, asc</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.utils <span class="keyword">import</span> set_attrs</span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> StudentCourseExistException</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session</span><br><span class="line"><span class="keyword">from</span> model.studentCourse <span class="keyword">import</span> StudentCourseCreate, StudentCourse, StudentCourseSearch</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentCourseService</span>:</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">add_student_course</span>(<span class="params">student_course: StudentCourseCreate, db_session: Session</span>):</span><br><span class="line">        query = select(StudentCourse).where(</span><br><span class="line">            and_(StudentCourse.studentId == student_course.studentId,</span><br><span class="line">                 StudentCourse.courseId == student_course.courseId))</span><br><span class="line">        exist_student_course: StudentCourse = db_session.execute(query).scalar()</span><br><span class="line">        <span class="keyword">if</span> exist_student_course:</span><br><span class="line">            <span class="keyword">raise</span> StudentCourseExistException(<span class="string">&quot;课程已选过&quot;</span>)</span><br><span class="line">        new_student_course = StudentCourse()</span><br><span class="line">        set_attrs(new_student_course, jsonable_encoder(student_course))</span><br><span class="line">        db_session.add(new_student_course)</span><br><span class="line">        db_session.commit()</span><br><span class="line">        <span class="keyword">return</span> new_student_course</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">select_page</span>(<span class="params">student_course_search: StudentCourseSearch, db_session: Session</span>):</span><br><span class="line">        query = select(StudentCourse).order_by(asc(StudentCourse.<span class="built_in">id</span>))</span><br><span class="line">        <span class="keyword">if</span> student_course_search.name:</span><br><span class="line">            query = query.where(StudentCourse.name.like(<span class="string">f&quot;%<span class="subst">&#123;student_course_search.name&#125;</span>%&quot;</span>))</span><br><span class="line">        <span class="keyword">if</span> student_course_search.number:</span><br><span class="line">            query = query.where(StudentCourse.number.like(<span class="string">f&quot;%<span class="subst">&#123;student_course_search.number&#125;</span>%&quot;</span>))</span><br><span class="line">        <span class="keyword">if</span> student_course_search.studentId:</span><br><span class="line">            query = query.where(StudentCourse.studentId == student_course_search.studentId)</span><br><span class="line">        result = db_session.execute(query).scalars().<span class="built_in">all</span>()</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> pydantic <span class="keyword">import</span> BaseModel</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> Integer, String</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> Mapped, mapped_column</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Base</span><br><span class="line"><span class="keyword">from</span> model.student <span class="keyword">import</span> Student</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentCourse</span>(<span class="title class_ inherited__">Base</span>):</span><br><span class="line">    __tablename__ = <span class="string">&quot;student_course&quot;</span></span><br><span class="line">    <span class="built_in">id</span>: Mapped[<span class="built_in">int</span>] = mapped_column(Integer, primary_key=<span class="literal">True</span>, nullable=<span class="literal">False</span>)</span><br><span class="line">    name: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    number: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    studentId: Mapped[<span class="built_in">int</span>] = mapped_column(<span class="string">&quot;student_id&quot;</span>, Integer, nullable=<span class="literal">False</span>)</span><br><span class="line">    courseId: Mapped[<span class="built_in">int</span>] = mapped_column(<span class="string">&quot;course_id&quot;</span>, Integer, nullable=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentCourseBase</span>(<span class="title class_ inherited__">BaseModel</span>):</span><br><span class="line">    name: <span class="built_in">str</span></span><br><span class="line">    number: <span class="built_in">str</span></span><br><span class="line">    studentId: <span class="built_in">int</span></span><br><span class="line">    courseId: <span class="built_in">int</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentCourseCreate</span>(<span class="title class_ inherited__">StudentCourseBase</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentCourseSearch</span>(<span class="title class_ inherited__">BaseModel</span>):</span><br><span class="line">    name: <span class="built_in">str</span> | <span class="literal">None</span></span><br><span class="line">    number: <span class="built_in">str</span> | <span class="literal">None</span></span><br><span class="line">    studentId: <span class="built_in">int</span> | <span class="literal">None</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710665807707-fc4d3521-f29e-4877-84af-54403312cd59.png"></p><p>从学生用户这里来看是挺好的，但是如果，多插入几个学生选课</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710665844621-a038df5d-50fd-4645-83c4-baa6528d179c.png"></p><p>从管理员的角度来看是这样的，并不能直接看出是哪位学生选了这门课</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710665872322-80597b11-2899-4281-991d-8ad3e6be1187.png"></p><h3 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h3><p>我们给显示选课记录的这个表格，加一列<code>学生姓名</code></p><p>学生选课表就需要追加一个表的关联，去关联一下学生表获取学生姓名</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> pydantic <span class="keyword">import</span> BaseModel</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> Integer, String, ForeignKey</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> Mapped, mapped_column, relationship</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Base</span><br><span class="line"><span class="keyword">from</span> model.student <span class="keyword">import</span> Student</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentCourse</span>(<span class="title class_ inherited__">Base</span>):</span><br><span class="line">    __tablename__ = <span class="string">&quot;student_course&quot;</span></span><br><span class="line">    <span class="built_in">id</span>: Mapped[<span class="built_in">int</span>] = mapped_column(Integer, primary_key=<span class="literal">True</span>, nullable=<span class="literal">False</span>)</span><br><span class="line">    name: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    number: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    studentId: Mapped[<span class="built_in">int</span>] = mapped_column(<span class="string">&quot;student_id&quot;</span>, Integer, ForeignKey(<span class="string">&#x27;student.id&#x27;</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    courseId: Mapped[<span class="built_in">int</span>] = mapped_column(<span class="string">&quot;course_id&quot;</span>, Integer, nullable=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">    student: Mapped[Student] = relationship(lazy=<span class="literal">False</span>, backref=<span class="string">&quot;student_course&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentCourseBase</span>(<span class="title class_ inherited__">BaseModel</span>):</span><br><span class="line">    name: <span class="built_in">str</span></span><br><span class="line">    number: <span class="built_in">str</span></span><br><span class="line">    studentId: <span class="built_in">int</span></span><br><span class="line">    courseId: <span class="built_in">int</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentCourseCreate</span>(<span class="title class_ inherited__">StudentCourseBase</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentCourseSearch</span>(<span class="title class_ inherited__">BaseModel</span>):</span><br><span class="line">    name: <span class="built_in">str</span> | <span class="literal">None</span></span><br><span class="line">    number: <span class="built_in">str</span> | <span class="literal">None</span></span><br><span class="line">    studentId: <span class="built_in">int</span> | <span class="literal">None</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi.encoders <span class="keyword">import</span> jsonable_encoder</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> select, and_, asc</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.utils <span class="keyword">import</span> set_attrs</span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> StudentCourseExistException</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session</span><br><span class="line"><span class="keyword">from</span> model.student <span class="keyword">import</span> Student</span><br><span class="line"><span class="keyword">from</span> model.studentCourse <span class="keyword">import</span> StudentCourseCreate, StudentCourse, StudentCourseSearch</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentCourseService</span>:</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">add_student_course</span>(<span class="params">student_course: StudentCourseCreate, db_session: Session</span>):</span><br><span class="line">        query = select(StudentCourse).where(</span><br><span class="line">            and_(StudentCourse.studentId == student_course.studentId,</span><br><span class="line">                 StudentCourse.courseId == student_course.courseId))</span><br><span class="line">        exist_student_course: StudentCourse = db_session.execute(query).scalar()</span><br><span class="line">        <span class="keyword">if</span> exist_student_course:</span><br><span class="line">            <span class="keyword">raise</span> StudentCourseExistException(<span class="string">&quot;课程已选过&quot;</span>)</span><br><span class="line">        new_student_course = StudentCourse()</span><br><span class="line">        set_attrs(new_student_course, jsonable_encoder(student_course))</span><br><span class="line">        db_session.add(new_student_course)</span><br><span class="line">        db_session.commit()</span><br><span class="line">        <span class="keyword">return</span> new_student_course</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">select_page</span>(<span class="params">student_course_search: StudentCourseSearch, db_session: Session</span>):</span><br><span class="line">        query = select(StudentCourse, Student).join(StudentCourse.student).order_by(asc(StudentCourse.<span class="built_in">id</span>))</span><br><span class="line">        <span class="keyword">if</span> student_course_search.name:</span><br><span class="line">            query = query.where(StudentCourse.name.like(<span class="string">f&quot;%<span class="subst">&#123;student_course_search.name&#125;</span>%&quot;</span>))</span><br><span class="line">        <span class="keyword">if</span> student_course_search.number:</span><br><span class="line">            query = query.where(StudentCourse.number.like(<span class="string">f&quot;%<span class="subst">&#123;student_course_search.number&#125;</span>%&quot;</span>))</span><br><span class="line">        <span class="keyword">if</span> student_course_search.studentId:</span><br><span class="line">            query = query.where(StudentCourse.studentId == student_course_search.studentId)</span><br><span class="line">        result = db_session.execute(query).scalars().<span class="built_in">all</span>()</span><br><span class="line">        <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><p>然后给前端这块 数据显示加一列，同时得是管理员的时候才显示这么一列</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.name&quot;</span><br><span class="line">        placeholder=&quot;请输入要查询的课程名称&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;margin-left:10px; width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.number&quot;</span><br><span class="line">        placeholder=&quot;请输入课程编号&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-button type=&quot;info&quot; plain style=&quot;margin: 0 0 0 10px&quot; @click=&quot;reset&quot;</span><br><span class="line">        &gt;重置&lt;/el-button</span><br><span class="line">      &gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-table :data=&quot;data.tableData&quot; stripe style=&quot;width: 100%&quot;&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;id&quot; label=&quot;ID&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;name&quot; label=&quot;课程名称&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;number&quot; label=&quot;课程编号&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;student.name&quot; label=&quot;学生名称&quot; /&gt;</span><br><span class="line">          &lt;el-table-column label=&quot;操作&quot; align=&quot;center&quot; width=&quot;180px&quot;&gt;</span><br><span class="line">            &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">              &lt;el-button</span><br><span class="line">                type=&quot;primary&quot;</span><br><span class="line">                size=&quot;small&quot;</span><br><span class="line">                plain</span><br><span class="line">                @click=&quot;del(scope.row.id)&quot;</span><br><span class="line">                &gt;删除&lt;/el-button</span><br><span class="line">              &gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">          &lt;/el-table-column&gt;</span><br><span class="line">        &lt;/el-table&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot;&gt;</span><br><span class="line">      &lt;el-pagination</span><br><span class="line">        v-model:current-page=&quot;data.pageNum&quot;</span><br><span class="line">        v-model:page-size=&quot;data.pageSize&quot;</span><br><span class="line">        @current-change=&quot;handleCurrentChange&quot;</span><br><span class="line">        background</span><br><span class="line">        layout=&quot;prev, pager, next&quot;</span><br><span class="line">        :total=&quot;data.total&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; reactive &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; Search &#125; from &quot;@element-plus/icons-vue&quot;;</span><br><span class="line">import request from &quot;@/utils/request&quot;;</span><br><span class="line">import &#123; ElMessage, ElMessageBox &#125; from &quot;element-plus&quot;;</span><br><span class="line"></span><br><span class="line">const data = reactive(&#123;</span><br><span class="line">  name: &quot;&quot;,</span><br><span class="line">  number: &quot;&quot;,</span><br><span class="line">  tableData: [],</span><br><span class="line">  total: 0,</span><br><span class="line">  pageNum: 1,</span><br><span class="line">  pageSize: 10,</span><br><span class="line">  user: JSON.parse(localStorage.getItem(&quot;student-user&quot;) || &quot;&#123;&#125;&quot;),</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const load = () =&gt; &#123;</span><br><span class="line">  let params = &#123;</span><br><span class="line">    pageNum: data.pageNum,</span><br><span class="line">    pageSize: data.pageSize,</span><br><span class="line">    name: data.name,</span><br><span class="line">    number: data.number,</span><br><span class="line">  &#125;;</span><br><span class="line">  if (data.user.role === &quot;STUDENT&quot;) &#123;</span><br><span class="line">    params.studentId = data.user.id;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  request</span><br><span class="line">    .get(&quot;/studentCourse/selectPage&quot;, &#123;</span><br><span class="line">      params: params,</span><br><span class="line">    &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">        data.tableData = res.data?.list || [];</span><br><span class="line">        data.total = res.data?.total || 0;</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        ElMessage.error(res.msg);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">        localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 加载一次 获取学生选课数据</span><br><span class="line">load();</span><br><span class="line"></span><br><span class="line">const handleCurrentChange = () =&gt; &#123;</span><br><span class="line">  // 当翻页的时候重新加载数据</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const reset = () =&gt; &#123;</span><br><span class="line">  data.name = &quot;&quot;;</span><br><span class="line">  data.number = &quot;&quot;;</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const del = (id) =&gt; &#123;&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710666586302-ce81afa4-106c-421b-8862-bb589eabdc2b.png"></p><h2 id="学生选课删除"><a href="#学生选课删除" class="headerlink" title="学生选课删除"></a>学生选课删除</h2><p>现在实现删除学生所选课程</p><h3 id="前端-2"><a href="#前端-2" class="headerlink" title="前端"></a>前端</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.name&quot;</span><br><span class="line">        placeholder=&quot;请输入要查询的课程名称&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;margin-left:10px; width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.number&quot;</span><br><span class="line">        placeholder=&quot;请输入课程编号&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-button type=&quot;info&quot; plain style=&quot;margin: 0 0 0 10px&quot; @click=&quot;reset&quot;</span><br><span class="line">        &gt;重置&lt;/el-button</span><br><span class="line">      &gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-table :data=&quot;data.tableData&quot; stripe style=&quot;width: 100%&quot;&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;id&quot; label=&quot;ID&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;name&quot; label=&quot;课程名称&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;number&quot; label=&quot;课程编号&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;student.name&quot; label=&quot;学生名称&quot; /&gt;</span><br><span class="line">          &lt;el-table-column label=&quot;操作&quot; align=&quot;center&quot; width=&quot;180px&quot;&gt;</span><br><span class="line">            &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">              &lt;el-button</span><br><span class="line">                type=&quot;primary&quot;</span><br><span class="line">                size=&quot;small&quot;</span><br><span class="line">                plain</span><br><span class="line">                @click=&quot;del(scope.row.id)&quot;</span><br><span class="line">                &gt;删除&lt;/el-button</span><br><span class="line">              &gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">          &lt;/el-table-column&gt;</span><br><span class="line">        &lt;/el-table&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot;&gt;</span><br><span class="line">      &lt;el-pagination</span><br><span class="line">        v-model:current-page=&quot;data.pageNum&quot;</span><br><span class="line">        v-model:page-size=&quot;data.pageSize&quot;</span><br><span class="line">        @current-change=&quot;handleCurrentChange&quot;</span><br><span class="line">        background</span><br><span class="line">        layout=&quot;prev, pager, next&quot;</span><br><span class="line">        :total=&quot;data.total&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; reactive &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; Search &#125; from &quot;@element-plus/icons-vue&quot;;</span><br><span class="line">import request from &quot;@/utils/request&quot;;</span><br><span class="line">import &#123; ElMessage, ElMessageBox &#125; from &quot;element-plus&quot;;</span><br><span class="line"></span><br><span class="line">const data = reactive(&#123;</span><br><span class="line">  name: &quot;&quot;,</span><br><span class="line">  number: &quot;&quot;,</span><br><span class="line">  tableData: [],</span><br><span class="line">  total: 0,</span><br><span class="line">  pageNum: 1,</span><br><span class="line">  pageSize: 10,</span><br><span class="line">  user: JSON.parse(localStorage.getItem(&quot;student-user&quot;) || &quot;&#123;&#125;&quot;),</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const load = () =&gt; &#123;</span><br><span class="line">  let params = &#123;</span><br><span class="line">    pageNum: data.pageNum,</span><br><span class="line">    pageSize: data.pageSize,</span><br><span class="line">    name: data.name,</span><br><span class="line">    number: data.number,</span><br><span class="line">  &#125;;</span><br><span class="line">  if (data.user.role === &quot;STUDENT&quot;) &#123;</span><br><span class="line">    params.studentId = data.user.id;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  request</span><br><span class="line">    .get(&quot;/studentCourse/selectPage&quot;, &#123;</span><br><span class="line">      params: params,</span><br><span class="line">    &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">        data.tableData = res.data?.list || [];</span><br><span class="line">        data.total = res.data?.total || 0;</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        ElMessage.error(res.msg);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">        localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 加载一次 获取学生选课数据</span><br><span class="line">load();</span><br><span class="line"></span><br><span class="line">const handleCurrentChange = () =&gt; &#123;</span><br><span class="line">  // 当翻页的时候重新加载数据</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const reset = () =&gt; &#123;</span><br><span class="line">  data.name = &quot;&quot;;</span><br><span class="line">  data.number = &quot;&quot;;</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const del = (id) =&gt; &#123;</span><br><span class="line">  ElMessageBox.confirm(&quot;删除后内容将无法恢复，您确认删除嘛？&quot;, &quot;删除确认&quot;, &#123;</span><br><span class="line">    type: &quot;warning&quot;,</span><br><span class="line">  &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      request.delete(&quot;/studentCourse/delete/&quot; + id).then((res) =&gt; &#123;</span><br><span class="line">        if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">          ElMessage.success(&quot;操作成功&quot;);</span><br><span class="line">          load();</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          ElMessage.error(res.msg);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">        localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="后端-2"><a href="#后端-2" class="headerlink" title="后端"></a>后端</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Optional</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> APIRouter, Depends, Query</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> common.pageHelper <span class="keyword">import</span> PageHelper</span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> ResultModel, Result</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session, get_db_session</span><br><span class="line"><span class="keyword">from</span> model.studentCourse <span class="keyword">import</span> StudentCourseCreate, StudentCourseSearch</span><br><span class="line"><span class="keyword">from</span> service.studentCourseService <span class="keyword">import</span> StudentCourseService</span><br><span class="line"></span><br><span class="line">student_course_router = APIRouter(prefix=<span class="string">&quot;/studentCourse&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@student_course_router.post(<span class="params"><span class="string">&quot;/add&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">student_course: StudentCourseCreate, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    StudentCourseService.add_student_course(student_course, db_session)</span><br><span class="line">    <span class="keyword">return</span> Result.success()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@student_course_router.get(<span class="params"><span class="string">&quot;/selectPage&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">select_page</span>(<span class="params">page: <span class="built_in">int</span> = Query(<span class="params"><span class="number">1</span>, ge=<span class="number">1</span>, alias=<span class="string">&quot;pageNum&quot;</span>, description=<span class="string">&quot;Page number&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      size: <span class="built_in">int</span> = Query(<span class="params"><span class="number">5</span>, gt=<span class="number">0</span>, le=<span class="number">100</span>, alias=<span class="string">&quot;pageSize&quot;</span>, description=<span class="string">&quot;Page size&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      name: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Student name&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      number: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Student number&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      studentId: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Student id&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    pageInfo = PageHelper.startPage(page, size)</span><br><span class="line">    student_course_search = StudentCourseSearch(name=name, number=number, studentId=studentId)</span><br><span class="line">    student_list = StudentCourseService.select_page(student_course_search, db_session)</span><br><span class="line">    <span class="keyword">return</span> Result.success(pageInfo.of(student_list))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@student_course_router.delete(<span class="params"><span class="string">&quot;/delete/&#123;id&#125;&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">delete</span>(<span class="params"><span class="built_in">id</span>: <span class="built_in">int</span>, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    StudentCourseService.delete_by_id(<span class="built_in">id</span>, db_session)</span><br><span class="line">    <span class="keyword">return</span> Result.success()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.include_router(student_course_router)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi.encoders <span class="keyword">import</span> jsonable_encoder</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> select, and_, asc</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.utils <span class="keyword">import</span> set_attrs</span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> StudentCourseExistException</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session</span><br><span class="line"><span class="keyword">from</span> model.student <span class="keyword">import</span> Student</span><br><span class="line"><span class="keyword">from</span> model.studentCourse <span class="keyword">import</span> StudentCourseCreate, StudentCourse, StudentCourseSearch</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentCourseService</span>:</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">add_student_course</span>(<span class="params">student_course: StudentCourseCreate, db_session: Session</span>):</span><br><span class="line">        query = select(StudentCourse).where(</span><br><span class="line">            and_(StudentCourse.studentId == student_course.studentId,</span><br><span class="line">                 StudentCourse.courseId == student_course.courseId))</span><br><span class="line">        exist_student_course: StudentCourse = db_session.execute(query).scalar()</span><br><span class="line">        <span class="keyword">if</span> exist_student_course:</span><br><span class="line">            <span class="keyword">raise</span> StudentCourseExistException(<span class="string">&quot;课程已选过&quot;</span>)</span><br><span class="line">        new_student_course = StudentCourse()</span><br><span class="line">        set_attrs(new_student_course, jsonable_encoder(student_course))</span><br><span class="line">        db_session.add(new_student_course)</span><br><span class="line">        db_session.commit()</span><br><span class="line">        <span class="keyword">return</span> new_student_course</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">select_page</span>(<span class="params">student_course_search: StudentCourseSearch, db_session: Session</span>):</span><br><span class="line">        query = select(StudentCourse, Student).join(StudentCourse.student).order_by(asc(StudentCourse.<span class="built_in">id</span>))</span><br><span class="line">        <span class="keyword">if</span> student_course_search.name:</span><br><span class="line">            query = query.where(StudentCourse.name.like(<span class="string">f&quot;%<span class="subst">&#123;student_course_search.name&#125;</span>%&quot;</span>))</span><br><span class="line">        <span class="keyword">if</span> student_course_search.number:</span><br><span class="line">            query = query.where(StudentCourse.number.like(<span class="string">f&quot;%<span class="subst">&#123;student_course_search.number&#125;</span>%&quot;</span>))</span><br><span class="line">        <span class="keyword">if</span> student_course_search.studentId:</span><br><span class="line">            query = query.where(StudentCourse.studentId == student_course_search.studentId)</span><br><span class="line">        result = db_session.execute(query).scalars().<span class="built_in">all</span>()</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">delete_by_id</span>(<span class="params"><span class="built_in">id</span>, db_session</span>):</span><br><span class="line">        exist_student_course: StudentCourse = check_student_course_exist(<span class="built_in">id</span>, db_session)</span><br><span class="line">        db_session.delete(exist_student_course)</span><br><span class="line">        db_session.commit()</span><br><span class="line">        <span class="keyword">return</span> exist_student_course</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check_student_course_exist</span>(<span class="params">student_course_id: <span class="built_in">int</span>, db_session: Session</span>):</span><br><span class="line">    query = select(StudentCourse).where(StudentCourse.<span class="built_in">id</span> == student_course_id)</span><br><span class="line">    exist_student_course: StudentCourse = db_session.execute(query).scalar()</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> exist_student_course:</span><br><span class="line">        <span class="keyword">raise</span> StudentCourseNotExistException(<span class="string">&quot;选课记录不存在&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> exist_student_course</span><br></pre></td></tr></table></figure><p>这种写法很冗余，大家自己想想可以怎么优化，我就不改了，或者后面有空改</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UserNotFoundException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UserExistException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PasswordNotMatchException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TokenException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseExistException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseNotExistException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">FileNotFoundException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentCourseExistException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentCourseNotExistException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi.encoders <span class="keyword">import</span> jsonable_encoder</span><br><span class="line"><span class="keyword">from</span> starlette.responses <span class="keyword">import</span> JSONResponse</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> Request</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> Result</span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> UserNotFoundException, PasswordNotMatchException, TokenException, \</span><br><span class="line">    CourseExistException, CourseNotExistException, UserExistException, FileNotFoundException, \</span><br><span class="line">    StudentCourseExistException, StudentCourseNotExistException</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">Exception</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">exception_handler</span>(<span class="params">request: Request, exc: Exception</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;500&quot;</span>, msg=<span class="built_in">str</span>(exc))</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">500</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">UserNotFoundException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">user_not_fount_exception_handler</span>(<span class="params">request: Request, exc: UserNotFoundException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;404&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">404</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">PasswordNotMatchException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">password_not_fount_exception_handler</span>(<span class="params">request: Request, exc: PasswordNotMatchException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;401&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">401</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">TokenException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">token_exception_handler</span>(<span class="params">request: Request, exc: TokenException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;401&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">401</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">CourseExistException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">course_exist_exception_handler</span>(<span class="params">request: Request, exc: CourseExistException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;400&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">400</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">CourseNotExistException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">course_not_exist_exception_handler</span>(<span class="params">request: Request, exc: CourseNotExistException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;404&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">404</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">UserExistException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">user_exist_exception_handler</span>(<span class="params">request: Request, exc: UserExistException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;400&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">400</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">FileNotFoundException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">file_not_found_exception_handler</span>(<span class="params">request: Request, exc: FileNotFoundException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;404&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">404</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">StudentCourseExistException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">student_course_exist_exception_handler</span>(<span class="params">request: Request, exc: StudentCourseExistException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;400&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">400</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">StudentCourseNotExistException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">student_course_not_exist_exception_handler</span>(<span class="params">request: Request, exc: StudentCourseNotExistException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;404&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">404</span>, content=jsonable_encoder(result))</span><br></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>管理员删除</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710667558071-b682345f-f090-48e5-9525-c8457b288a29.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710667586667-08596238-c09f-4451-87ab-d7e2916f3641.png"></p><p>学生自己删除</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710667608790-265986c5-0fc2-436f-b690-f6c20b7fd3ce.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710667626926-b7a0eb77-cc59-47cb-a367-70740cd6d6a1.png"></p><hr><blockquote><p>更新: 2024-05-26 18:51:54<br>原文: <a href="https://www.yuque.com/zacharyblock/iacda/hyi625azhg5dant9">https://www.yuque.com/zacharyblock/iacda/hyi625azhg5dant9</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> FastAPI入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Vue3 </tag>
            
            <tag> FastAPI </tag>
            
            <tag> 实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FastAPI入门-个人页面</title>
      <link href="/2024/05/23/FastAPI%E5%85%A5%E9%97%A8/%E4%B8%AA%E4%BA%BA%E9%A1%B5%E9%9D%A2/"/>
      <url>/2024/05/23/FastAPI%E5%85%A5%E9%97%A8/%E4%B8%AA%E4%BA%BA%E9%A1%B5%E9%9D%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="个人页面"><a href="#个人页面" class="headerlink" title="个人页面"></a>个人页面</h1><h2 id="文件上传与下载"><a href="#文件上传与下载" class="headerlink" title="文件上传与下载"></a>文件上传与下载</h2><h3 id="依赖包"><a href="#依赖包" class="headerlink" title="依赖包"></a>依赖包</h3><p>需要安装一下<code>werkzeug</code>这个包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">fastapi[all]</span><br><span class="line">mysqlclient==2.1.1</span><br><span class="line">SQLAlchemy==2.0.23</span><br><span class="line">pyjwt</span><br><span class="line">passlib[bcrypt]</span><br><span class="line">werkzeug</span><br></pre></td></tr></table></figure><h3 id="fileApi"><a href="#fileApi" class="headerlink" title="fileApi"></a>fileApi</h3><p>为了实现头像上传的功能创建一个新的<code>fileApi.py</code></p><p>注意：</p><ul><li>StreamingResponse 引得是<code>from fastapi.responses import StreamingResponse</code></li><li>secure_filename 引得是<code>from werkzeug.utils import secure_filename</code></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">import</span> mimetypes</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">from</span> fastapi.encoders <span class="keyword">import</span> jsonable_encoder</span><br><span class="line"><span class="keyword">from</span> werkzeug.utils <span class="keyword">import</span> secure_filename</span><br><span class="line"><span class="keyword">from</span> fastapi.responses <span class="keyword">import</span> StreamingResponse</span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> APIRouter, UploadFile</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> common.constant <span class="keyword">import</span> HOST, PORT</span><br><span class="line"><span class="keyword">from</span> common.profile <span class="keyword">import</span> Profile</span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> ResultModel, Result</span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> FileNotFoundException</span><br><span class="line"></span><br><span class="line">file_router = APIRouter(prefix=<span class="string">&quot;/files&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@file_router.post(<span class="params"><span class="string">&quot;/upload&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">upload</span>(<span class="params">file: UploadFile</span>):</span><br><span class="line">    original_filename = secure_filename(file.filename)</span><br><span class="line">    timestamp = <span class="built_in">int</span>(datetime.now().timestamp())</span><br><span class="line">    unique_filename = <span class="string">f&quot;<span class="subst">&#123;timestamp&#125;</span>_<span class="subst">&#123;original_filename&#125;</span>&quot;</span></span><br><span class="line">    file_save_path = Profile.get_files_path()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 创建保存文件的完整路径</span></span><br><span class="line">    file_final_path = file_save_path.joinpath(unique_filename)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将文件保存到指定位置</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(file_final_path, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> buffer_file:</span><br><span class="line">        content = <span class="keyword">await</span> file.read()</span><br><span class="line">        buffer_file.write(content)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 构建文件访问URL</span></span><br><span class="line">    url = <span class="string">f&quot;http://<span class="subst">&#123;HOST&#125;</span>:<span class="subst">&#123;PORT&#125;</span>/files/download?filename=<span class="subst">&#123;unique_filename&#125;</span>&quot;</span></span><br><span class="line">    <span class="keyword">return</span> Result.success(jsonable_encoder(&#123;<span class="string">&quot;url&quot;</span>: url&#125;))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@file_router.get(<span class="params"><span class="string">&quot;/download&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">download</span>(<span class="params">filename: <span class="built_in">str</span></span>):</span><br><span class="line">    file_save_path = Profile.get_files_path()</span><br><span class="line">    file_path = file_save_path.joinpath(filename)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> file_path.exists():</span><br><span class="line">        <span class="keyword">raise</span> FileNotFoundException(<span class="string">&quot;文件不存在&quot;</span>)</span><br><span class="line">    <span class="comment"># 用于触发下载文件的</span></span><br><span class="line">    <span class="comment"># return FileResponse(file_path, media_type=&#x27;image/png&#x27;, filename=filename)</span></span><br><span class="line"></span><br><span class="line">    mime_type, _ = mimetypes.guess_type(file_path)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 创建一个StreamingResponse，以便流式传输大文件，同时设置正确的MIME类型</span></span><br><span class="line">    response = StreamingResponse(</span><br><span class="line">        <span class="built_in">open</span>(file_path, <span class="string">&#x27;rb&#x27;</span>),</span><br><span class="line">        media_type=mime_type,</span><br><span class="line">    )</span><br><span class="line">    <span class="comment"># 不设置Content-Disposition，避免浏览器触发下载</span></span><br><span class="line">    <span class="keyword">return</span> response</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.include_router(file_router)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> FastAPI</span><br><span class="line"><span class="keyword">from</span> starlette.middleware.cors <span class="keyword">import</span> CORSMiddleware</span><br><span class="line"></span><br><span class="line">app = FastAPI()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 跨域问题</span></span><br><span class="line">origins = [<span class="string">&quot;http://localhost:5173&quot;</span>, <span class="string">&quot;http://127.0.0.1:5173&quot;</span>]  <span class="comment"># 替换为你的前端应用的实际地址</span></span><br><span class="line"></span><br><span class="line">app.add_middleware(</span><br><span class="line">    CORSMiddleware,</span><br><span class="line">    allow_origins=origins,  <span class="comment"># 允许跨域访问的来源域名列表</span></span><br><span class="line">    allow_credentials=<span class="literal">True</span>,  <span class="comment"># 是否允许携带cookie</span></span><br><span class="line">    allow_methods=[<span class="string">&quot;*&quot;</span>],  <span class="comment"># 允许的方法，默认包含常见的GET、POST等，&quot;*&quot;表示所有方法</span></span><br><span class="line">    allow_headers=[<span class="string">&quot;*&quot;</span>],  <span class="comment"># 允许的请求头，默认包含常见的Content-Type等，&quot;*&quot;表示所有请求头</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> adminApi, exceptionHandler, courseApi, studentApi, fileApi</span><br></pre></td></tr></table></figure><h3 id="Profile"><a href="#Profile" class="headerlink" title="Profile"></a>Profile</h3><p>在项目目录<code>/common</code>下创建一个<code>profile.py</code>，用于获取项目目录路径</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pathlib <span class="keyword">import</span> Path</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Profile</span>:</span><br><span class="line">    __file_path = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_files_path</span>():</span><br><span class="line">        project_path = Path(__file__).parent.parent  <span class="comment"># 获取项目根目录</span></span><br><span class="line">        file_path = project_path.joinpath(<span class="string">&quot;files&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> file_path.exists():</span><br><span class="line">            file_path.mkdir(parents=<span class="literal">True</span>)</span><br><span class="line">        Profile.__file_path = file_path</span><br><span class="line">        <span class="keyword">return</span> file_path</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="自定义异常"><a href="#自定义异常" class="headerlink" title="自定义异常"></a>自定义异常</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UserNotFoundException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UserExistException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PasswordNotMatchException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TokenException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseExistException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseNotExistException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">FileNotFoundException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi.encoders <span class="keyword">import</span> jsonable_encoder</span><br><span class="line"><span class="keyword">from</span> starlette.responses <span class="keyword">import</span> JSONResponse</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> Request</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> Result</span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> UserNotFoundException, PasswordNotMatchException, TokenException, \</span><br><span class="line">    CourseExistException, CourseNotExistException, UserExistException, FileNotFoundException</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">Exception</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">exception_handler</span>(<span class="params">request: Request, exc: Exception</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;500&quot;</span>, msg=<span class="built_in">str</span>(exc))</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">500</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">UserNotFoundException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">user_not_fount_exception_handler</span>(<span class="params">request: Request, exc: UserNotFoundException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;404&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">404</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">PasswordNotMatchException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">password_not_fount_exception_handler</span>(<span class="params">request: Request, exc: PasswordNotMatchException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;401&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">401</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">TokenException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">token_exception_handler</span>(<span class="params">request: Request, exc: TokenException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;401&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">401</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">CourseExistException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">course_exist_exception_handler</span>(<span class="params">request: Request, exc: CourseExistException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;400&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">400</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">CourseNotExistException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">course_not_exist_exception_handler</span>(<span class="params">request: Request, exc: CourseNotExistException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;404&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">404</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">UserExistException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">user_exist_exception_handler</span>(<span class="params">request: Request, exc: UserExistException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;400&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">400</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">FileNotFoundException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">file_not_found_exception_handler</span>(<span class="params">request: Request, exc: FileNotFoundException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;404&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">404</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>使用 postman 测试一下</p><h4 id="上传"><a href="#上传" class="headerlink" title="上传"></a>上传</h4><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710616492511-d448efde-cc0e-4231-925e-d04f54841c77.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710616565148-33a0b257-5782-41fb-8100-e9c5ccfeab65.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710616639614-cc34bcbc-102d-4887-9134-35122935f222.png"></p><h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710616608908-20c654d8-30b2-4645-aea1-490ab9428df0.png"></p><h2 id="完善图片上传"><a href="#完善图片上传" class="headerlink" title="完善图片上传"></a>完善图片上传</h2><p>修改一下<code>Student.vue</code>头像上传的功能</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.username&quot;</span><br><span class="line">        placeholder=&quot;请输入要查询的学生学号&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;margin-left:10px; width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.name&quot;</span><br><span class="line">        placeholder=&quot;请输入要查询的学生姓名&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-button type=&quot;info&quot; plain style=&quot;margin: 0 0 0 10px&quot; @click=&quot;reset&quot;</span><br><span class="line">        &gt;重置&lt;/el-button</span><br><span class="line">      &gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-button</span><br><span class="line">          type=&quot;primary&quot;</span><br><span class="line">          style=&quot;margin-bottom: 5px&quot;</span><br><span class="line">          plain</span><br><span class="line">          @click=&quot;handleAdd&quot;</span><br><span class="line">          &gt;新增&lt;/el-button</span><br><span class="line">        &gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-table :data=&quot;data.tableData&quot; stripe style=&quot;width: 100%&quot;&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;id&quot; label=&quot;ID&quot; width=&quot;80&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;username&quot; label=&quot;学生学号&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;name&quot; label=&quot;学生姓名&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;gender&quot; label=&quot;性别&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;phone&quot; label=&quot;手机号&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;birthday&quot; label=&quot;出生日期&quot; /&gt;</span><br><span class="line"></span><br><span class="line">          &lt;el-table-column prop=&quot;avatar&quot; label=&quot;头像&quot;&gt;</span><br><span class="line">            &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">              &lt;el-image</span><br><span class="line">                v-if=&quot;scope.row.avatar&quot;</span><br><span class="line">                :src=&quot;scope.row.avatar&quot;</span><br><span class="line">                :preview-src-list=&quot;[scope.row.avatar]&quot;</span><br><span class="line">                style=&quot;width: 40px; height: 40px&quot;</span><br><span class="line">              &gt;&lt;/el-image&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">          &lt;/el-table-column&gt;</span><br><span class="line"></span><br><span class="line">          &lt;el-table-column label=&quot;操作&quot; align=&quot;center&quot;&gt;</span><br><span class="line">            &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">              &lt;el-button</span><br><span class="line">                type=&quot;primary&quot;</span><br><span class="line">                size=&quot;small&quot;</span><br><span class="line">                plain</span><br><span class="line">                @click=&quot;handleEdit(scope.row)&quot;</span><br><span class="line">                &gt;编辑&lt;/el-button</span><br><span class="line">              &gt;</span><br><span class="line">              &lt;el-button</span><br><span class="line">                type=&quot;danger&quot;</span><br><span class="line">                size=&quot;small&quot;</span><br><span class="line">                plain</span><br><span class="line">                @click=&quot;handleDelete(scope.row.id)&quot;</span><br><span class="line">                &gt;删除&lt;/el-button</span><br><span class="line">              &gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">          &lt;/el-table-column&gt;</span><br><span class="line">        &lt;/el-table&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot;&gt;</span><br><span class="line">      &lt;el-pagination</span><br><span class="line">        v-model:current-page=&quot;data.pageNum&quot;</span><br><span class="line">        v-model:page-size=&quot;data.pageSize&quot;</span><br><span class="line">        @current-change=&quot;handleCurrentChange&quot;</span><br><span class="line">        background</span><br><span class="line">        layout=&quot;prev, pager, next&quot;</span><br><span class="line">        :total=&quot;data.total&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;el-dialog width=&quot;35%&quot; v-model=&quot;data.formVisible&quot; title=&quot;学生信息&quot;&gt;</span><br><span class="line">      &lt;el-form</span><br><span class="line">        :model=&quot;data.form&quot;</span><br><span class="line">        :rules=&quot;rules&quot;</span><br><span class="line">        ref=&quot;formRef&quot;</span><br><span class="line">        label-width=&quot;100px&quot;</span><br><span class="line">        label-position=&quot;right&quot;</span><br><span class="line">        style=&quot;padding-right: 45px&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;el-form-item label=&quot;学生学号&quot; prop=&quot;username&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.username&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;密码&quot; prop=&quot;password&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.password&quot; autocomplete=&quot;off&quot; disabled /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;学生姓名&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.name&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;性别&quot;&gt;</span><br><span class="line">          &lt;el-radio-group v-model=&quot;data.form.gender&quot;&gt;</span><br><span class="line">            &lt;el-radio label=&quot;男&quot;&gt;&lt;/el-radio&gt;</span><br><span class="line">            &lt;el-radio label=&quot;女&quot;&gt;&lt;/el-radio&gt;</span><br><span class="line">          &lt;/el-radio-group&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;手机号&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.phone&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;出生日期&quot;&gt;</span><br><span class="line">          &lt;el-date-picker</span><br><span class="line">            format=&quot;YYYY-MM-DD&quot;</span><br><span class="line">            value-format=&quot;YYYY-MM-DD&quot;</span><br><span class="line">            v-model=&quot;data.form.birthday&quot;</span><br><span class="line">          &gt;&lt;/el-date-picker&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;头像&quot;&gt;</span><br><span class="line">          &lt;el-upload</span><br><span class="line">            action=&quot;http://localhost:9090/files/upload&quot;</span><br><span class="line">            list-type=&quot;picture&quot;</span><br><span class="line">            :on-success=&quot;handleImgUploadSuccess&quot;</span><br><span class="line">          &gt;</span><br><span class="line">            &lt;el-button type=&quot;primary&quot;&gt;上传头像 &lt;/el-button&gt;</span><br><span class="line">          &lt;/el-upload&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">      &lt;/el-form&gt;</span><br><span class="line">      &lt;template #footer&gt;</span><br><span class="line">        &lt;span class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">          &lt;el-button @click=&quot;data.formVisible = false&quot; plain&gt;取消&lt;/el-button&gt;</span><br><span class="line">          &lt;el-button type=&quot;primary&quot; @click=&quot;save&quot; plain&gt;保存&lt;/el-button&gt;</span><br><span class="line">        &lt;/span&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line">    &lt;/el-dialog&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; reactive, ref &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; Search &#125; from &quot;@element-plus/icons-vue&quot;;</span><br><span class="line">import request from &quot;@/utils/request&quot;;</span><br><span class="line">import &#123; ElMessage, ElMessageBox &#125; from &quot;element-plus&quot;;</span><br><span class="line"></span><br><span class="line">const data = reactive(&#123;</span><br><span class="line">  username: &quot;&quot;,</span><br><span class="line">  name: &quot;&quot;,</span><br><span class="line">  tableData: [],</span><br><span class="line">  total: 0,</span><br><span class="line">  pageNum: 1,</span><br><span class="line">  pageSize: 5,</span><br><span class="line">  formVisible: false,</span><br><span class="line">  form: &#123; password: &quot;123456&quot; &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const load = () =&gt; &#123;</span><br><span class="line">  request</span><br><span class="line">    .get(&quot;/student/selectPage&quot;, &#123;</span><br><span class="line">      params: &#123;</span><br><span class="line">        pageNum: data.pageNum,</span><br><span class="line">        pageSize: data.pageSize,</span><br><span class="line">        username: data.username,</span><br><span class="line">        name: data.name,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">        data.tableData = res.data?.list || [];</span><br><span class="line">        data.total = res.data?.total || 0;</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        ElMessage.error(res.msg);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">        localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 加载一次 获取课程数据</span><br><span class="line">load();</span><br><span class="line"></span><br><span class="line">const handleCurrentChange = () =&gt; &#123;</span><br><span class="line">  // 当翻页的时候重新加载数据</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const reset = () =&gt; &#123;</span><br><span class="line">  data.username = &quot;&quot;;</span><br><span class="line">  data.name = &quot;&quot;;</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const rules = reactive(&#123;</span><br><span class="line">  username: [&#123; required: true, message: &quot;请输入学生学号&quot;, trigger: &quot;blur&quot; &#125;],</span><br><span class="line">  password: [&#123; required: true, message: &quot;请输入密码&quot;, trigger: &quot;blur&quot; &#125;],</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const formRef = ref();</span><br><span class="line"></span><br><span class="line">const handleAdd = () =&gt; &#123;</span><br><span class="line">  data.formVisible = true;</span><br><span class="line">  data.form = &#123; password: &quot;123456&quot; &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const save = () =&gt; &#123;</span><br><span class="line">  formRef.value.validate((valid) =&gt; &#123;</span><br><span class="line">    if (valid) &#123;</span><br><span class="line">      request</span><br><span class="line">        .request(&#123;</span><br><span class="line">          url: data.form.id ? &quot;/student/update&quot; : &quot;/student/add&quot;,</span><br><span class="line">          method: data.form.id ? &quot;put&quot; : &quot;post&quot;,</span><br><span class="line">          data: data.form,</span><br><span class="line">        &#125;)</span><br><span class="line">        .then((res) =&gt; &#123;</span><br><span class="line">          if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">            ElMessage.success(&quot;操作成功&quot;);</span><br><span class="line">            data.formVisible = false;</span><br><span class="line">            load();</span><br><span class="line">          &#125; else &#123;</span><br><span class="line">            ElMessage.error(res.msg);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch((err) =&gt; &#123;</span><br><span class="line">          if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">            localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">          &#125;</span><br><span class="line">          ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const handleEdit = (row) =&gt; &#123;</span><br><span class="line">  data.form = JSON.parse(JSON.stringify(row));</span><br><span class="line">  data.formVisible = true;</span><br><span class="line">  data.form.password = &quot;123456&quot;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const handleDelete = (id) =&gt; &#123;</span><br><span class="line">  ElMessageBox.confirm(&quot;删除后内容将无法恢复，您确认删除嘛？&quot;, &quot;删除确认&quot;, &#123;</span><br><span class="line">    type: &quot;warning&quot;,</span><br><span class="line">  &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      request.delete(&quot;/student/delete/&quot; + id).then((res) =&gt; &#123;</span><br><span class="line">        if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">          ElMessage.success(&quot;删除成功&quot;);</span><br><span class="line">          load();</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          ElMessage.error(res.msg);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">        localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const handleImgUploadSuccess = (res) =&gt; &#123;</span><br><span class="line">  data.form.avatar = res.data.url;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710617080504-595e3da2-e366-40a1-8c95-11cf4ac4715a.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710617244456-eed99781-03fc-4a41-94fe-1ac67ea49a5c.png"></p><h2 id="个人资料"><a href="#个人资料" class="headerlink" title="个人资料"></a>个人资料</h2><p>在项目目录<code>/manager</code>文件夹下面创建一个<code>Person.vue</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;width: 50%; padding: 40px&quot;&gt;</span><br><span class="line">      &lt;el-form</span><br><span class="line">        :model=&quot;data.form&quot;</span><br><span class="line">        ref=&quot;formRef&quot;</span><br><span class="line">        :rules=&quot;rules&quot;</span><br><span class="line">        label-width=&quot;100px&quot;</span><br><span class="line">        label-position=&quot;right&quot;</span><br><span class="line">        style=&quot;padding-right: 40px&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;el-form-item label=&quot;头像&quot;&gt;</span><br><span class="line">          &lt;el-upload</span><br><span class="line">            class=&quot;avatar-uploader&quot;</span><br><span class="line">            action=&quot;http://localhost:9090/files/upload&quot;</span><br><span class="line">            :show-file-list=&quot;false&quot;</span><br><span class="line">            :on-success=&quot;handleImgUploadSuccess&quot;</span><br><span class="line">          &gt;</span><br><span class="line">            &lt;img</span><br><span class="line">              v-if=&quot;data.form.avatar&quot;</span><br><span class="line">              :src=&quot;data.form.avatar&quot;</span><br><span class="line">              class=&quot;avatar&quot;</span><br><span class="line">            /&gt;</span><br><span class="line">            &lt;el-icon v-else class=&quot;avatar-uploader-icon&quot;&gt;</span><br><span class="line">              &lt;Plus /&gt;</span><br><span class="line">            &lt;/el-icon&gt;</span><br><span class="line">          &lt;/el-upload&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;学生学号&quot; prop=&quot;username&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.username&quot; autocomplete=&quot;off&quot; disabled /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;密码&quot; prop=&quot;password&quot;&gt;</span><br><span class="line">          &lt;el-input</span><br><span class="line">            show-password</span><br><span class="line">            v-model=&quot;data.form.password&quot;</span><br><span class="line">            autocomplete=&quot;off&quot;</span><br><span class="line">          /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;学生姓名&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.name&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;性别&quot;&gt;</span><br><span class="line">          &lt;el-radio-group v-model=&quot;data.form.gender&quot;&gt;</span><br><span class="line">            &lt;el-radio label=&quot;男&quot;&gt;&lt;/el-radio&gt;</span><br><span class="line">            &lt;el-radio label=&quot;女&quot;&gt;&lt;/el-radio&gt;</span><br><span class="line">          &lt;/el-radio-group&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;手机号&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.phone&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;出生日期&quot;&gt;</span><br><span class="line">          &lt;el-date-picker</span><br><span class="line">            format=&quot;YYYY-MM-DD&quot;</span><br><span class="line">            value-format=&quot;YYYY-MM-DD&quot;</span><br><span class="line">            v-model=&quot;data.form.birthday&quot;</span><br><span class="line">          &gt;&lt;/el-date-picker&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item style=&quot;padding-left: 60%&quot;&gt;</span><br><span class="line">          &lt;el-button type=&quot;primary&quot; @click=&quot;update&quot;&gt;保存&lt;/el-button&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">      &lt;/el-form&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; ref, reactive &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; Plus &#125; from &quot;@element-plus/icons-vue&quot;;</span><br><span class="line">import request from &quot;@/utils/request&quot;;</span><br><span class="line">import &#123; ElMessage &#125; from &quot;element-plus&quot;;</span><br><span class="line">import router from &quot;@/router&quot;;</span><br><span class="line"></span><br><span class="line">const data = reactive(&#123;</span><br><span class="line">  form: JSON.parse(localStorage.getItem(&quot;student-user&quot;) || &quot;&#123;&#125;&quot;),</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">if (data.form) &#123;</span><br><span class="line">  data.form.password = &quot;&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const rules = reactive(&#123;</span><br><span class="line">  username: [&#123; required: true, message: &quot;请输入账号&quot;, trigger: &quot;blur&quot; &#125;],</span><br><span class="line">  password: [</span><br><span class="line">    &#123;</span><br><span class="line">      required: true,</span><br><span class="line">      message: &quot;修改个人资料必须重新输入密码&quot;,</span><br><span class="line">      trigger: &quot;blur&quot;,</span><br><span class="line">    &#125;,</span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const update = () =&gt; &#123;</span><br><span class="line">  request</span><br><span class="line">    .put(&quot;/student/update&quot;, data.form)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">        ElMessage.success(&quot;操作成功&quot;);</span><br><span class="line">        router.push(&quot;/login&quot;);</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        ElMessage.error(res.msg);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const handleImgUploadSuccess = (res) =&gt; &#123;</span><br><span class="line">  data.form.avatar = res.data;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">.avatar-uploader .el-upload &#123;</span><br><span class="line">  border: 1px dashed #d9d9d9;</span><br><span class="line">  border-radius: 6px;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">  position: relative;</span><br><span class="line">  overflow: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.avatar-uploader .el-upload:hover &#123;</span><br><span class="line">  border-color: #409eff;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.el-icon.avatar-uploader-icon &#123;</span><br><span class="line">  font-size: 28px;</span><br><span class="line">  color: #8c939d;</span><br><span class="line">  width: 100px;</span><br><span class="line">  height: 100px;</span><br><span class="line">  line-height: 100px;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.avatar &#123;</span><br><span class="line">  width: 100px;</span><br><span class="line">  height: 100px;</span><br><span class="line">  display: block;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHistory &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">history</span>: <span class="title function_">createWebHistory</span>(<span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">env</span>.<span class="property">BASE_URL</span>),</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;Manager&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/Manager.vue&quot;</span>),</span><br><span class="line">      <span class="attr">redirect</span>: <span class="string">&quot;/home&quot;</span>,</span><br><span class="line">      <span class="attr">children</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;home&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Home&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Home.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;course&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Course&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Course.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;student&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Student&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Student.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;person&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Person&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Person.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">      ],</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/login&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;Login&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/Login.vue&quot;</span>),</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/register&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;Register&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/Register.vue&quot;</span>),</span><br><span class="line">    &#125;,</span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">beforeEach</span>(<span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> requiresAuth = to.<span class="property">matched</span>.<span class="title function_">some</span>(<span class="function">(<span class="params">record</span>) =&gt;</span> record.<span class="property">meta</span>.<span class="property">requiresAuth</span>);</span><br><span class="line">  <span class="keyword">const</span> user = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;student-user&quot;</span>));</span><br><span class="line">  <span class="keyword">if</span> (requiresAuth &amp;&amp; !user) &#123;</span><br><span class="line">    <span class="comment">// 如果目标路由需要认证,并且用户未登录</span></span><br><span class="line">    <span class="title function_">next</span>(<span class="string">&quot;/login&quot;</span>); <span class="comment">// 跳转到登录页面</span></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">next</span>(); <span class="comment">// 如果目标路由不需要认证,或者用户已登录,则正常导航到目标路由</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div</span><br><span class="line">      style=&quot;height: 60px; background-color: #eae8e8; display: flex; align-items: center; border-bottom: 1px solid #c4c2c2&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;div style=&quot;flex: 1&quot;&gt;</span><br><span class="line">        &lt;div style=&quot;padding-left: 20px; display: flex; align-items: center&quot;&gt;</span><br><span class="line">          &lt;img src=&quot;@/assets/imgs/logo.png&quot; alt=&quot;&quot; style=&quot;width: 40px&quot; /&gt;</span><br><span class="line">          &lt;div style=&quot;font-weight: bold; font-size: 24px; margin-left: 5px&quot;&gt;</span><br><span class="line">            学生信息管理系统</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        style=&quot;width: fit-content; padding-right: 10px; display: flex; align-items: center;&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;img</span><br><span class="line">          :src=&quot;</span><br><span class="line">            user.avatar ||</span><br><span class="line">            &#x27;https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png&#x27;</span><br><span class="line">          &quot;</span><br><span class="line">          alt=&quot;&quot;</span><br><span class="line">          style=&quot;width: 40px; height: 40px; border-radius: 50%&quot;</span><br><span class="line">        /&gt;</span><br><span class="line">        &lt;span style=&quot;margin-left: 5px&quot;&gt;&#123;&#123; user.name &#125;&#125;&lt;/span&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div style=&quot;display: flex&quot;&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        style=&quot;width: 200px; border-right: 1px solid #f3eeee; min-height: calc(100vh - 60px)&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;el-menu</span><br><span class="line">          router</span><br><span class="line">          style=&quot;border: none&quot;</span><br><span class="line">          :default-active=&quot;$route.path&quot;</span><br><span class="line">          :default-openeds=&quot;[&#x27;/home&#x27;, &#x27;2&#x27;, &#x27;3&#x27;]&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          &lt;el-menu-item index=&quot;/home&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;</span><br><span class="line">              &lt;HomeFilled /&gt;</span><br><span class="line">            &lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;系统首页&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line"></span><br><span class="line">          &lt;el-sub-menu index=&quot;2&quot; v-if=&quot;user.role === &#x27;ADMIN&#x27;&quot;&gt;</span><br><span class="line">            &lt;template #title&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;Management /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;学生管理&lt;/span&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">            &lt;el-menu-item index=&quot;/student&quot;&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;UserFilled /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;学生信息&lt;/span&gt;</span><br><span class="line">            &lt;/el-menu-item&gt;</span><br><span class="line">          &lt;/el-sub-menu&gt;</span><br><span class="line"></span><br><span class="line">          &lt;el-sub-menu index=&quot;3&quot; v-if=&quot;user.role === &#x27;ADMIN&#x27;&quot;&gt;</span><br><span class="line">            &lt;template #title&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;Memo /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;课程管理&lt;/span&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">            &lt;el-menu-item index=&quot;/course&quot;&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;Document /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;课程信息&lt;/span&gt;</span><br><span class="line">            &lt;/el-menu-item&gt;</span><br><span class="line">          &lt;/el-sub-menu&gt;</span><br><span class="line"></span><br><span class="line">          &lt;el-menu-item index=&quot;/person&quot; v-if=&quot;user.role === &#x27;STUDENT&#x27;&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;</span><br><span class="line">              &lt;User /&gt;</span><br><span class="line">            &lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;个人资料&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line">          &lt;el-menu-item index=&quot;/login&quot; @click=&quot;logout&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;</span><br><span class="line">              &lt;SwitchButton /&gt;</span><br><span class="line">            &lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;退出系统&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line">        &lt;/el-menu&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">      &lt;div style=&quot;flex: 1; width: 0; background-color: #eaeaee; padding: 10px&quot;&gt;</span><br><span class="line">        &lt;router-view /&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; useRoute &#125; from &quot;vue-router&quot;;</span><br><span class="line"></span><br><span class="line">const $route = useRoute();</span><br><span class="line">console.log($route.path);</span><br><span class="line"></span><br><span class="line">const logout = () =&gt; &#123;</span><br><span class="line">  localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const user = JSON.parse(localStorage.getItem(&quot;student-user&quot;) || &quot;&#123;&#125;&quot;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.el-menu-item.is-active &#123;</span><br><span class="line">  background-color: #c3d7d3 !important;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.el-menu-item:hover &#123;</span><br><span class="line">  color: #0c98d5;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">:deep(th) &#123;</span><br><span class="line">  color: #333;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710617861421-2875f037-9f2c-4363-8e02-c60dc3e8df63.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710619302880-4b22bf47-85be-4ba5-aa25-68c49b706f28.png"></p><hr>]]></content>
      
      
      <categories>
          
          <category> FastAPI入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Vue3 </tag>
            
            <tag> FastAPI </tag>
            
            <tag> 实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FastAPI入门-学生管理</title>
      <link href="/2024/05/20/FastAPI%E5%85%A5%E9%97%A8/%E5%AD%A6%E7%94%9F%E7%AE%A1%E7%90%86/"/>
      <url>/2024/05/20/FastAPI%E5%85%A5%E9%97%A8/%E5%AD%A6%E7%94%9F%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="学生管理"><a href="#学生管理" class="headerlink" title="学生管理"></a>学生管理</h1><h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><p>先在数据库中创建一张学生信息表</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710448899467-1a869fa8-d221-4995-a81e-87a7de808e74.png"></p><h2 id="Student-实体类定义"><a href="#Student-实体类定义" class="headerlink" title="Student 实体类定义"></a>Student 实体类定义</h2><p>在<code>/model</code>的包下创建一个<code>student.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> Integer, String</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> Mapped, mapped_column</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Base</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>(<span class="title class_ inherited__">Base</span>):</span><br><span class="line">    __tablename__ = <span class="string">&quot;student&quot;</span></span><br><span class="line">    <span class="built_in">id</span>: Mapped[<span class="built_in">int</span>] = mapped_column(Integer, primary_key=<span class="literal">True</span>, nullable=<span class="literal">False</span>)</span><br><span class="line">    username: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    password: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    name: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    phone: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    gender: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    birthday: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    avatar: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span></span><br></pre></td></tr></table></figure><h2 id="学生登录"><a href="#学生登录" class="headerlink" title="学生登录"></a>学生登录</h2><h3 id="前端-登录页面"><a href="#前端-登录页面" class="headerlink" title="前端-登录页面"></a>前端-登录页面</h3><p>学生登录和 admin 的登录，我们复用同一个前端页面和后端接口，所以需要加一个<code>role</code>用以区分是 admin 登录了还是普通的 student 登录了；同时，不同用户进入页面之后。看到的内容应该是不同的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;login-container&quot;&gt;</span><br><span class="line">      &lt;div style=&quot;width: 420px&quot; class=&quot;login-box&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;title&quot;&gt;学生信息管理系统 - 登录&lt;/div&gt;</span><br><span class="line">        &lt;el-form :model=&quot;data.form&quot; ref=&quot;formRef&quot; :rules=&quot;rules&quot;&gt;</span><br><span class="line">          &lt;el-form-item prop=&quot;username&quot;&gt;</span><br><span class="line">            &lt;el-input</span><br><span class="line">              style=&quot;height: 40px;font-size: 18px&quot;</span><br><span class="line">              prefix-icon=&quot;Avatar&quot;</span><br><span class="line">              v-model=&quot;data.form.username&quot;</span><br><span class="line">              placeholder=&quot;请输入账号&quot;</span><br><span class="line">            /&gt;</span><br><span class="line">          &lt;/el-form-item&gt;</span><br><span class="line">          &lt;el-form-item prop=&quot;password&quot;&gt;</span><br><span class="line">            &lt;el-input</span><br><span class="line">              show-password</span><br><span class="line">              style=&quot;height: 40px;font-size: 18px&quot;</span><br><span class="line">              prefix-icon=&quot;Lock&quot;</span><br><span class="line">              v-model=&quot;data.form.password&quot;</span><br><span class="line">              placeholder=&quot;请输入密码&quot;</span><br><span class="line">            /&gt;</span><br><span class="line">          &lt;/el-form-item&gt;</span><br><span class="line">          &lt;el-form-item prop=&quot;role&quot;&gt;</span><br><span class="line">            &lt;el-radio-group size=&quot;large&quot; v-model=&quot;data.form.role&quot;&gt;</span><br><span class="line">              &lt;el-radio-button</span><br><span class="line">                style=&quot;margin-left: 70px&quot;</span><br><span class="line">                label=&quot;管理员&quot;</span><br><span class="line">                value=&quot;ADMIN&quot;</span><br><span class="line">              /&gt;</span><br><span class="line">              &lt;el-radio-button</span><br><span class="line">                style=&quot;margin-left: 50px&quot;</span><br><span class="line">                label=&quot;学生&quot;</span><br><span class="line">                value=&quot;STUDENT&quot;</span><br><span class="line">              /&gt;</span><br><span class="line">            &lt;/el-radio-group&gt;</span><br><span class="line">          &lt;/el-form-item&gt;</span><br><span class="line">          &lt;el-form-item&gt;</span><br><span class="line">            &lt;el-button</span><br><span class="line">              type=&quot;primary&quot;</span><br><span class="line">              style=&quot;width: 100%;font-size: 18px&quot;</span><br><span class="line">              plain</span><br><span class="line">              @click=&quot;login&quot;</span><br><span class="line">              &gt;登 录&lt;/el-button</span><br><span class="line">            &gt;</span><br><span class="line">          &lt;/el-form-item&gt;</span><br><span class="line">        &lt;/el-form&gt;</span><br><span class="line">        &lt;div style=&quot;margin-top:35px;text-align: right;font-size: 15px&quot;&gt;</span><br><span class="line">          还没有账号？请&lt;a href=&quot;/register&quot;&gt;注册&lt;/a&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; reactive, ref &#125; from &quot;vue&quot;;</span><br><span class="line">import request from &quot;@/utils/request&quot;;</span><br><span class="line">import &#123; ElMessage &#125; from &quot;element-plus&quot;;</span><br><span class="line">import router from &quot;@/router&quot;;</span><br><span class="line"></span><br><span class="line">const data = reactive(&#123;</span><br><span class="line">  form: &#123; role: &quot;ADMIN&quot; &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const rules = reactive(&#123;</span><br><span class="line">  username: [&#123; required: true, message: &quot;请输入账号&quot;, trigger: &quot;blur&quot; &#125;],</span><br><span class="line">  password: [&#123; required: true, message: &quot;请输入密码&quot;, trigger: &quot;blur&quot; &#125;],</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const formRef = ref();</span><br><span class="line"></span><br><span class="line">const login = () =&gt; &#123;</span><br><span class="line">  formRef.value.validate((valid) =&gt; &#123;</span><br><span class="line">    if (valid) &#123;</span><br><span class="line">      request</span><br><span class="line">        .post(&quot;/login&quot;, data.form)</span><br><span class="line">        .then((res) =&gt; &#123;</span><br><span class="line">          if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">            localStorage.setItem(&quot;student-user&quot;, JSON.stringify(res.data));</span><br><span class="line">            ElMessage.success(&quot;登录成功&quot;);</span><br><span class="line">            router.push(&quot;/home&quot;);</span><br><span class="line">          &#125; else &#123;</span><br><span class="line">            ElMessage.error(res.msg);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch((err) =&gt; &#123;</span><br><span class="line">          ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.login-container &#123;</span><br><span class="line">  min-height: 100vh;</span><br><span class="line">  overflow: hidden;</span><br><span class="line">  display: flex;</span><br><span class="line">  align-items: center;</span><br><span class="line">  justify-content: center;</span><br><span class="line">  background-image: url(&quot;@/assets/imgs/login_background.png&quot;);</span><br><span class="line">  background-size: cover;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.login-box &#123;</span><br><span class="line">  background-color: rgb(255, 255, 255, 50%);</span><br><span class="line">  box-shadow: 0 0 10px rgba(84, 221, 245, 0.41);</span><br><span class="line">  padding: 30px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.title &#123;</span><br><span class="line">  font-weight: bold;</span><br><span class="line">  font-size: 30px;</span><br><span class="line">  text-align: center;</span><br><span class="line">  margin-bottom: 35px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710529973649-8285d66a-b8b1-4b28-97fd-7feb1fcf9f0f.png"></p><h3 id="后端-管理员-学生登录的-api-接口"><a href="#后端-管理员-学生登录的-api-接口" class="headerlink" title="后端-管理员&#x2F;学生登录的 api 接口"></a>后端-管理员&#x2F;学生登录的 api 接口</h3><p>管理员和学生的登录复用同一个 api 接口</p><p>所以需要修改一下之前的登录逻辑</p><h4 id="Account"><a href="#Account" class="headerlink" title="Account"></a>Account</h4><p>在<code>/model</code>下创建一个<code>account.py</code>，接收前端传递来的账号、密码、角色</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> pydantic <span class="keyword">import</span> BaseModel</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AccountLogin</span>(<span class="title class_ inherited__">BaseModel</span>):</span><br><span class="line">    username: <span class="built_in">str</span></span><br><span class="line">    password: <span class="built_in">str</span></span><br><span class="line">    role: <span class="built_in">str</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AccountLoginResponse</span>:</span><br><span class="line">    <span class="built_in">id</span>: <span class="built_in">int</span></span><br><span class="line">    username: <span class="built_in">str</span></span><br><span class="line">    name: <span class="built_in">str</span></span><br><span class="line">    role: <span class="built_in">str</span></span><br><span class="line">    token: <span class="built_in">str</span></span><br></pre></td></tr></table></figure><h4 id="Student"><a href="#Student" class="headerlink" title="Student"></a>Student</h4><p>给 student 表追加<code>role</code>字段</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710531077648-4789f2d8-9189-43a5-80bf-1223b30a86c6.png"></p><p>给<code>/model/student.py</code>更新一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> Integer, String</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> Mapped, mapped_column</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Base</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>(<span class="title class_ inherited__">Base</span>):</span><br><span class="line">    __tablename__ = <span class="string">&quot;student&quot;</span></span><br><span class="line">    <span class="built_in">id</span>: Mapped[<span class="built_in">int</span>] = mapped_column(Integer, primary_key=<span class="literal">True</span>, nullable=<span class="literal">False</span>)</span><br><span class="line">    username: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    password: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    name: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    phone: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    gender: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    birthday: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    avatar: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    role: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><h4 id="Admin"><a href="#Admin" class="headerlink" title="Admin"></a>Admin</h4><p>给 admin 表追加<code>name</code>字段和<code>role</code>字段</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710531287748-bbeb3fca-e7a2-4cff-bce6-5e0ce13b2678.png"></p><p>给<code>/model/admin.py</code>更新一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">import</span> bcrypt</span><br><span class="line"><span class="keyword">from</span> pydantic <span class="keyword">import</span> BaseModel</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> Integer, String</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> Mapped, mapped_column</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Base</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Admin</span>(<span class="title class_ inherited__">Base</span>):</span><br><span class="line">    __tablename__ = <span class="string">&quot;admin&quot;</span></span><br><span class="line">    <span class="built_in">id</span>: Mapped[<span class="built_in">int</span>] = mapped_column(Integer, primary_key=<span class="literal">True</span>, nullable=<span class="literal">False</span>)</span><br><span class="line">    username: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    password: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    name: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    role: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AdminModel</span>(<span class="title class_ inherited__">BaseModel</span>):</span><br><span class="line">    username: <span class="built_in">str</span></span><br><span class="line">    password: <span class="built_in">str</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AdminLoginResponse</span>(<span class="title class_ inherited__">BaseModel</span>):</span><br><span class="line">    <span class="built_in">id</span>: <span class="built_in">int</span></span><br><span class="line">    username: <span class="built_in">str</span></span><br><span class="line">    token: <span class="built_in">str</span></span><br></pre></td></tr></table></figure><h4 id="Service"><a href="#Service" class="headerlink" title="Service"></a>Service</h4><p>在项目目录<code>/service</code>下创建一个<code>studentService.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi.encoders <span class="keyword">import</span> jsonable_encoder</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> select</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.auth <span class="keyword">import</span> auth_handler</span><br><span class="line"><span class="keyword">from</span> common.utils <span class="keyword">import</span> set_attrs</span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> UserNotFoundException, PasswordNotMatchException</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session</span><br><span class="line"><span class="keyword">from</span> model.account <span class="keyword">import</span> AccountLogin, AccountLoginResponse</span><br><span class="line"><span class="keyword">from</span> model.student <span class="keyword">import</span> Student</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentService</span>:</span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">login</span>(<span class="params">account: AccountLogin, db_session: Session</span>) -&gt; AccountLoginResponse:</span><br><span class="line">        query = select(Student).where(Student.username == account.username)</span><br><span class="line">        exist_student: Student = db_session.execute(query).scalars().first()</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> exist_student:</span><br><span class="line">            <span class="keyword">raise</span> UserNotFoundException(<span class="string">&quot;用户不存在&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> auth_handler.verify_password(account.password, exist_student.password):</span><br><span class="line">            <span class="keyword">raise</span> PasswordNotMatchException(<span class="string">&quot;身份验证未通过&quot;</span>)</span><br><span class="line">        account_login_response = AccountLoginResponse()</span><br><span class="line">        set_attrs(account_login_response, jsonable_encoder(exist_student))</span><br><span class="line">        account_login_response.token = auth_handler.encode_token(exist_student.<span class="built_in">id</span>)</span><br><span class="line">        <span class="keyword">return</span> account_login_response</span><br></pre></td></tr></table></figure><p>然后修改<code>adminService.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi.encoders <span class="keyword">import</span> jsonable_encoder</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> select</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.auth <span class="keyword">import</span> auth_handler</span><br><span class="line"><span class="keyword">from</span> common.utils <span class="keyword">import</span> set_attrs</span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> UserNotFoundException, PasswordNotMatchException</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session</span><br><span class="line"><span class="keyword">from</span> model.account <span class="keyword">import</span> AccountLoginResponse, AccountLogin</span><br><span class="line"><span class="keyword">from</span> model.admin <span class="keyword">import</span> Admin</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AdminService</span>:</span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">login</span>(<span class="params">account: AccountLogin, db_session: Session</span>) -&gt; AccountLoginResponse:</span><br><span class="line">        query = select(Admin).where(Admin.username == account.username)</span><br><span class="line">        exist_admin: Admin = db_session.execute(query).scalars().first()</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> exist_admin:</span><br><span class="line">            <span class="keyword">raise</span> UserNotFoundException(<span class="string">&quot;用户不存在&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> auth_handler.verify_password(account.password, exist_admin.password):</span><br><span class="line">            <span class="keyword">raise</span> PasswordNotMatchException(<span class="string">&quot;身份验证未通过&quot;</span>)</span><br><span class="line">        account_login_response = AccountLoginResponse()</span><br><span class="line">        set_attrs(account_login_response, jsonable_encoder(exist_admin))</span><br><span class="line">        account_login_response.token = auth_handler.encode_token(exist_admin.<span class="built_in">id</span>)</span><br><span class="line">        <span class="keyword">return</span> account_login_response</span><br></pre></td></tr></table></figure><h4 id="Role"><a href="#Role" class="headerlink" title="Role"></a>Role</h4><p>创建一个枚举类 Role，用以区分学生和管理员</p><p>在<code>/common</code>下创建一个<code>Enum.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> enum <span class="keyword">import</span> Enum</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Role</span>(<span class="built_in">str</span>, Enum):</span><br><span class="line">    ADMIN = <span class="string">&quot;管理员&quot;</span></span><br><span class="line">    STUDENT = <span class="string">&quot;学生&quot;</span></span><br></pre></td></tr></table></figure><h4 id="API"><a href="#API" class="headerlink" title="API"></a>API</h4><p>然后修改一下登录的 api</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> Depends</span><br><span class="line"><span class="keyword">from</span> fastapi.encoders <span class="keyword">import</span> jsonable_encoder</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> common.Enum <span class="keyword">import</span> Role</span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> Result, ResultModel</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session, get_db_session</span><br><span class="line"><span class="keyword">from</span> model.account <span class="keyword">import</span> AccountLogin</span><br><span class="line"><span class="keyword">from</span> service.adminService <span class="keyword">import</span> AdminService</span><br><span class="line"><span class="keyword">from</span> service.studentService <span class="keyword">import</span> StudentService</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.post(<span class="params"><span class="string">&quot;/login&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">login</span>(<span class="params">account: AccountLogin, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    <span class="keyword">if</span> Role.ADMIN.name.__eq__(account.role):</span><br><span class="line">        db_account = AdminService.login(account, db_session)</span><br><span class="line">    <span class="keyword">elif</span> Role.STUDENT.name.__eq__(account.role):</span><br><span class="line">        db_account = StudentService.login(account, db_session)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> Result.error(<span class="string">&quot;角色错误&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> Result.success(jsonable_encoder(db_account))</span><br></pre></td></tr></table></figure><h2 id="学生注册"><a href="#学生注册" class="headerlink" title="学生注册"></a>学生注册</h2><h3 id="前端-注册页面"><a href="#前端-注册页面" class="headerlink" title="前端-注册页面"></a>前端-注册页面</h3><p>写一下学生的注册页面，这里管理员就不参与注册了</p><p>在前端项目目录<code>/views</code>下创建一个<code>Register.vue</code>（这里我偷懒了，没有替换注册页的背景图，大家可以自行替换）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;register-container&quot;&gt;</span><br><span class="line">      &lt;div style=&quot;width: 400px&quot; class=&quot;register-box&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;title&quot;&gt;学生信息管理系统 - 注册&lt;/div&gt;</span><br><span class="line">        &lt;el-form :model=&quot;data.form&quot; ref=&quot;formRef&quot; :rules=&quot;rules&quot;&gt;</span><br><span class="line">          &lt;el-form-item prop=&quot;username&quot;&gt;</span><br><span class="line">            &lt;el-input</span><br><span class="line">              style=&quot;height: 40px;font-size: 18px&quot;</span><br><span class="line">              prefix-icon=&quot;User&quot;</span><br><span class="line">              v-model=&quot;data.form.username&quot;</span><br><span class="line">              placeholder=&quot;请输入账号&quot;</span><br><span class="line">            /&gt;</span><br><span class="line">          &lt;/el-form-item&gt;</span><br><span class="line">          &lt;el-form-item prop=&quot;password&quot;&gt;</span><br><span class="line">            &lt;el-input</span><br><span class="line">              show-password</span><br><span class="line">              style=&quot;height: 40px;font-size: 18px&quot;</span><br><span class="line">              prefix-icon=&quot;Lock&quot;</span><br><span class="line">              v-model=&quot;data.form.password&quot;</span><br><span class="line">              placeholder=&quot;请输入密码&quot;</span><br><span class="line">            /&gt;</span><br><span class="line">          &lt;/el-form-item&gt;</span><br><span class="line">          &lt;el-form-item&gt;</span><br><span class="line">            &lt;el-button</span><br><span class="line">              type=&quot;primary&quot;</span><br><span class="line">              style=&quot;width: 100%&quot;</span><br><span class="line">              plain</span><br><span class="line">              @click=&quot;register&quot;</span><br><span class="line">              &gt;注 册&lt;/el-button</span><br><span class="line">            &gt;</span><br><span class="line">          &lt;/el-form-item&gt;</span><br><span class="line">        &lt;/el-form&gt;</span><br><span class="line">        &lt;div style=&quot;margin-top:30px;text-align: right&quot;&gt;</span><br><span class="line">          已有账号？请直接&lt;a href=&quot;/login&quot;&gt;登录&lt;/a&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; reactive, ref &#125; from &quot;vue&quot;;</span><br><span class="line">import request from &quot;@/utils/request&quot;;</span><br><span class="line">import &#123; ElMessage &#125; from &quot;element-plus&quot;;</span><br><span class="line">import router from &quot;@/router&quot;;</span><br><span class="line"></span><br><span class="line">const data = reactive(&#123;</span><br><span class="line">  form: &#123;&#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const rules = reactive(&#123;</span><br><span class="line">  username: [&#123; required: true, message: &quot;请输入账号&quot;, trigger: &quot;blur&quot; &#125;],</span><br><span class="line">  password: [&#123; required: true, message: &quot;请输入密码&quot;, trigger: &quot;blur&quot; &#125;],</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const formRef = ref();</span><br><span class="line"></span><br><span class="line">const register = () =&gt; &#123;</span><br><span class="line">  formRef.value.validate((valid) =&gt; &#123;</span><br><span class="line">    if (valid) &#123;</span><br><span class="line">      request</span><br><span class="line">        .post(&quot;/register&quot;, data.form)</span><br><span class="line">        .then((res) =&gt; &#123;</span><br><span class="line">          if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">            ElMessage.success(&quot;注册成功&quot;);</span><br><span class="line">            router.push(&quot;/login&quot;);</span><br><span class="line">          &#125; else &#123;</span><br><span class="line">            ElMessage.error(res.msg);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch((err) =&gt; &#123;</span><br><span class="line">          ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.register-container &#123;</span><br><span class="line">  min-height: 100vh;</span><br><span class="line">  overflow: hidden;</span><br><span class="line">  display: flex;</span><br><span class="line">  align-items: center;</span><br><span class="line">  justify-content: center;</span><br><span class="line">  background-image: url(&quot;@/assets/imgs/login_background.png&quot;);</span><br><span class="line">  background-size: cover;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.register-box &#123;</span><br><span class="line">  background-color: rgb(255, 255, 255, 50%);</span><br><span class="line">  box-shadow: 0 0 10px rgba(84, 221, 245, 0.41);</span><br><span class="line">  padding: 30px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.title &#123;</span><br><span class="line">  font-weight: bold;</span><br><span class="line">  font-size: 30px;</span><br><span class="line">  text-align: center;</span><br><span class="line">  margin-bottom: 35px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>添加一下注册页面的路由</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHistory &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">history</span>: <span class="title function_">createWebHistory</span>(<span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">env</span>.<span class="property">BASE_URL</span>),</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;Manager&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/Manager.vue&quot;</span>),</span><br><span class="line">      <span class="attr">redirect</span>: <span class="string">&quot;/home&quot;</span>,</span><br><span class="line">      <span class="attr">children</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;home&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Home&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Home.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;course&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Course&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Course.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">      ],</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/login&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;Login&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/Login.vue&quot;</span>),</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/register&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;Register&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/Register.vue&quot;</span>),</span><br><span class="line">    &#125;,</span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">beforeEach</span>(<span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> requiresAuth = to.<span class="property">matched</span>.<span class="title function_">some</span>(<span class="function">(<span class="params">record</span>) =&gt;</span> record.<span class="property">meta</span>.<span class="property">requiresAuth</span>);</span><br><span class="line">  <span class="keyword">const</span> user = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;student-user&quot;</span>));</span><br><span class="line">  <span class="keyword">if</span> (requiresAuth &amp;&amp; !user) &#123;</span><br><span class="line">    <span class="comment">// 如果目标路由需要认证,并且用户未登录</span></span><br><span class="line">    <span class="title function_">next</span>(<span class="string">&quot;/login&quot;</span>); <span class="comment">// 跳转到登录页面</span></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">next</span>(); <span class="comment">// 如果目标路由不需要认证,或者用户已登录,则正常导航到目标路由</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710604627683-dfd384fa-3167-419f-a922-f52d2d61a218.png"></p><h3 id="后端-注册的-api-接口"><a href="#后端-注册的-api-接口" class="headerlink" title="后端-注册的 api 接口"></a>后端-注册的 api 接口</h3><p>接下来实现一下，后端注册的逻辑</p><h4 id="API-1"><a href="#API-1" class="headerlink" title="API"></a>API</h4><p>因为这个注册只是给学生使用的，在项目目录<code>/api</code>下新建一个<code>studentApi.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> Depends</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> ResultModel, Result</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session, get_db_session</span><br><span class="line"><span class="keyword">from</span> model.account <span class="keyword">import</span> AccountRegister</span><br><span class="line"><span class="keyword">from</span> service.studentService <span class="keyword">import</span> StudentService</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.post(<span class="params"><span class="string">&quot;/register&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">register</span>(<span class="params">account: AccountRegister, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    StudentService.register(account, db_session)</span><br><span class="line">    <span class="keyword">return</span> Result.success()</span><br></pre></td></tr></table></figure><p>添加一下 studentApi</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> FastAPI</span><br><span class="line"><span class="keyword">from</span> starlette.middleware.cors <span class="keyword">import</span> CORSMiddleware</span><br><span class="line"></span><br><span class="line">app = FastAPI()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 跨域问题</span></span><br><span class="line">origins = [<span class="string">&quot;http://localhost:5173&quot;</span>, <span class="string">&quot;http://127.0.0.1:5173&quot;</span>]  <span class="comment"># 替换为你的前端应用的实际地址</span></span><br><span class="line"></span><br><span class="line">app.add_middleware(</span><br><span class="line">    CORSMiddleware,</span><br><span class="line">    allow_origins=origins,  <span class="comment"># 允许跨域访问的来源域名列表</span></span><br><span class="line">    allow_credentials=<span class="literal">True</span>,  <span class="comment"># 是否允许携带cookie</span></span><br><span class="line">    allow_methods=[<span class="string">&quot;*&quot;</span>],  <span class="comment"># 允许的方法，默认包含常见的GET、POST等，&quot;*&quot;表示所有方法</span></span><br><span class="line">    allow_headers=[<span class="string">&quot;*&quot;</span>],  <span class="comment"># 允许的请求头，默认包含常见的Content-Type等，&quot;*&quot;表示所有请求头</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> adminApi, exceptionHandler, courseApi, studentApi</span><br></pre></td></tr></table></figure><p>给<code>account.py</code>添加注册的请求体</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> pydantic <span class="keyword">import</span> BaseModel</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AccountLogin</span>(<span class="title class_ inherited__">BaseModel</span>):</span><br><span class="line">    username: <span class="built_in">str</span></span><br><span class="line">    password: <span class="built_in">str</span></span><br><span class="line">    role: <span class="built_in">str</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AccountLoginResponse</span>:</span><br><span class="line">    <span class="built_in">id</span>: <span class="built_in">int</span></span><br><span class="line">    username: <span class="built_in">str</span></span><br><span class="line">    name: <span class="built_in">str</span></span><br><span class="line">    role: <span class="built_in">str</span></span><br><span class="line">    token: <span class="built_in">str</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AccountRegister</span>(<span class="title class_ inherited__">BaseModel</span>):</span><br><span class="line">    username: <span class="built_in">str</span></span><br><span class="line">    password: <span class="built_in">str</span></span><br></pre></td></tr></table></figure><h4 id="Service-1"><a href="#Service-1" class="headerlink" title="Service"></a>Service</h4><p>实现一下注册的 service</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi.encoders <span class="keyword">import</span> jsonable_encoder</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> select</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.Enum <span class="keyword">import</span> Role</span><br><span class="line"><span class="keyword">from</span> common.auth <span class="keyword">import</span> auth_handler</span><br><span class="line"><span class="keyword">from</span> common.utils <span class="keyword">import</span> set_attrs</span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> UserNotFoundException, PasswordNotMatchException, UserExistException</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session</span><br><span class="line"><span class="keyword">from</span> model.account <span class="keyword">import</span> AccountLogin, AccountLoginResponse, AccountRegister</span><br><span class="line"><span class="keyword">from</span> model.student <span class="keyword">import</span> Student</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentService</span>:</span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">login</span>(<span class="params">account: AccountLogin, db_session: Session</span>) -&gt; AccountLoginResponse:</span><br><span class="line">        query = select(Student).where(Student.username == account.username)</span><br><span class="line">        exist_student: Student = db_session.execute(query).scalars().first()</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> exist_student:</span><br><span class="line">            <span class="keyword">raise</span> UserNotFoundException(<span class="string">&quot;用户不存在&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> auth_handler.verify_password(account.password, exist_student.password):</span><br><span class="line">            <span class="keyword">raise</span> PasswordNotMatchException(<span class="string">&quot;身份验证未通过&quot;</span>)</span><br><span class="line">        account_login_response = AccountLoginResponse()</span><br><span class="line">        set_attrs(account_login_response, jsonable_encoder(exist_student))</span><br><span class="line">        account_login_response.token = auth_handler.encode_token(exist_student.<span class="built_in">id</span>)</span><br><span class="line">        <span class="keyword">return</span> account_login_response</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">register</span>(<span class="params">account: AccountRegister, db_session: Session</span>):</span><br><span class="line">        query = select(Student).where(Student.username == account.username)</span><br><span class="line">        exist_student = db_session.execute(query).scalars().first()</span><br><span class="line">        <span class="keyword">if</span> exist_student:</span><br><span class="line">            <span class="keyword">raise</span> UserExistException(<span class="string">&quot;账号已存在&quot;</span>)</span><br><span class="line"></span><br><span class="line">        new_student = Student()</span><br><span class="line">        account.password = auth_handler.get_password_hash(account.password)</span><br><span class="line">        set_attrs(new_student, jsonable_encoder(account))</span><br><span class="line">        <span class="keyword">if</span> new_student.name <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            new_student.name = account.username</span><br><span class="line">        new_student.role = Role.STUDENT.name</span><br><span class="line"></span><br><span class="line">        db_session.add(new_student)</span><br><span class="line">        db_session.commit()</span><br><span class="line">        <span class="keyword">return</span> new_student</span><br></pre></td></tr></table></figure><p>添加自定义异常</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UserNotFoundException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UserExistException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PasswordNotMatchException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TokenException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseExistException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseNotExistException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi.encoders <span class="keyword">import</span> jsonable_encoder</span><br><span class="line"><span class="keyword">from</span> starlette.responses <span class="keyword">import</span> JSONResponse</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> Request</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> Result</span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> UserNotFoundException, PasswordNotMatchException, TokenException, \</span><br><span class="line">    CourseExistException, CourseNotExistException, UserExistException</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">Exception</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">exception_handler</span>(<span class="params">request: Request, exc: Exception</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;500&quot;</span>, msg=<span class="built_in">str</span>(exc))</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">500</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">UserNotFoundException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">user_not_fount_exception_handler</span>(<span class="params">request: Request, exc: UserNotFoundException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;404&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">404</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">PasswordNotMatchException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">password_not_fount_exception_handler</span>(<span class="params">request: Request, exc: PasswordNotMatchException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;401&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">401</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">TokenException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">token_exception_handler</span>(<span class="params">request: Request, exc: TokenException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;401&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">401</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">CourseExistException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">course_exist_exception_handler</span>(<span class="params">request: Request, exc: CourseExistException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;400&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">400</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">CourseNotExistException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">course_not_exist_exception_handler</span>(<span class="params">request: Request, exc: CourseNotExistException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;404&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">404</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">UserExistException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">user_exist_exception_handler</span>(<span class="params">request: Request, exc: UserExistException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;400&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">400</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="登录-注册测试"><a href="#登录-注册测试" class="headerlink" title="登录&#x2F;注册测试"></a>登录&#x2F;注册测试</h2><p>现在测试一下学生登录和注册的逻辑</p><h3 id="学生注册-1"><a href="#学生注册-1" class="headerlink" title="学生注册"></a>学生注册</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710606986452-eaa412a2-43ab-4d6d-90bf-4143eae2ff77.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710606994269-e22569b7-b4d5-447b-a361-8c08b84ca44e.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710607036436-aa5689b3-3ece-4802-9978-bb4db123c161.png"></p><h3 id="学生登录-1"><a href="#学生登录-1" class="headerlink" title="学生登录"></a>学生登录</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710607063704-884a65f3-36c4-4487-8c43-b3d32c8c47ac.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710607072554-7fccd671-d1c1-46d1-b3d0-7970068664f6.png"></p><p>现在登录进来了，但是右上角的显示不太对，等下改改</p><h3 id="管理员登录"><a href="#管理员登录" class="headerlink" title="管理员登录"></a>管理员登录</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710607176805-d6ca2dae-fc34-476c-b3e2-c80338393074.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710607184624-4ba6ad15-b071-46e2-8b54-66c5c3535e51.png"></p><h2 id="学生管理-1"><a href="#学生管理-1" class="headerlink" title="学生管理"></a>学生管理</h2><p>这块咱们做个设定，当管理员新增用户、替用户修改用户数据，密码必须重新设置为初始密码-123456</p><h3 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h3><p>复制粘贴一下之前的<code>Course.vue</code>，命名为<code>Student.vue</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.username&quot;</span><br><span class="line">        placeholder=&quot;请输入要查询的学生学号&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;margin-left:10px; width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.name&quot;</span><br><span class="line">        placeholder=&quot;请输入要查询的学生姓名&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-button type=&quot;info&quot; plain style=&quot;margin: 0 0 0 10px&quot; @click=&quot;reset&quot;</span><br><span class="line">        &gt;重置&lt;/el-button</span><br><span class="line">      &gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-button</span><br><span class="line">          type=&quot;primary&quot;</span><br><span class="line">          style=&quot;margin-bottom: 5px&quot;</span><br><span class="line">          plain</span><br><span class="line">          @click=&quot;handleAdd&quot;</span><br><span class="line">          &gt;新增&lt;/el-button</span><br><span class="line">        &gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-table :data=&quot;data.tableData&quot; stripe style=&quot;width: 100%&quot;&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;id&quot; label=&quot;ID&quot; width=&quot;80&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;username&quot; label=&quot;学生学号&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;name&quot; label=&quot;学生姓名&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;gender&quot; label=&quot;性别&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;phone&quot; label=&quot;手机号&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;birthday&quot; label=&quot;出生日期&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;avatar&quot; label=&quot;头像&quot; /&gt;</span><br><span class="line">          &lt;el-table-column label=&quot;操作&quot; align=&quot;center&quot;&gt;</span><br><span class="line">            &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">              &lt;el-button</span><br><span class="line">                type=&quot;primary&quot;</span><br><span class="line">                size=&quot;small&quot;</span><br><span class="line">                plain</span><br><span class="line">                @click=&quot;handleEdit(scope.row)&quot;</span><br><span class="line">                &gt;编辑&lt;/el-button</span><br><span class="line">              &gt;</span><br><span class="line">              &lt;el-button</span><br><span class="line">                type=&quot;danger&quot;</span><br><span class="line">                size=&quot;small&quot;</span><br><span class="line">                plain</span><br><span class="line">                @click=&quot;handleDelete(scope.row.id)&quot;</span><br><span class="line">                &gt;删除&lt;/el-button</span><br><span class="line">              &gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">          &lt;/el-table-column&gt;</span><br><span class="line">        &lt;/el-table&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot;&gt;</span><br><span class="line">      &lt;el-pagination</span><br><span class="line">        v-model:current-page=&quot;data.pageNum&quot;</span><br><span class="line">        v-model:page-size=&quot;data.pageSize&quot;</span><br><span class="line">        @current-change=&quot;handleCurrentChange&quot;</span><br><span class="line">        background</span><br><span class="line">        layout=&quot;prev, pager, next&quot;</span><br><span class="line">        :total=&quot;data.total&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;el-dialog width=&quot;35%&quot; v-model=&quot;data.formVisible&quot; title=&quot;学生信息&quot;&gt;</span><br><span class="line">      &lt;el-form</span><br><span class="line">        :model=&quot;data.form&quot;</span><br><span class="line">        :rules=&quot;rules&quot;</span><br><span class="line">        ref=&quot;formRef&quot;</span><br><span class="line">        label-width=&quot;100px&quot;</span><br><span class="line">        label-position=&quot;right&quot;</span><br><span class="line">        style=&quot;padding-right: 45px&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;el-form-item label=&quot;学生学号&quot; prop=&quot;username&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.username&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;密码&quot; prop=&quot;password&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.password&quot; autocomplete=&quot;off&quot; disabled /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;学生姓名&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.name&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;性别&quot;&gt;</span><br><span class="line">          &lt;el-radio-group v-model=&quot;data.form.gender&quot;&gt;</span><br><span class="line">            &lt;el-radio label=&quot;男&quot;&gt;&lt;/el-radio&gt;</span><br><span class="line">            &lt;el-radio label=&quot;女&quot;&gt;&lt;/el-radio&gt;</span><br><span class="line">          &lt;/el-radio-group&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;手机号&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.phone&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;出生日期&quot;&gt;</span><br><span class="line">          &lt;el-date-picker</span><br><span class="line">            format=&quot;YYYY-MM-DD&quot;</span><br><span class="line">            value-format=&quot;YYYY-MM-DD&quot;</span><br><span class="line">            v-model=&quot;data.form.birthday&quot;</span><br><span class="line">          &gt;&lt;/el-date-picker&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;头像&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.avatar&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">      &lt;/el-form&gt;</span><br><span class="line">      &lt;template #footer&gt;</span><br><span class="line">        &lt;span class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">          &lt;el-button @click=&quot;data.formVisible = false&quot; plain&gt;取消&lt;/el-button&gt;</span><br><span class="line">          &lt;el-button type=&quot;primary&quot; @click=&quot;save&quot; plain&gt;保存&lt;/el-button&gt;</span><br><span class="line">        &lt;/span&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line">    &lt;/el-dialog&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; reactive, ref &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; Search &#125; from &quot;@element-plus/icons-vue&quot;;</span><br><span class="line">import request from &quot;@/utils/request&quot;;</span><br><span class="line">import &#123; ElMessage, ElMessageBox &#125; from &quot;element-plus&quot;;</span><br><span class="line"></span><br><span class="line">const data = reactive(&#123;</span><br><span class="line">  username: &quot;&quot;,</span><br><span class="line">  name: &quot;&quot;,</span><br><span class="line">  tableData: [],</span><br><span class="line">  total: 0,</span><br><span class="line">  pageNum: 1,</span><br><span class="line">  pageSize: 5,</span><br><span class="line">  formVisible: false,</span><br><span class="line">  form: &#123; password: &quot;123456&quot; &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const load = () =&gt; &#123;</span><br><span class="line">  request</span><br><span class="line">    .get(&quot;/student/selectPage&quot;, &#123;</span><br><span class="line">      params: &#123;</span><br><span class="line">        pageNum: data.pageNum,</span><br><span class="line">        pageSize: data.pageSize,</span><br><span class="line">        username: data.username,</span><br><span class="line">        name: data.name,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">        data.tableData = res.data?.list || [];</span><br><span class="line">        data.total = res.data?.total || 0;</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        ElMessage.error(res.msg);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">        localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 加载一次 获取课程数据</span><br><span class="line">load();</span><br><span class="line"></span><br><span class="line">const handleCurrentChange = () =&gt; &#123;</span><br><span class="line">  // 当翻页的时候重新加载数据</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const reset = () =&gt; &#123;</span><br><span class="line">  data.username = &quot;&quot;;</span><br><span class="line">  data.name = &quot;&quot;;</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const rules = reactive(&#123;</span><br><span class="line">  username: [&#123; required: true, message: &quot;请输入学生学号&quot;, trigger: &quot;blur&quot; &#125;],</span><br><span class="line">  password: [&#123; required: true, message: &quot;请输入密码&quot;, trigger: &quot;blur&quot; &#125;],</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const formRef = ref();</span><br><span class="line"></span><br><span class="line">const handleAdd = () =&gt; &#123;</span><br><span class="line">  data.formVisible = true;</span><br><span class="line">  data.form = &#123; password: &quot;123456&quot; &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const save = () =&gt; &#123;</span><br><span class="line">  formRef.value.validate((valid) =&gt; &#123;</span><br><span class="line">    if (valid) &#123;</span><br><span class="line">      request</span><br><span class="line">        .request(&#123;</span><br><span class="line">          url: data.form.id ? &quot;/student/update&quot; : &quot;/student/add&quot;,</span><br><span class="line">          method: data.form.id ? &quot;put&quot; : &quot;post&quot;,</span><br><span class="line">          data: data.form,</span><br><span class="line">        &#125;)</span><br><span class="line">        .then((res) =&gt; &#123;</span><br><span class="line">          if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">            ElMessage.success(&quot;操作成功&quot;);</span><br><span class="line">            data.formVisible = false;</span><br><span class="line">            load();</span><br><span class="line">          &#125; else &#123;</span><br><span class="line">            ElMessage.error(res.msg);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch((err) =&gt; &#123;</span><br><span class="line">          if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">            localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">          &#125;</span><br><span class="line">          ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const handleEdit = (row) =&gt; &#123;</span><br><span class="line">  data.form = JSON.parse(JSON.stringify(row));</span><br><span class="line">  data.formVisible = true;</span><br><span class="line">  data.form.password = &quot;123456&quot;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const handleDelete = (id) =&gt; &#123;</span><br><span class="line">  ElMessageBox.confirm(&quot;删除后内容将无法恢复，您确认删除嘛？&quot;, &quot;删除确认&quot;, &#123;</span><br><span class="line">    type: &quot;warning&quot;,</span><br><span class="line">  &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      request.delete(&quot;/student/delete/&quot; + id).then((res) =&gt; &#123;</span><br><span class="line">        if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">          ElMessage.success(&quot;删除成功&quot;);</span><br><span class="line">          load();</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          ElMessage.error(res.msg);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">        localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHistory &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">history</span>: <span class="title function_">createWebHistory</span>(<span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">env</span>.<span class="property">BASE_URL</span>),</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;Manager&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/Manager.vue&quot;</span>),</span><br><span class="line">      <span class="attr">redirect</span>: <span class="string">&quot;/home&quot;</span>,</span><br><span class="line">      <span class="attr">children</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;home&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Home&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Home.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;course&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Course&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Course.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;student&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Student&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Student.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">      ],</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/login&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;Login&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/Login.vue&quot;</span>),</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/register&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;Register&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/Register.vue&quot;</span>),</span><br><span class="line">    &#125;,</span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">beforeEach</span>(<span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> requiresAuth = to.<span class="property">matched</span>.<span class="title function_">some</span>(<span class="function">(<span class="params">record</span>) =&gt;</span> record.<span class="property">meta</span>.<span class="property">requiresAuth</span>);</span><br><span class="line">  <span class="keyword">const</span> user = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;student-user&quot;</span>));</span><br><span class="line">  <span class="keyword">if</span> (requiresAuth &amp;&amp; !user) &#123;</span><br><span class="line">    <span class="comment">// 如果目标路由需要认证,并且用户未登录</span></span><br><span class="line">    <span class="title function_">next</span>(<span class="string">&quot;/login&quot;</span>); <span class="comment">// 跳转到登录页面</span></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">next</span>(); <span class="comment">// 如果目标路由不需要认证,或者用户已登录,则正常导航到目标路由</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div</span><br><span class="line">      style=&quot;height: 60px; background-color: #eae8e8; display: flex; align-items: center; border-bottom: 1px solid #c4c2c2&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;div style=&quot;flex: 1&quot;&gt;</span><br><span class="line">        &lt;div style=&quot;padding-left: 20px; display: flex; align-items: center&quot;&gt;</span><br><span class="line">          &lt;img src=&quot;@/assets/imgs/logo.png&quot; alt=&quot;&quot; style=&quot;width: 40px&quot; /&gt;</span><br><span class="line">          &lt;div style=&quot;font-weight: bold; font-size: 24px; margin-left: 5px&quot;&gt;</span><br><span class="line">            学生信息管理系统</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        style=&quot;width: fit-content; padding-right: 10px; display: flex; align-items: center;&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;img</span><br><span class="line">          src=&quot;https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png&quot;</span><br><span class="line">          alt=&quot;&quot;</span><br><span class="line">          style=&quot;width: 40px; height: 40px&quot;</span><br><span class="line">        /&gt;</span><br><span class="line">        &lt;span style=&quot;margin-left: 5px&quot;&gt;管理员&lt;/span&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div style=&quot;display: flex&quot;&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        style=&quot;width: 200px; border-right: 1px solid #f3eeee; min-height: calc(100vh - 60px)&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;el-menu</span><br><span class="line">          router</span><br><span class="line">          style=&quot;border: none&quot;</span><br><span class="line">          :default-active=&quot;$route.path&quot;</span><br><span class="line">          :default-openeds=&quot;[&#x27;/home&#x27;, &#x27;2&#x27;, &#x27;3&#x27;]&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          &lt;el-menu-item index=&quot;/home&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;</span><br><span class="line">              &lt;HomeFilled /&gt;</span><br><span class="line">            &lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;系统首页&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line"></span><br><span class="line">          &lt;el-sub-menu index=&quot;2&quot;&gt;</span><br><span class="line">            &lt;template #title&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;Management /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;学生管理&lt;/span&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">            &lt;el-menu-item index=&quot;/student&quot;&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;UserFilled /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;学生信息&lt;/span&gt;</span><br><span class="line">            &lt;/el-menu-item&gt;</span><br><span class="line">          &lt;/el-sub-menu&gt;</span><br><span class="line"></span><br><span class="line">          &lt;el-sub-menu index=&quot;3&quot;&gt;</span><br><span class="line">            &lt;template #title&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;Memo /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;课程管理&lt;/span&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">            &lt;el-menu-item index=&quot;/course&quot;&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;Document /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;课程信息&lt;/span&gt;</span><br><span class="line">            &lt;/el-menu-item&gt;</span><br><span class="line">          &lt;/el-sub-menu&gt;</span><br><span class="line"></span><br><span class="line">          &lt;el-menu-item index=&quot;/person&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;</span><br><span class="line">              &lt;User /&gt;</span><br><span class="line">            &lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;个人资料&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line">          &lt;el-menu-item index=&quot;/login&quot; @click=&quot;logout&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;</span><br><span class="line">              &lt;SwitchButton /&gt;</span><br><span class="line">            &lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;退出系统&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line">        &lt;/el-menu&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">      &lt;div style=&quot;flex: 1; width: 0; background-color: #eaeaee; padding: 10px&quot;&gt;</span><br><span class="line">        &lt;router-view /&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; useRoute &#125; from &quot;vue-router&quot;;</span><br><span class="line"></span><br><span class="line">const $route = useRoute();</span><br><span class="line">console.log($route.path);</span><br><span class="line"></span><br><span class="line">const logout = () =&gt; &#123;</span><br><span class="line">  localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.el-menu-item.is-active &#123;</span><br><span class="line">  background-color: #c3d7d3 !important;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.el-menu-item:hover &#123;</span><br><span class="line">  color: #0c98d5;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">:deep(th) &#123;</span><br><span class="line">  color: #333;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h3><p>直接一次性实现学生管理的增删查改</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Optional</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> Depends, APIRouter, Query</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> common.auth <span class="keyword">import</span> auth_handler</span><br><span class="line"><span class="keyword">from</span> common.pageHelper <span class="keyword">import</span> PageHelper</span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> ResultModel, Result</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session, get_db_session</span><br><span class="line"><span class="keyword">from</span> model.account <span class="keyword">import</span> AccountRegister</span><br><span class="line"><span class="keyword">from</span> model.student <span class="keyword">import</span> StudentSearch, StudentCreate, StudentUpdate</span><br><span class="line"><span class="keyword">from</span> service.studentService <span class="keyword">import</span> StudentService</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.post(<span class="params"><span class="string">&quot;/register&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">register</span>(<span class="params">account: AccountRegister, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    StudentService.register(account, db_session)</span><br><span class="line">    <span class="keyword">return</span> Result.success()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">student_router = APIRouter(prefix=<span class="string">&quot;/student&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@student_router.get(<span class="params"><span class="string">&quot;/selectPage&quot;</span>, response_model=ResultModel, dependencies=[Depends(<span class="params">auth_handler.auth_required</span>)]</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">select_page</span>(<span class="params">page: <span class="built_in">int</span> = Query(<span class="params"><span class="number">1</span>, ge=<span class="number">1</span>, alias=<span class="string">&quot;pageNum&quot;</span>, description=<span class="string">&quot;Page number&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      size: <span class="built_in">int</span> = Query(<span class="params"><span class="number">5</span>, gt=<span class="number">0</span>, le=<span class="number">100</span>, alias=<span class="string">&quot;pageSize&quot;</span>, description=<span class="string">&quot;Page size&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      username: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Student username&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      name: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Student name&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    pageInfo = PageHelper.startPage(page, size)</span><br><span class="line">    student_search = StudentSearch(username=username, name=name)</span><br><span class="line">    student_list = StudentService.select_page(student_search, db_session)</span><br><span class="line">    <span class="keyword">return</span> Result.success(pageInfo.of(student_list))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@student_router.post(<span class="params"><span class="string">&quot;/add&quot;</span>, response_model=ResultModel, dependencies=[Depends(<span class="params">auth_handler.auth_required</span>)]</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">student: StudentCreate, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    StudentService.add_student(student, db_session)</span><br><span class="line">    <span class="keyword">return</span> Result.success()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@student_router.put(<span class="params"><span class="string">&quot;/update&quot;</span>, response_model=ResultModel, dependencies=[Depends(<span class="params">auth_handler.auth_required</span>)]</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">update</span>(<span class="params">student: StudentUpdate, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    StudentService.update_by_id(student, db_session)</span><br><span class="line">    <span class="keyword">return</span> Result.success()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@student_router.delete(<span class="params"><span class="string">&quot;/delete/&#123;id&#125;&quot;</span>, response_model=ResultModel, dependencies=[Depends(<span class="params">auth_handler.auth_required</span>)]</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">delete</span>(<span class="params"><span class="built_in">id</span>: <span class="built_in">int</span>, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    StudentService.delete_by_id(<span class="built_in">id</span>, db_session)</span><br><span class="line">    <span class="keyword">return</span> Result.success()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.include_router(student_router)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi.encoders <span class="keyword">import</span> jsonable_encoder</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> select, asc</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.Enum <span class="keyword">import</span> Role</span><br><span class="line"><span class="keyword">from</span> common.auth <span class="keyword">import</span> auth_handler</span><br><span class="line"><span class="keyword">from</span> common.utils <span class="keyword">import</span> set_attrs</span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> UserNotFoundException, PasswordNotMatchException, UserExistException</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session</span><br><span class="line"><span class="keyword">from</span> model.account <span class="keyword">import</span> AccountLogin, AccountLoginResponse, AccountRegister</span><br><span class="line"><span class="keyword">from</span> model.student <span class="keyword">import</span> Student, StudentCreate, StudentUpdate</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentService</span>:</span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">login</span>(<span class="params">account: AccountLogin, db_session: Session</span>) -&gt; AccountLoginResponse:</span><br><span class="line">        query = select(Student).where(Student.username == account.username)</span><br><span class="line">        exist_student: Student = db_session.execute(query).scalars().first()</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> exist_student:</span><br><span class="line">            <span class="keyword">raise</span> UserNotFoundException(<span class="string">&quot;用户不存在&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> auth_handler.verify_password(account.password, exist_student.password):</span><br><span class="line">            <span class="keyword">raise</span> PasswordNotMatchException(<span class="string">&quot;身份验证未通过&quot;</span>)</span><br><span class="line">        account_login_response = AccountLoginResponse()</span><br><span class="line">        set_attrs(account_login_response, jsonable_encoder(exist_student))</span><br><span class="line">        account_login_response.token = auth_handler.encode_token(exist_student.<span class="built_in">id</span>)</span><br><span class="line">        <span class="keyword">return</span> account_login_response</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">register</span>(<span class="params">account: AccountRegister, db_session: Session</span>):</span><br><span class="line">        query = select(Student).where(Student.username == account.username)</span><br><span class="line">        exist_student = db_session.execute(query).scalars().first()</span><br><span class="line">        <span class="keyword">if</span> exist_student:</span><br><span class="line">            <span class="keyword">raise</span> UserExistException(<span class="string">&quot;账号已存在&quot;</span>)</span><br><span class="line"></span><br><span class="line">        new_student = Student()</span><br><span class="line">        account.password = auth_handler.get_password_hash(account.password)</span><br><span class="line">        set_attrs(new_student, jsonable_encoder(account))</span><br><span class="line">        <span class="keyword">if</span> new_student.name <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            new_student.name = account.username</span><br><span class="line">        new_student.role = Role.STUDENT.name</span><br><span class="line"></span><br><span class="line">        db_session.add(new_student)</span><br><span class="line">        db_session.commit()</span><br><span class="line">        <span class="keyword">return</span> new_student</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">select_page</span>(<span class="params">student_search: Student, db_session: Session</span>):</span><br><span class="line">        query = select(Student).order_by(asc(Student.<span class="built_in">id</span>))</span><br><span class="line">        <span class="keyword">if</span> student_search.username:</span><br><span class="line">            query = query.where(Student.username.like(<span class="string">f&quot;%<span class="subst">&#123;student_search.username&#125;</span>%&quot;</span>))</span><br><span class="line">        <span class="keyword">if</span> student_search.name:</span><br><span class="line">            query = query.where(Student.name.like(<span class="string">f&quot;%<span class="subst">&#123;student_search.name&#125;</span>%&quot;</span>))</span><br><span class="line"></span><br><span class="line">        result = db_session.execute(query).scalars().<span class="built_in">all</span>()</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">add_student</span>(<span class="params">student: StudentCreate, db_session: Session</span>):</span><br><span class="line">        query = select(Student).where(Student.username == student.username)</span><br><span class="line">        exist_student = db_session.execute(query).scalars().<span class="built_in">all</span>()</span><br><span class="line">        <span class="keyword">if</span> exist_student:</span><br><span class="line">            <span class="keyword">raise</span> UserExistException(<span class="string">&quot;账号已存在&quot;</span>)</span><br><span class="line"></span><br><span class="line">        student.password = auth_handler.get_password_hash(student.password)</span><br><span class="line">        student = Student(**student.<span class="built_in">dict</span>())</span><br><span class="line">        <span class="keyword">if</span> student.name <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            student.name = student.username</span><br><span class="line">        student.role = Role.STUDENT.name</span><br><span class="line">        db_session.add(student)</span><br><span class="line">        db_session.commit()</span><br><span class="line">        <span class="keyword">return</span> student</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">update_by_id</span>(<span class="params">student: StudentUpdate, db_session: Session</span>):</span><br><span class="line">        exist_student: Student = check_student_exist(student.<span class="built_in">id</span>, db_session)</span><br><span class="line">        student.password = auth_handler.get_password_hash(student.password)</span><br><span class="line">        set_attrs(exist_student, jsonable_encoder(student))</span><br><span class="line">        db_session.commit()</span><br><span class="line">        <span class="keyword">return</span> exist_student</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">delete_by_id</span>(<span class="params"><span class="built_in">id</span>: <span class="built_in">int</span>, db_session: Session</span>):</span><br><span class="line">        exist_student: Student = check_student_exist(<span class="built_in">id</span>, db_session)</span><br><span class="line">        db_session.delete(exist_student)</span><br><span class="line">        db_session.commit()</span><br><span class="line">        <span class="keyword">return</span> exist_student</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check_student_exist</span>(<span class="params">student_id: <span class="built_in">int</span>, db_session: Session</span>):</span><br><span class="line">    query = select(Student).where(Student.<span class="built_in">id</span> == student_id)</span><br><span class="line">    exist_student: Student = db_session.execute(query).scalar()</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> exist_student:</span><br><span class="line">        <span class="keyword">raise</span> UserNotFoundException(<span class="string">&quot;账号不存在&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> exist_student</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Optional</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pydantic <span class="keyword">import</span> BaseModel, Field</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> Integer, String</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> Mapped, mapped_column</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Base</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>(<span class="title class_ inherited__">Base</span>):</span><br><span class="line">    __tablename__ = <span class="string">&quot;student&quot;</span></span><br><span class="line">    <span class="built_in">id</span>: Mapped[<span class="built_in">int</span>] = mapped_column(Integer, primary_key=<span class="literal">True</span>, nullable=<span class="literal">False</span>)</span><br><span class="line">    username: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    password: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    name: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    phone: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    gender: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    birthday: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    avatar: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    role: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentBase</span>(<span class="title class_ inherited__">BaseModel</span>):</span><br><span class="line">    username: <span class="built_in">str</span></span><br><span class="line">    password: <span class="built_in">str</span> = Field(..., min_length=<span class="number">1</span>)</span><br><span class="line">    name: <span class="type">Optional</span>[<span class="built_in">str</span>] = <span class="literal">None</span></span><br><span class="line">    role: <span class="type">Optional</span>[<span class="built_in">str</span>] = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentSearch</span>(<span class="title class_ inherited__">BaseModel</span>):</span><br><span class="line">    username: <span class="built_in">str</span> | <span class="literal">None</span></span><br><span class="line">    name: <span class="built_in">str</span> | <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentCreate</span>(<span class="title class_ inherited__">StudentBase</span>):</span><br><span class="line">    phone: <span class="type">Optional</span>[<span class="built_in">str</span>] = <span class="literal">None</span></span><br><span class="line">    gender: <span class="type">Optional</span>[<span class="built_in">str</span>] = <span class="literal">None</span></span><br><span class="line">    birthday: <span class="type">Optional</span>[<span class="built_in">str</span>] = Field(<span class="literal">None</span>)</span><br><span class="line">    avatar: <span class="type">Optional</span>[<span class="built_in">str</span>] = Field(<span class="literal">None</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentUpdate</span>(<span class="title class_ inherited__">StudentCreate</span>):</span><br><span class="line">    <span class="built_in">id</span>: <span class="built_in">int</span></span><br></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><h4 id="增"><a href="#增" class="headerlink" title="增"></a>增</h4><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710614101507-2bf573c5-fa17-4163-a689-3385877daa5d.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710614339357-f6290c1c-bd96-4b2c-8530-09e5bf23b1c4.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710614350016-64f541ee-ce8e-4f50-80ee-182cbf2e277c.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710614399226-a9223fce-2830-4d70-b5b0-5345265e68b1.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710614409533-4ccb0b0e-b43c-4e2b-8732-2cc57e64a637.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710614456422-3dd9bdc7-3664-4db1-b0fa-d463de9a24ab.png"></p><h4 id="删"><a href="#删" class="headerlink" title="删"></a>删</h4><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710614471327-76769a3d-22b0-448d-90e4-4732685f6265.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710614484226-16c0dee1-16e3-4ddf-86fd-046dc6241284.png"></p><h4 id="查"><a href="#查" class="headerlink" title="查"></a>查</h4><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710614500386-0b89fdc6-06f8-460f-8a82-f50af83bf667.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710614524924-97ff251c-c108-4913-a355-722cb37adee5.png"></p><h4 id="改"><a href="#改" class="headerlink" title="改"></a>改</h4><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710614569965-55e3a371-083d-4f48-9bc8-49c7c1124c96.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710614577734-0d8b6662-062e-437f-a4d8-5288c15995b2.png"></p><p>但是修改过后，密码会被强制重置为 123456</p><h2 id="限制权限"><a href="#限制权限" class="headerlink" title="限制权限"></a>限制权限</h2><p>现在不管普通的学生还是管理员都能看到管理页面 这不符合</p><p>需要加入一个权限<code>v-if=&quot;user.role === &#39;ADMIN&#39;&quot;</code></p><p>顺便修改一下右上角和主页显示的用户名称</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div</span><br><span class="line">      style=&quot;height: 60px; background-color: #eae8e8; display: flex; align-items: center; border-bottom: 1px solid #c4c2c2&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;div style=&quot;flex: 1&quot;&gt;</span><br><span class="line">        &lt;div style=&quot;padding-left: 20px; display: flex; align-items: center&quot;&gt;</span><br><span class="line">          &lt;img src=&quot;@/assets/imgs/logo.png&quot; alt=&quot;&quot; style=&quot;width: 40px&quot; /&gt;</span><br><span class="line">          &lt;div style=&quot;font-weight: bold; font-size: 24px; margin-left: 5px&quot;&gt;</span><br><span class="line">            学生信息管理系统</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        style=&quot;width: fit-content; padding-right: 10px; display: flex; align-items: center;&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;img</span><br><span class="line">          src=&quot;https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png&quot;</span><br><span class="line">          alt=&quot;&quot;</span><br><span class="line">          style=&quot;width: 40px; height: 40px&quot;</span><br><span class="line">        /&gt;</span><br><span class="line">        &lt;span style=&quot;margin-left: 5px&quot;&gt;&#123;&#123; user.name &#125;&#125;&lt;/span&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div style=&quot;display: flex&quot;&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        style=&quot;width: 200px; border-right: 1px solid #f3eeee; min-height: calc(100vh - 60px)&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;el-menu</span><br><span class="line">          router</span><br><span class="line">          style=&quot;border: none&quot;</span><br><span class="line">          :default-active=&quot;$route.path&quot;</span><br><span class="line">          :default-openeds=&quot;[&#x27;/home&#x27;, &#x27;2&#x27;, &#x27;3&#x27;]&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          &lt;el-menu-item index=&quot;/home&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;</span><br><span class="line">              &lt;HomeFilled /&gt;</span><br><span class="line">            &lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;系统首页&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line"></span><br><span class="line">          &lt;el-sub-menu index=&quot;2&quot; v-if=&quot;user.role === &#x27;ADMIN&#x27;&quot;&gt;</span><br><span class="line">            &lt;template #title&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;Management /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;学生管理&lt;/span&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">            &lt;el-menu-item index=&quot;/student&quot;&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;UserFilled /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;学生信息&lt;/span&gt;</span><br><span class="line">            &lt;/el-menu-item&gt;</span><br><span class="line">          &lt;/el-sub-menu&gt;</span><br><span class="line"></span><br><span class="line">          &lt;el-sub-menu index=&quot;3&quot; v-if=&quot;user.role === &#x27;ADMIN&#x27;&quot;&gt;</span><br><span class="line">            &lt;template #title&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;Memo /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;课程管理&lt;/span&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">            &lt;el-menu-item index=&quot;/course&quot;&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;Document /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;课程信息&lt;/span&gt;</span><br><span class="line">            &lt;/el-menu-item&gt;</span><br><span class="line">          &lt;/el-sub-menu&gt;</span><br><span class="line"></span><br><span class="line">          &lt;el-menu-item index=&quot;/person&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;</span><br><span class="line">              &lt;User /&gt;</span><br><span class="line">            &lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;个人资料&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line">          &lt;el-menu-item index=&quot;/login&quot; @click=&quot;logout&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;</span><br><span class="line">              &lt;SwitchButton /&gt;</span><br><span class="line">            &lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;退出系统&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line">        &lt;/el-menu&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">      &lt;div style=&quot;flex: 1; width: 0; background-color: #eaeaee; padding: 10px&quot;&gt;</span><br><span class="line">        &lt;router-view /&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; useRoute &#125; from &quot;vue-router&quot;;</span><br><span class="line"></span><br><span class="line">const $route = useRoute();</span><br><span class="line">console.log($route.path);</span><br><span class="line"></span><br><span class="line">const logout = () =&gt; &#123;</span><br><span class="line">  localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const user = JSON.parse(localStorage.getItem(&quot;student-user&quot;) || &quot;&#123;&#125;&quot;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.el-menu-item.is-active &#123;</span><br><span class="line">  background-color: #c3d7d3 !important;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.el-menu-item:hover &#123;</span><br><span class="line">  color: #0c98d5;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">:deep(th) &#123;</span><br><span class="line">  color: #333;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;welcome-container&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;custom-card bg-white shadow rounded p-4 mb-5&quot;&gt;</span><br><span class="line">      &lt;h2 class=&quot;text-center text-primary&quot;&gt;欢迎来到本系统&lt;/h2&gt;</span><br><span class="line">      &lt;p class=&quot;text-center mt-3&quot;&gt;</span><br><span class="line">        您好 &lt;span :style=&quot;&#123; color: &#x27;#116ca9&#x27; &#125;&quot;&gt;&#123;&#123; user.name &#125;&#125;&lt;/span</span><br><span class="line">        &gt;，祝您使用愉快！</span><br><span class="line">      &lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import request from &quot;@/utils/request&quot;;</span><br><span class="line"></span><br><span class="line">const user = JSON.parse(localStorage.getItem(&quot;student-user&quot;) || &quot;&#123;&#125;&quot;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.welcome-container &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  justify-content: center;</span><br><span class="line">  align-items: center;</span><br><span class="line">  min-height: calc(100vh - 100px); /* 根据实际项目需要调整高度 */</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.custom-card &#123;</span><br><span class="line">  max-width: 400px;</span><br><span class="line">  border: none;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>普通学生登录</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710615211512-e0cccb33-3e60-4b88-9678-4c2ce8e98086.png"></p><p>管理员登录</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710615040123-41959ce6-a154-4412-ae89-c76b26d83cec.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710615228358-010c1595-4196-4110-b8a8-96aee9e8ddd7.png"></p><hr><blockquote><p>更新: 2024-05-20 00:11:43<br>原文: <a href="https://www.yuque.com/zacharyblock/iacda/uuigf300461wndud">https://www.yuque.com/zacharyblock/iacda/uuigf300461wndud</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> FastAPI入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Vue3 </tag>
            
            <tag> FastAPI </tag>
            
            <tag> 实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FastAPI入门-API鉴权</title>
      <link href="/2024/05/03/FastAPI%E5%85%A5%E9%97%A8/API%E9%89%B4%E6%9D%83/"/>
      <url>/2024/05/03/FastAPI%E5%85%A5%E9%97%A8/API%E9%89%B4%E6%9D%83/</url>
      
        <content type="html"><![CDATA[<h1 id="API-鉴权"><a href="#API-鉴权" class="headerlink" title="API 鉴权"></a>API 鉴权</h1><p>为了不允许，任何人都可以调用后端的 api 接口，现在给 api 接口加上权限校验，只有登录过的才能调用后端的 api 接口，之前在<code>auth.py</code>中实现了一个校验，通过依赖注入给 api 直接加上即可</p><h2 id="依赖注入"><a href="#依赖注入" class="headerlink" title="依赖注入"></a>依赖注入</h2><p>比如给<code>courseApi.py</code>的所有接口加上 token 校验的依赖</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Optional</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> APIRouter, Query, Depends</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> common.auth <span class="keyword">import</span> auth_handler</span><br><span class="line"><span class="keyword">from</span> common.pageHelper <span class="keyword">import</span> PageHelper</span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> ResultModel, Result</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session, get_db_session</span><br><span class="line"><span class="keyword">from</span> model.course <span class="keyword">import</span> CourseSearch, CourseCreate, CourseUpdate</span><br><span class="line"><span class="keyword">from</span> service.courseService <span class="keyword">import</span> CourseService</span><br><span class="line"></span><br><span class="line">course_router = APIRouter(prefix=<span class="string">&quot;/course&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@course_router.get(<span class="params"><span class="string">&quot;/selectPage&quot;</span>, response_model=ResultModel, dependencies=[Depends(<span class="params">auth_handler.auth_required</span>)]</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">select_page</span>(<span class="params">page: <span class="built_in">int</span> = Query(<span class="params"><span class="number">1</span>, ge=<span class="number">1</span>, alias=<span class="string">&quot;pageNum&quot;</span>, description=<span class="string">&quot;Page number&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      size: <span class="built_in">int</span> = Query(<span class="params"><span class="number">5</span>, gt=<span class="number">0</span>, le=<span class="number">100</span>, alias=<span class="string">&quot;pageSize&quot;</span>, description=<span class="string">&quot;Page size&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      name: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Course name&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      number: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Course number&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      teacher: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Course teacher&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    pageInfo = PageHelper.startPage(page, size)</span><br><span class="line">    course_search = CourseSearch(name=name, number=number, teacher=teacher)</span><br><span class="line">    course_list = CourseService.select_page(course_search, db_session)</span><br><span class="line">    result = Result.success(pageInfo.of(course_list))</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@course_router.post(<span class="params"><span class="string">&quot;/add&quot;</span>, response_model=ResultModel, dependencies=[Depends(<span class="params">auth_handler.auth_required</span>)]</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">course: CourseCreate, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    CourseService.add_course(course, db_session)</span><br><span class="line">    result = Result.success()</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@course_router.put(<span class="params"><span class="string">&quot;/update&quot;</span>, response_model=ResultModel, dependencies=[Depends(<span class="params">auth_handler.auth_required</span>)]</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">update</span>(<span class="params">course: CourseUpdate, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    CourseService.update_by_id(course, db_session)</span><br><span class="line">    result = Result.success()</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@course_router.delete(<span class="params"><span class="string">&quot;/delete/&#123;id&#125;&quot;</span>, response_model=ResultModel, dependencies=[Depends(<span class="params">auth_handler.auth_required</span>)]</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">delete</span>(<span class="params"><span class="built_in">id</span>: <span class="built_in">int</span>, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    CourseService.delete_by_id(<span class="built_in">id</span>, db_session)</span><br><span class="line">    result = Result.success()</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.include_router(course_router)</span><br></pre></td></tr></table></figure><p>或者给整个&#x2F;course 下的 api 都注入依赖，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Optional</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> APIRouter, Depends, Query</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> common.auth <span class="keyword">import</span> auth_handler</span><br><span class="line"><span class="keyword">from</span> common.pageHelper <span class="keyword">import</span> PageHelper</span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> ResultModel, Result</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session, get_db_session</span><br><span class="line"><span class="keyword">from</span> model.course <span class="keyword">import</span> CourseSearch, CourseCreate, CourseUpdate</span><br><span class="line"><span class="keyword">from</span> service.courseService <span class="keyword">import</span> CourseService</span><br><span class="line"></span><br><span class="line">course_router = APIRouter(prefix=<span class="string">&#x27;/course&#x27;</span>, dependencies=[Depends(auth_handler.auth_required)])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@course_router.get(<span class="params"><span class="string">&quot;/selectPage&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">select_page</span>(<span class="params">page: <span class="built_in">int</span> = Query(<span class="params"><span class="number">1</span>, ge=<span class="number">1</span>, alias=<span class="string">&quot;pageNum&quot;</span>, description=<span class="string">&quot;Page number&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      size: <span class="built_in">int</span> = Query(<span class="params"><span class="number">5</span>, gt=<span class="number">0</span>, le=<span class="number">100</span>, alias=<span class="string">&quot;pageSize&quot;</span>, description=<span class="string">&quot;Page size&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      name: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Course name&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      number: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Course number&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      teacher: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Course teacher&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    pageInfo = PageHelper.startPage(page, size)</span><br><span class="line">    course_search = CourseSearch(name=name, number=number, teacher=teacher)</span><br><span class="line">    course_list = CourseService.select_page(course_search, db_session)</span><br><span class="line">    result = Result.success(pageInfo.of(course_list))</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@course_router.post(<span class="params"><span class="string">&quot;/add&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">course: CourseCreate, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    CourseService.add_course(course, db_session)</span><br><span class="line">    result = Result.success()</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@course_router.put(<span class="params"><span class="string">&quot;/update&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">update</span>(<span class="params">course: CourseUpdate, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    CourseService.update_by_id(course, db_session)</span><br><span class="line">    result = Result.success()</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@course_router.delete(<span class="params"><span class="string">&quot;/delete/&#123;id&#125;&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">delete</span>(<span class="params"><span class="built_in">id</span>: <span class="built_in">int</span>, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    CourseService.delete_by_id(<span class="built_in">id</span>, db_session)</span><br><span class="line">    result = Result.success()</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.include_router(course_router)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这样如果没有登录的情况下，直接用 postman 是无法调用接口的</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710427325734-11834e2f-d189-420d-8d57-8b67386e6943.png"></p><h2 id="登录-token"><a href="#登录-token" class="headerlink" title="登录 token"></a>登录 token</h2><p>虽然现在前端页面上已经登录了，但由于请求头没有带上 token，所以无法获取数据</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710419406685-19044c40-990d-496d-9cad-a0b7dbde9e49.png"></p><p>为了让浏览器拿到后端生成的这个 token，需要改变一下登录后的返回结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> select</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.auth <span class="keyword">import</span> auth_handler</span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> UserNotFoundException, PasswordNotMatchException</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session</span><br><span class="line"><span class="keyword">from</span> model.admin <span class="keyword">import</span> Admin, AdminModel, AdminLoginResponse</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AdminService</span>:</span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">login</span>(<span class="params">admin: AdminModel, db_session: Session</span>) -&gt; Admin:</span><br><span class="line">        query = select(Admin).where(Admin.username == admin.username)</span><br><span class="line">        exist_admin: Admin = db_session.execute(query).scalars().first()</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> exist_admin:</span><br><span class="line">            <span class="keyword">raise</span> UserNotFoundException(<span class="string">&quot;用户不存在&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> auth_handler.verify_password(admin.password, exist_admin.password):</span><br><span class="line">            <span class="keyword">raise</span> PasswordNotMatchException(<span class="string">&quot;身份验证未通过&quot;</span>)</span><br><span class="line">        admin_login_response = AdminLoginResponse(<span class="built_in">id</span>=exist_admin.<span class="built_in">id</span>, username=exist_admin.username,</span><br><span class="line">                                                  token=auth_handler.encode_token(exist_admin.<span class="built_in">id</span>))</span><br><span class="line">        <span class="keyword">return</span> admin_login_response</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">import</span> bcrypt</span><br><span class="line"><span class="keyword">from</span> pydantic <span class="keyword">import</span> BaseModel</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> Integer, String</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> Mapped, mapped_column</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Base</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Admin</span>(<span class="title class_ inherited__">Base</span>):</span><br><span class="line">    __tablename__ = <span class="string">&quot;admin&quot;</span></span><br><span class="line">    <span class="built_in">id</span>: Mapped[<span class="built_in">int</span>] = mapped_column(Integer, primary_key=<span class="literal">True</span>, nullable=<span class="literal">False</span>)</span><br><span class="line">    username: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    password: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AdminModel</span>(<span class="title class_ inherited__">BaseModel</span>):</span><br><span class="line">    username: <span class="built_in">str</span></span><br><span class="line">    password: <span class="built_in">str</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AdminLoginResponse</span>(<span class="title class_ inherited__">BaseModel</span>):</span><br><span class="line">    <span class="built_in">id</span>: <span class="built_in">int</span></span><br><span class="line">    username: <span class="built_in">str</span></span><br><span class="line">    token: <span class="built_in">str</span></span><br></pre></td></tr></table></figure><p>这样子在重新登录之后就可以获得后端返回的 token，前端 axios 会在发起请求之前，将 token 放到请求头中，再向后端请求 api 接口</p><p>登录后会返回 token：</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710420080541-20a155e1-15a0-4052-ae34-c60a582e6b41.png"></p><p>能正确获取数据：</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710427424832-4e162436-19bc-4d6d-b51a-e81eae83e769.png"></p><h2 id="token-超时失效"><a href="#token-超时失效" class="headerlink" title="token 超时失效"></a>token 超时失效</h2><p>为了让前端的 token 失效之后，自动回到 Login 页面，需要做些调整</p><p>当请求 api 接口的时候返回的状态值为 401 的时候，移除存储的 student-user，这样就会自动跳转回 login 页面重新进行登录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.name&quot;</span><br><span class="line">        placeholder=&quot;请输入要查询的课程名称&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;margin-left:10px; width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.number&quot;</span><br><span class="line">        placeholder=&quot;请输入课程编号&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;margin-left:10px; width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.teacher&quot;</span><br><span class="line">        placeholder=&quot;请输入任课老师&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-button type=&quot;info&quot; plain style=&quot;margin: 0 0 0 10px&quot; @click=&quot;reset&quot;</span><br><span class="line">        &gt;重置&lt;/el-button</span><br><span class="line">      &gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-button</span><br><span class="line">          type=&quot;primary&quot;</span><br><span class="line">          style=&quot;margin-bottom: 5px&quot;</span><br><span class="line">          plain</span><br><span class="line">          @click=&quot;handleAdd&quot;</span><br><span class="line">          &gt;新增&lt;/el-button</span><br><span class="line">        &gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-table :data=&quot;data.tableData&quot; stripe style=&quot;width: 100%&quot;&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;id&quot; label=&quot;ID&quot; width=&quot;80&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;name&quot; label=&quot;课程名称&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;number&quot; label=&quot;课程编号&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;description&quot; label=&quot;课程描述&quot; width=&quot;240&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;periods&quot; label=&quot;课时&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;teacher&quot; label=&quot;任课教师&quot; /&gt;</span><br><span class="line">          &lt;el-table-column label=&quot;操作&quot; align=&quot;center&quot;&gt;</span><br><span class="line">            &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">              &lt;el-button</span><br><span class="line">                type=&quot;primary&quot;</span><br><span class="line">                size=&quot;small&quot;</span><br><span class="line">                plain</span><br><span class="line">                @click=&quot;handleEdit(scope.row)&quot;</span><br><span class="line">                &gt;编辑&lt;/el-button</span><br><span class="line">              &gt;</span><br><span class="line">              &lt;el-button</span><br><span class="line">                type=&quot;danger&quot;</span><br><span class="line">                size=&quot;small&quot;</span><br><span class="line">                plain</span><br><span class="line">                @click=&quot;handleDelete(scope.row.id)&quot;</span><br><span class="line">                &gt;删除&lt;/el-button</span><br><span class="line">              &gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">          &lt;/el-table-column&gt;</span><br><span class="line">        &lt;/el-table&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot;&gt;</span><br><span class="line">      &lt;el-pagination</span><br><span class="line">        v-model:current-page=&quot;data.pageNum&quot;</span><br><span class="line">        v-model:page-size=&quot;data.pageSize&quot;</span><br><span class="line">        @current-change=&quot;handleCurrentChange&quot;</span><br><span class="line">        background</span><br><span class="line">        layout=&quot;prev, pager, next&quot;</span><br><span class="line">        :total=&quot;data.total&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;el-dialog width=&quot;35%&quot; v-model=&quot;data.formVisible&quot; title=&quot;课程信息&quot;&gt;</span><br><span class="line">      &lt;el-form</span><br><span class="line">        :model=&quot;data.form&quot;</span><br><span class="line">        label-width=&quot;100px&quot;</span><br><span class="line">        label-position=&quot;right&quot;</span><br><span class="line">        style=&quot;padding-right: 45px&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;el-form-item label=&quot;课程名称&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.name&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;课程编号&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.number&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;课程描述&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.description&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;课时&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.periods&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;任课教师&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.teacher&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">      &lt;/el-form&gt;</span><br><span class="line">      &lt;template #footer&gt;</span><br><span class="line">        &lt;span class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">          &lt;el-button @click=&quot;data.formVisible = false&quot; plain&gt;取消&lt;/el-button&gt;</span><br><span class="line">          &lt;el-button type=&quot;primary&quot; @click=&quot;save&quot; plain&gt;保存&lt;/el-button&gt;</span><br><span class="line">        &lt;/span&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line">    &lt;/el-dialog&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; reactive &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; Search &#125; from &quot;@element-plus/icons-vue&quot;;</span><br><span class="line">import request from &quot;@/utils/request&quot;;</span><br><span class="line">import &#123; ElMessage, ElMessageBox &#125; from &quot;element-plus&quot;;</span><br><span class="line">import router from &quot;@/router&quot;;</span><br><span class="line"></span><br><span class="line">const data = reactive(&#123;</span><br><span class="line">  name: &quot;&quot;,</span><br><span class="line">  number: &quot;&quot;,</span><br><span class="line">  teacher: &quot;&quot;,</span><br><span class="line">  tableData: [],</span><br><span class="line">  total: 0,</span><br><span class="line">  pageNum: 1,</span><br><span class="line">  pageSize: 5,</span><br><span class="line">  formVisible: false,</span><br><span class="line">  form: &#123;&#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const load = () =&gt; &#123;</span><br><span class="line">  request</span><br><span class="line">    .get(&quot;/course/selectPage&quot;, &#123;</span><br><span class="line">      params: &#123;</span><br><span class="line">        pageNum: data.pageNum,</span><br><span class="line">        pageSize: data.pageSize,</span><br><span class="line">        name: data.name,</span><br><span class="line">        number: data.number,</span><br><span class="line">        teacher: data.teacher,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">        data.tableData = res.data?.list || [];</span><br><span class="line">        data.total = res.data?.total || 0;</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        ElMessage.error(res.msg);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">        localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 加载一次 获取课程数据</span><br><span class="line">load();</span><br><span class="line"></span><br><span class="line">const handleCurrentChange = () =&gt; &#123;</span><br><span class="line">  // 当翻页的时候重新加载数据</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const reset = () =&gt; &#123;</span><br><span class="line">  data.name = &quot;&quot;;</span><br><span class="line">  data.number = &quot;&quot;;</span><br><span class="line">  data.teacher = &quot;&quot;;</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const handleAdd = () =&gt; &#123;</span><br><span class="line">  data.formVisible = true;</span><br><span class="line">  data.form = &#123;&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const save = () =&gt; &#123;</span><br><span class="line">  request</span><br><span class="line">    .request(&#123;</span><br><span class="line">      url: data.form.id ? &quot;/course/update&quot; : &quot;/course/add&quot;,</span><br><span class="line">      method: data.form.id ? &quot;put&quot; : &quot;post&quot;,</span><br><span class="line">      data: data.form,</span><br><span class="line">    &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">        ElMessage.success(&quot;操作成功&quot;);</span><br><span class="line">        data.formVisible = false;</span><br><span class="line">        load();</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        ElMessage.error(res.msg);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">        localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const handleEdit = (row) =&gt; &#123;</span><br><span class="line">  data.form = JSON.parse(JSON.stringify(row));</span><br><span class="line">  data.formVisible = true;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const handleDelete = (id) =&gt; &#123;</span><br><span class="line">  ElMessageBox.confirm(&quot;删除后内容将无法恢复，您确认删除嘛？&quot;, &quot;删除确认&quot;, &#123;</span><br><span class="line">    type: &quot;warning&quot;,</span><br><span class="line">  &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      request.delete(&quot;/course/delete/&quot; + id).then((res) =&gt; &#123;</span><br><span class="line">        if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">          ElMessage.success(&quot;删除成功&quot;);</span><br><span class="line">          load();</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          ElMessage.error(res.msg);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      if (err.response?.data?.code === &quot;401&quot;) &#123;</span><br><span class="line">        localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710445924935-211ab920-04f6-4bd6-ae07-b125be316f6b.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710445934776-e2d6aab9-287b-4cdd-be66-61b04249bb07.png"></p><h2 id="token-超时配置"><a href="#token-超时配置" class="headerlink" title="token 超时配置"></a>token 超时配置</h2><p>为了更便捷地配置 token 的超时时间，设置一下超时时间常量</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.config <span class="keyword">import</span> config</span><br><span class="line"></span><br><span class="line">HOST = config.env.get(<span class="string">&quot;HOST&quot;</span>)</span><br><span class="line">PORT = config.env.get(<span class="string">&quot;PORT&quot;</span>)</span><br><span class="line"></span><br><span class="line">MYSQL_DIALECT = config.env.get(<span class="string">&quot;MYSQL_DIALECT&quot;</span>)</span><br><span class="line">MYSQL_HOST = config.env.get(<span class="string">&quot;MYSQL_HOST&quot;</span>)</span><br><span class="line">MYSQL_PORT = config.env.get(<span class="string">&quot;MYSQL_PORT&quot;</span>)</span><br><span class="line">MYSQL_USER = config.env.get(<span class="string">&quot;MYSQL_USER&quot;</span>)</span><br><span class="line">MYSQL_PASSWORD = config.env.get(<span class="string">&quot;MYSQL_PASSWORD&quot;</span>)</span><br><span class="line">MYSQL_DATABASE = config.env.get(<span class="string">&quot;MYSQL_DATABASE&quot;</span>)</span><br><span class="line"></span><br><span class="line">TOKEN_EXPIRE_DAYS = <span class="number">7</span></span><br><span class="line">TOKEN_EXPIRE_MINUTES = <span class="number">0</span></span><br><span class="line">TOKEN_EXPIRE_SECONDS = <span class="number">0</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime, timedelta</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> jwt</span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> Security</span><br><span class="line"><span class="keyword">from</span> fastapi.security <span class="keyword">import</span> HTTPBearer, HTTPAuthorizationCredentials</span><br><span class="line"><span class="keyword">from</span> passlib.context <span class="keyword">import</span> CryptContext</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.constant <span class="keyword">import</span> TOKEN_EXPIRE_DAYS, TOKEN_EXPIRE_MINUTES, TOKEN_EXPIRE_SECONDS</span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> TokenException</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AuthHandler</span>:</span><br><span class="line">    security = HTTPBearer()</span><br><span class="line">    pwd_context = CryptContext(schemes=[<span class="string">&quot;bcrypt&quot;</span>], deprecated=<span class="string">&quot;auto&quot;</span>)</span><br><span class="line">    secret = <span class="string">&quot;SECRET&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_password_hash</span>(<span class="params">self, password</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.pwd_context.<span class="built_in">hash</span>(password)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">verify_password</span>(<span class="params">self, plain_password, hashed_password</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.pwd_context.verify(plain_password, hashed_password)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">encode_token</span>(<span class="params">self, user_id</span>):</span><br><span class="line">        payload = &#123;</span><br><span class="line">            <span class="string">&#x27;exp&#x27;</span>: datetime.utcnow() + timedelta(days=TOKEN_EXPIRE_DAYS, minutes=TOKEN_EXPIRE_MINUTES,</span><br><span class="line">                                                 seconds=TOKEN_EXPIRE_SECONDS),</span><br><span class="line">            <span class="string">&#x27;iat&#x27;</span>: datetime.utcnow(),</span><br><span class="line">            <span class="string">&#x27;sub&#x27;</span>: user_id</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> jwt.encode(</span><br><span class="line">            payload,</span><br><span class="line">            <span class="variable language_">self</span>.secret,</span><br><span class="line">            algorithm=<span class="string">&#x27;HS256&#x27;</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">decode_token</span>(<span class="params">self, token</span>):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            payload = jwt.decode(token, <span class="variable language_">self</span>.secret, algorithms=[<span class="string">&#x27;HS256&#x27;</span>])</span><br><span class="line">            <span class="keyword">return</span> payload[<span class="string">&#x27;sub&#x27;</span>]</span><br><span class="line">        <span class="keyword">except</span> jwt.ExpiredSignatureError:</span><br><span class="line">            <span class="keyword">raise</span> TokenException(<span class="string">&quot;token过期&quot;</span>)</span><br><span class="line">        <span class="keyword">except</span> jwt.InvalidTokenError:</span><br><span class="line">            <span class="keyword">raise</span> TokenException(<span class="string">&quot;无效token&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">auth_required</span>(<span class="params">self, auth: HTTPAuthorizationCredentials = Security(<span class="params">security</span>)</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.decode_token(auth.credentials)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">auth_handler = AuthHandler()</span><br></pre></td></tr></table></figure><hr><blockquote><p>更新: 2024-05-03 21:07:51<br>原文: <a href="https://www.yuque.com/zacharyblock/iacda/po1gqzqal77c94sl">https://www.yuque.com/zacharyblock/iacda/po1gqzqal77c94sl</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> FastAPI入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Vue3 </tag>
            
            <tag> FastAPI </tag>
            
            <tag> 实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FastAPI入门-课程管理</title>
      <link href="/2024/05/03/FastAPI%E5%85%A5%E9%97%A8/%E8%AF%BE%E7%A8%8B%E7%AE%A1%E7%90%86/"/>
      <url>/2024/05/03/FastAPI%E5%85%A5%E9%97%A8/%E8%AF%BE%E7%A8%8B%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="课程管理"><a href="#课程管理" class="headerlink" title="课程管理"></a>课程管理</h1><p>接下来开发一个课程管理功能，用于管理和显示学生课程的</p><h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><p>先设计一下课程数据表，命名为 course，字段（课程名称、课程编号、课程描述、课时、任课老师）</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710344223757-045d4a5b-3901-4683-a2e6-b30d7fe489b8.png"></p><h2 id="课程页面"><a href="#课程页面" class="headerlink" title="课程页面"></a>课程页面</h2><p>在前端的项目目录下的<code>/manage</code>下创建一个<code>Course.vue</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        style=&quot;width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.name&quot;</span><br><span class="line">        placeholder=&quot;请输入要查询的课程名称&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-button type=&quot;primary&quot; style=&quot;margin: 0 0 0 10px&quot; plain</span><br><span class="line">        &gt;查询&lt;/el-button</span><br><span class="line">      &gt;</span><br><span class="line">      &lt;el-button type=&quot;info&quot; plain&gt;重置&lt;/el-button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-button type=&quot;primary&quot; style=&quot;margin-bottom: 5px&quot; plain</span><br><span class="line">          &gt;新增&lt;/el-button</span><br><span class="line">        &gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-table :data=&quot;data.tableData&quot; stripe style=&quot;width: 100%&quot;&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;id&quot; label=&quot;ID&quot; width=&quot;80&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;name&quot; label=&quot;课程名称&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;number&quot; label=&quot;课程编号&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;description&quot; label=&quot;课程描述&quot; width=&quot;240&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;periods&quot; label=&quot;课时&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;teacher&quot; label=&quot;任课教师&quot; /&gt;</span><br><span class="line">          &lt;el-table-column label=&quot;操作&quot; align=&quot;center&quot;&gt;</span><br><span class="line">            &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">              &lt;el-button type=&quot;primary&quot; size=&quot;small&quot; plain&gt;编辑&lt;/el-button&gt;</span><br><span class="line">              &lt;el-button type=&quot;danger&quot; size=&quot;small&quot; plain&gt;删除&lt;/el-button&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">          &lt;/el-table-column&gt;</span><br><span class="line">        &lt;/el-table&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot;&gt;</span><br><span class="line">      &lt;el-pagination background layout=&quot;prev, pager, next&quot; :total=&quot;1000&quot; /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; reactive &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; Search &#125; from &quot;@element-plus/icons-vue&quot;;</span><br><span class="line"></span><br><span class="line">const data = reactive(&#123;</span><br><span class="line">  name: &quot;&quot;,</span><br><span class="line">  tableData: [</span><br><span class="line">    &#123;</span><br><span class="line">      id: 1,</span><br><span class="line">      name: &quot;大学英语&quot;,</span><br><span class="line">      number: &quot;001&quot;,</span><br><span class="line">      description: &quot;大学英语不想学-6学分&quot;,</span><br><span class="line">      periods: &quot;36课时&quot;,</span><br><span class="line">      teacher: &quot;张三&quot;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      id: 2,</span><br><span class="line">      name: &quot;高等数学&quot;,</span><br><span class="line">      number: &quot;002&quot;,</span><br><span class="line">      description: &quot;高等数学好难学-4学分&quot;,</span><br><span class="line">      periods: &quot;24课时&quot;,</span><br><span class="line">      teacher: &quot;李四&quot;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      id: 3,</span><br><span class="line">      name: &quot;必修物理&quot;,</span><br><span class="line">      number: &quot;003&quot;,</span><br><span class="line">      description: &quot;必修物理有难度-2学分&quot;,</span><br><span class="line">      periods: &quot;24课时&quot;,</span><br><span class="line">      teacher: &quot;王五&quot;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      id: 4,</span><br><span class="line">      name: &quot;思想政治&quot;,</span><br><span class="line">      number: &quot;004&quot;,</span><br><span class="line">      description: &quot;思想政治必修课-4学分&quot;,</span><br><span class="line">      periods: &quot;18课时&quot;,</span><br><span class="line">      teacher: &quot;赵六&quot;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      id: 5,</span><br><span class="line">      name: &quot;微机原理&quot;,</span><br><span class="line">      number: &quot;005&quot;,</span><br><span class="line">      description: &quot;微机原理很基础-3学分&quot;,</span><br><span class="line">      periods: &quot;24课时&quot;,</span><br><span class="line">      teacher: &quot;钱七&quot;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      id: 6,</span><br><span class="line">      name: &quot;通信原理&quot;,</span><br><span class="line">      number: &quot;006&quot;,</span><br><span class="line">      description: &quot;通信原理很难懂-4学分&quot;,</span><br><span class="line">      periods: &quot;24课时&quot;,</span><br><span class="line">      teacher: &quot;孙八&quot;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      id: 7,</span><br><span class="line">      name: &quot;离散数学&quot;,</span><br><span class="line">      number: &quot;007&quot;,</span><br><span class="line">      description: &quot;离散数学很离散-2学分&quot;,</span><br><span class="line">      periods: &quot;18课时&quot;,</span><br><span class="line">      teacher: &quot;周九&quot;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      id: 8,</span><br><span class="line">      name: &quot;工程制图&quot;,</span><br><span class="line">      number: &quot;008&quot;,</span><br><span class="line">      description: &quot;工程制图好有趣-3学分&quot;,</span><br><span class="line">      periods: &quot;24课时&quot;,</span><br><span class="line">      teacher: &quot;吴十&quot;,</span><br><span class="line">    &#125;,</span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHistory &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">history</span>: <span class="title function_">createWebHistory</span>(<span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">env</span>.<span class="property">BASE_URL</span>),</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;Manager&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/Manager.vue&quot;</span>),</span><br><span class="line">      <span class="attr">redirect</span>: <span class="string">&quot;/home&quot;</span>,</span><br><span class="line">      <span class="attr">children</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;home&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Home&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Home.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;course&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Course&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Course.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">      ],</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/login&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;Login&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/Login.vue&quot;</span>),</span><br><span class="line">    &#125;,</span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">beforeEach</span>(<span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> requiresAuth = to.<span class="property">matched</span>.<span class="title function_">some</span>(<span class="function">(<span class="params">record</span>) =&gt;</span> record.<span class="property">meta</span>.<span class="property">requiresAuth</span>);</span><br><span class="line">  <span class="keyword">const</span> user = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;student-user&quot;</span>));</span><br><span class="line">  <span class="keyword">if</span> (requiresAuth &amp;&amp; !user) &#123;</span><br><span class="line">    <span class="comment">// 如果目标路由需要认证,并且用户未登录</span></span><br><span class="line">    <span class="title function_">next</span>(<span class="string">&quot;/login&quot;</span>); <span class="comment">// 跳转到登录页面</span></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">next</span>(); <span class="comment">// 如果目标路由不需要认证,或者用户已登录,则正常导航到目标路由</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div</span><br><span class="line">      style=&quot;height: 60px; background-color: #eae8e8; display: flex; align-items: center; border-bottom: 1px solid #c4c2c2&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;div style=&quot;flex: 1&quot;&gt;</span><br><span class="line">        &lt;div style=&quot;padding-left: 20px; display: flex; align-items: center&quot;&gt;</span><br><span class="line">          &lt;img src=&quot;@/assets/imgs/logo.png&quot; alt=&quot;&quot; style=&quot;width: 40px&quot; /&gt;</span><br><span class="line">          &lt;div style=&quot;font-weight: bold; font-size: 24px; margin-left: 5px&quot;&gt;</span><br><span class="line">            学生信息管理系统</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        style=&quot;width: fit-content; padding-right: 10px; display: flex; align-items: center;&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;img</span><br><span class="line">          src=&quot;https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png&quot;</span><br><span class="line">          alt=&quot;&quot;</span><br><span class="line">          style=&quot;width: 40px; height: 40px&quot;</span><br><span class="line">        /&gt;</span><br><span class="line">        &lt;span style=&quot;margin-left: 5px&quot;&gt;管理员&lt;/span&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div style=&quot;display: flex&quot;&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        style=&quot;width: 200px; border-right: 1px solid #f3eeee; min-height: calc(100vh - 60px)&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;el-menu</span><br><span class="line">          router</span><br><span class="line">          style=&quot;border: none&quot;</span><br><span class="line">          :default-active=&quot;$route.path&quot;</span><br><span class="line">          :default-openeds=&quot;[&#x27;/home&#x27;, &#x27;2&#x27;]&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          &lt;el-menu-item index=&quot;/home&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;</span><br><span class="line">              &lt;HomeFilled /&gt;</span><br><span class="line">            &lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;系统首页&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line"></span><br><span class="line">          &lt;el-sub-menu index=&quot;2&quot;&gt;</span><br><span class="line">            &lt;template #title&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;Memo /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;课程管理&lt;/span&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">            &lt;el-menu-item index=&quot;/course&quot;&gt;</span><br><span class="line">              &lt;el-icon&gt;</span><br><span class="line">                &lt;Document /&gt;</span><br><span class="line">              &lt;/el-icon&gt;</span><br><span class="line">              &lt;span&gt;课程信息&lt;/span&gt;</span><br><span class="line">            &lt;/el-menu-item&gt;</span><br><span class="line">          &lt;/el-sub-menu&gt;</span><br><span class="line"></span><br><span class="line">          &lt;el-menu-item index=&quot;/person&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;</span><br><span class="line">              &lt;User /&gt;</span><br><span class="line">            &lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;个人资料&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line">          &lt;el-menu-item index=&quot;/login&quot; @click=&quot;logout&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;</span><br><span class="line">              &lt;SwitchButton /&gt;</span><br><span class="line">            &lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;退出系统&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line">        &lt;/el-menu&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">      &lt;div style=&quot;flex: 1; width: 0; background-color: #eaeaee; padding: 10px&quot;&gt;</span><br><span class="line">        &lt;router-view /&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; useRoute &#125; from &quot;vue-router&quot;;</span><br><span class="line"></span><br><span class="line">const $route = useRoute();</span><br><span class="line">console.log($route.path);</span><br><span class="line"></span><br><span class="line">const logout = () =&gt; &#123;</span><br><span class="line">  localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.el-menu-item.is-active &#123;</span><br><span class="line">  background-color: #c3d7d3 !important;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.el-menu-item:hover &#123;</span><br><span class="line">  color: #0c98d5;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">:deep(th) &#123;</span><br><span class="line">  color: #333;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710345904561-545c4764-d0b5-40d6-85ce-e80b94fbaf5a.png"></p><h2 id="课程查询-api"><a href="#课程查询-api" class="headerlink" title="课程查询 api"></a>课程查询 api</h2><h3 id="Course-实体类定义"><a href="#Course-实体类定义" class="headerlink" title="Course 实体类定义"></a>Course 实体类定义</h3><p>在项目目录<code>/model</code>下创建一个<code>course.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> Integer, String</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> Mapped, mapped_column</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Base</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Course</span>(<span class="title class_ inherited__">Base</span>):</span><br><span class="line">    __tablename__ = <span class="string">&quot;course&quot;</span></span><br><span class="line">    <span class="built_in">id</span>: Mapped[<span class="built_in">int</span>] = mapped_column(Integer, primary_key=<span class="literal">True</span>, nullable=<span class="literal">False</span>)</span><br><span class="line">    name: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    number: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    description: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    periods: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    teacher: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="课程管理-Api-接口"><a href="#课程管理-Api-接口" class="headerlink" title="课程管理 Api 接口"></a>课程管理 Api 接口</h3><h4 id="courseApi"><a href="#courseApi" class="headerlink" title="courseApi"></a>courseApi</h4><p>在项目目录<code>/api</code>下创建一个<code>courseApi.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> APIRouter, Query, Depends</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> common.pageHelper <span class="keyword">import</span> PageHelper</span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> ResultModel, Result</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session, get_db_session</span><br><span class="line"><span class="keyword">from</span> service.courseService <span class="keyword">import</span> CourseService</span><br><span class="line"></span><br><span class="line">course_router = APIRouter(prefix=<span class="string">&quot;/course&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@course_router.get(<span class="params"><span class="string">&quot;/selectPage&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">select_page</span>(<span class="params">page: <span class="built_in">int</span> = Query(<span class="params"><span class="number">1</span>, ge=<span class="number">1</span>, alias=<span class="string">&quot;pageNum&quot;</span>, description=<span class="string">&quot;Page number&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      size: <span class="built_in">int</span> = Query(<span class="params"><span class="number">5</span>, gt=<span class="number">0</span>, le=<span class="number">100</span>, alias=<span class="string">&quot;pageSize&quot;</span>, description=<span class="string">&quot;Page size&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    pageInfo = PageHelper.startPage(page, size)</span><br><span class="line">    course_list = CourseService.select_page(db_session)</span><br><span class="line">    result = Result.success(pageInfo.of(course_list))</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.include_router(course_router)</span><br></pre></td></tr></table></figure><p>需要在<code>/api/__init__.py</code>下增加 courseApi</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> FastAPI</span><br><span class="line"><span class="keyword">from</span> starlette.middleware.cors <span class="keyword">import</span> CORSMiddleware</span><br><span class="line"></span><br><span class="line">app = FastAPI()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 跨域问题</span></span><br><span class="line">origins = [<span class="string">&quot;http://localhost:5173&quot;</span>, <span class="string">&quot;http://127.0.0.1:5173&quot;</span>]  <span class="comment"># 替换为你的前端应用的实际地址</span></span><br><span class="line"></span><br><span class="line">app.add_middleware(</span><br><span class="line">    CORSMiddleware,</span><br><span class="line">    allow_origins=origins,  <span class="comment"># 允许跨域访问的来源域名列表</span></span><br><span class="line">    allow_credentials=<span class="literal">True</span>,  <span class="comment"># 是否允许携带cookie</span></span><br><span class="line">    allow_methods=[<span class="string">&quot;*&quot;</span>],  <span class="comment"># 允许的方法，默认包含常见的GET、POST等，&quot;*&quot;表示所有方法</span></span><br><span class="line">    allow_headers=[<span class="string">&quot;*&quot;</span>],  <span class="comment"># 允许的请求头，默认包含常见的Content-Type等，&quot;*&quot;表示所有请求头</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> adminApi, exceptionHandler, courseApi</span><br></pre></td></tr></table></figure><h4 id="courseService"><a href="#courseService" class="headerlink" title="courseService"></a>courseService</h4><p>在项目目录<code>/service</code>下创建一个<code>courseService.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> desc, select</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session</span><br><span class="line"><span class="keyword">from</span> model.course <span class="keyword">import</span> Course</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseService</span>:</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">select_page</span>(<span class="params">db_session: Session</span>):</span><br><span class="line">        query = select(Course).order_by(desc(Course.<span class="built_in">id</span>))</span><br><span class="line">        result = db_session.execute(query).scalars().<span class="built_in">all</span>()</span><br><span class="line">        <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><h4 id="分页插件"><a href="#分页插件" class="headerlink" title="分页插件"></a>分页插件</h4><p>在项目路径的<code>/common</code>下创建一个<code>pageHelper.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi.encoders <span class="keyword">import</span> jsonable_encoder</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Page</span>:</span><br><span class="line">    <span class="built_in">list</span>: <span class="built_in">list</span></span><br><span class="line">    total: <span class="built_in">int</span></span><br><span class="line">    pageNum: <span class="built_in">int</span></span><br><span class="line">    pageSize: <span class="built_in">int</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, <span class="built_in">list</span>: <span class="built_in">list</span>, total: <span class="built_in">int</span>, pageNum: <span class="built_in">int</span>, pageSize: <span class="built_in">int</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.<span class="built_in">list</span> = <span class="built_in">list</span></span><br><span class="line">        <span class="variable language_">self</span>.total = total</span><br><span class="line">        <span class="variable language_">self</span>.pageNum = pageNum</span><br><span class="line">        <span class="variable language_">self</span>.pageSize = pageSize</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PageHelper</span>:</span><br><span class="line">    page: <span class="built_in">int</span></span><br><span class="line">    size: <span class="built_in">int</span></span><br><span class="line">    limit: <span class="built_in">int</span></span><br><span class="line">    offset: <span class="built_in">int</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, page: <span class="built_in">int</span>, size: <span class="built_in">int</span>, limit: <span class="built_in">int</span>, offset: <span class="built_in">int</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.page = page</span><br><span class="line">        <span class="variable language_">self</span>.size = size</span><br><span class="line">        <span class="variable language_">self</span>.limit = limit</span><br><span class="line">        <span class="variable language_">self</span>.offset = offset</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">startPage</span>(<span class="params">cls, page: <span class="built_in">int</span>, size: <span class="built_in">int</span></span>):</span><br><span class="line">        limit = size</span><br><span class="line">        offset = size * (page - <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> cls(page, size, limit, offset)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">of</span>(<span class="params">self, data</span>):</span><br><span class="line">        data_list = [jsonable_encoder(dataitem) <span class="keyword">for</span> dataitem <span class="keyword">in</span> data[<span class="variable language_">self</span>.offset:<span class="variable language_">self</span>.offset + <span class="variable language_">self</span>.limit]]</span><br><span class="line">        data_total = <span class="built_in">len</span>(data)</span><br><span class="line">        page = Page(data_list, data_total, <span class="variable language_">self</span>.page, <span class="variable language_">self</span>.size)</span><br><span class="line">        <span class="keyword">return</span> jsonable_encoder(page)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710348643107-29bbfdfb-d10f-4c85-b147-83ff95950f89.png"></p><p>可以发现，请求是成功的，但就是没数据，因为数据库里面是空的，给数据库中插入数据</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710348776973-d6ed84e3-0822-4b77-aa5a-36160f5b9d8a.png"></p><p>再次使用 postman 测试一下</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710348855186-37b36339-051a-4ee2-bbad-c131429d1dd9.png"></p><h2 id="增删查改实现"><a href="#增删查改实现" class="headerlink" title="增删查改实现"></a>增删查改实现</h2><h3 id="数据分页"><a href="#数据分页" class="headerlink" title="数据分页"></a>数据分页</h3><p>前端这块需要调用分页查询的请求接口，并将结果显示出来</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        style=&quot;width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.name&quot;</span><br><span class="line">        placeholder=&quot;请输入要查询的课程名称&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-button type=&quot;primary&quot; style=&quot;margin: 0 0 0 10px&quot; plain</span><br><span class="line">        &gt;查询&lt;/el-button</span><br><span class="line">      &gt;</span><br><span class="line">      &lt;el-button type=&quot;info&quot; plain&gt;重置&lt;/el-button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-button type=&quot;primary&quot; style=&quot;margin-bottom: 5px&quot; plain</span><br><span class="line">          &gt;新增&lt;/el-button</span><br><span class="line">        &gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-table :data=&quot;data.tableData&quot; stripe style=&quot;width: 100%&quot;&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;id&quot; label=&quot;ID&quot; width=&quot;80&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;name&quot; label=&quot;课程名称&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;number&quot; label=&quot;课程编号&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;description&quot; label=&quot;课程描述&quot; width=&quot;240&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;periods&quot; label=&quot;课时&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;teacher&quot; label=&quot;任课教师&quot; /&gt;</span><br><span class="line">          &lt;el-table-column label=&quot;操作&quot; align=&quot;center&quot;&gt;</span><br><span class="line">            &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">              &lt;el-button type=&quot;primary&quot; size=&quot;small&quot; plain&gt;编辑&lt;/el-button&gt;</span><br><span class="line">              &lt;el-button type=&quot;danger&quot; size=&quot;small&quot; plain&gt;删除&lt;/el-button&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">          &lt;/el-table-column&gt;</span><br><span class="line">        &lt;/el-table&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot;&gt;</span><br><span class="line">      &lt;el-pagination</span><br><span class="line">        background</span><br><span class="line">        layout=&quot;prev, pager, next&quot;</span><br><span class="line">        :total=&quot;data.total&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; reactive &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; Search &#125; from &quot;@element-plus/icons-vue&quot;;</span><br><span class="line">import request from &quot;@/utils/request&quot;;</span><br><span class="line"></span><br><span class="line">const data = reactive(&#123;</span><br><span class="line">  name: &quot;&quot;,</span><br><span class="line">  tableData: [],</span><br><span class="line">  total: 0,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const load = () =&gt; &#123;</span><br><span class="line">  request</span><br><span class="line">    .get(&quot;/course/selectPage&quot;, &#123;</span><br><span class="line">      params: &#123;</span><br><span class="line">        pageNum: 1,</span><br><span class="line">        pageSize: 5,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      data.tableData = res.data?.list || [];</span><br><span class="line">      data.total = res.data?.total || 0;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 加载一次 获取课程数据</span><br><span class="line">load();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710350328830-b3e6c9a9-134a-417b-9cac-679a67ca7b5e.png"></p><p>虽然可以显示一部分数据，但是这个换页有问题，不显示后续跳转的页面按钮</p><p>需要绑定一下这两个值</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710350466618-783bd600-76cf-4fc5-8f7e-416b946783af.png"></p><p>同时还需要，在换了页面之后也重新刷新一下数据，触发 current-change</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710350803714-c97f58de-c82c-4148-a218-fbee9b491178.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        style=&quot;width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.name&quot;</span><br><span class="line">        placeholder=&quot;请输入要查询的课程名称&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-button type=&quot;primary&quot; style=&quot;margin: 0 0 0 10px&quot; plain</span><br><span class="line">        &gt;查询&lt;/el-button</span><br><span class="line">      &gt;</span><br><span class="line">      &lt;el-button type=&quot;info&quot; plain&gt;重置&lt;/el-button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-button type=&quot;primary&quot; style=&quot;margin-bottom: 5px&quot; plain</span><br><span class="line">          &gt;新增&lt;/el-button</span><br><span class="line">        &gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-table :data=&quot;data.tableData&quot; stripe style=&quot;width: 100%&quot;&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;id&quot; label=&quot;ID&quot; width=&quot;80&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;name&quot; label=&quot;课程名称&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;number&quot; label=&quot;课程编号&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;description&quot; label=&quot;课程描述&quot; width=&quot;240&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;periods&quot; label=&quot;课时&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;teacher&quot; label=&quot;任课教师&quot; /&gt;</span><br><span class="line">          &lt;el-table-column label=&quot;操作&quot; align=&quot;center&quot;&gt;</span><br><span class="line">            &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">              &lt;el-button type=&quot;primary&quot; size=&quot;small&quot; plain&gt;编辑&lt;/el-button&gt;</span><br><span class="line">              &lt;el-button type=&quot;danger&quot; size=&quot;small&quot; plain&gt;删除&lt;/el-button&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">          &lt;/el-table-column&gt;</span><br><span class="line">        &lt;/el-table&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot;&gt;</span><br><span class="line">      &lt;el-pagination</span><br><span class="line">        v-model:current-page=&quot;data.pageNum&quot;</span><br><span class="line">        v-model:page-size=&quot;data.pageSize&quot;</span><br><span class="line">        @current-change=&quot;handleCurrentChange&quot;</span><br><span class="line">        background</span><br><span class="line">        layout=&quot;prev, pager, next&quot;</span><br><span class="line">        :total=&quot;data.total&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; reactive &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; Search &#125; from &quot;@element-plus/icons-vue&quot;;</span><br><span class="line">import request from &quot;@/utils/request&quot;;</span><br><span class="line"></span><br><span class="line">const data = reactive(&#123;</span><br><span class="line">  name: &quot;&quot;,</span><br><span class="line">  tableData: [],</span><br><span class="line">  total: 0,</span><br><span class="line">  pageNum: 1,</span><br><span class="line">  pageSize: 5,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const load = () =&gt; &#123;</span><br><span class="line">  request</span><br><span class="line">    .get(&quot;/course/selectPage&quot;, &#123;</span><br><span class="line">      params: &#123;</span><br><span class="line">        pageNum: data.pageNum,</span><br><span class="line">        pageSize: data.pageSize,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      data.tableData = res.data?.list || [];</span><br><span class="line">      data.total = res.data?.total || 0;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 加载一次 获取课程数据</span><br><span class="line">load();</span><br><span class="line"></span><br><span class="line">const handleCurrentChange = () =&gt; &#123;</span><br><span class="line">  // 当翻页的时候重新加载数据</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710350849051-ebf1ebe5-e160-456f-8c6c-52fb710cf57f.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710350855737-b858fd91-310f-4d67-97a7-fe92f984c359.png"></p><p>分页成功实现了</p><h3 id="查询和重置"><a href="#查询和重置" class="headerlink" title="查询和重置"></a>查询和重置</h3><p>为了依据课程名称实现筛查的功能，需要传递一个<code>name</code>字段传给后端进行数据库层面的模糊查询</p><p>重置按钮要将查询的内容清空，同时显示回完整的数据</p><h4 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.name&quot;</span><br><span class="line">        placeholder=&quot;请输入要查询的课程名称&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-button type=&quot;info&quot; plain style=&quot;margin: 0 0 0 10px&quot; @click=&quot;reset&quot;</span><br><span class="line">        &gt;重置&lt;/el-button</span><br><span class="line">      &gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-button type=&quot;primary&quot; style=&quot;margin-bottom: 5px&quot; plain</span><br><span class="line">          &gt;新增&lt;/el-button</span><br><span class="line">        &gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-table :data=&quot;data.tableData&quot; stripe style=&quot;width: 100%&quot;&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;id&quot; label=&quot;ID&quot; width=&quot;80&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;name&quot; label=&quot;课程名称&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;number&quot; label=&quot;课程编号&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;description&quot; label=&quot;课程描述&quot; width=&quot;240&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;periods&quot; label=&quot;课时&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;teacher&quot; label=&quot;任课教师&quot; /&gt;</span><br><span class="line">          &lt;el-table-column label=&quot;操作&quot; align=&quot;center&quot;&gt;</span><br><span class="line">            &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">              &lt;el-button type=&quot;primary&quot; size=&quot;small&quot; plain&gt;编辑&lt;/el-button&gt;</span><br><span class="line">              &lt;el-button type=&quot;danger&quot; size=&quot;small&quot; plain&gt;删除&lt;/el-button&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">          &lt;/el-table-column&gt;</span><br><span class="line">        &lt;/el-table&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot;&gt;</span><br><span class="line">      &lt;el-pagination</span><br><span class="line">        v-model:current-page=&quot;data.pageNum&quot;</span><br><span class="line">        v-model:page-size=&quot;data.pageSize&quot;</span><br><span class="line">        @current-change=&quot;handleCurrentChange&quot;</span><br><span class="line">        background</span><br><span class="line">        layout=&quot;prev, pager, next&quot;</span><br><span class="line">        :total=&quot;data.total&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; reactive &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; Search &#125; from &quot;@element-plus/icons-vue&quot;;</span><br><span class="line">import request from &quot;@/utils/request&quot;;</span><br><span class="line"></span><br><span class="line">const data = reactive(&#123;</span><br><span class="line">  name: &quot;&quot;,</span><br><span class="line">  tableData: [],</span><br><span class="line">  total: 0,</span><br><span class="line">  pageNum: 1,</span><br><span class="line">  pageSize: 5,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const load = () =&gt; &#123;</span><br><span class="line">  request</span><br><span class="line">    .get(&quot;/course/selectPage&quot;, &#123;</span><br><span class="line">      params: &#123;</span><br><span class="line">        pageNum: data.pageNum,</span><br><span class="line">        pageSize: data.pageSize,</span><br><span class="line">        name: data.name,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      data.tableData = res.data?.list || [];</span><br><span class="line">      data.total = res.data?.total || 0;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 加载一次 获取课程数据</span><br><span class="line">load();</span><br><span class="line"></span><br><span class="line">const handleCurrentChange = () =&gt; &#123;</span><br><span class="line">  // 当翻页的时候重新加载数据</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const reset = () =&gt; &#123;</span><br><span class="line">  data.name = &quot;&quot;;</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Optional</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> APIRouter, Query, Depends</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> common.pageHelper <span class="keyword">import</span> PageHelper</span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> ResultModel, Result</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session, get_db_session</span><br><span class="line"><span class="keyword">from</span> service.courseService <span class="keyword">import</span> CourseService</span><br><span class="line"></span><br><span class="line">course_router = APIRouter(prefix=<span class="string">&quot;/course&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@course_router.get(<span class="params"><span class="string">&quot;/selectPage&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">select_page</span>(<span class="params">page: <span class="built_in">int</span> = Query(<span class="params"><span class="number">1</span>, ge=<span class="number">1</span>, alias=<span class="string">&quot;pageNum&quot;</span>, description=<span class="string">&quot;Page number&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      size: <span class="built_in">int</span> = Query(<span class="params"><span class="number">5</span>, gt=<span class="number">0</span>, le=<span class="number">100</span>, alias=<span class="string">&quot;pageSize&quot;</span>, description=<span class="string">&quot;Page size&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      name: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Course name&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    pageInfo = PageHelper.startPage(page, size)</span><br><span class="line">    course_list = CourseService.select_page(name, db_session)</span><br><span class="line">    result = Result.success(pageInfo.of(course_list))</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.include_router(course_router)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> desc, select</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session</span><br><span class="line"><span class="keyword">from</span> model.course <span class="keyword">import</span> Course</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseService</span>:</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">select_page</span>(<span class="params">name, db_session: Session</span>):</span><br><span class="line">        query = select(Course).order_by(desc(Course.<span class="built_in">id</span>))</span><br><span class="line">        <span class="keyword">if</span> name:</span><br><span class="line">            query = query.where(Course.name.like(<span class="string">f&quot;%<span class="subst">&#123;name&#125;</span>%&quot;</span>))</span><br><span class="line">        result = db_session.execute(query).scalars().<span class="built_in">all</span>()</span><br><span class="line">        <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><h4 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h4><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710351673810-56f5faca-7e70-48c0-b9cf-c52d7b1256b9.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710351685682-0cbf7f2e-530d-48c0-bb1b-5d5b910848e6.png"></p><h3 id="查询扩展"><a href="#查询扩展" class="headerlink" title="查询扩展"></a>查询扩展</h3><p>当需要筛选的字段不只是<code>课程名称</code>时，需要怎么处理；比如加上<code>课程编号</code>、<code>任课教师</code>进行多条件模糊查询</p><h4 id="前端-1"><a href="#前端-1" class="headerlink" title="前端"></a>前端</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.name&quot;</span><br><span class="line">        placeholder=&quot;请输入要查询的课程名称&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;margin-left:10px; width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.number&quot;</span><br><span class="line">        placeholder=&quot;请输入课程编号&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;margin-left:10px; width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.teacher&quot;</span><br><span class="line">        placeholder=&quot;请输入任课老师&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-button type=&quot;info&quot; plain style=&quot;margin: 0 0 0 10px&quot; @click=&quot;reset&quot;</span><br><span class="line">        &gt;重置&lt;/el-button</span><br><span class="line">      &gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-button type=&quot;primary&quot; style=&quot;margin-bottom: 5px&quot; plain</span><br><span class="line">          &gt;新增&lt;/el-button</span><br><span class="line">        &gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-table :data=&quot;data.tableData&quot; stripe style=&quot;width: 100%&quot;&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;id&quot; label=&quot;ID&quot; width=&quot;80&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;name&quot; label=&quot;课程名称&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;number&quot; label=&quot;课程编号&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;description&quot; label=&quot;课程描述&quot; width=&quot;240&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;periods&quot; label=&quot;课时&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;teacher&quot; label=&quot;任课教师&quot; /&gt;</span><br><span class="line">          &lt;el-table-column label=&quot;操作&quot; align=&quot;center&quot;&gt;</span><br><span class="line">            &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">              &lt;el-button type=&quot;primary&quot; size=&quot;small&quot; plain&gt;编辑&lt;/el-button&gt;</span><br><span class="line">              &lt;el-button type=&quot;danger&quot; size=&quot;small&quot; plain&gt;删除&lt;/el-button&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">          &lt;/el-table-column&gt;</span><br><span class="line">        &lt;/el-table&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot;&gt;</span><br><span class="line">      &lt;el-pagination</span><br><span class="line">        v-model:current-page=&quot;data.pageNum&quot;</span><br><span class="line">        v-model:page-size=&quot;data.pageSize&quot;</span><br><span class="line">        @current-change=&quot;handleCurrentChange&quot;</span><br><span class="line">        background</span><br><span class="line">        layout=&quot;prev, pager, next&quot;</span><br><span class="line">        :total=&quot;data.total&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; reactive &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; Search &#125; from &quot;@element-plus/icons-vue&quot;;</span><br><span class="line">import request from &quot;@/utils/request&quot;;</span><br><span class="line"></span><br><span class="line">const data = reactive(&#123;</span><br><span class="line">  name: &quot;&quot;,</span><br><span class="line">  number: &quot;&quot;,</span><br><span class="line">  teacher: &quot;&quot;,</span><br><span class="line">  tableData: [],</span><br><span class="line">  total: 0,</span><br><span class="line">  pageNum: 1,</span><br><span class="line">  pageSize: 5,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const load = () =&gt; &#123;</span><br><span class="line">  request</span><br><span class="line">    .get(&quot;/course/selectPage&quot;, &#123;</span><br><span class="line">      params: &#123;</span><br><span class="line">        pageNum: data.pageNum,</span><br><span class="line">        pageSize: data.pageSize,</span><br><span class="line">        name: data.name,</span><br><span class="line">        number: data.number,</span><br><span class="line">        teacher: data.teacher,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      data.tableData = res.data?.list || [];</span><br><span class="line">      data.total = res.data?.total || 0;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 加载一次 获取课程数据</span><br><span class="line">load();</span><br><span class="line"></span><br><span class="line">const handleCurrentChange = () =&gt; &#123;</span><br><span class="line">  // 当翻页的时候重新加载数据</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const reset = () =&gt; &#123;</span><br><span class="line">  data.name = &quot;&quot;;</span><br><span class="line">  data.number = &quot;&quot;;</span><br><span class="line">  data.teacher = &quot;&quot;;</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="后端-1"><a href="#后端-1" class="headerlink" title="后端"></a>后端</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Optional</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> APIRouter, Query, Depends</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> common.pageHelper <span class="keyword">import</span> PageHelper</span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> ResultModel, Result</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session, get_db_session</span><br><span class="line"><span class="keyword">from</span> model.course <span class="keyword">import</span> Course, CourseSearch</span><br><span class="line"><span class="keyword">from</span> service.courseService <span class="keyword">import</span> CourseService</span><br><span class="line"></span><br><span class="line">course_router = APIRouter(prefix=<span class="string">&quot;/course&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@course_router.get(<span class="params"><span class="string">&quot;/selectPage&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">select_page</span>(<span class="params">page: <span class="built_in">int</span> = Query(<span class="params"><span class="number">1</span>, ge=<span class="number">1</span>, alias=<span class="string">&quot;pageNum&quot;</span>, description=<span class="string">&quot;Page number&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      size: <span class="built_in">int</span> = Query(<span class="params"><span class="number">5</span>, gt=<span class="number">0</span>, le=<span class="number">100</span>, alias=<span class="string">&quot;pageSize&quot;</span>, description=<span class="string">&quot;Page size&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      name: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Course name&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      number: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Course number&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      teacher: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Course teacher&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    pageInfo = PageHelper.startPage(page, size)</span><br><span class="line">    course_search = CourseSearch(name=name, number=number, teacher=teacher)</span><br><span class="line">    course_list = CourseService.select_page(course_search, db_session)</span><br><span class="line">    result = Result.success(pageInfo.of(course_list))</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.include_router(course_router)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> desc, select</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session</span><br><span class="line"><span class="keyword">from</span> model.course <span class="keyword">import</span> Course, CourseSearch</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseService</span>:</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">select_page</span>(<span class="params">course_search: CourseSearch, db_session: Session</span>):</span><br><span class="line">        query = select(Course).order_by(desc(Course.<span class="built_in">id</span>))</span><br><span class="line">        <span class="keyword">if</span> course_search.name:</span><br><span class="line">            query = query.where(Course.name.like(<span class="string">f&quot;%<span class="subst">&#123;course_search.name&#125;</span>%&quot;</span>))</span><br><span class="line">        <span class="keyword">if</span> course_search.number:</span><br><span class="line">            query = query.where(Course.number.like(<span class="string">f&quot;%<span class="subst">&#123;course_search.number&#125;</span>%&quot;</span>))</span><br><span class="line">        <span class="keyword">if</span> course_search.teacher:</span><br><span class="line">            query = query.where(Course.teacher.like(<span class="string">f&quot;%<span class="subst">&#123;course_search.teacher&#125;</span>%&quot;</span>))</span><br><span class="line">        result = db_session.execute(query).scalars().<span class="built_in">all</span>()</span><br><span class="line">        <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> pydantic <span class="keyword">import</span> BaseModel</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> Integer, String</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> Mapped, mapped_column</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Base</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Course</span>(<span class="title class_ inherited__">Base</span>):</span><br><span class="line">    __tablename__ = <span class="string">&quot;course&quot;</span></span><br><span class="line">    <span class="built_in">id</span>: Mapped[<span class="built_in">int</span>] = mapped_column(Integer, primary_key=<span class="literal">True</span>, nullable=<span class="literal">False</span>)</span><br><span class="line">    name: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    number: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    description: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    periods: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    teacher: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseSearch</span>(<span class="title class_ inherited__">BaseModel</span>):</span><br><span class="line">    name: <span class="built_in">str</span> | <span class="literal">None</span></span><br><span class="line">    number: <span class="built_in">str</span> | <span class="literal">None</span></span><br><span class="line">    teacher: <span class="built_in">str</span> | <span class="literal">None</span></span><br></pre></td></tr></table></figure><h4 id="测试-2"><a href="#测试-2" class="headerlink" title="测试"></a>测试</h4><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710352618882-cb1e9708-6bd4-4ca2-bfd3-932e95f7dcb5.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710352626029-9e559e62-e9d0-46c5-ab64-e2ff7aba1ae9.png"></p><h3 id="新增"><a href="#新增" class="headerlink" title="新增"></a>新增</h3><p>下面实现给课程表新增数据的功能，需要点击<code>新增</code>按钮后，出现弹窗</p><p>在官网找一个<code>Dialog</code>组件</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710353096927-a86240ee-4794-4e32-8e5f-ceb8e24b351c.png"></p><h4 id="前端-2"><a href="#前端-2" class="headerlink" title="前端"></a>前端</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.name&quot;</span><br><span class="line">        placeholder=&quot;请输入要查询的课程名称&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;margin-left:10px; width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.number&quot;</span><br><span class="line">        placeholder=&quot;请输入课程编号&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;margin-left:10px; width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.teacher&quot;</span><br><span class="line">        placeholder=&quot;请输入任课老师&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-button type=&quot;info&quot; plain style=&quot;margin: 0 0 0 10px&quot; @click=&quot;reset&quot;</span><br><span class="line">        &gt;重置&lt;/el-button</span><br><span class="line">      &gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-button</span><br><span class="line">          type=&quot;primary&quot;</span><br><span class="line">          style=&quot;margin-bottom: 5px&quot;</span><br><span class="line">          plain</span><br><span class="line">          @click=&quot;handleAdd&quot;</span><br><span class="line">          &gt;新增&lt;/el-button</span><br><span class="line">        &gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-table :data=&quot;data.tableData&quot; stripe style=&quot;width: 100%&quot;&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;id&quot; label=&quot;ID&quot; width=&quot;80&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;name&quot; label=&quot;课程名称&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;number&quot; label=&quot;课程编号&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;description&quot; label=&quot;课程描述&quot; width=&quot;240&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;periods&quot; label=&quot;课时&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;teacher&quot; label=&quot;任课教师&quot; /&gt;</span><br><span class="line">          &lt;el-table-column label=&quot;操作&quot; align=&quot;center&quot;&gt;</span><br><span class="line">            &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">              &lt;el-button type=&quot;primary&quot; size=&quot;small&quot; plain&gt;编辑&lt;/el-button&gt;</span><br><span class="line">              &lt;el-button type=&quot;danger&quot; size=&quot;small&quot; plain&gt;删除&lt;/el-button&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">          &lt;/el-table-column&gt;</span><br><span class="line">        &lt;/el-table&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot;&gt;</span><br><span class="line">      &lt;el-pagination</span><br><span class="line">        v-model:current-page=&quot;data.pageNum&quot;</span><br><span class="line">        v-model:page-size=&quot;data.pageSize&quot;</span><br><span class="line">        @current-change=&quot;handleCurrentChange&quot;</span><br><span class="line">        background</span><br><span class="line">        layout=&quot;prev, pager, next&quot;</span><br><span class="line">        :total=&quot;data.total&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;el-dialog width=&quot;35%&quot; v-model=&quot;data.formVisible&quot; title=&quot;课程信息&quot;&gt;</span><br><span class="line">      &lt;el-form</span><br><span class="line">        :model=&quot;data.form&quot;</span><br><span class="line">        label-width=&quot;100px&quot;</span><br><span class="line">        label-position=&quot;right&quot;</span><br><span class="line">        style=&quot;padding-right: 45px&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;el-form-item label=&quot;课程名称&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.name&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;课程编号&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.number&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;课程描述&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.description&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;课时&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.periods&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;任课教师&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.teacher&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">      &lt;/el-form&gt;</span><br><span class="line">      &lt;template #footer&gt;</span><br><span class="line">        &lt;span class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">          &lt;el-button @click=&quot;data.formVisible = false&quot; plain&gt;取消&lt;/el-button&gt;</span><br><span class="line">          &lt;el-button type=&quot;primary&quot; @click=&quot;save&quot; plain&gt;保存&lt;/el-button&gt;</span><br><span class="line">        &lt;/span&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line">    &lt;/el-dialog&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; reactive &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; Search &#125; from &quot;@element-plus/icons-vue&quot;;</span><br><span class="line">import request from &quot;@/utils/request&quot;;</span><br><span class="line">import &#123; ElMessage &#125; from &quot;element-plus&quot;;</span><br><span class="line"></span><br><span class="line">const data = reactive(&#123;</span><br><span class="line">  name: &quot;&quot;,</span><br><span class="line">  number: &quot;&quot;,</span><br><span class="line">  teacher: &quot;&quot;,</span><br><span class="line">  tableData: [],</span><br><span class="line">  total: 0,</span><br><span class="line">  pageNum: 1,</span><br><span class="line">  pageSize: 5,</span><br><span class="line">  formVisible: false,</span><br><span class="line">  form: &#123;&#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const load = () =&gt; &#123;</span><br><span class="line">  request</span><br><span class="line">    .get(&quot;/course/selectPage&quot;, &#123;</span><br><span class="line">      params: &#123;</span><br><span class="line">        pageNum: data.pageNum,</span><br><span class="line">        pageSize: data.pageSize,</span><br><span class="line">        name: data.name,</span><br><span class="line">        number: data.number,</span><br><span class="line">        teacher: data.teacher,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      data.tableData = res.data?.list || [];</span><br><span class="line">      data.total = res.data?.total || 0;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 加载一次 获取课程数据</span><br><span class="line">load();</span><br><span class="line"></span><br><span class="line">const handleCurrentChange = () =&gt; &#123;</span><br><span class="line">  // 当翻页的时候重新加载数据</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const reset = () =&gt; &#123;</span><br><span class="line">  data.name = &quot;&quot;;</span><br><span class="line">  data.number = &quot;&quot;;</span><br><span class="line">  data.teacher = &quot;&quot;;</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const handleAdd = () =&gt; &#123;</span><br><span class="line">  data.formVisible = true;</span><br><span class="line">  data.form = &#123;&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const save = () =&gt; &#123;</span><br><span class="line">  request</span><br><span class="line">    .post(&quot;/course/add&quot;, data.form)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">        ElMessage.success(&quot;新增成功&quot;);</span><br><span class="line">        data.formVisible = false;</span><br><span class="line">        load();</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        ElMessage.error(res.msg);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="后端-2"><a href="#后端-2" class="headerlink" title="后端"></a>后端</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Optional</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> APIRouter, Query, Depends</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> common.pageHelper <span class="keyword">import</span> PageHelper</span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> ResultModel, Result</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session, get_db_session</span><br><span class="line"><span class="keyword">from</span> model.course <span class="keyword">import</span> Course, CourseSearch, CourseCreate</span><br><span class="line"><span class="keyword">from</span> service.courseService <span class="keyword">import</span> CourseService</span><br><span class="line"></span><br><span class="line">course_router = APIRouter(prefix=<span class="string">&quot;/course&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@course_router.get(<span class="params"><span class="string">&quot;/selectPage&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">select_page</span>(<span class="params">page: <span class="built_in">int</span> = Query(<span class="params"><span class="number">1</span>, ge=<span class="number">1</span>, alias=<span class="string">&quot;pageNum&quot;</span>, description=<span class="string">&quot;Page number&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      size: <span class="built_in">int</span> = Query(<span class="params"><span class="number">5</span>, gt=<span class="number">0</span>, le=<span class="number">100</span>, alias=<span class="string">&quot;pageSize&quot;</span>, description=<span class="string">&quot;Page size&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      name: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Course name&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      number: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Course number&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      teacher: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Course teacher&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    pageInfo = PageHelper.startPage(page, size)</span><br><span class="line">    course_search = CourseSearch(name=name, number=number, teacher=teacher)</span><br><span class="line">    course_list = CourseService.select_page(course_search, db_session)</span><br><span class="line">    result = Result.success(pageInfo.of(course_list))</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@course_router.post(<span class="params"><span class="string">&quot;/add&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">course: CourseCreate, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    CourseService.add_course(course, db_session)</span><br><span class="line">    result = Result.success()</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.include_router(course_router)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> desc, select</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> CourseExistException</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session</span><br><span class="line"><span class="keyword">from</span> model.course <span class="keyword">import</span> Course, CourseSearch, CourseCreate</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseService</span>:</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">select_page</span>(<span class="params">course_search: CourseSearch, db_session: Session</span>):</span><br><span class="line">        query = select(Course).order_by(desc(Course.<span class="built_in">id</span>))</span><br><span class="line">        <span class="keyword">if</span> course_search.name:</span><br><span class="line">            query = query.where(Course.name.like(<span class="string">f&quot;%<span class="subst">&#123;course_search.name&#125;</span>%&quot;</span>))</span><br><span class="line">        <span class="keyword">if</span> course_search.number:</span><br><span class="line">            query = query.where(Course.number.like(<span class="string">f&quot;%<span class="subst">&#123;course_search.number&#125;</span>%&quot;</span>))</span><br><span class="line">        <span class="keyword">if</span> course_search.teacher:</span><br><span class="line">            query = query.where(Course.teacher.like(<span class="string">f&quot;%<span class="subst">&#123;course_search.teacher&#125;</span>%&quot;</span>))</span><br><span class="line">        result = db_session.execute(query).scalars().<span class="built_in">all</span>()</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">add_course</span>(<span class="params">course: CourseCreate, db_session: Session</span>):</span><br><span class="line">        query = select(Course).where(Course.name == course.name)</span><br><span class="line">        exist_course: Course = db_session.execute(query).scalars().<span class="built_in">all</span>()</span><br><span class="line">        <span class="keyword">if</span> exist_course:</span><br><span class="line">            <span class="keyword">raise</span> CourseExistException(<span class="string">&quot;课程名已存在&quot;</span>)</span><br><span class="line">        course = Course(**course.<span class="built_in">dict</span>())</span><br><span class="line">        db_session.add(course)</span><br><span class="line">        db_session.commit()</span><br><span class="line">        <span class="keyword">return</span> course</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> pydantic <span class="keyword">import</span> BaseModel</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> Integer, String</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> Mapped, mapped_column</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Base</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Course</span>(<span class="title class_ inherited__">Base</span>):</span><br><span class="line">    __tablename__ = <span class="string">&quot;course&quot;</span></span><br><span class="line">    <span class="built_in">id</span>: Mapped[<span class="built_in">int</span>] = mapped_column(Integer, primary_key=<span class="literal">True</span>, nullable=<span class="literal">False</span>)</span><br><span class="line">    name: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    number: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    description: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    periods: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    teacher: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseSearch</span>(<span class="title class_ inherited__">BaseModel</span>):</span><br><span class="line">    name: <span class="built_in">str</span> | <span class="literal">None</span></span><br><span class="line">    number: <span class="built_in">str</span> | <span class="literal">None</span></span><br><span class="line">    teacher: <span class="built_in">str</span> | <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseBase</span>(<span class="title class_ inherited__">BaseModel</span>):</span><br><span class="line">    name: <span class="built_in">str</span></span><br><span class="line">    number: <span class="built_in">str</span></span><br><span class="line">    description: <span class="built_in">str</span></span><br><span class="line">    periods: <span class="built_in">str</span></span><br><span class="line">    teacher: <span class="built_in">str</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseCreate</span>(<span class="title class_ inherited__">CourseBase</span>):</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UserNotFoundException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PasswordNotMatchException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TokenException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseExistException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi.encoders <span class="keyword">import</span> jsonable_encoder</span><br><span class="line"><span class="keyword">from</span> starlette.responses <span class="keyword">import</span> JSONResponse</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> Request</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> Result</span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> UserNotFoundException, PasswordNotMatchException, TokenException, \</span><br><span class="line">    CourseExistException</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">Exception</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">exception_handler</span>(<span class="params">request: Request, exc: Exception</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;500&quot;</span>, msg=<span class="built_in">str</span>(exc))</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">500</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">UserNotFoundException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">user_not_fount_exception_handler</span>(<span class="params">request: Request, exc: UserNotFoundException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;404&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">404</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">PasswordNotMatchException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">password_not_fount_exception_handler</span>(<span class="params">request: Request, exc: PasswordNotMatchException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;401&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">401</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">TokenException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">token_exception_handler</span>(<span class="params">request: Request, exc: TokenException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;401&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">401</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">CourseExistException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">course_exist_exception_handler</span>(<span class="params">request: Request, exc: CourseExistException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;400&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">400</span>, content=jsonable_encoder(result))</span><br></pre></td></tr></table></figure><h4 id="测试-3"><a href="#测试-3" class="headerlink" title="测试"></a>测试</h4><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710354157588-440bcfb5-5023-45ba-a3d9-f8e1f8e5a1ff.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710354164375-6265da8d-4675-4d88-b0a4-9ef2ed4eb4dd.png"></p><h3 id="编辑"><a href="#编辑" class="headerlink" title="编辑"></a>编辑</h3><p>点击数据中的<code>编辑</code>按钮可以对已有的课程数据，进行修改</p><h4 id="前端-3"><a href="#前端-3" class="headerlink" title="前端"></a>前端</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.name&quot;</span><br><span class="line">        placeholder=&quot;请输入要查询的课程名称&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;margin-left:10px; width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.number&quot;</span><br><span class="line">        placeholder=&quot;请输入课程编号&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;margin-left:10px; width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.teacher&quot;</span><br><span class="line">        placeholder=&quot;请输入任课老师&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-button type=&quot;info&quot; plain style=&quot;margin: 0 0 0 10px&quot; @click=&quot;reset&quot;</span><br><span class="line">        &gt;重置&lt;/el-button</span><br><span class="line">      &gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-button</span><br><span class="line">          type=&quot;primary&quot;</span><br><span class="line">          style=&quot;margin-bottom: 5px&quot;</span><br><span class="line">          plain</span><br><span class="line">          @click=&quot;handleAdd&quot;</span><br><span class="line">          &gt;新增&lt;/el-button</span><br><span class="line">        &gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-table :data=&quot;data.tableData&quot; stripe style=&quot;width: 100%&quot;&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;id&quot; label=&quot;ID&quot; width=&quot;80&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;name&quot; label=&quot;课程名称&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;number&quot; label=&quot;课程编号&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;description&quot; label=&quot;课程描述&quot; width=&quot;240&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;periods&quot; label=&quot;课时&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;teacher&quot; label=&quot;任课教师&quot; /&gt;</span><br><span class="line">          &lt;el-table-column label=&quot;操作&quot; align=&quot;center&quot;&gt;</span><br><span class="line">            &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">              &lt;el-button</span><br><span class="line">                type=&quot;primary&quot;</span><br><span class="line">                size=&quot;small&quot;</span><br><span class="line">                plain</span><br><span class="line">                @click=&quot;handleEdit(scope.row)&quot;</span><br><span class="line">                &gt;编辑&lt;/el-button</span><br><span class="line">              &gt;</span><br><span class="line">              &lt;el-button type=&quot;danger&quot; size=&quot;small&quot; plain&gt;删除&lt;/el-button&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">          &lt;/el-table-column&gt;</span><br><span class="line">        &lt;/el-table&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot;&gt;</span><br><span class="line">      &lt;el-pagination</span><br><span class="line">        v-model:current-page=&quot;data.pageNum&quot;</span><br><span class="line">        v-model:page-size=&quot;data.pageSize&quot;</span><br><span class="line">        @current-change=&quot;handleCurrentChange&quot;</span><br><span class="line">        background</span><br><span class="line">        layout=&quot;prev, pager, next&quot;</span><br><span class="line">        :total=&quot;data.total&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;el-dialog width=&quot;35%&quot; v-model=&quot;data.formVisible&quot; title=&quot;课程信息&quot;&gt;</span><br><span class="line">      &lt;el-form</span><br><span class="line">        :model=&quot;data.form&quot;</span><br><span class="line">        label-width=&quot;100px&quot;</span><br><span class="line">        label-position=&quot;right&quot;</span><br><span class="line">        style=&quot;padding-right: 45px&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;el-form-item label=&quot;课程名称&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.name&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;课程编号&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.number&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;课程描述&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.description&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;课时&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.periods&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;任课教师&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.teacher&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">      &lt;/el-form&gt;</span><br><span class="line">      &lt;template #footer&gt;</span><br><span class="line">        &lt;span class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">          &lt;el-button @click=&quot;data.formVisible = false&quot; plain&gt;取消&lt;/el-button&gt;</span><br><span class="line">          &lt;el-button type=&quot;primary&quot; @click=&quot;save&quot; plain&gt;保存&lt;/el-button&gt;</span><br><span class="line">        &lt;/span&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line">    &lt;/el-dialog&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; reactive &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; Search &#125; from &quot;@element-plus/icons-vue&quot;;</span><br><span class="line">import request from &quot;@/utils/request&quot;;</span><br><span class="line">import &#123; ElMessage &#125; from &quot;element-plus&quot;;</span><br><span class="line"></span><br><span class="line">const data = reactive(&#123;</span><br><span class="line">  name: &quot;&quot;,</span><br><span class="line">  number: &quot;&quot;,</span><br><span class="line">  teacher: &quot;&quot;,</span><br><span class="line">  tableData: [],</span><br><span class="line">  total: 0,</span><br><span class="line">  pageNum: 1,</span><br><span class="line">  pageSize: 5,</span><br><span class="line">  formVisible: false,</span><br><span class="line">  form: &#123;&#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const load = () =&gt; &#123;</span><br><span class="line">  request</span><br><span class="line">    .get(&quot;/course/selectPage&quot;, &#123;</span><br><span class="line">      params: &#123;</span><br><span class="line">        pageNum: data.pageNum,</span><br><span class="line">        pageSize: data.pageSize,</span><br><span class="line">        name: data.name,</span><br><span class="line">        number: data.number,</span><br><span class="line">        teacher: data.teacher,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      data.tableData = res.data?.list || [];</span><br><span class="line">      data.total = res.data?.total || 0;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 加载一次 获取课程数据</span><br><span class="line">load();</span><br><span class="line"></span><br><span class="line">const handleCurrentChange = () =&gt; &#123;</span><br><span class="line">  // 当翻页的时候重新加载数据</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const reset = () =&gt; &#123;</span><br><span class="line">  data.name = &quot;&quot;;</span><br><span class="line">  data.number = &quot;&quot;;</span><br><span class="line">  data.teacher = &quot;&quot;;</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const handleAdd = () =&gt; &#123;</span><br><span class="line">  data.formVisible = true;</span><br><span class="line">  data.form = &#123;&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const save = () =&gt; &#123;</span><br><span class="line">  request</span><br><span class="line">    .request(&#123;</span><br><span class="line">      url: data.form.id ? &quot;/course/update&quot; : &quot;/course/add&quot;,</span><br><span class="line">      method: data.form.id ? &quot;put&quot; : &quot;post&quot;,</span><br><span class="line">      data: data.form,</span><br><span class="line">    &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">        ElMessage.success(&quot;操作成功&quot;);</span><br><span class="line">        data.formVisible = false;</span><br><span class="line">        load();</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        ElMessage.error(res.msg);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const handleEdit = (row) =&gt; &#123;</span><br><span class="line">  data.form = JSON.parse(JSON.stringify(row));</span><br><span class="line">  data.formVisible = true;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="后端-3"><a href="#后端-3" class="headerlink" title="后端"></a>后端</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Optional</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> APIRouter, Query, Depends</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> common.pageHelper <span class="keyword">import</span> PageHelper</span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> ResultModel, Result</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session, get_db_session</span><br><span class="line"><span class="keyword">from</span> model.course <span class="keyword">import</span> Course, CourseSearch, CourseCreate, CourseUpdate</span><br><span class="line"><span class="keyword">from</span> service.courseService <span class="keyword">import</span> CourseService</span><br><span class="line"></span><br><span class="line">course_router = APIRouter(prefix=<span class="string">&quot;/course&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@course_router.get(<span class="params"><span class="string">&quot;/selectPage&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">select_page</span>(<span class="params">page: <span class="built_in">int</span> = Query(<span class="params"><span class="number">1</span>, ge=<span class="number">1</span>, alias=<span class="string">&quot;pageNum&quot;</span>, description=<span class="string">&quot;Page number&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      size: <span class="built_in">int</span> = Query(<span class="params"><span class="number">5</span>, gt=<span class="number">0</span>, le=<span class="number">100</span>, alias=<span class="string">&quot;pageSize&quot;</span>, description=<span class="string">&quot;Page size&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      name: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Course name&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      number: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Course number&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      teacher: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Course teacher&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    pageInfo = PageHelper.startPage(page, size)</span><br><span class="line">    course_search = CourseSearch(name=name, number=number, teacher=teacher)</span><br><span class="line">    course_list = CourseService.select_page(course_search, db_session)</span><br><span class="line">    result = Result.success(pageInfo.of(course_list))</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@course_router.post(<span class="params"><span class="string">&quot;/add&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">course: CourseCreate, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    CourseService.add_course(course, db_session)</span><br><span class="line">    result = Result.success()</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@course_router.put(<span class="params"><span class="string">&quot;/update&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">update</span>(<span class="params">course: CourseUpdate, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    CourseService.update_by_id(course, db_session)</span><br><span class="line">    result = Result.success()</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.include_router(course_router)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi.encoders <span class="keyword">import</span> jsonable_encoder</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> desc, select</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.utils <span class="keyword">import</span> set_attrs</span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> CourseExistException, CourseNotExistException</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session</span><br><span class="line"><span class="keyword">from</span> model.course <span class="keyword">import</span> Course, CourseSearch, CourseCreate, CourseUpdate</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseService</span>:</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">select_page</span>(<span class="params">course_search: CourseSearch, db_session: Session</span>):</span><br><span class="line">        query = select(Course).order_by(desc(Course.<span class="built_in">id</span>))</span><br><span class="line">        <span class="keyword">if</span> course_search.name:</span><br><span class="line">            query = query.where(Course.name.like(<span class="string">f&quot;%<span class="subst">&#123;course_search.name&#125;</span>%&quot;</span>))</span><br><span class="line">        <span class="keyword">if</span> course_search.number:</span><br><span class="line">            query = query.where(Course.number.like(<span class="string">f&quot;%<span class="subst">&#123;course_search.number&#125;</span>%&quot;</span>))</span><br><span class="line">        <span class="keyword">if</span> course_search.teacher:</span><br><span class="line">            query = query.where(Course.teacher.like(<span class="string">f&quot;%<span class="subst">&#123;course_search.teacher&#125;</span>%&quot;</span>))</span><br><span class="line">        result = db_session.execute(query).scalars().<span class="built_in">all</span>()</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">add_course</span>(<span class="params">course: CourseCreate, db_session: Session</span>):</span><br><span class="line">        query = select(Course).where(Course.name == course.name)</span><br><span class="line">        exist_course: Course = db_session.execute(query).scalars().<span class="built_in">all</span>()</span><br><span class="line">        <span class="keyword">if</span> exist_course:</span><br><span class="line">            <span class="keyword">raise</span> CourseExistException(<span class="string">&quot;课程名已存在&quot;</span>)</span><br><span class="line">        course = Course(**course.<span class="built_in">dict</span>())</span><br><span class="line">        db_session.add(course)</span><br><span class="line">        db_session.commit()</span><br><span class="line">        <span class="keyword">return</span> course</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">update_by_id</span>(<span class="params">course: CourseUpdate, db_session: Session</span>):</span><br><span class="line">        query = select(Course).where(Course.<span class="built_in">id</span> == course.<span class="built_in">id</span>)</span><br><span class="line">        exist_course: Course = db_session.execute(query).scalar()</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> exist_course:</span><br><span class="line">            <span class="keyword">raise</span> CourseNotExistException(<span class="string">&quot;课程不存在&quot;</span>)</span><br><span class="line">        set_attrs(exist_course, jsonable_encoder(course))</span><br><span class="line">        db_session.commit()</span><br><span class="line">        <span class="keyword">return</span> exist_course</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> pydantic <span class="keyword">import</span> BaseModel</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> Integer, String</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> Mapped, mapped_column</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Base</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Course</span>(<span class="title class_ inherited__">Base</span>):</span><br><span class="line">    __tablename__ = <span class="string">&quot;course&quot;</span></span><br><span class="line">    <span class="built_in">id</span>: Mapped[<span class="built_in">int</span>] = mapped_column(Integer, primary_key=<span class="literal">True</span>, nullable=<span class="literal">False</span>)</span><br><span class="line">    name: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    number: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    description: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    periods: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    teacher: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseSearch</span>(<span class="title class_ inherited__">BaseModel</span>):</span><br><span class="line">    name: <span class="built_in">str</span> | <span class="literal">None</span></span><br><span class="line">    number: <span class="built_in">str</span> | <span class="literal">None</span></span><br><span class="line">    teacher: <span class="built_in">str</span> | <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseBase</span>(<span class="title class_ inherited__">BaseModel</span>):</span><br><span class="line">    name: <span class="built_in">str</span></span><br><span class="line">    number: <span class="built_in">str</span></span><br><span class="line">    description: <span class="built_in">str</span></span><br><span class="line">    periods: <span class="built_in">str</span></span><br><span class="line">    teacher: <span class="built_in">str</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseCreate</span>(<span class="title class_ inherited__">CourseBase</span>):</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseUpdate</span>(<span class="title class_ inherited__">CourseBase</span>):</span><br><span class="line">    <span class="built_in">id</span>: <span class="built_in">int</span></span><br></pre></td></tr></table></figure><p>实现给对象的属性更新的一个方法，在项目目录<code>/common</code>下，新建一个<code>utils.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 用于更新对象属性</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">set_attrs</span>(<span class="params">obj, data: <span class="built_in">dict</span></span>):</span><br><span class="line">    <span class="keyword">if</span> data:</span><br><span class="line">        <span class="keyword">for</span> key, value <span class="keyword">in</span> data.items():</span><br><span class="line">            <span class="built_in">setattr</span>(obj, key, value)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UserNotFoundException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PasswordNotMatchException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TokenException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseExistException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseNotExistException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi.encoders <span class="keyword">import</span> jsonable_encoder</span><br><span class="line"><span class="keyword">from</span> starlette.responses <span class="keyword">import</span> JSONResponse</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> Request</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> Result</span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> UserNotFoundException, PasswordNotMatchException, TokenException, \</span><br><span class="line">    CourseExistException, CourseNotExistException</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">Exception</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">exception_handler</span>(<span class="params">request: Request, exc: Exception</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;500&quot;</span>, msg=<span class="built_in">str</span>(exc))</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">500</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">UserNotFoundException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">user_not_fount_exception_handler</span>(<span class="params">request: Request, exc: UserNotFoundException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;404&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">404</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">PasswordNotMatchException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">password_not_fount_exception_handler</span>(<span class="params">request: Request, exc: PasswordNotMatchException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;401&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">401</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">TokenException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">token_exception_handler</span>(<span class="params">request: Request, exc: TokenException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;401&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">401</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">CourseExistException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">course_exist_exception_handler</span>(<span class="params">request: Request, exc: CourseExistException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;400&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">400</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">CourseNotExistException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">course_not_exist_exception_handler</span>(<span class="params">request: Request, exc: CourseNotExistException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;404&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">404</span>, content=jsonable_encoder(result))</span><br></pre></td></tr></table></figure><h4 id="测试-4"><a href="#测试-4" class="headerlink" title="测试"></a>测试</h4><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710361942830-1b838073-bb1f-4c9c-8167-2c5b8bd6fc3c.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710361960257-ff8da7d5-86d5-4314-b3d6-5e5e9fe8bdf5.png"></p><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><p>点击已有课程数据中的<code>删除</code>按钮，实现删除数据表中对应数据</p><h4 id="前端-4"><a href="#前端-4" class="headerlink" title="前端"></a>前端</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.name&quot;</span><br><span class="line">        placeholder=&quot;请输入要查询的课程名称&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;margin-left:10px; width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.number&quot;</span><br><span class="line">        placeholder=&quot;请输入课程编号&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-input</span><br><span class="line">        @input=&quot;load&quot;</span><br><span class="line">        style=&quot;margin-left:10px; width: 260px&quot;</span><br><span class="line">        v-model=&quot;data.teacher&quot;</span><br><span class="line">        placeholder=&quot;请输入任课老师&quot;</span><br><span class="line">        :prefix-icon=&quot;Search&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-button type=&quot;info&quot; plain style=&quot;margin: 0 0 0 10px&quot; @click=&quot;reset&quot;</span><br><span class="line">        &gt;重置&lt;/el-button</span><br><span class="line">      &gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-button</span><br><span class="line">          type=&quot;primary&quot;</span><br><span class="line">          style=&quot;margin-bottom: 5px&quot;</span><br><span class="line">          plain</span><br><span class="line">          @click=&quot;handleAdd&quot;</span><br><span class="line">          &gt;新增&lt;/el-button</span><br><span class="line">        &gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;el-table :data=&quot;data.tableData&quot; stripe style=&quot;width: 100%&quot;&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;id&quot; label=&quot;ID&quot; width=&quot;80&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;name&quot; label=&quot;课程名称&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;number&quot; label=&quot;课程编号&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;description&quot; label=&quot;课程描述&quot; width=&quot;240&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;periods&quot; label=&quot;课时&quot; width=&quot;180&quot; /&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;teacher&quot; label=&quot;任课教师&quot; /&gt;</span><br><span class="line">          &lt;el-table-column label=&quot;操作&quot; align=&quot;center&quot;&gt;</span><br><span class="line">            &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">              &lt;el-button</span><br><span class="line">                type=&quot;primary&quot;</span><br><span class="line">                size=&quot;small&quot;</span><br><span class="line">                plain</span><br><span class="line">                @click=&quot;handleEdit(scope.row)&quot;</span><br><span class="line">                &gt;编辑&lt;/el-button</span><br><span class="line">              &gt;</span><br><span class="line">              &lt;el-button</span><br><span class="line">                type=&quot;danger&quot;</span><br><span class="line">                size=&quot;small&quot;</span><br><span class="line">                plain</span><br><span class="line">                @click=&quot;handleDelete(scope.row.id)&quot;</span><br><span class="line">                &gt;删除&lt;/el-button</span><br><span class="line">              &gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">          &lt;/el-table-column&gt;</span><br><span class="line">        &lt;/el-table&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card&quot;&gt;</span><br><span class="line">      &lt;el-pagination</span><br><span class="line">        v-model:current-page=&quot;data.pageNum&quot;</span><br><span class="line">        v-model:page-size=&quot;data.pageSize&quot;</span><br><span class="line">        @current-change=&quot;handleCurrentChange&quot;</span><br><span class="line">        background</span><br><span class="line">        layout=&quot;prev, pager, next&quot;</span><br><span class="line">        :total=&quot;data.total&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;el-dialog width=&quot;35%&quot; v-model=&quot;data.formVisible&quot; title=&quot;课程信息&quot;&gt;</span><br><span class="line">      &lt;el-form</span><br><span class="line">        :model=&quot;data.form&quot;</span><br><span class="line">        label-width=&quot;100px&quot;</span><br><span class="line">        label-position=&quot;right&quot;</span><br><span class="line">        style=&quot;padding-right: 45px&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;el-form-item label=&quot;课程名称&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.name&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;课程编号&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.number&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;课程描述&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.description&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;课时&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.periods&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;任课教师&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;data.form.teacher&quot; autocomplete=&quot;off&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">      &lt;/el-form&gt;</span><br><span class="line">      &lt;template #footer&gt;</span><br><span class="line">        &lt;span class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">          &lt;el-button @click=&quot;data.formVisible = false&quot; plain&gt;取消&lt;/el-button&gt;</span><br><span class="line">          &lt;el-button type=&quot;primary&quot; @click=&quot;save&quot; plain&gt;保存&lt;/el-button&gt;</span><br><span class="line">        &lt;/span&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line">    &lt;/el-dialog&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; reactive &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; Search &#125; from &quot;@element-plus/icons-vue&quot;;</span><br><span class="line">import request from &quot;@/utils/request&quot;;</span><br><span class="line">import &#123; ElMessage, ElMessageBox &#125; from &quot;element-plus&quot;;</span><br><span class="line"></span><br><span class="line">const data = reactive(&#123;</span><br><span class="line">  name: &quot;&quot;,</span><br><span class="line">  number: &quot;&quot;,</span><br><span class="line">  teacher: &quot;&quot;,</span><br><span class="line">  tableData: [],</span><br><span class="line">  total: 0,</span><br><span class="line">  pageNum: 1,</span><br><span class="line">  pageSize: 5,</span><br><span class="line">  formVisible: false,</span><br><span class="line">  form: &#123;&#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const load = () =&gt; &#123;</span><br><span class="line">  request</span><br><span class="line">    .get(&quot;/course/selectPage&quot;, &#123;</span><br><span class="line">      params: &#123;</span><br><span class="line">        pageNum: data.pageNum,</span><br><span class="line">        pageSize: data.pageSize,</span><br><span class="line">        name: data.name,</span><br><span class="line">        number: data.number,</span><br><span class="line">        teacher: data.teacher,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      data.tableData = res.data?.list || [];</span><br><span class="line">      data.total = res.data?.total || 0;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 加载一次 获取课程数据</span><br><span class="line">load();</span><br><span class="line"></span><br><span class="line">const handleCurrentChange = () =&gt; &#123;</span><br><span class="line">  // 当翻页的时候重新加载数据</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const reset = () =&gt; &#123;</span><br><span class="line">  data.name = &quot;&quot;;</span><br><span class="line">  data.number = &quot;&quot;;</span><br><span class="line">  data.teacher = &quot;&quot;;</span><br><span class="line">  load();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const handleAdd = () =&gt; &#123;</span><br><span class="line">  data.formVisible = true;</span><br><span class="line">  data.form = &#123;&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const save = () =&gt; &#123;</span><br><span class="line">  request</span><br><span class="line">    .request(&#123;</span><br><span class="line">      url: data.form.id ? &quot;/course/update&quot; : &quot;/course/add&quot;,</span><br><span class="line">      method: data.form.id ? &quot;put&quot; : &quot;post&quot;,</span><br><span class="line">      data: data.form,</span><br><span class="line">    &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">        ElMessage.success(&quot;操作成功&quot;);</span><br><span class="line">        data.formVisible = false;</span><br><span class="line">        load();</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        ElMessage.error(res.msg);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const handleEdit = (row) =&gt; &#123;</span><br><span class="line">  data.form = JSON.parse(JSON.stringify(row));</span><br><span class="line">  data.formVisible = true;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const handleDelete = (id) =&gt; &#123;</span><br><span class="line">  ElMessageBox.confirm(&quot;删除后内容将无法恢复，您确认删除嘛？&quot;, &quot;删除确认&quot;, &#123;</span><br><span class="line">    type: &quot;warning&quot;,</span><br><span class="line">  &#125;)</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      request.delete(&quot;/course/delete/&quot; + id).then((res) =&gt; &#123;</span><br><span class="line">        if (res.code === &quot;200&quot;) &#123;</span><br><span class="line">          ElMessage.success(&quot;删除成功&quot;);</span><br><span class="line">          load();</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          ElMessage.error(res.msg);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch((err) =&gt; &#123;</span><br><span class="line">      ElMessage.error(err.response?.data?.msg || err.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="后端-4"><a href="#后端-4" class="headerlink" title="后端"></a>后端</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Optional</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> APIRouter, Query, Depends</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> common.pageHelper <span class="keyword">import</span> PageHelper</span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> ResultModel, Result</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session, get_db_session</span><br><span class="line"><span class="keyword">from</span> model.course <span class="keyword">import</span> Course, CourseSearch, CourseCreate, CourseUpdate</span><br><span class="line"><span class="keyword">from</span> service.courseService <span class="keyword">import</span> CourseService</span><br><span class="line"></span><br><span class="line">course_router = APIRouter(prefix=<span class="string">&quot;/course&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@course_router.get(<span class="params"><span class="string">&quot;/selectPage&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">select_page</span>(<span class="params">page: <span class="built_in">int</span> = Query(<span class="params"><span class="number">1</span>, ge=<span class="number">1</span>, alias=<span class="string">&quot;pageNum&quot;</span>, description=<span class="string">&quot;Page number&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      size: <span class="built_in">int</span> = Query(<span class="params"><span class="number">5</span>, gt=<span class="number">0</span>, le=<span class="number">100</span>, alias=<span class="string">&quot;pageSize&quot;</span>, description=<span class="string">&quot;Page size&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      name: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Course name&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      number: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Course number&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      teacher: <span class="type">Optional</span>[<span class="built_in">str</span>] = Query(<span class="params"><span class="literal">None</span>, description=<span class="string">&quot;Course teacher&quot;</span></span>),</span></span><br><span class="line"><span class="params">                      db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    pageInfo = PageHelper.startPage(page, size)</span><br><span class="line">    course_search = CourseSearch(name=name, number=number, teacher=teacher)</span><br><span class="line">    course_list = CourseService.select_page(course_search, db_session)</span><br><span class="line">    result = Result.success(pageInfo.of(course_list))</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@course_router.post(<span class="params"><span class="string">&quot;/add&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">course: CourseCreate, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    CourseService.add_course(course, db_session)</span><br><span class="line">    result = Result.success()</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@course_router.put(<span class="params"><span class="string">&quot;/update&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">update</span>(<span class="params">course: CourseUpdate, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    CourseService.update_by_id(course, db_session)</span><br><span class="line">    result = Result.success()</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@course_router.delete(<span class="params"><span class="string">&quot;/delete/&#123;id&#125;&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">delete</span>(<span class="params"><span class="built_in">id</span>: <span class="built_in">int</span>, db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    CourseService.delete_by_id(<span class="built_in">id</span>, db_session)</span><br><span class="line">    result = Result.success()</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.include_router(course_router)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi.encoders <span class="keyword">import</span> jsonable_encoder</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> desc, select</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.utils <span class="keyword">import</span> set_attrs</span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> CourseExistException, CourseNotExistException</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session</span><br><span class="line"><span class="keyword">from</span> model.course <span class="keyword">import</span> Course, CourseSearch, CourseCreate, CourseUpdate</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseService</span>:</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">select_page</span>(<span class="params">course_search: CourseSearch, db_session: Session</span>):</span><br><span class="line">        query = select(Course).order_by(desc(Course.<span class="built_in">id</span>))</span><br><span class="line">        <span class="keyword">if</span> course_search.name:</span><br><span class="line">            query = query.where(Course.name.like(<span class="string">f&quot;%<span class="subst">&#123;course_search.name&#125;</span>%&quot;</span>))</span><br><span class="line">        <span class="keyword">if</span> course_search.number:</span><br><span class="line">            query = query.where(Course.number.like(<span class="string">f&quot;%<span class="subst">&#123;course_search.number&#125;</span>%&quot;</span>))</span><br><span class="line">        <span class="keyword">if</span> course_search.teacher:</span><br><span class="line">            query = query.where(Course.teacher.like(<span class="string">f&quot;%<span class="subst">&#123;course_search.teacher&#125;</span>%&quot;</span>))</span><br><span class="line">        result = db_session.execute(query).scalars().<span class="built_in">all</span>()</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">add_course</span>(<span class="params">course: CourseCreate, db_session: Session</span>):</span><br><span class="line">        query = select(Course).where(Course.name == course.name)</span><br><span class="line">        exist_course: Course = db_session.execute(query).scalars().<span class="built_in">all</span>()</span><br><span class="line">        <span class="keyword">if</span> exist_course:</span><br><span class="line">            <span class="keyword">raise</span> CourseExistException(<span class="string">&quot;课程名已存在&quot;</span>)</span><br><span class="line">        course = Course(**course.<span class="built_in">dict</span>())</span><br><span class="line">        db_session.add(course)</span><br><span class="line">        db_session.commit()</span><br><span class="line">        <span class="keyword">return</span> course</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">update_by_id</span>(<span class="params">course: CourseUpdate, db_session: Session</span>):</span><br><span class="line">        exist_course: Course = check_course_exist(course.<span class="built_in">id</span>, db_session)</span><br><span class="line">        set_attrs(exist_course, jsonable_encoder(course))</span><br><span class="line">        db_session.commit()</span><br><span class="line">        <span class="keyword">return</span> exist_course</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">delete_by_id</span>(<span class="params"><span class="built_in">id</span>: <span class="built_in">int</span>, db_session: Session</span>):</span><br><span class="line">        exist_course: Course = check_course_exist(<span class="built_in">id</span>, db_session)</span><br><span class="line">        db_session.delete(exist_course)</span><br><span class="line">        db_session.commit()</span><br><span class="line">        <span class="keyword">return</span> exist_course</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check_course_exist</span>(<span class="params">course_id: <span class="built_in">int</span>, db_session: Session</span>):</span><br><span class="line">    query = select(Course).where(Course.<span class="built_in">id</span> == course_id)</span><br><span class="line">    exist_course: Course = db_session.execute(query).scalar()</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> exist_course:</span><br><span class="line">        <span class="keyword">raise</span> CourseNotExistException(<span class="string">&quot;课程不存在&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> exist_course</span><br></pre></td></tr></table></figure><h4 id="测试-5"><a href="#测试-5" class="headerlink" title="测试"></a>测试</h4><p>先创建一个课程</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710362829857-c2f0f339-f279-4816-b09d-ee9a6442cc4e.png"></p><p>然后删除</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710362849747-11c06463-9cb4-4402-bc1a-3f1d40cb3a70.png"></p><p>删除成功</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710362860933-f9cec0e6-64b1-4bf3-877b-559734cd4abc.png"></p><hr><blockquote><p>更新: 2024-05-03 22:02:17<br>原文: <a href="https://www.yuque.com/zacharyblock/iacda/lsqxkzaok37g7aaz">https://www.yuque.com/zacharyblock/iacda/lsqxkzaok37g7aaz</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> FastAPI入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Vue3 </tag>
            
            <tag> FastAPI </tag>
            
            <tag> 实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FastAPI入门-JWT权限校验</title>
      <link href="/2024/05/03/FastAPI%E5%85%A5%E9%97%A8/JWT%E6%9D%83%E9%99%90%E6%A0%A1%E9%AA%8C/"/>
      <url>/2024/05/03/FastAPI%E5%85%A5%E9%97%A8/JWT%E6%9D%83%E9%99%90%E6%A0%A1%E9%AA%8C/</url>
      
        <content type="html"><![CDATA[<h1 id="JWT-权限校验"><a href="#JWT-权限校验" class="headerlink" title="JWT 权限校验"></a>JWT 权限校验</h1><p>在退出登录之后，依旧可以进入到主页面；同样后续其他 api 接口也需要在登录之后才能调用，需要加上 token，使用 JWT 实现。</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710335150678-c0013c3b-c00f-4f9b-949b-78286e63d87f.png"></p><h2 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h2><p>首先从前端这块处理，除了 login 和后续会增加的 register 页面不需要登录才能访问，其他页面，都需要登录用户之后才能访问，否则自动跳转回 login 页面</p><h3 id="请求头"><a href="#请求头" class="headerlink" title="请求头"></a>请求头</h3><p>给请求头带上 token，提供给后端进行验证</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ElMessage</span> &#125; <span class="keyword">from</span> <span class="string">&quot;element-plus&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&quot;../router&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&quot;axios&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> request = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">  <span class="attr">baseURL</span>: <span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">env</span>.<span class="property">VITE_BASE_URL</span>,</span><br><span class="line">  <span class="attr">timeout</span>: <span class="number">30000</span>, <span class="comment">// 后台接口超时时间设置</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// request 拦截器</span></span><br><span class="line"><span class="comment">// 可以自请求发送前对请求做一些处理</span></span><br><span class="line">request.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(</span><br><span class="line">  <span class="function">(<span class="params">config</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> user = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;student-user&quot;</span>));</span><br><span class="line">    config.<span class="property">headers</span>[<span class="string">&quot;Content-Type&quot;</span>] = <span class="string">&quot;application/json;charset=utf-8&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (user) &#123;</span><br><span class="line">      config.<span class="property">headers</span>.<span class="property">Authorization</span> = <span class="string">`Bearer <span class="subst">$&#123;user.token&#125;</span>`</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> config;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">// response 拦截器</span></span><br><span class="line"><span class="comment">// 可以在接口响应后统一处理结果</span></span><br><span class="line">request.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(</span><br><span class="line">  <span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> res = response.<span class="property">data</span>;</span><br><span class="line">    <span class="comment">// 如果是返回的文件</span></span><br><span class="line">    <span class="keyword">if</span> (response.<span class="property">config</span>.<span class="property">responseType</span> === <span class="string">&quot;blob&quot;</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 兼容服务端返回的字符串数据</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> res === <span class="string">&quot;string&quot;</span>) &#123;</span><br><span class="line">      res = res ? <span class="title class_">JSON</span>.<span class="title function_">parse</span>(res) : res;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 当权限验证不通过的时候给出提示</span></span><br><span class="line">    <span class="keyword">if</span> (res.<span class="property">code</span> === <span class="string">&quot;401&quot;</span>) &#123;</span><br><span class="line">      <span class="title class_">ElMessage</span>.<span class="title function_">error</span>(res.<span class="property">msg</span>);</span><br><span class="line">      router.<span class="title function_">push</span>(<span class="string">&quot;/login&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;err&quot;</span> + error);</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> request;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710336890469-a77306ca-5be8-480f-9570-4a796f68df1d.png"></p><h3 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h3><p>实现在没有 token 的情况下无法进入主页而跳转到 login 页面，在路由守卫中进行判断和处理</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHistory &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">history</span>: <span class="title function_">createWebHistory</span>(<span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">env</span>.<span class="property">BASE_URL</span>),</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;Manager&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/Manager.vue&quot;</span>),</span><br><span class="line">      <span class="attr">redirect</span>: <span class="string">&quot;/home&quot;</span>,</span><br><span class="line">      <span class="attr">children</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;home&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Home&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Home.vue&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">requiresAuth</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">      ],</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/login&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;Login&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/Login.vue&quot;</span>),</span><br><span class="line">    &#125;,</span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">beforeEach</span>(<span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> requiresAuth = to.<span class="property">matched</span>.<span class="title function_">some</span>(<span class="function">(<span class="params">record</span>) =&gt;</span> record.<span class="property">meta</span>.<span class="property">requiresAuth</span>);</span><br><span class="line">  <span class="keyword">const</span> user = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;student-user&quot;</span>));</span><br><span class="line">  <span class="keyword">if</span> (requiresAuth &amp;&amp; !user) &#123;</span><br><span class="line">    <span class="comment">// 如果目标路由需要认证,并且用户未登录</span></span><br><span class="line">    <span class="title function_">next</span>(<span class="string">&quot;/login&quot;</span>); <span class="comment">// 跳转到登录页面</span></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">next</span>(); <span class="comment">// 如果目标路由不需要认证,或者用户已登录,则正常导航到目标路由</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710336834715-bbfe0bce-f29f-46dc-b65c-73afb2105f5c.png"></p><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>不登录，无法进入 home 页面</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710337011611-010bd441-a61b-4e6d-bbfe-6b67dd19b54e.png"></p><p>登录后，才可以进入 home 页面</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710337034729-eb685506-a372-44c1-a919-ec563223fd2e.png"></p><h2 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h2><p>后端这块需要实现一下 jwt，包括密码的校验和生成，以及 token 的生成和校验；那么之前的密码校验就可以舍去了，写一个统一的 auth 验证</p><h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><p>这里需要两个依赖：<code>pyjwt</code>、<code>passlib[bcrypt]</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">fastapi[all]</span><br><span class="line">mysqlclient==2.1.1</span><br><span class="line">SQLAlchemy==2.0.23</span><br><span class="line">pyjwt</span><br><span class="line">passlib[bcrypt]</span><br></pre></td></tr></table></figure><h3 id="AuthHandler"><a href="#AuthHandler" class="headerlink" title="AuthHandler"></a>AuthHandler</h3><h4 id="密码生成与校验"><a href="#密码生成与校验" class="headerlink" title="密码生成与校验"></a>密码生成与校验</h4><p>接下先来编写 密码的生成和校验，在项目目录的<code>/common</code>下创建一个<code>auth.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi.security <span class="keyword">import</span> HTTPBearer</span><br><span class="line"><span class="keyword">from</span> passlib.context <span class="keyword">import</span> CryptContext</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AuthHandler</span>:</span><br><span class="line">    security = HTTPBearer()</span><br><span class="line">    pwd_context = CryptContext(schemes=[<span class="string">&quot;bcrypt&quot;</span>], deprecated=<span class="string">&quot;auto&quot;</span>)</span><br><span class="line">    secret = <span class="string">&quot;SECRET&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_password_hash</span>(<span class="params">self, password</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.pwd_context.<span class="built_in">hash</span>(password)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">verify_password</span>(<span class="params">self, plain_password, hashed_password</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.pwd_context.verify(plain_password, hashed_password)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    auth = AuthHandler()</span><br><span class="line">    <span class="built_in">print</span>(auth.get_password_hash(<span class="string">&quot;admin&quot;</span>))</span><br><span class="line">    <span class="built_in">print</span>(auth.verify_password(<span class="string">&quot;admin&quot;</span>, <span class="string">&#x27;$2b$12$ttbSmj8jD5rW/c0XdkBZyOZI5F7GP.kMuBMWgE2.yyzreJCWdwAum&#x27;</span>))</span><br><span class="line">    <span class="built_in">print</span>(auth.verify_password(<span class="string">&quot;123&quot;</span>, <span class="string">&#x27;$2b$12$ttbSmj8jD5rW/c0XdkBZyOZI5F7GP.kMuBMWgE2.yyzreJCWdwAum&#x27;</span>))</span><br></pre></td></tr></table></figure><p>其中的<code>$2b$12$ttbSmj8jD5rW/c0XdkBZyOZI5F7GP.kMuBMWgE2.yyzreJCWdwAum</code>是数据库中存储的 admin 的密码</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710339283730-f5386141-228b-4a40-8a02-b03d5c5abdc8.png"></p><p>运行一下</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710339640006-9c71c0db-8f4e-4e2c-90f0-2719c440afb1.png"></p><p>可以看到，之前使用 bcrypt 直接生成的 hash 密码，虽然与现在生成的不一样，但是依旧可以用于验证</p><p>修改一下 adminService 的验证逻辑，尝试一下登录</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi.security <span class="keyword">import</span> HTTPBearer</span><br><span class="line"><span class="keyword">from</span> passlib.context <span class="keyword">import</span> CryptContext</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AuthHandler</span>:</span><br><span class="line">    security = HTTPBearer()</span><br><span class="line">    pwd_context = CryptContext(schemes=[<span class="string">&quot;bcrypt&quot;</span>], deprecated=<span class="string">&quot;auto&quot;</span>)</span><br><span class="line">    secret = <span class="string">&quot;SECRET&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_password_hash</span>(<span class="params">self, password</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.pwd_context.<span class="built_in">hash</span>(password)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">verify_password</span>(<span class="params">self, plain_password, hashed_password</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.pwd_context.verify(plain_password, hashed_password)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">auth_handler = AuthHandler()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> select</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.auth <span class="keyword">import</span> auth_handler</span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> UserNotFoundException, PasswordNotMatchException</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session</span><br><span class="line"><span class="keyword">from</span> model.admin <span class="keyword">import</span> Admin, AdminModel</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AdminService</span>:</span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">login</span>(<span class="params">admin: AdminModel, db_session: Session</span>) -&gt; Admin:</span><br><span class="line">        query = select(Admin).where(Admin.username == admin.username)</span><br><span class="line">        result = db_session.execute(query).scalars().first()</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> result:</span><br><span class="line">            <span class="keyword">raise</span> UserNotFoundException(<span class="string">&quot;用户不存在&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> auth_handler.verify_password(admin.password, result.password):</span><br><span class="line">            <span class="keyword">raise</span> PasswordNotMatchException(<span class="string">&quot;身份验证未通过&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710339937574-abe7280b-5945-446a-882b-8aa631eabf32.png"></p><h4 id="token-的生成与校验"><a href="#token-的生成与校验" class="headerlink" title="token 的生成与校验"></a>token 的生成与校验</h4><p>通过装饰器实现一个，登录验证</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime, timedelta</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> jwt</span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> Security</span><br><span class="line"><span class="keyword">from</span> fastapi.security <span class="keyword">import</span> HTTPBearer, HTTPAuthorizationCredentials</span><br><span class="line"><span class="keyword">from</span> passlib.context <span class="keyword">import</span> CryptContext</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> TokenException</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AuthHandler</span>:</span><br><span class="line">    security = HTTPBearer()</span><br><span class="line">    pwd_context = CryptContext(schemes=[<span class="string">&quot;bcrypt&quot;</span>], deprecated=<span class="string">&quot;auto&quot;</span>)</span><br><span class="line">    secret = <span class="string">&quot;SECRET&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_password_hash</span>(<span class="params">self, password</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.pwd_context.<span class="built_in">hash</span>(password)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">verify_password</span>(<span class="params">self, plain_password, hashed_password</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.pwd_context.verify(plain_password, hashed_password)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">encode_token</span>(<span class="params">self, user_id</span>):</span><br><span class="line">        payload = &#123;</span><br><span class="line">            <span class="string">&#x27;exp&#x27;</span>: datetime.utcnow() + timedelta(days=<span class="number">7</span>, minutes=<span class="number">0</span>, seconds=<span class="number">0</span>),</span><br><span class="line">            <span class="string">&#x27;iat&#x27;</span>: datetime.utcnow(),</span><br><span class="line">            <span class="string">&#x27;sub&#x27;</span>: user_id</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> jwt.encode(</span><br><span class="line">            payload,</span><br><span class="line">            <span class="variable language_">self</span>.secret,</span><br><span class="line">            algorithm=<span class="string">&#x27;HS256&#x27;</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">decode_token</span>(<span class="params">self, token</span>):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            payload = jwt.decode(token, <span class="variable language_">self</span>.secret, algorithms=[<span class="string">&#x27;HS256&#x27;</span>])</span><br><span class="line">            <span class="keyword">return</span> payload[<span class="string">&#x27;sub&#x27;</span>]</span><br><span class="line">        <span class="keyword">except</span> jwt.ExpiredSignatureError:</span><br><span class="line">            <span class="keyword">raise</span> TokenException(<span class="string">&quot;token过期&quot;</span>)</span><br><span class="line">        <span class="keyword">except</span> jwt.InvalidTokenError:</span><br><span class="line">            <span class="keyword">raise</span> TokenException(<span class="string">&quot;无效token&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">auth_required</span>(<span class="params">self, auth: HTTPAuthorizationCredentials = Security(<span class="params">security</span>)</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.decode_token(auth.credentials)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">auth_handler = AuthHandler()</span><br></pre></td></tr></table></figure><p>给<code>customException.py</code>添加一个自定义异常</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">TokenException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br></pre></td></tr></table></figure><p>给<code>exceptionHandler.py</code>添加一个异常处理</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi.encoders <span class="keyword">import</span> jsonable_encoder</span><br><span class="line"><span class="keyword">from</span> starlette.responses <span class="keyword">import</span> JSONResponse</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> Request</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> Result</span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> UserNotFoundException, PasswordNotMatchException, TokenException</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">Exception</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">exception_handler</span>(<span class="params">request: Request, exc: Exception</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;500&quot;</span>, msg=<span class="built_in">str</span>(exc))</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">500</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">UserNotFoundException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">user_not_fount_exception_handler</span>(<span class="params">request: Request, exc: UserNotFoundException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;404&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">404</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">PasswordNotMatchException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">password_not_fount_exception_handler</span>(<span class="params">request: Request, exc: PasswordNotMatchException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;401&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">401</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">TokenException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">token_exception_handler</span>(<span class="params">request: Request, exc: TokenException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;401&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">401</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这个先写到这，后面新增加 api 的时候进行一个验证</p><hr><blockquote><p>更新: 2024-07-30 17:40:29<br>原文: <a href="https://www.yuque.com/zacharyblock/iacda/pkecek3noxmavqwz">https://www.yuque.com/zacharyblock/iacda/pkecek3noxmavqwz</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> FastAPI入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Vue3 </tag>
            
            <tag> FastAPI </tag>
            
            <tag> 实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FastAPI入门-管理员登录</title>
      <link href="/2024/05/03/FastAPI%E5%85%A5%E9%97%A8/%E7%AE%A1%E7%90%86%E5%91%98%E7%99%BB%E5%BD%95/"/>
      <url>/2024/05/03/FastAPI%E5%85%A5%E9%97%A8/%E7%AE%A1%E7%90%86%E5%91%98%E7%99%BB%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="管理员登录"><a href="#管理员登录" class="headerlink" title="管理员登录"></a>管理员登录</h1><h2 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h2><h3 id="Login"><a href="#Login" class="headerlink" title="Login"></a>Login</h3><p>首先绘制一个登录页面</p><p>参考element-plus官网提供的表单<a href="https://element-plus.org/zh-CN/component/form.html">https://element-plus.org/zh-CN/component/form.html</a></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710081142620-3acddbcf-774a-4d82-8992-bbf5b08a991f.png"></p><p>在项目路径<code>/src/views</code>下创建一个<code>Login.vue</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;login-container&quot;&gt;</span><br><span class="line">      &lt;div style=&quot;width: 420px&quot; class=&quot;login-box&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;title&quot;&gt;学生信息管理系统 - 登录&lt;/div&gt;</span><br><span class="line">        &lt;el-form :model=&quot;data.form&quot;&gt;</span><br><span class="line">          &lt;el-form-item&gt;</span><br><span class="line">            &lt;el-input style=&quot;height: 40px;font-size: 18px&quot; prefix-icon=&quot;Avatar&quot; v-model=&quot;data.form.username&quot;</span><br><span class="line">                      placeholder=&quot;请输入账号&quot;/&gt;</span><br><span class="line">          &lt;/el-form-item&gt;</span><br><span class="line">          &lt;el-form-item&gt;</span><br><span class="line">            &lt;el-input style=&quot;height: 40px;font-size: 18px&quot; prefix-icon=&quot;Lock&quot; v-model=&quot;data.form.password&quot;</span><br><span class="line">                      placeholder=&quot;请输入密码&quot;/&gt;</span><br><span class="line">          &lt;/el-form-item&gt;</span><br><span class="line">          &lt;el-form-item&gt;</span><br><span class="line">            &lt;el-button type=&quot;primary&quot; style=&quot;width: 100%;font-size: 18px&quot;&gt;登 录&lt;/el-button&gt;</span><br><span class="line">          &lt;/el-form-item&gt;</span><br><span class="line">        &lt;/el-form&gt;</span><br><span class="line">        &lt;div style=&quot;margin-top:35px;text-align: right;font-size: 15px&quot;&gt;</span><br><span class="line">          还没有账号？请&lt;a href=&quot;/register&quot;&gt;注册&lt;/a&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123;reactive&#125; from &#x27;vue&#x27;</span><br><span class="line"></span><br><span class="line">const data = reactive(&#123;</span><br><span class="line">  form: &#123;&#125;</span><br><span class="line">&#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.login-container &#123;</span><br><span class="line">  min-height: 100vh;</span><br><span class="line">  overflow: hidden;</span><br><span class="line">  display: flex;</span><br><span class="line">  align-items: center;</span><br><span class="line">  justify-content: center;</span><br><span class="line">  background-image: url(&quot;@/assets/imgs/login_background.png&quot;);</span><br><span class="line">  background-size: cover;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.login-box &#123;</span><br><span class="line">  background-color: rgb(255, 255, 255, 50%);</span><br><span class="line">  box-shadow: 0 0 10px rgba(84, 221, 245, 0.41);</span><br><span class="line">  padding: 30px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.title &#123;</span><br><span class="line">  font-weight: bold;</span><br><span class="line">  font-size: 30px;</span><br><span class="line">  text-align: center;</span><br><span class="line">  margin-bottom: 35px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="背景图片"><a href="#背景图片" class="headerlink" title="背景图片"></a>背景图片</h3><p>添加一张登录背景图片到<code>/src/assets/imags/login_background.png</code></p><p><a href="https://iconscout.com/free-illustration/children-are-doing-chemical-experiments-10946611">https://iconscout.com/free-illustration/children-are-doing-chemical-experiments-10946611</a></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710082231293-c528b0f7-371d-4f7b-9f01-6d10be6dd257.png"></p><h3 id="路由添加"><a href="#路由添加" class="headerlink" title="路由添加"></a>路由添加</h3><p>在<code>/src/router/index.js</code>中添加一下上面这个<code>Login</code>的路由</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;createRouter, createWebHistory&#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">    <span class="attr">history</span>: <span class="title function_">createWebHistory</span>(<span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">env</span>.<span class="property">BASE_URL</span>),</span><br><span class="line">    <span class="attr">routes</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">            <span class="attr">name</span>: <span class="string">&#x27;Manager&#x27;</span>,</span><br><span class="line">            <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;@/views/Manager.vue&#x27;</span>),</span><br><span class="line">            <span class="attr">redirect</span>: <span class="string">&#x27;/home&#x27;</span>,</span><br><span class="line">            <span class="attr">children</span>: [</span><br><span class="line">                &#123;<span class="attr">path</span>: <span class="string">&#x27;home&#x27;</span>, <span class="attr">name</span>: <span class="string">&#x27;Home&#x27;</span>, <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;@/views/manager/Home.vue&#x27;</span>)&#125;,</span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">path</span>: <span class="string">&#x27;/login&#x27;</span>,</span><br><span class="line">            <span class="attr">name</span>: <span class="string">&#x27;Login&#x27;</span>,</span><br><span class="line">            <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;@/views/Login.vue&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710082953287-5609d967-2864-44d1-ae13-201bfb968727.png"></p><p>通过<a href="http://localhost:5173/login">http://localhost:5173/login</a>可以访问到登录页面</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710083039407-bc17182f-32f8-4ecc-9742-ce9c634f7b6e.png"></p><h3 id="表单校验和登录"><a href="#表单校验和登录" class="headerlink" title="表单校验和登录"></a>表单校验和登录</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;login-container&quot;&gt;</span><br><span class="line">      &lt;div style=&quot;width: 420px&quot; class=&quot;login-box&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;title&quot;&gt;学生信息管理系统 - 登录&lt;/div&gt;</span><br><span class="line">        &lt;el-form :model=&quot;data.form&quot; ref=&quot;formRef&quot; :rules=&quot;rules&quot;&gt;</span><br><span class="line">          &lt;el-form-item prop=&quot;username&quot;&gt;</span><br><span class="line">            &lt;el-input style=&quot;height: 40px;font-size: 18px&quot; prefix-icon=&quot;Avatar&quot; v-model=&quot;data.form.username&quot;</span><br><span class="line">                      placeholder=&quot;请输入账号&quot;/&gt;</span><br><span class="line">          &lt;/el-form-item&gt;</span><br><span class="line">          &lt;el-form-item prop=&quot;password&quot;&gt;</span><br><span class="line">            &lt;el-input show-password style=&quot;height: 40px;font-size: 18px&quot; prefix-icon=&quot;Lock&quot; v-model=&quot;data.form.password&quot;</span><br><span class="line">                      placeholder=&quot;请输入密码&quot;/&gt;</span><br><span class="line">          &lt;/el-form-item&gt;</span><br><span class="line">          &lt;el-form-item&gt;</span><br><span class="line">            &lt;el-button type=&quot;primary&quot; style=&quot;width: 100%;font-size: 18px&quot; @click=&quot;login&quot;&gt;登 录&lt;/el-button&gt;</span><br><span class="line">          &lt;/el-form-item&gt;</span><br><span class="line">        &lt;/el-form&gt;</span><br><span class="line">        &lt;div style=&quot;margin-top:35px;text-align: right;font-size: 15px&quot;&gt;</span><br><span class="line">          还没有账号？请&lt;a href=&quot;/register&quot;&gt;注册&lt;/a&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123;reactive, ref&#125; from &#x27;vue&#x27;</span><br><span class="line">import request from &quot;@/utils/request&quot;;</span><br><span class="line">import &#123;ElMessage&#125; from &quot;element-plus&quot;;</span><br><span class="line">import router from &quot;@/router&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">const data = reactive(&#123;</span><br><span class="line">  form: &#123;&#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">const rules = reactive(&#123;</span><br><span class="line">  username: [</span><br><span class="line">    &#123;required: true, message: &#x27;请输入账号&#x27;, trigger: &#x27;blur&#x27;&#125;</span><br><span class="line">  ],</span><br><span class="line">  password: [</span><br><span class="line">    &#123;required: true, message: &#x27;请输入密码&#x27;, trigger: &#x27;blur&#x27;&#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">const formRef = ref()</span><br><span class="line"></span><br><span class="line">const login = () =&gt; &#123;</span><br><span class="line">  formRef.value.validate((valid) =&gt; &#123;</span><br><span class="line">    if (valid) &#123;</span><br><span class="line">      request.post(&#x27;/login&#x27;, data.form).then(res =&gt; &#123;</span><br><span class="line">        if (res.code === &#x27;200&#x27;) &#123;</span><br><span class="line">          localStorage.setItem(&#x27;student-user&#x27;, JSON.stringify(res.data))</span><br><span class="line">          ElMessage.success(&#x27;登录成功&#x27;)</span><br><span class="line">          router.push(&#x27;/home&#x27;)</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          ElMessage.error(res.msg)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;).catch(err =&gt; &#123;</span><br><span class="line">        ElMessage.error(err.response?.data?.msg || err.message)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.login-container &#123;</span><br><span class="line">  min-height: 100vh;</span><br><span class="line">  overflow: hidden;</span><br><span class="line">  display: flex;</span><br><span class="line">  align-items: center;</span><br><span class="line">  justify-content: center;</span><br><span class="line">  background-image: url(&quot;@/assets/imgs/login_background.png&quot;);</span><br><span class="line">  background-size: cover;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.login-box &#123;</span><br><span class="line">  background-color: rgb(255, 255, 255, 50%);</span><br><span class="line">  box-shadow: 0 0 10px rgba(84, 221, 245, 0.41);</span><br><span class="line">  padding: 30px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.title &#123;</span><br><span class="line">  font-weight: bold;</span><br><span class="line">  font-size: 30px;</span><br><span class="line">  text-align: center;</span><br><span class="line">  margin-bottom: 35px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h2><h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3><h4 id="IDE连接MySQL"><a href="#IDE连接MySQL" class="headerlink" title="IDE连接MySQL"></a>IDE连接MySQL</h4><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710085705678-d51970ce-f35a-4582-95aa-a05156df4838.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710085783761-e03f3a33-edb0-481c-9d8f-747eb9d0d9c4.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710085814318-d7b039ea-490d-41c2-b744-b088af37fe67.png"></p><h4 id="创建库"><a href="#创建库" class="headerlink" title="创建库"></a>创建库</h4><p>首先在数据库中创建一个student_info库</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710085943623-eee4c6a8-24d2-4cbe-af89-fd7badf6485f.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710086149939-85b20d45-d2ce-424c-afcb-af1878495898.png"></p><h4 id="创建admin表"><a href="#创建admin表" class="headerlink" title="创建admin表"></a>创建admin表</h4><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710086214220-4ed6fe62-305d-4b2c-9b1d-ca2e0368d1b7.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710086442240-8393e748-717f-4178-bc73-0fdc64e1a260.png"></p><p>插入一条数据</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710086572996-c8379960-6bc4-4da3-b369-10c788aed8b0.png"></p><h3 id="数据库配置"><a href="#数据库配置" class="headerlink" title="数据库配置"></a>数据库配置</h3><p>查看sqlalchemy官方文档<a href="https://docs.sqlalchemy.org/en/20/dialects/mysql.html#module-sqlalchemy.dialects.mysql.mysqldb">https://docs.sqlalchemy.org/en/20/dialects/mysql.html#module-sqlalchemy.dialects.mysql.mysqldb</a></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710086788369-74f56963-dc07-4175-92fb-afabb26d6919.png"></p><h4 id="requirements-txt"><a href="#requirements-txt" class="headerlink" title="requirements.txt"></a>requirements.txt</h4><p>通过sqlalchemy连接数据库需要增加两个驱动</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fastapi[all]</span><br><span class="line">mysqlclient==2.1.1</span><br><span class="line">SQLAlchemy==2.0.23</span><br></pre></td></tr></table></figure><h4 id="env"><a href="#env" class="headerlink" title=".env"></a>.env</h4><p>在.env文件下添加数据库的配置信息（记得改成你们自己的内容）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">HOST = &quot;localhost&quot;</span><br><span class="line">PORT = &quot;9090&quot;</span><br><span class="line"></span><br><span class="line">MYSQL_DIALECT = &quot;mysql+mysqldb&quot;</span><br><span class="line">MYSQL_HOST = &quot;localhost&quot;</span><br><span class="line">MYSQL_PORT = &quot;3306&quot;</span><br><span class="line">MYSQL_USER = &quot;root&quot;</span><br><span class="line">MYSQL_PASSWORD = &quot;XXXXXX&quot;</span><br><span class="line">MYSQL_DATABASE = &quot;student_info&quot;</span><br></pre></td></tr></table></figure><h4 id="constant-py"><a href="#constant-py" class="headerlink" title="constant.py"></a>constant.py</h4><p>添加数据库配置常量</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.config <span class="keyword">import</span> config</span><br><span class="line"></span><br><span class="line">HOST = config.env.get(<span class="string">&quot;HOST&quot;</span>)</span><br><span class="line">PORT = config.env.get(<span class="string">&quot;PORT&quot;</span>)</span><br><span class="line"></span><br><span class="line">MYSQL_DIALECT = config.env.get(<span class="string">&quot;MYSQL_DIALECT&quot;</span>)</span><br><span class="line">MYSQL_HOST = config.env.get(<span class="string">&quot;MYSQL_HOST&quot;</span>)</span><br><span class="line">MYSQL_PORT = config.env.get(<span class="string">&quot;MYSQL_PORT&quot;</span>)</span><br><span class="line">MYSQL_USER = config.env.get(<span class="string">&quot;MYSQL_USER&quot;</span>)</span><br><span class="line">MYSQL_PASSWORD = config.env.get(<span class="string">&quot;MYSQL_PASSWORD&quot;</span>)</span><br><span class="line">MYSQL_DATABASE = config.env.get(<span class="string">&quot;MYSQL_DATABASE&quot;</span>)</span><br></pre></td></tr></table></figure><h4 id="model-init-py"><a href="#model-init-py" class="headerlink" title="model&#x2F;init.py"></a>model&#x2F;<strong>init</strong>.py</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> create_engine</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> DeclarativeBase, sessionmaker</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.constant <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Base</span>(<span class="title class_ inherited__">DeclarativeBase</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># mysql+mysqldb://&lt;user&gt;:&lt;password&gt;@&lt;host&gt;[:&lt;port&gt;]/&lt;dbname&gt;</span></span><br><span class="line">engine = create_engine(</span><br><span class="line">    <span class="string">f&quot;<span class="subst">&#123;MYSQL_DIALECT&#125;</span>://<span class="subst">&#123;MYSQL_USER&#125;</span>:<span class="subst">&#123;MYSQL_PASSWORD&#125;</span>@<span class="subst">&#123;MYSQL_HOST&#125;</span>:<span class="subst">&#123;MYSQL_PORT&#125;</span>/<span class="subst">&#123;MYSQL_DATABASE&#125;</span>?charset=utf8mb4&quot;</span>,</span><br><span class="line">    echo=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">Base.metadata.create_all(engine)</span><br><span class="line">Session = sessionmaker(bind=engine)</span><br></pre></td></tr></table></figure><h3 id="管理员实体类定义"><a href="#管理员实体类定义" class="headerlink" title="管理员实体类定义"></a>管理员实体类定义</h3><p>在<code>/model</code>下创建一个<code>admin.py</code>文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> pydantic <span class="keyword">import</span> BaseModel</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> Integer, String</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> Mapped, mapped_column</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Base</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Admin</span>(<span class="title class_ inherited__">Base</span>):</span><br><span class="line">    __tablename__ = <span class="string">&quot;admin&quot;</span></span><br><span class="line">    <span class="built_in">id</span>: Mapped[<span class="built_in">int</span>] = mapped_column(Integer, primary_key=<span class="literal">True</span>, nullable=<span class="literal">False</span>)</span><br><span class="line">    username: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    password: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AdminModel</span>(<span class="title class_ inherited__">BaseModel</span>):</span><br><span class="line">    username: <span class="built_in">str</span></span><br><span class="line">    password: <span class="built_in">str</span></span><br></pre></td></tr></table></figure><h3 id="管理员登录的api接口"><a href="#管理员登录的api接口" class="headerlink" title="管理员登录的api接口"></a>管理员登录的api接口</h3><p>为了实现每一个api都能拿到一个连接数据库的session，在<code>/model/__init__.py</code>中实现一个session的获取方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> create_engine</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> DeclarativeBase, sessionmaker</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.constant <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Base</span>(<span class="title class_ inherited__">DeclarativeBase</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># mysql+mysqldb://&lt;user&gt;:&lt;password&gt;@&lt;host&gt;[:&lt;port&gt;]/&lt;dbname&gt;</span></span><br><span class="line">engine = create_engine(</span><br><span class="line">    <span class="string">f&quot;<span class="subst">&#123;MYSQL_DIALECT&#125;</span>://<span class="subst">&#123;MYSQL_USER&#125;</span>:<span class="subst">&#123;MYSQL_PASSWORD&#125;</span>@<span class="subst">&#123;MYSQL_HOST&#125;</span>:<span class="subst">&#123;MYSQL_PORT&#125;</span>/<span class="subst">&#123;MYSQL_DATABASE&#125;</span>?charset=utf8mb4&quot;</span>,</span><br><span class="line">    echo=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">Base.metadata.create_all(engine)</span><br><span class="line">Session = sessionmaker(bind=engine)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_db_session</span>():</span><br><span class="line">    session = Session()</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">yield</span> session</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        session.close()</span><br></pre></td></tr></table></figure><h4 id="adminApi"><a href="#adminApi" class="headerlink" title="adminApi"></a>adminApi</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> Body, Depends</span><br><span class="line"><span class="keyword">from</span> fastapi.encoders <span class="keyword">import</span> jsonable_encoder</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> Result, ResultModel</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session, get_db_session</span><br><span class="line"><span class="keyword">from</span> model.admin <span class="keyword">import</span> AdminModel</span><br><span class="line"><span class="keyword">from</span> service.adminService <span class="keyword">import</span> AdminService</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.post(<span class="params"><span class="string">&quot;/login&quot;</span>, response_model=ResultModel</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">login</span>(<span class="params">admin: AdminModel = Body(<span class="params">...</span>), db_session: Session = Depends(<span class="params">get_db_session</span>)</span>):</span><br><span class="line">    dbadmin = AdminService.login(admin, db_session)</span><br><span class="line">    <span class="keyword">return</span> Result.success(jsonable_encoder(dbadmin))</span><br></pre></td></tr></table></figure><h4 id="adminService"><a href="#adminService" class="headerlink" title="adminService"></a>adminService</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> select</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> UserNotFoundException, PasswordNotMatchException</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session</span><br><span class="line"><span class="keyword">from</span> model.admin <span class="keyword">import</span> Admin, AdminModel</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AdminService</span>:</span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">login</span>(<span class="params">admin: AdminModel, db_session: Session</span>) -&gt; Admin:</span><br><span class="line">        query = select(Admin).where(Admin.username == admin.username)</span><br><span class="line">        result = db_session.execute(query).scalars().first()</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> result:</span><br><span class="line">            <span class="keyword">raise</span> UserNotFoundException(<span class="string">&quot;用户不存在&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> result.password != admin.password:</span><br><span class="line">            <span class="keyword">raise</span> PasswordNotMatchException(<span class="string">&quot;身份验证未通过&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><h4 id="exception"><a href="#exception" class="headerlink" title="exception"></a>exception</h4><p>创建自定义异常的<code>exception</code>的package</p><p>然后创建一个<code>customException.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UserNotFoundException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PasswordNotMatchException</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, message: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.message = message</span><br></pre></td></tr></table></figure><h4 id="exceptionHandler"><a href="#exceptionHandler" class="headerlink" title="exceptionHandler"></a>exceptionHandler</h4><p>在<code>/api</code>包下面创建一个<code>exceptionHandler.py</code>用于处理异常</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> fastapi.encoders <span class="keyword">import</span> jsonable_encoder</span><br><span class="line"><span class="keyword">from</span> starlette.responses <span class="keyword">import</span> JSONResponse</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> Request</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> Result</span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> UserNotFoundException, PasswordNotMatchException</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">UserNotFoundException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">user_not_fount_exception_handler</span>(<span class="params">request: Request, exc: UserNotFoundException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;404&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">404</span>, content=jsonable_encoder(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.exception_handler(<span class="params">PasswordNotMatchException</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">password_not_fount_exception_handler</span>(<span class="params">request: Request, exc: PasswordNotMatchException</span>):</span><br><span class="line">    result = Result.error(code=<span class="string">&quot;401&quot;</span>, msg=exc.message)</span><br><span class="line">    <span class="keyword">return</span> JSONResponse(status_code=<span class="number">401</span>, content=jsonable_encoder(result))</span><br></pre></td></tr></table></figure><h4 id="api-init-py"><a href="#api-init-py" class="headerlink" title="&#x2F;api&#x2F;init.py"></a>&#x2F;api&#x2F;<strong>init</strong>.py</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> FastAPI</span><br><span class="line"></span><br><span class="line">app = FastAPI()</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> adminApi, exceptionHandler</span><br></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><h3 id="postman测试后端接口"><a href="#postman测试后端接口" class="headerlink" title="postman测试后端接口"></a>postman测试后端接口</h3><p>正确登录：</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710090169264-78775744-eb08-4d59-8716-ea72837aa214.png"></p><p>密码错误：</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710090242243-c94a897d-57d8-4a1f-9f75-e5021c671e83.png"></p><p>账号错误：</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710090279026-33ef7189-2ec6-4812-a64d-0e9c4dc036f6.png"></p><h3 id="前后端测试"><a href="#前后端测试" class="headerlink" title="前后端测试"></a>前后端测试</h3><h4 id="跨域问题"><a href="#跨域问题" class="headerlink" title="跨域问题"></a>跨域问题</h4><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710093723455-2a5ba47e-cc59-4337-9bc1-64af595d7676.png"></p><p>发生了跨域CORS的问题</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> FastAPI</span><br><span class="line"><span class="keyword">from</span> starlette.middleware.cors <span class="keyword">import</span> CORSMiddleware</span><br><span class="line"></span><br><span class="line">app = FastAPI()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 跨域问题</span></span><br><span class="line">origins = [<span class="string">&quot;http://localhost:5173&quot;</span>, <span class="string">&quot;http://127.0.0.1:5173&quot;</span>]  <span class="comment"># 替换为你的前端应用的实际地址</span></span><br><span class="line"></span><br><span class="line">app.add_middleware(</span><br><span class="line">    CORSMiddleware,</span><br><span class="line">    allow_origins=origins,  <span class="comment"># 允许跨域访问的来源域名列表</span></span><br><span class="line">    allow_credentials=<span class="literal">True</span>,  <span class="comment"># 是否允许携带cookie</span></span><br><span class="line">    allow_methods=[<span class="string">&quot;*&quot;</span>],  <span class="comment"># 允许的方法，默认包含常见的GET、POST等，&quot;*&quot;表示所有方法</span></span><br><span class="line">    allow_headers=[<span class="string">&quot;*&quot;</span>],  <span class="comment"># 允许的请求头，默认包含常见的Content-Type等，&quot;*&quot;表示所有请求头</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> adminApi, exceptionHandler</span><br></pre></td></tr></table></figure><p>正确账号密码：</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710094075420-b59a37ac-a447-49b0-a88a-712414a6e96c.png"></p><p>错误账号：</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710094119593-32a92c73-05cc-4ca8-a4e4-91c040c6a693.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710094126043-4277dec3-a187-4520-915b-89fbc42be75b.png"></p><p>错误密码：</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710094143695-dd039dad-c6a9-4693-878b-a7749cb52dd3.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710094152200-0402f3c8-7a81-49bc-9f4a-fb667b4e0ea3.png"></p><h2 id="数据库密码"><a href="#数据库密码" class="headerlink" title="数据库密码"></a>数据库密码</h2><p>为了安全，数据库中的password不应该以明文显示，需要做个加密</p><p>这里需要使用到一个库 bcrypt</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">fastapi[all]</span><br><span class="line">mysqlclient==2.1.1</span><br><span class="line">SQLAlchemy==2.0.23</span><br><span class="line">bcrypt==4.1.1</span><br></pre></td></tr></table></figure><h3 id="密码加密"><a href="#密码加密" class="headerlink" title="密码加密"></a>密码加密</h3><p>通过<code>hashed_pw = bcrypt.hashpw(password.encode(), bcrypt.gensalt())</code> 依据生成的盐值，生成hash后的密码值，结果是字节码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">(venv) ➜  studentbackend python3</span><br><span class="line">Python 3.10.11 (v3.10.11:7d4cc5aa85, Apr  4 2023, 19:05:19) [Clang 13.0.0 (clang-1300.0.29.30)] on darwin</span><br><span class="line">Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.</span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; import bcrypt</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; password = <span class="string">&quot;admin&quot;</span></span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; hashed_pw = bcrypt.hashpw(password.encode(), bcrypt.gensalt())</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; <span class="built_in">print</span>(hashed_pw)</span></span><br><span class="line">b&#x27;$2b$12$ttbSmj8jD5rW/c0XdkBZyOZI5F7GP.kMuBMWgE2.yyzreJCWdwAum&#x27;</span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; <span class="built_in">print</span>(hashed_pw.decode(<span class="string">&#x27;utf-8&#x27;</span>))</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">2b$12<span class="variable">$ttbSmj8jD5rW</span>/c0XdkBZyOZI5F7GP.kMuBMWgE2.yyzreJCWdwAum</span></span><br></pre></td></tr></table></figure><p>将密码对应的加密密码 <code>$2b$12$ttbSmj8jD5rW/c0XdkBZyOZI5F7GP.kMuBMWgE2.yyzreJCWdwAum</code> 替换到数据库中的admin账号中（这一步操作其实应该是，在注册的时候将这个密码值写入数据库de~）</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710184351868-37a0e9d3-2535-43d8-9b1c-3a43e9b36be7.png"></p><h3 id="密码验证"><a href="#密码验证" class="headerlink" title="密码验证"></a>密码验证</h3><p>通过<code>bcrypt.check(check_pw.encode(), hashed_pw)</code>检验密码是否匹配</p><p>给Admin实体类定义一个密码检查方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">import</span> bcrypt</span><br><span class="line"><span class="keyword">from</span> pydantic <span class="keyword">import</span> BaseModel</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> Integer, String</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> Mapped, mapped_column</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Base</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Admin</span>(<span class="title class_ inherited__">Base</span>):</span><br><span class="line">    __tablename__ = <span class="string">&quot;admin&quot;</span></span><br><span class="line">    <span class="built_in">id</span>: Mapped[<span class="built_in">int</span>] = mapped_column(Integer, primary_key=<span class="literal">True</span>, nullable=<span class="literal">False</span>)</span><br><span class="line">    username: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    password: Mapped[<span class="built_in">str</span>] = mapped_column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">password_check</span>(<span class="params">self, password</span>):</span><br><span class="line">        <span class="keyword">return</span> bcrypt.checkpw(password.encode(), <span class="variable language_">self</span>.password.encode())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AdminModel</span>(<span class="title class_ inherited__">BaseModel</span>):</span><br><span class="line">    username: <span class="built_in">str</span></span><br><span class="line">    password: <span class="built_in">str</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> select</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> exception.customException <span class="keyword">import</span> UserNotFoundException, PasswordNotMatchException</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Session</span><br><span class="line"><span class="keyword">from</span> model.admin <span class="keyword">import</span> Admin, AdminModel</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AdminService</span>:</span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">login</span>(<span class="params">admin: AdminModel, db_session: Session</span>) -&gt; Admin:</span><br><span class="line">        query = select(Admin).where(Admin.username == admin.username)</span><br><span class="line">        result = db_session.execute(query).scalars().first()</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> result:</span><br><span class="line">            <span class="keyword">raise</span> UserNotFoundException(<span class="string">&quot;用户不存在&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> result.password_check(admin.password) <span class="keyword">is</span> <span class="literal">False</span>:</span><br><span class="line">            <span class="keyword">raise</span> PasswordNotMatchException(<span class="string">&quot;身份验证未通过&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><h3 id="前后端测试-1"><a href="#前后端测试-1" class="headerlink" title="前后端测试"></a>前后端测试</h3><p>密码错误：</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710185314797-f8b42918-353f-44ff-86e3-16a92834f391.png"></p><p>密码正确：</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710185361178-79c22824-8f0c-4bd0-8aa8-12e477bfd4fb.png"></p><hr><blockquote><p>更新: 2024-05-03 22:08:05<br>原文: <a href="https://www.yuque.com/zacharyblock/iacda/qhg30r2hbk5wb58m">https://www.yuque.com/zacharyblock/iacda/qhg30r2hbk5wb58m</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> FastAPI入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Vue3 </tag>
            
            <tag> FastAPI </tag>
            
            <tag> 实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FastAPI入门-环境及项目初始化</title>
      <link href="/2024/05/03/FastAPI%E5%85%A5%E9%97%A8/%E7%8E%AF%E5%A2%83%E5%8F%8A%E9%A1%B9%E7%9B%AE%E5%88%9D%E5%A7%8B%E5%8C%96/"/>
      <url>/2024/05/03/FastAPI%E5%85%A5%E9%97%A8/%E7%8E%AF%E5%A2%83%E5%8F%8A%E9%A1%B9%E7%9B%AE%E5%88%9D%E5%A7%8B%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h1 id="环境及项目初始化"><a href="#环境及项目初始化" class="headerlink" title="环境及项目初始化"></a>环境及项目初始化</h1><h1 id="环境介绍"><a href="#环境介绍" class="headerlink" title="环境介绍"></a>环境介绍</h1><p>开发环境版本：</p><p><font style="color:rgb(63, 74, 84);">Python3.10.11、Node.js16.9.0、Vue3、MySQL5.7.31</font></p><h1 id="官方文档"><a href="#官方文档" class="headerlink" title="官方文档"></a><font style="color:rgb(63, 74, 84);">官方文档</font></h1><p>Node.js：<a href="https://nodejs.org/en">https://nodejs.org/en</a></p><p>Vue：<a href="https://cn.vuejs.org/">https://cn.vuejs.org/</a></p><p>Vite：<a href="https://cn.vitejs.dev/guide/">https://cn.vitejs.dev/guide/</a></p><p>Element-Plus：<a href="https://element-plus.org/zh-CN/">https://element-plus.org/zh-CN/</a></p><p>FastAPI：<a href="https://fastapi.tiangolo.com/zh/">https://fastapi.tiangolo.com/zh/</a></p><p>SQLAlchemy：<a href="https://docs.sqlalchemy.org/en/20/dialects/mysql.html#module-sqlalchemy.dialects.mysql.mysqldb">https://docs.sqlalchemy.org/en/20/dialects/mysql.html#module-sqlalchemy.dialects.mysql.mysqldb</a></p><p>图片素材库：<a href="https://iconscout.com/">https://iconscout.com/</a></p><h1 id="前端-Vue"><a href="#前端-Vue" class="headerlink" title="前端 Vue"></a>前端 Vue</h1><h3 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h3><p>进入官网 <a href="https://nodejs.org/download/release/v16.19.0/">https://nodejs.org/download/release/v16.19.0/</a>安装好 node.js</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710063799995-b795f9b2-b844-4281-aa06-797eaeb7540e.png"></p><h3 id="安装-vue-cli"><a href="#安装-vue-cli" class="headerlink" title="安装 vue-cli"></a>安装 vue-cli</h3><p>然后使用<code>npm install -g @vue/cli</code>命令安装 vue-cli</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710064251821-6359ed25-0048-4327-9665-92d9427cc4c4.png"></p><h3 id="创建-vue-项目"><a href="#创建-vue-项目" class="headerlink" title="创建 vue 项目"></a>创建 vue 项目</h3><p>使用 vite 进行构建</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710064798538-2fcb3e12-aba3-4b83-8f7a-22bbcd4bb066.png"></p><p>通过<code>npm create vite@latest studentfontend -- --template vue</code>构建前端项目</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ cd Documents/PythonCode</span><br><span class="line">➜  PythonCode mkdir studentProject</span><br><span class="line">➜  PythonCode cd studentProject</span><br><span class="line">➜  studentProject npm create vite@latest studentfontend -- --template vue</span><br><span class="line"></span><br><span class="line">Scaffolding project in /Users/zachary/Documents/PythonCode/studentProject/studentfontend...</span><br><span class="line"></span><br><span class="line">Done. Now run:</span><br><span class="line"></span><br><span class="line">  cd studentfontend</span><br><span class="line">  npm install</span><br><span class="line">  npm run dev</span><br><span class="line"></span><br><span class="line">➜  studentProject cd studentfontend</span><br><span class="line">➜  studentfontend ls</span><br><span class="line">README.md      package.json   src</span><br><span class="line">index.html     public         vite.config.js</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710065004239-161031a6-9bc3-4c47-8591-6a6cf76114a5.png"></p><h3 id="npm-源"><a href="#npm-源" class="headerlink" title="npm 源"></a>npm 源</h3><p>如果 npm 命令运行的时候很卡的话，尝试换源</p><p><code>npm config set registry [https://registry.npmmirror.com](https://registry.npmmirror.com)</code></p><h3 id="打开-vue-项目"><a href="#打开-vue-项目" class="headerlink" title="打开 vue 项目"></a>打开 vue 项目</h3><p>使用 WebStorm 打开创建好的前端项目</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710065436602-f66e538b-cdcc-4f8a-a0b0-1fde6cc990e9.png"></p><p>先什么都不做，尝试把项目运行起来</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">➜  studentfontend npm install</span><br><span class="line">npm WARN EBADENGINE Unsupported engine &#123;</span><br><span class="line">npm WARN EBADENGINE   package: &#x27;@vitejs/plugin-vue@5.0.4&#x27;,</span><br><span class="line">npm WARN EBADENGINE   required: &#123; node: &#x27;^18.0.0 || &gt;=20.0.0&#x27; &#125;,</span><br><span class="line">npm WARN EBADENGINE   current: &#123; node: &#x27;v16.19.0&#x27;, npm: &#x27;8.19.3&#x27; &#125;</span><br><span class="line">npm WARN EBADENGINE &#125;</span><br><span class="line">npm WARN EBADENGINE Unsupported engine &#123;</span><br><span class="line">npm WARN EBADENGINE   package: &#x27;rollup@4.12.1&#x27;,</span><br><span class="line">npm WARN EBADENGINE   required: &#123; node: &#x27;&gt;=18.0.0&#x27;, npm: &#x27;&gt;=8.0.0&#x27; &#125;,</span><br><span class="line">npm WARN EBADENGINE   current: &#123; node: &#x27;v16.19.0&#x27;, npm: &#x27;8.19.3&#x27; &#125;</span><br><span class="line">npm WARN EBADENGINE &#125;</span><br><span class="line">npm WARN EBADENGINE Unsupported engine &#123;</span><br><span class="line">npm WARN EBADENGINE   package: &#x27;vite@5.1.5&#x27;,</span><br><span class="line">npm WARN EBADENGINE   required: &#123; node: &#x27;^18.0.0 || &gt;=20.0.0&#x27; &#125;,</span><br><span class="line">npm WARN EBADENGINE   current: &#123; node: &#x27;v16.19.0&#x27;, npm: &#x27;8.19.3&#x27; &#125;</span><br><span class="line">npm WARN EBADENGINE &#125;</span><br><span class="line"></span><br><span class="line">up to date in 649ms</span><br><span class="line">➜  studentfontend npm run dev</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">studentfontend@0.0.0 dev</span></span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">vite</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  VITE v5.1.5  ready in 814 ms</span><br><span class="line"></span><br><span class="line">  ➜  Local:   http://127.0.0.1:5173/</span><br><span class="line">  ➜  Network: use --host to expose</span><br><span class="line">  ➜  press h + enter to show help</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710065907865-bf45b0ec-1f33-4399-8013-ee1cd9a85c30.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710065926633-560bff63-2de0-4f09-bcd8-921fdad2ad7a.png"></p><h3 id="项目整改"><a href="#项目整改" class="headerlink" title="项目整改"></a>项目整改</h3><p>现在我们把这个项目做好看些，为了学生信息管理系统做准备的，</p><p>需要把路由写好，同时修改主题色，还有 request http 的请求封装，选择一个自己喜欢的页面标题及 icon</p><h4 id="index-html"><a href="#index-html" class="headerlink" title="index.html"></a>index.html</h4><p>修改项目下的 index.html 文件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/favicon.ico&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>学生信息管理系统<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;module&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/src/main.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="css-imgs"><a href="#css-imgs" class="headerlink" title="css&amp;imgs"></a>css&amp;imgs</h4><p>删除<code>/assets</code>下的<code>vue.svg</code></p><p>在<code>/src/assets</code>路径下创建一个<code>css</code>和<code>imgs</code>目录</p><p>在创建好的<code>/css</code>目录下分别创建<code>global.css</code>和<code>index.scss</code></p><p>全局 css 样式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#252424</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.card</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主题色配置文件</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@forward</span> <span class="string">&quot;element-plus/theme-chalk/src/common/var.scss&quot;</span> with (</span><br><span class="line">  $<span class="attribute">colors</span>: (</span><br><span class="line">    <span class="string">&quot;primary&quot;</span>: (</span><br><span class="line">      <span class="string">&quot;base&quot;</span>: #<span class="number">0</span>a7fce</span><br><span class="line">    ),</span><br><span class="line">    <span class="string">&quot;success&quot;</span>: (</span><br><span class="line">      <span class="string">&quot;base&quot;</span>: #<span class="number">08</span>b41f</span><br><span class="line">    ),</span><br><span class="line">    <span class="string">&quot;warning&quot;</span>: (</span><br><span class="line">      <span class="string">&quot;base&quot;</span>: #e8af56</span><br><span class="line">    ),</span><br><span class="line">    <span class="string">&quot;danger&quot;</span>: (</span><br><span class="line">      <span class="string">&quot;base&quot;</span>: #ef3030</span><br><span class="line">    ),</span><br><span class="line">    <span class="string">&quot;info&quot;</span>: (</span><br><span class="line">      <span class="string">&quot;base&quot;</span>: #<span class="number">5</span>d66ea</span><br><span class="line">    )</span><br><span class="line">  )</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h4 id="路由设置"><a href="#路由设置" class="headerlink" title="路由设置"></a>路由设置</h4><p>在<code>/src</code>路径下创建一个<code>router</code>目录，在其中创建一个<code>index.js</code>文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHistory &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">history</span>: <span class="title function_">createWebHistory</span>(<span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">env</span>.<span class="property">BASE_URL</span>),</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;Manager&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/Manager.vue&quot;</span>),</span><br><span class="line">      <span class="attr">redirect</span>: <span class="string">&quot;/home&quot;</span>,</span><br><span class="line">      <span class="attr">children</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;home&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Home&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/manager/Home.vue&quot;</span>),</span><br><span class="line">        &#125;,</span><br><span class="line">      ],</span><br><span class="line">    &#125;,</span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router;</span><br></pre></td></tr></table></figure><h4 id="request-请求"><a href="#request-请求" class="headerlink" title="request 请求"></a>request 请求</h4><p><code>/src</code>路径下创建一个<code>utils</code>目录，在其中创建一个<code>request.js</code>文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ElMessage</span> &#125; <span class="keyword">from</span> <span class="string">&quot;element-plus&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&quot;../router&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&quot;axios&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> request = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">  <span class="attr">baseURL</span>: <span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">env</span>.<span class="property">VITE_BASE_URL</span>,</span><br><span class="line">  <span class="attr">timeout</span>: <span class="number">30000</span>, <span class="comment">// 后台接口超时时间设置</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// request 拦截器</span></span><br><span class="line"><span class="comment">// 可以自请求发送前对请求做一些处理</span></span><br><span class="line">request.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(</span><br><span class="line">  <span class="function">(<span class="params">config</span>) =&gt;</span> &#123;</span><br><span class="line">    config.<span class="property">headers</span>[<span class="string">&quot;Content-Type&quot;</span>] = <span class="string">&quot;application/json;charset=utf-8&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> config;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">// response 拦截器</span></span><br><span class="line"><span class="comment">// 可以在接口响应后统一处理结果</span></span><br><span class="line">request.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(</span><br><span class="line">  <span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> res = response.<span class="property">data</span>;</span><br><span class="line">    <span class="comment">// 如果是返回的文件</span></span><br><span class="line">    <span class="keyword">if</span> (response.<span class="property">config</span>.<span class="property">responseType</span> === <span class="string">&quot;blob&quot;</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 兼容服务端返回的字符串数据</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> res === <span class="string">&quot;string&quot;</span>) &#123;</span><br><span class="line">      res = res ? <span class="title class_">JSON</span>.<span class="title function_">parse</span>(res) : res;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 当权限验证不通过的时候给出提示</span></span><br><span class="line">    <span class="keyword">if</span> (res.<span class="property">code</span> === <span class="string">&quot;401&quot;</span>) &#123;</span><br><span class="line">      <span class="title class_">ElMessage</span>.<span class="title function_">error</span>(res.<span class="property">msg</span>);</span><br><span class="line">      router.<span class="title function_">push</span>(<span class="string">&quot;/login&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;err&quot;</span> + error);</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> request;</span><br></pre></td></tr></table></figure><h4 id="views"><a href="#views" class="headerlink" title="views"></a>views</h4><p><code>/src</code>路径下的<code>/components</code>修改为<code>/views</code>目录，将其中的<code>HelloWorld.vue</code>修改成<code>Manager.vue</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div</span><br><span class="line">      style=&quot;height: 60px; background-color: #eae8e8; display: flex; align-items: center; border-bottom: 1px solid #c4c2c2&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;div style=&quot;flex: 1&quot;&gt;</span><br><span class="line">        &lt;div style=&quot;padding-left: 20px; display: flex; align-items: center&quot;&gt;</span><br><span class="line">          &lt;img src=&quot;@/assets/imgs/logo.png&quot; alt=&quot;&quot; style=&quot;width: 40px&quot; /&gt;</span><br><span class="line">          &lt;div style=&quot;font-weight: bold; font-size: 24px; margin-left: 5px&quot;&gt;</span><br><span class="line">            学生信息管理系统</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        style=&quot;width: fit-content; padding-right: 10px; display: flex; align-items: center;&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;img</span><br><span class="line">          src=&quot;https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png&quot;</span><br><span class="line">          alt=&quot;&quot;</span><br><span class="line">          style=&quot;width: 40px; height: 40px&quot;</span><br><span class="line">        /&gt;</span><br><span class="line">        &lt;span style=&quot;margin-left: 5px&quot;&gt;管理员&lt;/span&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div style=&quot;display: flex&quot;&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        style=&quot;width: 200px; border-right: 1px solid #f3eeee; min-height: calc(100vh - 60px)&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;el-menu</span><br><span class="line">          router</span><br><span class="line">          style=&quot;border: none&quot;</span><br><span class="line">          :default-active=&quot;$route.path&quot;</span><br><span class="line">          :default-openeds=&quot;[&#x27;/home&#x27;]&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          &lt;el-menu-item index=&quot;/home&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;&lt;HomeFilled /&gt;&lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;系统首页&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line">          &lt;el-menu-item index=&quot;/person&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;&lt;User /&gt;&lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;个人资料&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line">          &lt;el-menu-item index=&quot;login&quot; @click=&quot;logout&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;&lt;SwitchButton /&gt;&lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;退出系统&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line">        &lt;/el-menu&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">      &lt;div style=&quot;flex: 1; width: 0; background-color: #eaeaee; padding: 10px&quot;&gt;</span><br><span class="line">        &lt;router-view /&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; useRoute &#125; from &quot;vue-router&quot;;</span><br><span class="line">const $route = useRoute();</span><br><span class="line">console.log($route.path);</span><br><span class="line"></span><br><span class="line">const logout = () =&gt; &#123;</span><br><span class="line">  localStorage.removeItem(&quot;student-user&quot;);</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.el-menu-item.is-active &#123;</span><br><span class="line">  background-color: #c3d7d3 !important;</span><br><span class="line">&#125;</span><br><span class="line">.el-menu-item:hover &#123;</span><br><span class="line">  color: #0c98d5;</span><br><span class="line">&#125;</span><br><span class="line">:deep(th) &#123;</span><br><span class="line">  color: #333;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>接着在<code>/src/views</code>路径下创建一个<code>manager</code>目录，在其中创建一个<code>Home.vue</code>文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;welcome-container&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;custom-card bg-white shadow rounded p-4 mb-5&quot;&gt;</span><br><span class="line">      &lt;h2 class=&quot;text-center text-primary&quot;&gt;欢迎来到本系统&lt;/h2&gt;</span><br><span class="line">      &lt;p class=&quot;text-center mt-3&quot;&gt;</span><br><span class="line">        您好 &lt;span :style=&quot;&#123; color: &#x27;#116ca9&#x27; &#125;&quot;&gt;&#123;&#123; user.username &#125;&#125;&lt;/span</span><br><span class="line">        &gt;，祝您使用愉快！</span><br><span class="line">      &lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import request from &quot;@/utils/request&quot;;</span><br><span class="line"></span><br><span class="line">const user = JSON.parse(localStorage.getItem(&quot;student-user&quot;) || &quot;&#123;&#125;&quot;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.welcome-container &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  justify-content: center;</span><br><span class="line">  align-items: center;</span><br><span class="line">  min-height: calc(100vh - 100px); /* 根据实际项目需要调整高度 */</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.custom-card &#123;</span><br><span class="line">  max-width: 400px;</span><br><span class="line">  border: none;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h4 id="App-vue"><a href="#App-vue" class="headerlink" title="App.vue"></a>App.vue</h4><p>修改项目中的<code>/src/App.vue</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;RouterView /&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><h4 id="main-js"><a href="#main-js" class="headerlink" title="main.js"></a>main.js</h4><p>修改项目中的<code>/src/main.js</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&quot;./App.vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&quot;./router&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ElementPlus</span> <span class="keyword">from</span> <span class="string">&quot;element-plus&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> zhCn <span class="keyword">from</span> <span class="string">&quot;element-plus/dist/locale/zh-cn.mjs&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="title class_">ElementPlusIconsVue</span> <span class="keyword">from</span> <span class="string">&quot;@element-plus/icons-vue&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;@/assets/css/global.css&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">createApp</span>(<span class="title class_">App</span>);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(router);</span><br><span class="line">app.<span class="title function_">use</span>(<span class="title class_">ElementPlus</span>, &#123;</span><br><span class="line">  <span class="attr">locale</span>: zhCn,</span><br><span class="line">&#125;);</span><br><span class="line">app.<span class="title function_">mount</span>(<span class="string">&quot;#app&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> [key, component] <span class="keyword">of</span> <span class="title class_">Object</span>.<span class="title function_">entries</span>(<span class="title class_">ElementPlusIconsVue</span>)) &#123;</span><br><span class="line">  app.<span class="title function_">component</span>(key, component);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="env"><a href="#env" class="headerlink" title=".env"></a>.env</h4><p>在项目路径下创建两个文件<code>.env.development</code>、<code>.env.production</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VITE_BASE_URL=&#x27;http://localhost:9090&#x27;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VITE_BASE_URL=&#x27;http://:9090&#x27;</span><br></pre></td></tr></table></figure><h4 id="json-配置"><a href="#json-配置" class="headerlink" title="json 配置"></a>json 配置</h4><p>修改项目路径下的文件：<code>package.json</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;studentfontend&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;private&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;dev&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vite&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;build&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vite build&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;preview&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vite preview&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;dependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;@element-plus/icons-vue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.1.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;axios&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.6.2&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;element-plus&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.4.2&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;sass&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.69.5&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;unplugin-element-plus&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.8.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;vue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.3.4&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;vue-router&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.2.5&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;devDependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;@vitejs/plugin-vue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.4.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;unplugin-auto-import&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.16.7&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;unplugin-vue-components&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.25.2&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;vite&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.4.11&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="vite-config-js"><a href="#vite-config-js" class="headerlink" title="vite.config.js"></a>vite.config.js</h4><p>修改项目路径下的文件：<code>vite.config.js</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; fileURLToPath, <span class="variable constant_">URL</span> &#125; <span class="keyword">from</span> <span class="string">&quot;node:url&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; defineConfig &#125; <span class="keyword">from</span> <span class="string">&quot;vite&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> vue <span class="keyword">from</span> <span class="string">&quot;@vitejs/plugin-vue&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">AutoImport</span> <span class="keyword">from</span> <span class="string">&quot;unplugin-auto-import/vite&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Components</span> <span class="keyword">from</span> <span class="string">&quot;unplugin-vue-components/vite&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ElementPlusResolver</span> &#125; <span class="keyword">from</span> <span class="string">&quot;unplugin-vue-components/resolvers&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ElementPlus</span> <span class="keyword">from</span> <span class="string">&quot;unplugin-element-plus/vite&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="title function_">vue</span>(),</span><br><span class="line">    <span class="title class_">AutoImport</span>(&#123;</span><br><span class="line">      <span class="attr">resolvers</span>: [<span class="title class_">ElementPlusResolver</span>(&#123; <span class="attr">importStyle</span>: <span class="string">&quot;sass&quot;</span> &#125;)],</span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="title class_">Components</span>(&#123;</span><br><span class="line">      <span class="attr">resolvers</span>: [<span class="title class_">ElementPlusResolver</span>(&#123; <span class="attr">importStyle</span>: <span class="string">&quot;sass&quot;</span> &#125;)],</span><br><span class="line">    &#125;),</span><br><span class="line"></span><br><span class="line">    <span class="title class_">ElementPlus</span>(&#123;</span><br><span class="line">      <span class="attr">useSource</span>: <span class="literal">true</span>,</span><br><span class="line">    &#125;),</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">resolve</span>: &#123;</span><br><span class="line">    <span class="attr">alias</span>: &#123;</span><br><span class="line">      <span class="string">&quot;@&quot;</span>: <span class="title function_">fileURLToPath</span>(<span class="keyword">new</span> <span class="title function_">URL</span>(<span class="string">&quot;./src&quot;</span>, <span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">url</span>)),</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">css</span>: &#123;</span><br><span class="line">    <span class="attr">preprocessorOptions</span>: &#123;</span><br><span class="line">      <span class="attr">scss</span>: &#123;</span><br><span class="line">        <span class="attr">additionalData</span>: <span class="string">`</span></span><br><span class="line"><span class="string">          @use &quot;@/assets/css/index.scss&quot; as *;</span></span><br><span class="line"><span class="string">        `</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="logo"><a href="#logo" class="headerlink" title="logo"></a>logo</h4><p>修改一下 logo 和标题的 icon</p><p>分别放在<code>/public/favicon.ico</code>和<code>/src/assets/imgs/logo.png</code>路径下</p><p>删除<code>/public/vite.svg</code></p><p>可以去这个网站下载<a href="https://iconscout.com/icons">https://iconscout.com/icons</a></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710072944856-06f0b813-035e-47a6-97bb-4cef728d4d96.png"></p><p><a href="https://iconscout.com/free-icon/library-2642818">https://iconscout.com/free-icon/library-2642818</a>，将该图片保存为<code>/src/assets/imgs/logo.png</code></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710072841938-4d2b4f5c-bdcc-44b1-a9e1-547acad96314.png"></p><p>或者<a href="https://iconscout.com/free-icon/student-79">https://iconscout.com/free-icon/student-79</a></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710073182135-0de083f0-80ed-4581-88cd-4206625351d2.png"></p><p><a href="https://iconscout.com/free-icon/student-reading-2909468">https://iconscout.com/free-icon/student-reading-2909468</a>，保存为<code>/public/favicon.ico</code></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710073454459-14d7fe76-e2e9-42ba-bf66-b053b3361d8b.png"></p><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><h4 id="命令运行"><a href="#命令运行" class="headerlink" title="命令运行"></a>命令运行</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">➜  studentfontend npm install</span><br><span class="line"></span><br><span class="line">added 93 packages, removed 1 package, and changed 5 packages in 16s</span><br><span class="line">➜  studentfontend npm run dev</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">studentfontend@0.0.0 dev</span></span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">vite</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  VITE v4.5.2  ready in 1169 ms</span><br><span class="line"></span><br><span class="line">  ➜  Local:   http://127.0.0.1:5173/</span><br><span class="line">  ➜  Network: use --host to expose</span><br><span class="line">  ➜  press h to show help</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710073748592-e493c9f4-d4e2-4bd4-85b4-8453500970bc.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710081458951-c6a801f9-8eae-46bb-b325-6a19fca7e328.png"></p><h4 id="一键运行"><a href="#一键运行" class="headerlink" title="一键运行"></a>一键运行</h4><p>通过配置一个启动项，便捷运行项目</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710073954088-25c7af70-0be2-4565-bb0e-177becbcb268.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710074006858-4dd1ac08-6ee9-4d53-bfc5-453e64efb6ce.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710074069281-da351ef0-e419-4e68-b63b-039792a9a967.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710074171111-8ac13c5e-13ab-4976-921a-4060b9ff8427.png"></p><hr><h1 id="后端-FastAPI"><a href="#后端-FastAPI" class="headerlink" title="后端 FastAPI"></a>后端 FastAPI</h1><h3 id="创建空项目"><a href="#创建空项目" class="headerlink" title="创建空项目"></a>创建空项目</h3><p>新建一个项目进入 FastAPI 的世界</p><p>先创建项目文件夹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">➜  studentProject ll</span><br><span class="line">total 0</span><br><span class="line">drwxr-xr-x@ 16 zachary  staff   512B  3 10 20:25 studentfontend</span><br><span class="line">➜  studentProject mkdir studentbackend</span><br><span class="line">➜  studentProject ll</span><br><span class="line">total 0</span><br><span class="line">drwxr-xr-x@  2 zachary  staff    64B  3 10 20:41 studentbackend</span><br><span class="line">drwxr-xr-x@ 16 zachary  staff   512B  3 10 20:25 studentfontend</span><br></pre></td></tr></table></figure><p>然后使用 Pycharm 创建一个空项目</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710074648550-44040fe2-4fd2-4567-bd0f-7f7144e8b28c.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710074693683-58e58844-db50-485e-8141-f77ba005143b.png"></p><h3 id="依赖包安装"><a href="#依赖包安装" class="headerlink" title="依赖包安装"></a>依赖包安装</h3><p>需要安装一个 FastAPI 的依赖包</p><h4 id="命令安装"><a href="#命令安装" class="headerlink" title="命令安装"></a>命令安装</h4><p><code>pip install fastapi[all]</code></p><h4 id="requirements-txt-安装"><a href="#requirements-txt-安装" class="headerlink" title="requirements.txt 安装"></a>requirements.txt 安装</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fastapi[all]</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710075023414-21bae007-671a-4c15-86ed-a8266626db4f.png"></p><h3 id="实现一个-api"><a href="#实现一个-api" class="headerlink" title="实现一个 api"></a>实现一个 api</h3><h4 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h4><p>项目目录下创建一个<code>main.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> FastAPI</span><br><span class="line"></span><br><span class="line">app = FastAPI()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.get(<span class="params"><span class="string">&quot;/&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">hello</span>():</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;Hello World&quot;</span>&#125;</span><br></pre></td></tr></table></figure><h4 id="运行-1"><a href="#运行-1" class="headerlink" title="运行"></a>运行</h4><p>需要使用 fastapi 提供的一个<code>uvicorn</code>ASGI 网关服务器来启动 api 服务</p><h5 id="命令运行-1"><a href="#命令运行-1" class="headerlink" title="命令运行"></a>命令运行</h5><p><code>uvicorn main:app --reload</code></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710075474004-85328fc1-6c65-419b-a642-556a371c6d4e.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710075491989-b1ebc0c3-4d85-4e46-acca-76e439fb32f7.png"></p><h5 id="一键运行-1"><a href="#一键运行-1" class="headerlink" title="一键运行"></a>一键运行</h5><ul><li>配置 main 函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">import</span> uvicorn</span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> FastAPI</span><br><span class="line"></span><br><span class="line">app = FastAPI()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.get(<span class="params"><span class="string">&quot;/&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">hello</span>():</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;Hello World&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    uvicorn.run(<span class="string">&quot;main:app&quot;</span>, reload=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710075648021-89cf5781-dc93-4ff2-ae28-3569b7b92cd4.png"></p><ul><li>启动配置项</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710075761116-bff52145-5d69-49fc-b6e4-130f05f659a4.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710075846696-632b2590-c791-48cd-a5f6-1b8ff86cf9df.png"></p><p>以上两种方式均可以实现，具体看个人习惯</p><h3 id="项目整改-1"><a href="#项目整改-1" class="headerlink" title="项目整改"></a>项目整改</h3><h4 id="env-1"><a href="#env-1" class="headerlink" title=".env"></a>.env</h4><p>这个文件用于存放环境变量，包括项目的运行 ip、端口号等，后面的数据库环境变量也在这里存放</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HOST = &quot;localhost&quot;</span><br><span class="line">PORT = &quot;9090&quot;</span><br></pre></td></tr></table></figure><h4 id="common"><a href="#common" class="headerlink" title="common"></a>common</h4><p>在项目路径下创建一个<code>/common</code>的 package，用于实现公共类或者公共方法</p><h5 id="环境变量配置文件"><a href="#环境变量配置文件" class="headerlink" title="环境变量配置文件"></a>环境变量配置文件</h5><p>在<code>/common</code>包下创建一个<code>config.py</code>文件，实现对环境变量的获取</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> pathlib <span class="keyword">import</span> Path</span><br><span class="line"><span class="keyword">from</span> dotenv <span class="keyword">import</span> load_dotenv</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Config</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        dotenv_path = Path(__file__).parent.parent / <span class="string">&quot;.env&quot;</span></span><br><span class="line">        load_dotenv(dotenv_path=dotenv_path)</span><br><span class="line">        <span class="variable language_">self</span>._env = <span class="built_in">dict</span>(os.environ)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">env</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>._env</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">config = Config()</span><br></pre></td></tr></table></figure><p>在<code>/common</code>包下创建一个<code>constant.py</code>文件，用于配置常量</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.config <span class="keyword">import</span> config</span><br><span class="line"></span><br><span class="line">HOST = config.env.get(<span class="string">&quot;HOST&quot;</span>)</span><br><span class="line">PORT = config.env.get(<span class="string">&quot;PORT&quot;</span>)</span><br></pre></td></tr></table></figure><h5 id="返回类-Result"><a href="#返回类-Result" class="headerlink" title="返回类 Result"></a>返回类 Result</h5><p>实现一下 api 的通用返回类，在<code>/common</code>包下创建一个<code>result.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"><span class="keyword">from</span> pydantic <span class="keyword">import</span> BaseModel</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ResultBase</span>:</span><br><span class="line">    code: <span class="built_in">str</span></span><br><span class="line">    msg: <span class="built_in">str</span></span><br><span class="line">    data: <span class="built_in">dict</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ResultModel</span>(BaseModel, ResultBase):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Result</span>(<span class="title class_ inherited__">ResultBase</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, code, msg, data</span>):</span><br><span class="line">        <span class="variable language_">self</span>.code = code</span><br><span class="line">        <span class="variable language_">self</span>.msg = msg</span><br><span class="line">        <span class="variable language_">self</span>.data = data</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">success</span>(<span class="params">cls, data: <span class="built_in">object</span> = <span class="literal">None</span>, code: <span class="built_in">str</span> = <span class="string">&quot;200&quot;</span>, msg: <span class="built_in">str</span> = <span class="string">&quot;success&quot;</span></span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> data:</span><br><span class="line">            data = &#123;&#125;</span><br><span class="line">        <span class="keyword">return</span> cls(code, msg, data)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">error</span>(<span class="params">cls, data: <span class="built_in">object</span> = <span class="literal">None</span>, code: <span class="built_in">str</span> = <span class="string">&quot;500&quot;</span>, msg: <span class="built_in">str</span> = <span class="string">&quot;error&quot;</span></span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> data:</span><br><span class="line">            data = &#123;&#125;</span><br><span class="line">        <span class="keyword">return</span> cls(code, msg, data)</span><br></pre></td></tr></table></figure><h4 id="exception"><a href="#exception" class="headerlink" title="exception"></a>exception</h4><p>创建一个<code>/exception</code>的 package 用于自定义异常</p><h4 id="api"><a href="#api" class="headerlink" title="api"></a>api</h4><p>创建一个<code>/api</code>的 package，用于创建后端的 API，实际就是 Controller 层</p><h5 id="init-py"><a href="#init-py" class="headerlink" title="init.py"></a><strong>init</strong>.py</h5><p>用于创建 FastAPI 应用初始化</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> FastAPI</span><br><span class="line"></span><br><span class="line">app = FastAPI()</span><br></pre></td></tr></table></figure><h5 id="adminApi-py"><a href="#adminApi-py" class="headerlink" title="adminApi.py"></a>adminApi.py</h5><p>创建一个 hello fastapi 接口测试一下项目</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> common.result <span class="keyword">import</span> Result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.get(<span class="params"><span class="string">&quot;/&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">hello</span>():</span><br><span class="line">    <span class="keyword">return</span> Result.success()</span><br></pre></td></tr></table></figure><p>然后新增了一个 api 文件之后需要给 api 的<strong>init</strong>.py 说明一下新增了一个 api 文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> FastAPI</span><br><span class="line"></span><br><span class="line">app = FastAPI()</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> adminApi</span><br></pre></td></tr></table></figure><h4 id="service"><a href="#service" class="headerlink" title="service"></a>service</h4><p>创建一个<code>/service</code>的 package 用于实现 Service 层的业务代码</p><h4 id="model"><a href="#model" class="headerlink" title="model"></a>model</h4><p>创建一个<code>/model</code>的 package 用于实现数据库的映射类</p><h4 id="main"><a href="#main" class="headerlink" title="main"></a>main</h4><p>用于启动 FastAPI 的主入口程序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Zachary</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">import</span> uvicorn</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> common.constant <span class="keyword">import</span> HOST, PORT</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    uvicorn.run(<span class="string">&quot;main:app&quot;</span>, host=HOST, port=<span class="built_in">int</span>(PORT), reload=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><h3 id="运行-2"><a href="#运行-2" class="headerlink" title="运行"></a>运行</h3><p>直接运行 main.py 文件即可</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710079493940-afe468b5-57b5-4875-b3c0-03ff2cf75b03.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38881094/1710085301150-7c6b0c7b-a89a-4bc5-b314-c090850cfcac.png"></p><p>出现这个就是访问成功啦</p><p>至此，我们的前端后端项目就都初始化好了</p><hr><blockquote><p>更新: 2024-05-03 22:13:04<br>原文: <a href="https://www.yuque.com/zacharyblock/iacda/sengqtgphw3hc0hv">https://www.yuque.com/zacharyblock/iacda/sengqtgphw3hc0hv</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> FastAPI入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Vue3 </tag>
            
            <tag> FastAPI </tag>
            
            <tag> 实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FastAPI入门-项目介绍</title>
      <link href="/2024/05/03/FastAPI%E5%85%A5%E9%97%A8/%E9%A1%B9%E7%9B%AE%E4%BB%8B%E7%BB%8D/"/>
      <url>/2024/05/03/FastAPI%E5%85%A5%E9%97%A8/%E9%A1%B9%E7%9B%AE%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<h1 id="项目介绍"><a href="#项目介绍" class="headerlink" title="项目介绍"></a>项目介绍</h1><h1 id="学生信息管理系统——前后端分离"><a href="#学生信息管理系统——前后端分离" class="headerlink" title="学生信息管理系统——前后端分离"></a>学生信息管理系统——前后端分离</h1><h1 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h1><p>后端：FastAPI + SQLAlchemy</p><p>前端：Vue3 + Element-plus</p><p>数据库：MySQL</p><h1 id="所需工具"><a href="#所需工具" class="headerlink" title="所需工具"></a>所需工具</h1><p>Pycharm、WebStorm、Postman</p><h1 id="项目功能"><a href="#项目功能" class="headerlink" title="项目功能"></a>项目功能</h1><h2 id="管理员"><a href="#管理员" class="headerlink" title="管理员"></a>管理员</h2><ul><li>登录</li><li>学生管理</li><li>课程管理</li><li>选课管理</li><li>成绩管理</li></ul><h2 id="学生"><a href="#学生" class="headerlink" title="学生"></a>学生</h2><ul><li>登录、注册</li><li>查看、修改个人信息</li><li>查看课程、选课</li><li>查看成绩</li><li>查看、修改评价</li></ul><h1 id="链接-🔗"><a href="#链接-🔗" class="headerlink" title="链接 🔗"></a>链接 🔗</h1><ul><li>BiliBili：<a href="https://www.bilibili.com/video/BV1Rx4y1U79A/?vd_source=4eb61e12ff64fa3d03cfec0f2eb09ce7">https://www.bilibili.com/video/BV1Rx4y1U79A/?vd_source&#x3D;4eb61e12ff64fa3d03cfec0f2eb09ce7</a></li><li>语雀：[<a href="https://www.yuque.com/zacharyblock/iacda#">https://www.yuque.com/zacharyblock/iacda?#</a> 《PythonLearning》](<a href="https://www.yuque.com/zacharyblock/iacda#">https://www.yuque.com/zacharyblock/iacda?#</a> 《PythonLearning》)</li><li>Github：<ul><li>前端：<a href="https://github.com/BlockZachary/studentfontend">https://github.com/BlockZachary/studentfontend</a></li><li>后端：<a href="https://github.com/BlockZachary/studentbackend">https://github.com/BlockZachary/studentbackend</a></li></ul></li></ul><hr><blockquote><p>更新: 2024-05-26 21:30:46<br>原文: <a href="https://www.yuque.com/zacharyblock/iacda/wlw9b68ykem94qi1">https://www.yuque.com/zacharyblock/iacda/wlw9b68ykem94qi1</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> FastAPI入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Vue3 </tag>
            
            <tag> FastAPI </tag>
            
            <tag> 实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python进阶-异步IO</title>
      <link href="/2023/01/14/Python%E8%BF%9B%E9%98%B6/%E5%BC%82%E6%AD%A5IO/"/>
      <url>/2023/01/14/Python%E8%BF%9B%E9%98%B6/%E5%BC%82%E6%AD%A5IO/</url>
      
        <content type="html"><![CDATA[<h1 id="异步-IO"><a href="#异步-IO" class="headerlink" title="异步 IO"></a>异步 IO</h1><h1 id="协程"><a href="#协程" class="headerlink" title="协程"></a>协程</h1><p>类似于小学时候的一个计算任务，协程就类似于同时做多件家务，烧开水的同时 启动了洗衣机 之后拖地</p><p>而不是烧开水一直等，然后拖地，然后洗衣机等着</p><h2 id="asyncio-模块"><a href="#asyncio-模块" class="headerlink" title="asyncio 模块"></a>asyncio 模块</h2><p>该模块通过一个线程去执行并发任务</p><ul><li><code>async</code></li></ul><p>需要创建一个协程的时候，可以使用 async 关键字将一个函数声明为协程</p><blockquote><p>协程的协有协助之意，协程就是通过一个线程去执行并发，一个任务就是一个协程，也可以是多个任务通过一个协程调用多次来实现</p><p>协程的核心是通过事件循环实现的</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">func</span>():</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><ul><li><code>asyncio.run()</code> 启动一个协程</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">multi</span>(<span class="params">num1: <span class="built_in">int</span>, num2: <span class="built_in">int</span></span>):</span><br><span class="line">    res = num1 * num2</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;num1&#125;</span> * <span class="subst">&#123;num2&#125;</span> = <span class="subst">&#123;res&#125;</span>&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    asyncio.run(multi(<span class="number">3</span>,<span class="number">7</span>))</span><br></pre></td></tr></table></figure><ul><li><code>await</code> 协程中调用另外一个协程</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">multi</span>(<span class="params">num1: <span class="built_in">int</span>, num2: <span class="built_in">int</span></span>):</span><br><span class="line">    res = num1 * num2</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;num1&#125;</span> * <span class="subst">&#123;num2&#125;</span> = <span class="subst">&#123;res&#125;</span>&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">multi_api</span>():</span><br><span class="line">    <span class="keyword">await</span> multi(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    asyncio.run(multi_api())</span><br></pre></td></tr></table></figure><h2 id="创建任务"><a href="#创建任务" class="headerlink" title="创建任务"></a>创建任务</h2><ul><li><code>asyncio.create_task</code><ul><li>先来一个没有实现并发的调用，由时间上的统计来看，是一个串行的实现</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">process</span>(<span class="params">name: <span class="built_in">str</span>, num1: <span class="built_in">int</span></span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;name&#125;</span> started&#x27;</span>)</span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(<span class="number">1</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;name&#125;</span> processing&#x27;</span>)</span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(num1 - <span class="number">1</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;name&#125;</span> finished&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">process_api</span>():</span><br><span class="line">    start = time.perf_counter()</span><br><span class="line">    <span class="keyword">await</span> process(<span class="string">&#x27;task1&#x27;</span>, <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">await</span> process(<span class="string">&#x27;task2&#x27;</span>, <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">await</span> process(<span class="string">&#x27;task3&#x27;</span>, <span class="number">3</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;finished in <span class="subst">&#123;time.perf_counter() - start:<span class="number">.2</span>f&#125;</span> seconds&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    asyncio.run(process_api())</span><br><span class="line"></span><br><span class="line"><span class="comment"># task1 started</span></span><br><span class="line"><span class="comment"># task1 processing</span></span><br><span class="line"><span class="comment"># task1 finished</span></span><br><span class="line"><span class="comment"># task2 started</span></span><br><span class="line"><span class="comment"># task2 processing</span></span><br><span class="line"><span class="comment"># task2 finished</span></span><br><span class="line"><span class="comment"># task3 started</span></span><br><span class="line"><span class="comment"># task3 processing</span></span><br><span class="line"><span class="comment"># task3 finished</span></span><br><span class="line"><span class="comment"># finished in 6.01 seconds</span></span><br></pre></td></tr></table></figure><pre><code>- 通过`asyncio.create_task`实现并发    * create_task返回task对象    * 先不用await    * 再加上await 可以看出时间上运行速度的差距</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">process</span>(<span class="params">name: <span class="built_in">str</span>, num1: <span class="built_in">int</span></span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;name&#125;</span> started&#x27;</span>)</span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(<span class="number">1</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;name&#125;</span> processing&#x27;</span>)</span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(num1 - <span class="number">1</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;name&#125;</span> finished&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">process_api</span>():</span><br><span class="line">    start = time.perf_counter()</span><br><span class="line">    task_1 = asyncio.create_task(process(<span class="string">&#x27;task1&#x27;</span>, <span class="number">1</span>))</span><br><span class="line">    task_2 = asyncio.create_task(process(<span class="string">&#x27;task2&#x27;</span>, <span class="number">2</span>))</span><br><span class="line">    task_3 = asyncio.create_task(process(<span class="string">&#x27;task3&#x27;</span>, <span class="number">3</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># await task_1</span></span><br><span class="line">    <span class="comment"># await task_2</span></span><br><span class="line">    <span class="comment"># await task_3</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;finished in <span class="subst">&#123;time.perf_counter() - start:<span class="number">.10</span>f&#125;</span> seconds&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    asyncio.run(process_api())</span><br></pre></td></tr></table></figure><h2 id="取消任务"><a href="#取消任务" class="headerlink" title="取消任务"></a>取消任务</h2><ul><li><code>Task.done()</code>用于判断任务是否完成</li><li><code>Task.cancel()</code>用于取消一个未完成的任务</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">process</span>(<span class="params">name: <span class="built_in">str</span>, num1: <span class="built_in">int</span></span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;name&#125;</span> started&#x27;</span>)</span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(<span class="number">1</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;name&#125;</span> processing&#x27;</span>)</span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(num1 - <span class="number">1</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;name&#125;</span> finished&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">process_api</span>():</span><br><span class="line">    start = time.perf_counter()</span><br><span class="line">    task_1 = asyncio.create_task(process(<span class="string">&#x27;task1&#x27;</span>, <span class="number">1</span>))</span><br><span class="line">    task_2 = asyncio.create_task(process(<span class="string">&#x27;task2&#x27;</span>, <span class="number">2</span>))</span><br><span class="line">    task_3 = asyncio.create_task(process(<span class="string">&#x27;task3&#x27;</span>, <span class="number">3</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">await</span> task_1</span><br><span class="line">    <span class="keyword">await</span> task_2</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> task_3.done():</span><br><span class="line">        task_3.cancel()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">await</span> task_3</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;finished in <span class="subst">&#123;time.perf_counter() - start:<span class="number">.10</span>f&#125;</span> seconds&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    asyncio.run(process_api())</span><br></pre></td></tr></table></figure><h2 id="超时取消任务"><a href="#超时取消任务" class="headerlink" title="超时取消任务"></a>超时取消任务</h2><ul><li><code>asyncio.wait_for(Task, timeout=time)</code> 用于设定多久未完成任务，取消任务</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">process</span>(<span class="params">name: <span class="built_in">str</span>, num1: <span class="built_in">int</span></span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;name&#125;</span> started&#x27;</span>)</span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(<span class="number">1</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;name&#125;</span> processing&#x27;</span>)</span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(num1 - <span class="number">1</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;name&#125;</span> finished&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">process_api</span>():</span><br><span class="line">    start = time.perf_counter()</span><br><span class="line">    task_1 = asyncio.create_task(process(<span class="string">&#x27;task1&#x27;</span>, <span class="number">3</span>))</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">await</span> asyncio.wait_for(task_1, <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">except</span> asyncio.TimeoutError:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;task1 timeout&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">await</span> task_1</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;finished in <span class="subst">&#123;time.perf_counter() - start:<span class="number">.10</span>f&#125;</span> seconds&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    asyncio.run(process_api())</span><br></pre></td></tr></table></figure><ul><li><code>asyncio.shield(Task)</code>给任务加盾，即使超时了也不会停止任务</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">process</span>(<span class="params">name: <span class="built_in">str</span>, num1: <span class="built_in">int</span></span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;name&#125;</span> started&#x27;</span>)</span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(<span class="number">1</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;name&#125;</span> processing&#x27;</span>)</span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(num1 - <span class="number">1</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;name&#125;</span> finished&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">process_api</span>():</span><br><span class="line">    start = time.perf_counter()</span><br><span class="line">    task_1 = asyncio.create_task(process(<span class="string">&#x27;task1&#x27;</span>, <span class="number">3</span>))</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">await</span> asyncio.wait_for(asyncio.shield(task_1), <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">except</span> asyncio.TimeoutError:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;task1 timeout&#x27;</span>)</span><br><span class="line">        <span class="keyword">await</span> task_1</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;finished in <span class="subst">&#123;time.perf_counter() - start:<span class="number">.10</span>f&#125;</span> seconds&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    asyncio.run(process_api())</span><br></pre></td></tr></table></figure><h2 id="等待多个任务"><a href="#等待多个任务" class="headerlink" title="等待多个任务"></a>等待多个任务</h2><ul><li><code>asyncio.gather(Task1, Task2,...)</code>可以直接并行多个任务等待结束</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">process</span>(<span class="params">name: <span class="built_in">str</span>, num1: <span class="built_in">int</span></span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;name&#125;</span> started&#x27;</span>)</span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(<span class="number">1</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;name&#125;</span> processing&#x27;</span>)</span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(num1 - <span class="number">1</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;name&#125;</span> finished&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;name&#125;</span> finished&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">process_api</span>():</span><br><span class="line">    start = time.perf_counter()</span><br><span class="line">    task_1 = process(<span class="string">&#x27;task_1&#x27;</span>, <span class="number">1</span>)</span><br><span class="line">    task_2 = process(<span class="string">&#x27;task_2&#x27;</span>, <span class="number">2</span>)</span><br><span class="line">    task_3 = process(<span class="string">&#x27;task_3&#x27;</span>, <span class="number">3</span>)</span><br><span class="line">    result = <span class="keyword">await</span> asyncio.gather(task_1, task_2, task_3)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;finished in <span class="subst">&#123;time.perf_counter() - start:<span class="number">.10</span>f&#125;</span> seconds&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    asyncio.run(process_api())</span><br></pre></td></tr></table></figure><h2 id="协程异常"><a href="#协程异常" class="headerlink" title="协程异常"></a>协程异常</h2><ul><li><code>return_exceptions=True</code> 在等待多个任务时，若有异常任务会导致整体主线程的中断，可以使用该参数保持其他任务的正常运行</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">process</span>(<span class="params">name: <span class="built_in">str</span>, num1: <span class="built_in">int</span></span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;name&#125;</span> started&#x27;</span>)</span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(<span class="number">1</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;name&#125;</span> processing&#x27;</span>)</span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(num1 - <span class="number">1</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;name&#125;</span> finished&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;name&#125;</span> finished&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">exception_process</span>():</span><br><span class="line">    <span class="keyword">raise</span> Exception(<span class="string">&#x27;error&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">process_api</span>():</span><br><span class="line">    start = time.perf_counter()</span><br><span class="line">    task_1 = process(<span class="string">&#x27;task_1&#x27;</span>, <span class="number">1</span>)</span><br><span class="line">    task_2 = process(<span class="string">&#x27;task_2&#x27;</span>, <span class="number">2</span>)</span><br><span class="line">    task_error = exception_process()</span><br><span class="line"></span><br><span class="line">    result = <span class="keyword">await</span> asyncio.gather(task_1, task_2, task_error,</span><br><span class="line">                                  return_exceptions=<span class="literal">True</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;finished in <span class="subst">&#123;time.perf_counter() - start:<span class="number">.10</span>f&#125;</span> seconds&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    asyncio.run(process_api())</span><br></pre></td></tr></table></figure><blockquote><p>更新: 2024-05-16 13:20:45<br>原文: <a href="https://www.yuque.com/zacharyblock/cx2om6/oau1f4oo9g509hgz">https://www.yuque.com/zacharyblock/cx2om6/oau1f4oo9g509hgz</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Python进阶 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python进阶-并发</title>
      <link href="/2023/01/11/Python%E8%BF%9B%E9%98%B6/%E5%B9%B6%E5%8F%91/"/>
      <url>/2023/01/11/Python%E8%BF%9B%E9%98%B6/%E5%B9%B6%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<h1 id="并发"><a href="#并发" class="headerlink" title="并发"></a>并发</h1><h1 id="线程"><a href="#线程" class="headerlink" title="线程"></a>线程</h1><h2 id="进程与线程"><a href="#进程与线程" class="headerlink" title="进程与线程"></a>进程与线程</h2><ul><li>一个进程是操作系统中运行的一个任务<ul><li>进程拥有独立的 CPU 和内存资源</li><li>多进程是支持并发的</li></ul></li><li>一个线程是一个进程下运行的一个任务<ul><li>线程之间共享进程的 CPU 和内存资源</li></ul></li></ul><h2 id="创建线程"><a href="#创建线程" class="headerlink" title="创建线程"></a>创建线程</h2><ul><li>使用<code>threading</code>模块中的<code>Thread</code>类创建线程<ul><li><code>start()</code>方法：启动线程</li><li><code>join()</code>方法： 等待线程结束</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">task</span>():</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">        <span class="built_in">print</span>(i)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">thread_1 = Thread(target=task)</span><br><span class="line">thread_2 = Thread(target=task)</span><br><span class="line">thread_1.start()</span><br><span class="line">thread_2.start()</span><br><span class="line"></span><br><span class="line">thread_1.join()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;thread_1 end&quot;</span>)</span><br><span class="line"></span><br><span class="line">thread_2.join()</span><br><span class="line"><span class="built_in">print</span>(“thread_2 end”)</span><br></pre></td></tr></table></figure><pre><code>- 带参数的方法调用使用`args`传入参数</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">task</span>(<span class="params">num: <span class="built_in">int</span></span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(num):</span><br><span class="line">        <span class="built_in">print</span>(i)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">thread_1 = Thread(target=task, args = (<span class="number">5</span>,))</span><br><span class="line">thread_2 = Thread(target=task, args = (<span class="number">10</span>,))</span><br><span class="line">thread_1.start()</span><br><span class="line">thread_2.start()</span><br></pre></td></tr></table></figure><ul><li>通过继承<code>Thread</code>类来创建线程类<ul><li><code>setName()</code>方法可以给线程设置名字</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyThread</span>(<span class="title class_ inherited__">Thread</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name:<span class="built_in">str</span>, num: <span class="built_in">int</span></span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">self</span>.setName(name)</span><br><span class="line">        <span class="variable language_">self</span>.num = num</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="variable language_">self</span>.num):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;self.getName()&#125;</span>: <span class="subst">&#123;i&#125;</span>&quot;</span>)</span><br><span class="line">            time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">thread_1 = MyThread(<span class="string">&quot;A&quot;</span>, <span class="number">5</span>)</span><br><span class="line">thread_2 = MyThread(<span class="string">&quot;B&quot;</span>, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">thread_1.start()</span><br><span class="line">thread_2.start()</span><br></pre></td></tr></table></figure><h2 id="守护线程"><a href="#守护线程" class="headerlink" title="守护线程"></a>守护线程</h2><ul><li>当主线程结束时，守护线程自动结束</li><li>主线程中有非守护线程时，会等待非守护线程执行完才结束</li><li>守护线程一般用于日志等 非关键线程</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 实现方法1</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">task</span>(<span class="params">num: <span class="built_in">int</span></span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(num):</span><br><span class="line">        <span class="built_in">print</span>(i)</span><br><span class="line"></span><br><span class="line">thread_1 = Thread(target=task,args=(<span class="number">5</span>,), daemon=<span class="literal">True</span>)</span><br><span class="line">thread_1.start()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 实现方法2</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyThread</span>(<span class="title class_ inherited__">Thread</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name:<span class="built_in">str</span>, num: <span class="built_in">int</span></span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">self</span>.setName(name)</span><br><span class="line">        <span class="variable language_">self</span>.setDaemon(<span class="literal">True</span>)</span><br><span class="line">        <span class="variable language_">self</span>.num = num</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="variable language_">self</span>.num):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;self.getName()&#125;</span>: <span class="subst">&#123;i&#125;</span>&quot;</span>)</span><br><span class="line">            time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">thread_2 = MyThread(<span class="string">&quot;A&quot;</span>, <span class="number">5</span>)</span><br><span class="line">thread_2.start()</span><br></pre></td></tr></table></figure><h2 id="线程安全队列"><a href="#线程安全队列" class="headerlink" title="线程安全队列"></a>线程安全队列</h2><p>queue 模块中 Queue 类提供了线程安全队列</p><ul><li><code>queue.put(item, block=True)</code><ul><li>block 为 True 当 queue 满了的时候线程会等待，直到有空间 put</li><li>block 为 False 当 queue 满了的时候会抛出异常</li></ul></li><li><code>queue.put(item, timeout=5)</code><ul><li>timeout 当 queue 满了的时候等待 timeout 时长，若还是满着抛出异常，若空闲了则 put</li></ul></li><li><code>queue.get(block=True)</code></li><li><code>queue.get(timeout=5)</code></li><li><code>queue.qsize()</code></li><li><code>queue.empty()</code></li><li><code>queue.full()</code></li></ul><p>通过一个生产者、消费者模型进行演示</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Producer</span>(<span class="title class_ inherited__">Thread</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name:<span class="built_in">str</span>, num: <span class="built_in">int</span>, queue: Queue</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">self</span>.setName(name)</span><br><span class="line">        <span class="variable language_">self</span>.num = num</span><br><span class="line">        <span class="variable language_">self</span>.queue = queue</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="variable language_">self</span>.num):</span><br><span class="line">            item = <span class="string">f&quot;<span class="subst">&#123;self.getName()&#125;</span>: <span class="subst">&#123;i&#125;</span>&quot;</span></span><br><span class="line">            queue.put(item, block=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Consumer</span>(<span class="title class_ inherited__">Thread</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name: <span class="built_in">str</span>, queue: Queue</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">self</span>.setName(name)</span><br><span class="line">        <span class="variable language_">self</span>.queue = queue</span><br><span class="line">        <span class="variable language_">self</span>.setDaemon(<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            item = <span class="variable language_">self</span>.queue.get(block=<span class="literal">True</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;self.getName()&#125;</span>-&gt;<span class="subst">&#123;item&#125;</span>\n&quot;</span>, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">queue = Queue(<span class="number">3</span>)</span><br><span class="line">threads = []</span><br><span class="line"></span><br><span class="line">threads.append(Producer(<span class="string">&quot;P1&quot;</span>, <span class="number">5</span>, queue))</span><br><span class="line">threads.append(Producer(<span class="string">&quot;P2&quot;</span>, <span class="number">5</span>, queue))</span><br><span class="line">threads.append(Producer(<span class="string">&quot;P3&quot;</span>, <span class="number">5</span>, queue))</span><br><span class="line"></span><br><span class="line">threads.append(Consumer(<span class="string">&quot;C1&quot;</span>, queue))</span><br><span class="line">threads.append(Consumer(<span class="string">&quot;C1&quot;</span>, queue))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> thread <span class="keyword">in</span> threads:</span><br><span class="line">    thread.start()</span><br></pre></td></tr></table></figure><h1 id="线程锁"><a href="#线程锁" class="headerlink" title="线程锁"></a>线程锁</h1><p>多个线程同一时刻访问同一资源时，会出现竞争的现象，容易造成数据的丢失、覆盖等问题</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">task</span>(<span class="params">name: <span class="built_in">str</span></span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;name&#125;</span>: 1\n&quot;</span>, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;name&#125;</span>: 2\n&quot;</span>, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;name&#125;</span>: 3\n&quot;</span>, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">thread_1 = Thread(target=task, args=(<span class="string">&quot;A&quot;</span>,))</span><br><span class="line">thread_2 = Thread(target=task, args=(<span class="string">&quot;B&quot;</span>,))</span><br><span class="line">thread_3 = Thread(target=task, args=(<span class="string">&quot;C&quot;</span>,))</span><br><span class="line"></span><br><span class="line">threads = [thread_1, thread_2, thread_3]</span><br><span class="line"><span class="keyword">for</span> thread <span class="keyword">in</span> threads:</span><br><span class="line">    thread.start()</span><br></pre></td></tr></table></figure><p>可以使用锁来解决这一问题</p><ul><li>Lock<ul><li><code>lock.acquire()</code>获取锁，当一个锁对象中的锁被获取了，另一个需要获取的需要等待</li><li><code>lock.release()</code>释放锁</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">lock = Lock()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">task</span>(<span class="params">name: <span class="built_in">str</span></span>):</span><br><span class="line">    <span class="keyword">global</span> lock</span><br><span class="line">    lock.acquire()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;name&#125;</span>: 1\n&quot;</span>, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;name&#125;</span>: 2\n&quot;</span>, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;name&#125;</span>: 3\n&quot;</span>, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">    lock.release()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">thread_1 = Thread(target=task, args=(<span class="string">&quot;A&quot;</span>,))</span><br><span class="line">thread_2 = Thread(target=task, args=(<span class="string">&quot;B&quot;</span>,))</span><br><span class="line">thread_3 = Thread(target=task, args=(<span class="string">&quot;C&quot;</span>,))</span><br><span class="line"></span><br><span class="line">threads = [thread_1, thread_2, thread_3]</span><br><span class="line"><span class="keyword">for</span> thread <span class="keyword">in</span> threads:</span><br><span class="line">    thread.start()</span><br></pre></td></tr></table></figure><ul><li>Condition<ul><li><code>acquire()</code></li><li><code>release()</code></li><li><code>wait()</code> 等待锁的释放</li><li><code>notify_all()</code> 通知其他等待锁的线程</li></ul></li></ul><p>自己实现一个线程安全队列</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MySafeQueue</span>():</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, size: <span class="built_in">int</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.__queue = []</span><br><span class="line">        <span class="variable language_">self</span>.size = size</span><br><span class="line">        <span class="variable language_">self</span>.__lock = Condition()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">put</span>(<span class="params">self, item</span>):</span><br><span class="line">        <span class="variable language_">self</span>.__lock.acquire()</span><br><span class="line">        <span class="keyword">while</span> <span class="built_in">len</span>(<span class="variable language_">self</span>.__queue) &gt;= <span class="variable language_">self</span>.size:</span><br><span class="line">            <span class="variable language_">self</span>.__lock.wait()</span><br><span class="line">        <span class="variable language_">self</span>.__queue.append(item)</span><br><span class="line">        <span class="variable language_">self</span>.__lock.notify_all()</span><br><span class="line">        <span class="variable language_">self</span>.__lock.release()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.__lock.acquire()</span><br><span class="line">        <span class="keyword">while</span> <span class="built_in">len</span>(<span class="variable language_">self</span>.__queue) == <span class="number">0</span>:</span><br><span class="line">            <span class="variable language_">self</span>.__lock.wait()</span><br><span class="line">        item = <span class="variable language_">self</span>.__queue.pop(<span class="number">0</span>)</span><br><span class="line">        <span class="variable language_">self</span>.__lock.notify_all()</span><br><span class="line">        <span class="variable language_">self</span>.__lock.release()</span><br><span class="line">        <span class="keyword">return</span> item</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Producer</span>(<span class="title class_ inherited__">Thread</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name: <span class="built_in">str</span>, num: <span class="built_in">int</span>, queue: MySafeQueue</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">self</span>.setName(name)</span><br><span class="line">        <span class="variable language_">self</span>.num = num</span><br><span class="line">        <span class="variable language_">self</span>.queue = queue</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="variable language_">self</span>.num):</span><br><span class="line">            item = <span class="string">f&quot;<span class="subst">&#123;self.getName()&#125;</span>: <span class="subst">&#123;i&#125;</span>&quot;</span></span><br><span class="line">            queue.put(item)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Consumer</span>(<span class="title class_ inherited__">Thread</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name: <span class="built_in">str</span>, queue: MySafeQueue</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">self</span>.setName(name)</span><br><span class="line">        <span class="variable language_">self</span>.queue = queue</span><br><span class="line">        <span class="variable language_">self</span>.setDaemon(<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            item = <span class="variable language_">self</span>.queue.get()</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;self.getName()&#125;</span>-&gt;<span class="subst">&#123;item&#125;</span>\n&quot;</span>, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">queue = MySafeQueue(<span class="number">3</span>)</span><br><span class="line">threads = []</span><br><span class="line"></span><br><span class="line">threads.append(Producer(<span class="string">&quot;P1&quot;</span>, <span class="number">5</span>, queue))</span><br><span class="line">threads.append(Producer(<span class="string">&quot;P2&quot;</span>, <span class="number">5</span>, queue))</span><br><span class="line">threads.append(Producer(<span class="string">&quot;P3&quot;</span>, <span class="number">5</span>, queue))</span><br><span class="line"></span><br><span class="line">threads.append(Consumer(<span class="string">&quot;C1&quot;</span>, queue))</span><br><span class="line">threads.append(Consumer(<span class="string">&quot;C1&quot;</span>, queue))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> thread <span class="keyword">in</span> threads:</span><br><span class="line">    thread.start()</span><br></pre></td></tr></table></figure><p>锁支持上下文管理器，因此可以改成</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MySafeQueue</span>():</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, size: <span class="built_in">int</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.__queue = []</span><br><span class="line">        <span class="variable language_">self</span>.size = size</span><br><span class="line">        <span class="variable language_">self</span>.__lock = Condition()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">put</span>(<span class="params">self, item</span>):</span><br><span class="line">        <span class="keyword">with</span> <span class="variable language_">self</span>.__lock:</span><br><span class="line">            <span class="keyword">while</span> <span class="built_in">len</span>(<span class="variable language_">self</span>.__queue) &gt;= <span class="variable language_">self</span>.size:</span><br><span class="line">                <span class="variable language_">self</span>.__lock.wait()</span><br><span class="line">            <span class="variable language_">self</span>.__queue.append(item)</span><br><span class="line">            <span class="variable language_">self</span>.__lock.notify_all()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">with</span> <span class="variable language_">self</span>.__lock:</span><br><span class="line">            <span class="keyword">while</span> <span class="built_in">len</span>(<span class="variable language_">self</span>.__queue) == <span class="number">0</span>:</span><br><span class="line">                <span class="variable language_">self</span>.__lock.wait()</span><br><span class="line">            item = <span class="variable language_">self</span>.__queue.pop(<span class="number">0</span>)</span><br><span class="line">            <span class="variable language_">self</span>.__lock.notify_all()</span><br><span class="line">            <span class="keyword">return</span> item</span><br></pre></td></tr></table></figure><h1 id="线程池"><a href="#线程池" class="headerlink" title="线程池"></a>线程池</h1><ul><li>线程的创建和销毁昂贵</li><li>频繁操作（创建与销毁）造成性能低</li><li>线程池的出现使得便于对 Python 的线程进行管理、提高性能</li></ul><h2 id="ThreadPoolExecutor"><a href="#ThreadPoolExecutor" class="headerlink" title="ThreadPoolExecutor"></a>ThreadPoolExecutor</h2><ul><li><code>submit()</code>告诉线程池执行者，启动一个任务，返回值为 future 对象，包含执行结果或者异常<ul><li><code>result()</code></li><li><code>exception()</code></li></ul></li><li><code>map()</code>执行多个任务</li><li><code>shutdown()</code>关闭线程池</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">task</span>(<span class="params">name: <span class="built_in">str</span></span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;name&#125;</span> started&#x27;</span>)</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;name&#125;</span> processed&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;name&#125;</span> finished&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> ThreadPoolExecutor() <span class="keyword">as</span> executor:</span><br><span class="line">    result_1 = executor.submit(task, <span class="string">&#x27;task1&#x27;</span>)</span><br><span class="line">    result_2 = executor.submit(task, <span class="string">&#x27;task2&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(result_1.result())</span><br><span class="line">    <span class="built_in">print</span>(result_2.result())</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> ThreadPoolExecutor() <span class="keyword">as</span> executor:</span><br><span class="line">    result_1 = executor.<span class="built_in">map</span>(task, [<span class="string">&#x27;task3&#x27;</span>, <span class="string">&#x27;task4&#x27;</span>])</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">list</span>(result_1))</span><br></pre></td></tr></table></figure><h1 id="多进程"><a href="#多进程" class="headerlink" title="多进程"></a>多进程</h1><ul><li><code>multiprocessing</code>模块用于提供多进程的实现<ul><li><code>multiprocessing.Process</code>用于创建进程</li><li><code>start()</code>用于启动进程</li><li><code>join()</code>用于等待进程结束</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">task</span>(<span class="params">name: <span class="built_in">str</span>, num: <span class="built_in">int</span></span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;name&#125;</span>:<span class="subst">&#123;num&#125;</span>-&gt;start process\n&#x27;</span>, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">    res = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(num):</span><br><span class="line">        res += i</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;name&#125;</span>:<span class="subst">&#123;num&#125;</span>-&gt;end process, result:<span class="subst">&#123;res&#125;</span>\n&#x27;</span>, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">process_1</span>():</span><br><span class="line">    task_process = multiprocessing.Process(target=task, args=(<span class="string">&quot;task1&quot;</span>, <span class="number">10</span>))</span><br><span class="line">    task_process.start()</span><br><span class="line">    task_process.join()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;process_1 end&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">process_2</span>():</span><br><span class="line">    task_process_args = [(<span class="string">&quot;task2&quot;</span>, <span class="number">10</span>), (<span class="string">&quot;task3&quot;</span>, <span class="number">10</span>), (<span class="string">&quot;task4&quot;</span>, <span class="number">10</span>)]</span><br><span class="line">    task_processes = [multiprocessing.Process(target=task, args=arg) <span class="keyword">for</span> arg <span class="keyword">in</span> task_process_args]</span><br><span class="line">    <span class="keyword">for</span> task_process <span class="keyword">in</span> task_processes:</span><br><span class="line">        task_process.start()</span><br><span class="line">    <span class="keyword">for</span> task_process <span class="keyword">in</span> task_processes:</span><br><span class="line">        task_process.join()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;process_2 end&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    process_1()</span><br><span class="line">    process_2()</span><br></pre></td></tr></table></figure><p>可以使用<code>ps -ef | grep python</code>来查看是否有这么多进程</p><h1 id="进程池"><a href="#进程池" class="headerlink" title="进程池"></a>进程池</h1><ul><li>进程的创建与销毁同样是昂贵的</li><li>频繁地操作（创建与销毁）对性能影响很大</li></ul><h2 id="ProcessPoolExecutor"><a href="#ProcessPoolExecutor" class="headerlink" title="ProcessPoolExecutor"></a>ProcessPoolExecutor</h2><ul><li><code>submit()</code>告诉进程池执行者，启动一个任务，返回值为 future 对象，包含执行结果或者异常<ul><li><code>result()</code></li><li><code>exception()</code></li></ul></li><li><code>map()</code>执行多个进程</li><li><code>shutdown()</code>关闭进程池</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">task</span>(<span class="params">name: <span class="built_in">str</span></span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;name&#125;</span> started&#x27;</span>)</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;name&#125;</span> processed&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;name&#125;</span> finished&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">with</span> ProcessPoolExecutor() <span class="keyword">as</span> executor:</span><br><span class="line">        result_1 = executor.<span class="built_in">map</span>(task, [<span class="string">&#x27;task3&#x27;</span>, <span class="string">&#x27;task4&#x27;</span>])</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">list</span>(result_1))</span><br></pre></td></tr></table></figure><blockquote><p>更新: 2024-05-16 13:18:58<br>原文: <a href="https://www.yuque.com/zacharyblock/cx2om6/man8qrk3tugq2v5t">https://www.yuque.com/zacharyblock/cx2om6/man8qrk3tugq2v5t</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Python进阶 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python进阶-正则表达式</title>
      <link href="/2023/01/11/Python%E8%BF%9B%E9%98%B6/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
      <url>/2023/01/11/Python%E8%BF%9B%E9%98%B6/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h1><ul><li>正则是用于进行字符串内容的<code>验证</code>、<code>匹配</code>或者<code>搜索</code></li><li>是一个相对独立的表达方式</li><li>需要引入<code>re</code>模块 <code>import re</code></li></ul><p>常用的几种 re 方法</p><ul><li><code>re.search()</code></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pattern = <span class="string">r&quot;\d&#123;4&#125;&quot;</span></span><br><span class="line">text = <span class="string">&quot;I was born in 1998&quot;</span></span><br><span class="line">result = re.search(pattern, text)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure><ul><li><code>re.match()</code></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pattern = <span class="string">r&quot;\d&#123;4&#125;&quot;</span></span><br><span class="line">text = <span class="string">&quot;1998 year, I was born&quot;</span></span><br><span class="line">result = re.<span class="keyword">match</span>(pattern, text)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure><ul><li><code>re.fullmatch()</code></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pattern = <span class="string">r&quot;\d&#123;4&#125;&quot;</span></span><br><span class="line">text = <span class="string">&quot;1998&quot;</span></span><br><span class="line">result = re.fullmatch(pattern, text)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure><ul><li><code>re.findall()</code></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pattern = <span class="string">r&quot;\d&#123;4&#125;&quot;</span></span><br><span class="line">text = <span class="string">&quot;1998 2 22, I was born. My sister was born in 2006&quot;</span></span><br><span class="line">result = re.findall(pattern, text)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure><ul><li><code>re.finditer()</code></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pattern = <span class="string">r&quot;\d&#123;4&#125;&quot;</span></span><br><span class="line">text = <span class="string">&quot;1998 2 22, I was born. My sister was born in 2006&quot;</span></span><br><span class="line">result = re.finditer(pattern, text)</span><br><span class="line"><span class="keyword">for</span> res <span class="keyword">in</span> result:</span><br><span class="line"><span class="built_in">print</span>(res)</span><br></pre></td></tr></table></figure><ul><li><code>re.compile()</code> 可以直接生成一个 re 对象，直接调用相应方法对字符串进行校验</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1998</span> <span class="number">2</span> <span class="number">22</span>, I was born. My sister was born <span class="keyword">in</span> 2006pattern_str = <span class="string">r&quot;\d&#123;4&#125;&quot;</span></span><br><span class="line">pattern_obj = re.<span class="built_in">compile</span>(pattern_str)</span><br><span class="line"><span class="built_in">print</span>(pattern_obj.search(<span class="string">&quot;I was born in 1998&quot;</span>))</span><br><span class="line"><span class="built_in">print</span>(pattern_obj.findall(<span class="string">&quot;1998 2 22, I was born. My sister was born in 2006&quot;</span>))</span><br></pre></td></tr></table></figure><blockquote><p>更新: 2024-01-11 23:12:10<br>原文: <a href="https://www.yuque.com/zacharyblock/cx2om6/qegza164lpgh11hq">https://www.yuque.com/zacharyblock/cx2om6/qegza164lpgh11hq</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Python进阶 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python进阶-dataclass-数据类</title>
      <link href="/2023/01/10/Python%E8%BF%9B%E9%98%B6/dataclass-%E6%95%B0%E6%8D%AE%E7%B1%BB/"/>
      <url>/2023/01/10/Python%E8%BF%9B%E9%98%B6/dataclass-%E6%95%B0%E6%8D%AE%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="dataclass-数据类"><a href="#dataclass-数据类" class="headerlink" title="dataclass-数据类"></a>dataclass-数据类</h1><p>在通常我们设计一个类时，需要初始化一些属性，如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Car</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, origin, auto</span>):</span><br><span class="line">        <span class="variable language_">self</span>.origin = origin</span><br><span class="line">        <span class="variable language_">self</span>.auto = auto</span><br></pre></td></tr></table></figure><ul><li>当有了 dataclass 后就可以使用装饰器<code>@dataclass</code>来实现</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@dataclass</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Car</span>:</span><br><span class="line">    origin: <span class="built_in">str</span></span><br><span class="line">    auto: <span class="built_in">bool</span></span><br><span class="line"></span><br><span class="line">porsche = Car(<span class="string">&quot;Germany&quot;</span>, <span class="literal">True</span>)</span><br><span class="line"><span class="built_in">print</span>(porsche)</span><br><span class="line">benz = Car(<span class="string">&quot;Germany&quot;</span>, <span class="literal">True</span>)</span><br><span class="line"><span class="built_in">print</span>(benz)</span><br><span class="line"><span class="comment"># eq方法也给我们提供了</span></span><br><span class="line"><span class="built_in">print</span>(porsche == benz)</span><br></pre></td></tr></table></figure><ul><li>dataclass 给属性提供缺省值</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@dataclass</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Car</span>:</span><br><span class="line">    origin: <span class="built_in">str</span></span><br><span class="line">    auto: <span class="built_in">bool</span> = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">porsche = Car(<span class="string">&quot;Germany&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(porsche)</span><br></pre></td></tr></table></figure><ul><li>创建一个不可变对象</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@dataclass(<span class="params">frozen=<span class="literal">True</span></span>)</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Car</span>:</span><br><span class="line">    origin: <span class="built_in">str</span></span><br><span class="line">    auto: <span class="built_in">bool</span></span><br><span class="line"></span><br><span class="line">porsche = Car(<span class="string">&quot;Germany&quot;</span>, <span class="literal">True</span>)</span><br><span class="line">porsche.auto = <span class="literal">False</span>   <span class="comment"># 报错</span></span><br></pre></td></tr></table></figure><ul><li><code>field()</code>定制属性，可以看一下 field 的源代码</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@dataclass(<span class="params">frozen=<span class="literal">True</span></span>)</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Car</span>:</span><br><span class="line">    origin: <span class="built_in">str</span></span><br><span class="line">    auto: <span class="built_in">bool</span> = <span class="literal">True</span></span><br><span class="line">    age: <span class="built_in">int</span> = field(default=<span class="number">5</span>, init=<span class="literal">False</span>, <span class="built_in">repr</span>=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__post_init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.auto = <span class="variable language_">self</span>.age &lt; <span class="number">5</span></span><br><span class="line"></span><br><span class="line">porsche = Car(<span class="string">&quot;Germany&quot;</span>, <span class="literal">False</span>)</span><br><span class="line"><span class="built_in">print</span>(porsche)</span><br></pre></td></tr></table></figure><ul><li>排序，<code>order=True</code>默认按照第一个属性进行排序，</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@dataclass(<span class="params">order=<span class="literal">True</span></span>)</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Car</span>:</span><br><span class="line">    origin: <span class="built_in">str</span></span><br><span class="line">    auto: <span class="built_in">bool</span></span><br><span class="line"></span><br><span class="line">porsche = Car(<span class="string">&quot;Germany&quot;</span>, <span class="literal">True</span>)</span><br><span class="line">benz = Car(<span class="string">&quot;Germany&quot;</span>, <span class="literal">False</span>)</span><br><span class="line">cars = [porsche, benz]</span><br><span class="line"><span class="built_in">sorted</span>(cars)</span><br><span class="line"><span class="built_in">print</span>(cars)</span><br></pre></td></tr></table></figure><ul><li>当想依照另一个属性进行排序时，有两种方法<ul><li>在类中创建一个不参与 init 与 repr 的变量，并放到第一个参数位置</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@dataclass(<span class="params">order=<span class="literal">True</span></span>)</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Car</span>:</span><br><span class="line">    sortIndex: <span class="built_in">int</span> = field(init=<span class="literal">False</span>, <span class="built_in">repr</span>=<span class="literal">False</span>)</span><br><span class="line">    origin: <span class="built_in">str</span></span><br><span class="line">    age: <span class="built_in">int</span></span><br><span class="line">    auto: <span class="built_in">bool</span> = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__post_init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.sortIndex = <span class="variable language_">self</span>.age</span><br><span class="line"></span><br><span class="line">porsche = Car(<span class="string">&quot;Germany&quot;</span>, <span class="number">4</span>, <span class="literal">True</span>)</span><br><span class="line">benz = Car(<span class="string">&quot;Germany&quot;</span>, <span class="number">5</span>, <span class="literal">False</span>)</span><br><span class="line">cars = [porsche, benz]</span><br><span class="line">cars = <span class="built_in">sorted</span>(cars)</span><br><span class="line"><span class="built_in">print</span>(cars)</span><br></pre></td></tr></table></figure><pre><code>- 另一个方法就是直接使用`sort()`方法中的`key=operator.attrgetter(&#39;属性名&#39;)`来实现按照哪一个属性进行排序`建议使用这个`</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@dataclass()</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Car</span>:</span><br><span class="line">    origin: <span class="built_in">str</span></span><br><span class="line">    age: <span class="built_in">int</span></span><br><span class="line">    auto: <span class="built_in">bool</span> = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">porsche = Car(<span class="string">&quot;Germany&quot;</span>, <span class="number">4</span>, <span class="literal">True</span>)</span><br><span class="line">benz = Car(<span class="string">&quot;Germany&quot;</span>, <span class="number">5</span>, <span class="literal">False</span>)</span><br><span class="line">cars = [porsche, benz]</span><br><span class="line">cars.sort(key=operator.attrgetter(<span class="string">&#x27;age&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(cars)</span><br></pre></td></tr></table></figure><blockquote><p>更新: 2024-01-10 21:24:23<br>原文: <a href="https://www.yuque.com/zacharyblock/cx2om6/ehmlkmargqm4bti5">https://www.yuque.com/zacharyblock/cx2om6/ehmlkmargqm4bti5</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Python进阶 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python进阶-metaclass-元类</title>
      <link href="/2023/01/09/Python%E8%BF%9B%E9%98%B6/metaclass-%E5%85%83%E7%B1%BB/"/>
      <url>/2023/01/09/Python%E8%BF%9B%E9%98%B6/metaclass-%E5%85%83%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="metaclass-元类"><a href="#metaclass-元类" class="headerlink" title="metaclass-元类"></a>metaclass-元类</h1><ul><li>metaclass 就是一个用来创建其他 class 的类</li><li>type 类就是所有 class 默认的 metaclass</li><li>可以在定义类时，声明 metaclass</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Car</span>(<span class="title class_ inherited__">type</span>):</span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__new__</span>(<span class="params">mcs, *args</span>):</span><br><span class="line">        class_ = <span class="built_in">super</span>().__new__(mcs, *args)</span><br><span class="line">        class_.auto = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">return</span> class_</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Porsche</span>(<span class="built_in">object</span>, metaclass=Car):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(Porsche.auto)</span><br></pre></td></tr></table></figure><ul><li>依据传入的关键字参数，对属性进行扩展</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Car</span>(<span class="title class_ inherited__">type</span>):</span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__new__</span>(<span class="params">mcs, *args， **kwargs</span>):</span><br><span class="line">        class_ = <span class="built_in">super</span>().__new__(mcs, *args)</span><br><span class="line">        <span class="keyword">if</span> kwargs:</span><br><span class="line">            <span class="keyword">for</span> key, value <span class="keyword">in</span> kwargs.items():</span><br><span class="line">                <span class="built_in">setattr</span>(class_, key, value)</span><br><span class="line">        <span class="keyword">return</span> class_</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Porsche</span>(<span class="built_in">object</span>, metaclass=Car, auto = <span class="literal">True</span>, origin = <span class="string">&quot;Germany&quot;</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(Porsche.auto)</span><br><span class="line"><span class="built_in">print</span>(Porsche.origin)</span><br></pre></td></tr></table></figure><ul><li>在元类中获取使用了元类的类的属性</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">PropUtil</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,attr</span>):</span><br><span class="line">        <span class="variable language_">self</span>._attr = <span class="string">f&quot;_<span class="subst">&#123;attr&#125;</span>&quot;</span>  <span class="comment"># 避免递归调用</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get</span>(<span class="params">self,obj</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">hasattr</span>(obj, <span class="variable language_">self</span>._attr):</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">getattr</span>(obj, <span class="variable language_">self</span>._attr)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">set</span>(<span class="params">self,obj,value</span>):</span><br><span class="line">        <span class="built_in">setattr</span>(obj,<span class="variable language_">self</span>._attr, value)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Car</span>(<span class="title class_ inherited__">type</span>):</span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__new__</span>(<span class="params">mcs, *args， **kwargs</span>):</span><br><span class="line">        class_ = <span class="built_in">super</span>().__new__(mcs, *args)</span><br><span class="line">        <span class="keyword">for</span> attr <span class="keyword">in</span> class_.attrs:</span><br><span class="line">            prop = PropUtil(attr)</span><br><span class="line">            pObj = <span class="built_in">property</span>(fget=prop.get, fset=prop.<span class="built_in">set</span>)</span><br><span class="line">            <span class="built_in">setattr</span>(class_, attr, pObj)</span><br><span class="line">        <span class="keyword">return</span> class_</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Porsche</span>(<span class="built_in">object</span>, metaclass=Car):</span><br><span class="line">    attrs = [<span class="string">&quot;origin&quot;</span>, <span class="string">&quot;auto&quot;</span>]</span><br><span class="line"></span><br><span class="line">panamera = Porsche()</span><br><span class="line"><span class="built_in">print</span>(panamera.auto)</span><br><span class="line">panamera.auto = <span class="literal">True</span></span><br><span class="line"><span class="built_in">print</span>(panamera.auto)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用装饰器实现</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">car</span>(<span class="params">cls</span>):</span><br><span class="line">    <span class="keyword">return</span> Car(cls.__name__, cls.__bases__, <span class="built_in">dict</span>(cls.__dict__))</span><br><span class="line"></span><br><span class="line"><span class="meta">@car</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Benz</span>:</span><br><span class="line">    attrs = [<span class="string">&quot;origin&quot;</span>, <span class="string">&quot;auto&quot;</span>]</span><br><span class="line"></span><br><span class="line">benz = Benz()</span><br><span class="line"><span class="built_in">print</span>(benz.auto)</span><br><span class="line"><span class="built_in">print</span>(benz.origin)</span><br><span class="line">benz.auto = <span class="literal">False</span></span><br><span class="line"><span class="built_in">print</span>(benz.auto)</span><br></pre></td></tr></table></figure><blockquote><p>更新: 2024-01-10 00:47:48<br>原文: <a href="https://www.yuque.com/zacharyblock/cx2om6/ed59q8lf72v6ibfn">https://www.yuque.com/zacharyblock/cx2om6/ed59q8lf72v6ibfn</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Python进阶 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python进阶-type类</title>
      <link href="/2023/01/09/Python%E8%BF%9B%E9%98%B6/type%E7%B1%BB/"/>
      <url>/2023/01/09/Python%E8%BF%9B%E9%98%B6/type%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="type-类"><a href="#type-类" class="headerlink" title="type 类"></a>type 类</h1><ul><li>任何 class 在内存中 就是一个 type()类的对象</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">hello</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;hello world!&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(Person))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">isinstance</span>(Person,<span class="built_in">type</span>))</span><br></pre></td></tr></table></figure><p>这种一般是在写源码时还不知道需求，不知道需要具体创建什么样的类，从而在运行时动态创建类出来</p><ul><li>可以使用 type()来创建其他 class -&gt; <code>type(class_name, parents, class_dict)</code></li><li>可以使用 type()来动态创建 class</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">class_content = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">def hello(self):</span></span><br><span class="line"><span class="string">print(&quot;hello myclass...&quot;)</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">class_dict = &#123;&#125;</span><br><span class="line"><span class="built_in">exec</span>(class_content, <span class="built_in">globals</span>(), class_dict)</span><br><span class="line"></span><br><span class="line"><span class="built_in">type</span>(<span class="string">&quot;myClass&quot;</span>, (<span class="built_in">object</span>,), class_dict)</span><br><span class="line"></span><br><span class="line">mc = myClass()</span><br><span class="line">mc.hello()</span><br></pre></td></tr></table></figure><blockquote><p>更新: 2024-01-09 21:20:07<br>原文: <a href="https://www.yuque.com/zacharyblock/cx2om6/qvpca56gofn7sipm">https://www.yuque.com/zacharyblock/cx2om6/qvpca56gofn7sipm</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Python进阶 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python进阶-装饰器</title>
      <link href="/2023/01/08/Python%E8%BF%9B%E9%98%B6/%E8%A3%85%E9%A5%B0%E5%99%A8/"/>
      <url>/2023/01/08/Python%E8%BF%9B%E9%98%B6/%E8%A3%85%E9%A5%B0%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="装饰器"><a href="#装饰器" class="headerlink" title="装饰器"></a>装饰器</h1><h1 id="装饰器-decorator"><a href="#装饰器-decorator" class="headerlink" title="装饰器 decorator"></a>装饰器 decorator</h1><p>在不改变原有函数代码，且保持原函数调用方法不变的情况下，给原函数增加新的功能（或者给类增加属性和方法）</p><h2 id="装饰器定义与原型"><a href="#装饰器定义与原型" class="headerlink" title="装饰器定义与原型"></a>装饰器定义与原型</h2><ul><li>核心思想<ul><li>用一个函数（或者类）去装饰一个旧函数（或者类），造出一个新函数（或者新类）</li></ul></li><li>语法规则<ul><li>在原有的函数上加上@符号，装饰器会把下面的函数当做参数传递到装饰器中，@符又被称为语法糖</li></ul></li><li>应用场景<ul><li>引入日志，函数执行时间的统计，执行函数前的准备工作，执行函数后的处理工作，权限校验，缓存等场景中</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 装饰器的原型，利用闭包实现</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">outer</span>(<span class="params">f</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">inner</span>():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;这是inner函数的语句1&#x27;</span>)</span><br><span class="line">        f()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;这是inner函数的语句2&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> inner</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">demo</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;这是demo函数的语句&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">obj = outer(demo)</span><br><span class="line">obj()</span><br><span class="line"><span class="comment"># 这是inner函数的语句1</span></span><br><span class="line"><span class="comment"># 这是demo函数的语句</span></span><br><span class="line"><span class="comment"># 这是inner函数的语句2</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 改为装饰器的定义</span></span><br><span class="line"><span class="comment"># 此处等同于 demo2=outer(demo2)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@outer</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">demo2</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;这是使用装饰器的demo&#x27;</span>)</span><br><span class="line"></span><br><span class="line">demo2()</span><br><span class="line"><span class="comment"># 这是inner函数的语句1</span></span><br><span class="line"><span class="comment"># 这是将要使用装饰器的demo</span></span><br><span class="line"><span class="comment"># 这是inner函数的语句2</span></span><br></pre></td></tr></table></figure><h2 id="统计函数执行时间"><a href="#统计函数执行时间" class="headerlink" title="统计函数执行时间"></a>统计函数执行时间</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">cal_time</span>(<span class="params">f</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">inner</span>():</span><br><span class="line">        time1 = time.perf_counter()</span><br><span class="line">        f()</span><br><span class="line">        time2 = time.perf_counter()</span><br><span class="line">        elapsed = time2 - time1</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;函数运行了<span class="subst">&#123;elapsed&#125;</span>s&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> elapsed</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> inner</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@cal_time</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func</span>():</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">        time.sleep(<span class="number">0.1</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;func运行结束&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">func()</span><br><span class="line"><span class="comment"># func运行结束</span></span><br><span class="line"><span class="comment"># 函数运行了0.5152184049999999s</span></span><br></pre></td></tr></table></figure><h2 id="wraps"><a href="#wraps" class="headerlink" title="@wraps"></a>@wraps</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">cal_time</span>(<span class="params">f</span>):</span><br><span class="line"><span class="meta">    @wraps(<span class="params">f</span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">inner</span>():</span><br><span class="line">        time1 = time.perf_counter()</span><br><span class="line">        f()</span><br><span class="line">        time2 = time.perf_counter()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;函数运行了<span class="subst">&#123;time2 - time1&#125;</span>s&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> inner</span><br><span class="line"></span><br><span class="line"><span class="meta">@cal_time</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func</span>():</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">        time.sleep(<span class="number">0.1</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;func运行结束&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(func)</span><br><span class="line"><span class="built_in">print</span>(func.__name__)</span><br></pre></td></tr></table></figure><h2 id="装饰器的嵌套"><a href="#装饰器的嵌套" class="headerlink" title="装饰器的嵌套"></a>装饰器的嵌套</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 装饰器的嵌套</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">outer1</span>(<span class="params">func</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">inner1</span>():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;装饰器1————1&#x27;</span>)</span><br><span class="line">        func()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;装饰器1————2&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> inner1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">outer2</span>(<span class="params">func</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">inner2</span>():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;装饰器2————3&#x27;</span>)</span><br><span class="line">        func()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;装饰器2————4&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> inner2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@outer2</span></span><br><span class="line"><span class="meta">@outer1</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">demo</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;这是demo函数————5&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">demo()</span><br><span class="line"><span class="comment"># 装饰器2————3</span></span><br><span class="line"><span class="comment"># 装饰器1————1</span></span><br><span class="line"><span class="comment"># 这是demo函数————5</span></span><br><span class="line"><span class="comment"># 装饰器1————2</span></span><br><span class="line"><span class="comment"># 装饰器2————4</span></span><br></pre></td></tr></table></figure><h2 id="装饰带有参数的函数"><a href="#装饰带有参数的函数" class="headerlink" title="装饰带有参数的函数"></a>装饰带有参数的函数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">outer</span>(<span class="params">func</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">inner</span>(<span class="params">name</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;关于谁最美丽这件事&#x27;</span>)</span><br><span class="line">        func(name)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> inner</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@outer</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">love</span>(<span class="params">name</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;name&#125;</span>女士最美丽&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">love(<span class="string">&#x27;duandaun&#x27;</span>)</span><br><span class="line"><span class="comment"># 关于谁最美丽这件事</span></span><br><span class="line"><span class="comment"># duandaun女士最美丽</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">cal_time</span>(<span class="params">f</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">inner</span>(<span class="params">li</span>):</span><br><span class="line">        t1 = time.perf_counter()</span><br><span class="line">        f(li)</span><br><span class="line">        t2 = time.perf_counter()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;函数<span class="subst">&#123;f&#125;</span>执行了<span class="subst">&#123;t2-t1&#125;</span>s&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> inner</span><br><span class="line"></span><br><span class="line"><span class="meta">@cal_time</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sort_fun</span>(<span class="params">li</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(li)-<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(li)-<span class="number">1</span>-i):</span><br><span class="line">            <span class="keyword">if</span> li[j] &gt; li[j+<span class="number">1</span>]:</span><br><span class="line">                li[j],li[j+<span class="number">1</span>] = li[j+<span class="number">1</span>],li[j]</span><br><span class="line">    <span class="keyword">return</span> li</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">li = [<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>]</span><br><span class="line">sort_fun(li)</span><br><span class="line"><span class="built_in">print</span>(li)</span><br></pre></td></tr></table></figure><h2 id="装饰带有多参数的函数"><a href="#装饰带有多参数的函数" class="headerlink" title="装饰带有多参数的函数"></a>装饰带有多参数的函数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">outer</span>(<span class="params">func</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">inner</span>(<span class="params">who, name, *args, **kwargs</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;name&#125;</span>回来啦&#x27;</span>)</span><br><span class="line">        func(who, name, *args, **kwargs)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> inner</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@outer</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">date</span>(<span class="params">who, name, *args, **kwargs</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;who&#125;</span>今天和<span class="subst">&#123;name&#125;</span>出门约会啦&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;我们吃了<span class="subst">&#123;args[<span class="number">0</span>]&#125;</span>&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;还一起看了电影<span class="subst">&#123;kwargs&#125;</span>&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">date(<span class="string">&#x27;huanghuang&#x27;</span>, <span class="string">&#x27;duandaun&#x27;</span>, <span class="string">&#x27;烤肉&#x27;</span>, movie=<span class="string">&#x27;笨小孩&#x27;</span>)</span><br><span class="line"><span class="comment"># duandaun回来啦</span></span><br><span class="line"><span class="comment"># huanghuang今天和duandaun出门约会啦</span></span><br><span class="line"><span class="comment"># 我们吃了烤肉</span></span><br><span class="line"><span class="comment"># 还一起看了电影&#123;&#x27;movie&#x27;: &#x27;笨小孩&#x27;&#125;</span></span><br></pre></td></tr></table></figure><h2 id="带有参数的装饰器"><a href="#带有参数的装饰器" class="headerlink" title="带有参数的装饰器"></a>带有参数的装饰器</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果你的装饰器需要有参数，那么给当前的装饰器套一个壳，用于接收装饰器的参数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">extend_m</span>(<span class="params">var</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">outer</span>(<span class="params">func</span>):</span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">inner1</span>(<span class="params">name</span>):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&#x27;今天和<span class="subst">&#123;name&#125;</span>一起吃烤肉&#x27;</span>)</span><br><span class="line">            func(name)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">inner2</span>(<span class="params">name</span>):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&#x27;今天和<span class="subst">&#123;name&#125;</span>一起吃火锅&#x27;</span>)</span><br><span class="line">            func(name)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> var == <span class="string">&#x27;烤肉&#x27;</span>:</span><br><span class="line">            <span class="keyword">return</span> inner1</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> inner2</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> outer</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@extend_m(<span class="params"><span class="string">&#x27;烤肉&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">date</span>(<span class="params">name</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;和<span class="subst">&#123;name&#125;</span>约会啦，很开心!&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">date(<span class="string">&#x27;duanduan&#x27;</span>)</span><br><span class="line"><span class="comment"># 今天和duanduan一起吃烤肉</span></span><br><span class="line"><span class="comment"># 和duanduan约会啦，很开心!</span></span><br></pre></td></tr></table></figure><h2 id="类装饰器修饰函数"><a href="#类装饰器修饰函数" class="headerlink" title="类装饰器修饰函数"></a>类装饰器修饰函数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 类装饰器装饰函数</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Outer</span>():</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 魔术方法：当把该类的对象当做函数调用时，自动触发obj()</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__call__</span>(<span class="params">self, func</span>):</span><br><span class="line">        <span class="variable language_">self</span>.func = func</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.inner</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">inner</span>(<span class="params">self, who</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;和<span class="subst">&#123;who&#125;</span>一起看电影啦&#x27;</span>)</span><br><span class="line">        <span class="variable language_">self</span>.func(who)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;约会吃烤肉啦哇&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 注意这里应该是Outer()</span></span><br><span class="line"><span class="comment"># Outer() ===&gt; obj,  @obj ===&gt;obj(date) , call （date）===&gt; inner()</span></span><br><span class="line"><span class="meta">@Outer()</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">date</span>(<span class="params">who</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;今天和<span class="subst">&#123;who&#125;</span>约会啦&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">date(<span class="string">&#x27;duanduan&#x27;</span>)</span><br><span class="line"><span class="comment"># 和duanduan一起看电影啦</span></span><br><span class="line"><span class="comment"># 今天和duanduan约会啦</span></span><br><span class="line"><span class="comment"># 约会吃烤肉啦哇</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Outer</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,func</span>):</span><br><span class="line">        <span class="variable language_">self</span>.func = func</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__call__</span>(<span class="params">self,*args, **kwargs</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;今天出门啦&quot;</span>)</span><br><span class="line">        result = <span class="variable language_">self</span>.func(*args, **kwargs)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;今天结束啦&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="meta">@Outer</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">date</span>(<span class="params">who</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;今天和<span class="subst">&#123;who&#125;</span>出门约会啦&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;出门看电影、吃烤肉啦&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> success</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(date(<span class="string">&quot;duanduan&quot;</span>))</span><br></pre></td></tr></table></figure><h2 id="带有参数的类装饰器"><a href="#带有参数的类装饰器" class="headerlink" title="带有参数的类装饰器"></a>带有参数的类装饰器</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Outer</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name</span>):</span><br><span class="line">        <span class="variable language_">self</span>.name = name</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__call__</span>(<span class="params">self,func</span>):</span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">inner</span>(<span class="params">*args, **kwargs</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;今天出门啦&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;和<span class="subst">&#123;self.name&#125;</span>出门约会啦&quot;</span>)</span><br><span class="line">        result = func(*args, **kwargs)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;今天结束啦&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line">        <span class="keyword">return</span> inner</span><br><span class="line"></span><br><span class="line"><span class="meta">@Outer(<span class="params"><span class="string">&quot;duanduan&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">date</span>(<span class="params">place:<span class="built_in">str</span></span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;今天去<span class="subst">&#123;place&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;出门看电影、吃烤肉啦&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> success</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(date(<span class="string">&quot;北京&quot;</span>))</span><br></pre></td></tr></table></figure><h2 id="用类方法装饰函数"><a href="#用类方法装饰函数" class="headerlink" title="用类方法装饰函数"></a>用类方法装饰函数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Outer</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">newinner</span>(<span class="params">func</span>):</span><br><span class="line">        Outer.func = func  <span class="comment"># 把传递进来的函数定义为类方法</span></span><br><span class="line">        <span class="keyword">return</span> Outer.inner  <span class="comment"># 同时返回一个新的类方法</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">inner</span>(<span class="params">who</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;和<span class="subst">&#123;who&#125;</span>一起看电影啦&#x27;</span>)</span><br><span class="line">        Outer.func(who)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;约会吃烤肉啦哇&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Outer.newinner  </span><span class="comment"># Outer.newinner(date) ===&gt; Outer.inner</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">date</span>(<span class="params">who</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;今天和<span class="subst">&#123;who&#125;</span>约会啦&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">date(<span class="string">&#x27;duanduan&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="使用函数装饰器装饰类"><a href="#使用函数装饰器装饰类" class="headerlink" title="使用函数装饰器装饰类"></a>使用函数装饰器装饰类</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">extend_c</span>(<span class="params">cls</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">func2</span>():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;在装饰器中扩展的新方法func2&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    cls.func2 = func2  <span class="comment"># 将刚才定义的方法赋值给类</span></span><br><span class="line">    cls.name = <span class="string">&#x27;在装饰器中追加的新属性&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 返回时，把追加类新成员的类返回</span></span><br><span class="line">    <span class="keyword">return</span> cls</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@extend_c     </span><span class="comment"># extend_c(Demo) ===&gt; cls  ===&gt; Demo</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Demo</span>():</span><br><span class="line">    <span class="comment"># 定义一个类方法</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">func</span>():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Demo类中的func方法&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Demo.func()  <span class="comment"># Demo类中的func方法</span></span><br><span class="line">Demo.func2()  <span class="comment"># 在装饰器中扩展的新方法func2</span></span><br><span class="line"><span class="built_in">print</span>(Demo.name)  <span class="comment"># 在装饰器中追加的新属性</span></span><br></pre></td></tr></table></figure><h2 id="使用类装饰器装饰类"><a href="#使用类装饰器装饰类" class="headerlink" title="使用类装饰器装饰类"></a>使用类装饰器装饰类</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Extend_c</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__call__</span>(<span class="params">self, cls</span>):</span><br><span class="line">        <span class="variable language_">self</span>.cls = cls</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.newfunc</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">newfunc</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.cls.name = <span class="string">&#x27;在类装饰器中追加的新属性&#x27;</span></span><br><span class="line">        <span class="variable language_">self</span>.cls.func2 = <span class="variable language_">self</span>.func2</span><br><span class="line">        <span class="comment"># 返回</span></span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.cls()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">func2</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;在类装饰器中追加的新方法 func2&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Extend_c()  </span><span class="comment"># Extend_c() ===&gt; obj ===&gt; @obj(Demo)  ===&gt; __call__(Demo) ===&gt; newfunc()</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Demo</span>():</span><br><span class="line">    <span class="comment"># 定义一个普通的方法</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">func</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Demo类中的一个普通的方法&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">obj = Demo()</span><br><span class="line">obj.func()  <span class="comment"># Demo类中的一个普通的方法</span></span><br><span class="line">obj.func2()  <span class="comment"># 在类装饰器中追加的新方法 func2</span></span><br><span class="line"><span class="built_in">print</span>(obj.name)  <span class="comment"># 在类装饰器中追加的新属性</span></span><br><span class="line"><span class="built_in">print</span>(obj)  <span class="comment"># &lt;__main__.Demo object at 0x10e77ddd0&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>更新: 2024-05-16 12:24:07<br>原文: <a href="https://www.yuque.com/zacharyblock/cx2om6/fas3gy4akb8thh3c">https://www.yuque.com/zacharyblock/cx2om6/fas3gy4akb8thh3c</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Python进阶 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python进阶-上下文管理器</title>
      <link href="/2023/01/08/Python%E8%BF%9B%E9%98%B6/%E4%B8%8A%E4%B8%8B%E6%96%87%E7%AE%A1%E7%90%86%E5%99%A8/"/>
      <url>/2023/01/08/Python%E8%BF%9B%E9%98%B6/%E4%B8%8A%E4%B8%8B%E6%96%87%E7%AE%A1%E7%90%86%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="上下文管理器"><a href="#上下文管理器" class="headerlink" title="上下文管理器"></a>上下文管理器</h1><p><strong>什么是上下文管理器</strong></p><ul><li>context manager</li><li>是一个对象</li><li>定义了运行时的上下文</li><li>使用<code>with</code>语句来执行</li></ul><p>格式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> context <span class="keyword">as</span> ct:</span><br><span class="line">    <span class="comment"># 对上下文对象ct的使用</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 上下文对象已经被清除</span></span><br></pre></td></tr></table></figure><p>文件的读写</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 不用上下文管理器</span></span><br><span class="line">fileObj = <span class="built_in">open</span>(<span class="string">&quot;file.txt&quot;</span>,<span class="string">&quot;w&quot;</span>)</span><br><span class="line">fileObj.write(<span class="string">&quot;This is my file&quot;</span>)</span><br><span class="line">fileObj.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用上下文管理器</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;file.txt&quot;</span>,<span class="string">&quot;w&quot;</span>) <span class="keyword">as</span> fileObj:</span><br><span class="line">    fileObj.write(<span class="string">&quot;This is my file&quot;</span>)</span><br></pre></td></tr></table></figure><ul><li>使用<code>with</code>语句，会在代码块结束时，自动帮我们关闭文件，无需手动触发 close()方法</li><li>在<code>with</code>语句，开始前会触发<code>__enter__(self)</code></li><li>在<code>with</code>语句结束后会触发<code>__exit__(self, exc_type, exc_val, exc_tb)</code></li><li><code>as</code>后面的对象 实际是在调用完<code>__enter__</code>后获取到的返回值</li></ul><p>使用上下文管理器实现一个耗时计算函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 不使用上下文管理</span></span><br><span class="line">nums = [i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10000</span>)]</span><br><span class="line">random.shuffle(nums)</span><br><span class="line">start = time.perf_counter()</span><br><span class="line"><span class="built_in">sorted</span>(nums)</span><br><span class="line">end = time.perf_counter()</span><br><span class="line">elapsed = end - start</span><br><span class="line"><span class="built_in">print</span>(elapsed)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用上下文管理</span></span><br><span class="line"><span class="comment"># 创建一个Timer 上下文管理类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Timer</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.elapsed = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__enter__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.start = time.perf_counter()</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__exit__</span>(<span class="params">self, exc_type, exc_val, exc_tb</span>):</span><br><span class="line">        <span class="variable language_">self</span>.end = time.perf_counter()</span><br><span class="line">        <span class="variable language_">self</span>.elapsed = <span class="variable language_">self</span>.end - <span class="variable language_">self</span>.start</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> Timer() <span class="keyword">as</span> timer:</span><br><span class="line">    <span class="built_in">sorted</span>(nums)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(timer.elapsed)</span><br></pre></td></tr></table></figure><ul><li>应用场景：<ul><li>文件的开-关</li><li>加锁-释放</li><li>启动-停止</li></ul></li></ul><blockquote><p>更新: 2024-01-09 02:16:57<br>原文: <a href="https://www.yuque.com/zacharyblock/cx2om6/ofmfwtiq1h6wysmp">https://www.yuque.com/zacharyblock/cx2om6/ofmfwtiq1h6wysmp</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Python进阶 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python面向对象-ATM 项目</title>
      <link href="/2022/12/31/Python%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/ATM%E9%A1%B9%E7%9B%AE/"/>
      <url>/2022/12/31/Python%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/ATM%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="ATM-项目"><a href="#ATM-项目" class="headerlink" title="ATM 项目"></a>ATM 项目</h1><h1 id="ATM-系统项目说明文档"><a href="#ATM-系统项目说明文档" class="headerlink" title="ATM 系统项目说明文档"></a>ATM 系统项目说明文档</h1><p>运用基础阶段所学的 Python 知识，来模拟出银行的 ATM 系统。 要求：使用面向对象编程来完成这个项目</p><p>ATM 系统的主要功能：</p><ol><li>注册：用户名，手机号，身份证号（18 位），密码（两次确认，长度 6 位）</li><li>查询：账号必须存在，密码（3 次机会，不对就锁卡）</li><li>取款：账号必须存在，密码（3 次机会，不对就锁卡），取款金额不能大于存款</li><li>存款：账号必须存在，存款金额不能低于 0 元</li><li>转账：您的账户，转款账户都必须存在，密码（3 次机会，不对就锁卡），转账金额不能超过余额</li><li>锁卡：账号必须存在，可以使用密码冻结，还可以使用身份证号冻结</li><li>解卡：账号必须存在，只能使用身份证号进行解锁</li><li>补卡：使用身份证进行补卡，每个身份证只能有一张卡，之前的卡作废</li><li>改密：原密码进行改密，也可以使用身份证进行改密</li><li>退出：保存数据</li></ol><h2 id="项目分析"><a href="#项目分析" class="headerlink" title="项目分析"></a>项目分析</h2><p>根据需求进行分析，思考如何对项目进行设计和架构</p><h3 id="思考问题一：如何使用面向对象编程思想来完成"><a href="#思考问题一：如何使用面向对象编程思想来完成" class="headerlink" title="思考问题一：如何使用面向对象编程思想来完成"></a>思考问题一：如何使用面向对象编程思想来完成</h3><p>当前的项目功能和项目演示中，有几个对象？</p><h4 id="银行卡对象-Card-存储银行卡信息"><a href="#银行卡对象-Card-存储银行卡信息" class="headerlink" title="银行卡对象: Card 存储银行卡信息"></a>银行卡对象: Card 存储银行卡信息</h4><ul><li>卡号: cardid</li><li>密码: password</li><li>余额: money</li><li>是否锁卡: islock</li></ul><h4 id="用户对象-Person-存储用户信息"><a href="#用户对象-Person-存储用户信息" class="headerlink" title="用户对象: Person 存储用户信息"></a>用户对象: Person 存储用户信息</h4><ul><li>用户名: name</li><li>身份证号: userid</li><li>手机号: phone</li><li>卡号: card</li></ul><h4 id="控制器对象-Controller-具体的操作控制类"><a href="#控制器对象-Controller-具体的操作控制类" class="headerlink" title="控制器对象: Controller 具体的操作控制类"></a>控制器对象: Controller 具体的操作控制类</h4><p>控制器对象中主要就是去实现 ATM 这个系统中的操作 在上面定义的呐十个方法</p><ul><li>注册：register</li><li>查询：query</li><li>取款：get_money</li><li>存款：add_money</li><li>转账：save_money</li><li>锁卡：lock</li><li>解卡：unlock</li><li>补卡：new_card</li><li>改密：change_pwd</li><li>退出：save</li></ul><h4 id="视图对象：Views-显示操作界面"><a href="#视图对象：Views-显示操作界面" class="headerlink" title="视图对象：Views 显示操作界面"></a>视图对象：Views 显示操作界面</h4><p>欢迎界面，操作界面</p><h3 id="思考问题二：如何存储数据"><a href="#思考问题二：如何存储数据" class="headerlink" title="思考问题二：如何存储数据"></a>思考问题二：如何存储数据</h3><p>肯定是用文件进行存储</p><ul><li>卡号：用户 &#x3D;&#x3D;&#x3D;&gt; user_dict &#x3D;&#x3D;&#x3D;&gt; user.txt</li><li>身份证：卡号 &#x3D;&#x3D;&#x3D;&gt; user_id_dict &#x3D;&#x3D;&#x3D;&gt; userid.txt</li></ul><h2 id="项目基本结构搭建"><a href="#项目基本结构搭建" class="headerlink" title="项目基本结构搭建"></a>项目基本结构搭建</h2><h1 id="ATM"><a href="#ATM" class="headerlink" title="ATM"></a>ATM</h1><p>项目说明文档</p><h2 id="项目基本功能"><a href="#项目基本功能" class="headerlink" title="项目基本功能"></a>项目基本功能</h2><p>当前的 ATM 系统模拟实现银行 ATM 机的操作系统功能</p><ul><li>注册：register</li><li>查询：query</li><li>取款：get_money</li><li>存款：add_money</li><li>转账：save_money</li><li>锁卡：lock</li><li>解卡：unlock</li><li>补卡：new_card</li><li>改密：change_pwd</li><li>退出：save</li></ul><h2 id="项目基本结构"><a href="#项目基本结构" class="headerlink" title="项目基本结构"></a>项目基本结构</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">├── ATM/                        <span class="comment"># 项目目录</span></span><br><span class="line">│   ├── README.md               <span class="comment"># 项目文档</span></span><br><span class="line">│   ├── databases/              <span class="comment"># 数据存储目录</span></span><br><span class="line">│   │   ├── user.txt            <span class="comment"># 卡号</span></span><br><span class="line">│   │   └── userid.txt          <span class="comment"># 身份证</span></span><br><span class="line">│   ├── main.py                 <span class="comment"># 程序单入口文件</span></span><br><span class="line">│   └── packages/               <span class="comment"># 包</span></span><br><span class="line">│       ├── __init__.py</span><br><span class="line">│       ├── cardclass.py        <span class="comment"># 银行卡类</span></span><br><span class="line">│       ├── controllerclass.py  <span class="comment"># 操作控制类</span></span><br><span class="line">│       ├── personclass.py      <span class="comment"># 用户类</span></span><br><span class="line">│       └── viewsclass.py       <span class="comment"># 视图显示类</span></span><br></pre></td></tr></table></figure><h2 id="运行环境"><a href="#运行环境" class="headerlink" title="运行环境"></a>运行环境</h2><ul><li>系统：windows、Mac OS、Linux</li><li>版本：python3.5+</li><li>其他：无</li></ul><h2 id="迭代计划"><a href="#迭代计划" class="headerlink" title="迭代计划"></a>迭代计划</h2><ul><li>增加银行操作日志</li><li>将数据存储更改为数据库 MySQL</li></ul><h2 id="详细内容见代码"><a href="#详细内容见代码" class="headerlink" title="详细内容见代码"></a>详细内容见代码</h2><p><a href="https://github.com/BlockZachary/Python_oop/tree/master/ATM">https://github.com/BlockZachary/Python_oop&#x2F;tree&#x2F;master&#x2F;ATM</a></p><blockquote><p>更新: 2024-01-10 22:46:43<br>原文: <a href="https://www.yuque.com/zacharyblock/cx2om6/ozwmftr5d8430maz">https://www.yuque.com/zacharyblock/cx2om6/ozwmftr5d8430maz</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Python面向对象 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python面向对象-异常、模块、包</title>
      <link href="/2022/12/31/Python%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E5%BC%82%E5%B8%B8%E3%80%81%E6%A8%A1%E5%9D%97%E3%80%81%E5%8C%85/"/>
      <url>/2022/12/31/Python%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E5%BC%82%E5%B8%B8%E3%80%81%E6%A8%A1%E5%9D%97%E3%80%81%E5%8C%85/</url>
      
        <content type="html"><![CDATA[<h1 id="异常、模块、包"><a href="#异常、模块、包" class="headerlink" title="异常、模块、包"></a>异常、模块、包</h1><h1 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h1><h2 id="什么是异常"><a href="#什么是异常" class="headerlink" title="什么是异常"></a>什么是异常</h2><p>异常就是 非正常 没有达到预期目标 的非语法错误，会影响程序正常执行，Python 解释器不能正常处理的问题</p><ul><li>异常分两种：<ul><li>语法错误导致的异常</li><li>逻辑错误导致的异常</li></ul></li><li>对于不可预知的异常错误，可以使用 try…except…对异常进行处理</li></ul><p>常用的异常类继承关系</p><p><img src="https://cdn.nlark.com/yuque/__puml/22ab22e4bbe5119fc89ca6ff8c61ea37.svg"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    可能发生异常错误的代码</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    如果发生了异常则进入<span class="keyword">except</span>代码块</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 异常例子</span></span><br><span class="line">varlist = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="built_in">print</span>(varlist[<span class="number">3</span>])</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">运行结果为：</span></span><br><span class="line"><span class="string">Traceback (most recent call last):</span></span><br><span class="line"><span class="string">  File &quot;/Users/zachary/PycharmProjects/Python教程阶段1/code_oop/41什么是异常.py&quot;, line 6, in &lt;module&gt;</span></span><br><span class="line"><span class="string">    print(varlist[3])</span></span><br><span class="line"><span class="string">IndexError: list index out of range</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">其中：</span></span><br><span class="line"><span class="string">IndexError  异常类</span></span><br><span class="line"><span class="string">list index out of range  异常信息</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 异常处理除法</span></span><br><span class="line">val = <span class="built_in">input</span>(<span class="string">&quot;请输入一个数字:&quot;</span>)</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    num = <span class="built_in">int</span>(val)</span><br><span class="line">    res = <span class="number">10</span> / num</span><br><span class="line">    <span class="built_in">print</span>(res)</span><br><span class="line"><span class="keyword">except</span> ValueError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;not input number value&quot;</span>)</span><br><span class="line"><span class="keyword">except</span> ZeroDivisionError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;can not input 0&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 异常处理文件</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;./user.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">        res = file.read()</span><br><span class="line">        <span class="built_in">print</span>(res)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;file not exist&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;other program&#x27;</span>)</span><br><span class="line"><span class="comment"># file not exist</span></span><br><span class="line"><span class="comment"># other program</span></span><br></pre></td></tr></table></figure><h2 id="try-except-else-finally"><a href="#try-except-else-finally" class="headerlink" title="try_except_else_finally"></a>try_except_else_finally</h2><ul><li>try 执行可能会引发错误的代码块</li><li>except 捕获异常并输出</li><li>else 如果 try 代码块没有出错就会执行</li><li>finally 无论 try 有无错误都会执行</li><li>raise 可以抛出一个异常</li><li>assert 断言，后面的表达式如果正确 什么也不做，如果表达式错误，则抛出异常</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.处理指定的异常，引发了非指定的异常，无法处理</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    varlist = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">    <span class="built_in">print</span>(varlist[<span class="number">3</span>])</span><br><span class="line"><span class="keyword">except</span> IndexError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(e)  <span class="comment"># list index out of range</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.多分支处理异常</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    s = <span class="string">&#x27;duanduan&#x27;</span></span><br><span class="line">    res = <span class="built_in">int</span>(s)</span><br><span class="line"><span class="keyword">except</span> ValueError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;ValueError&#x27;</span>, e)</span><br><span class="line"><span class="keyword">except</span> KeyError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;KeyError&#x27;</span>, e)</span><br><span class="line"><span class="keyword">except</span> IndexError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;IndexError&#x27;</span>, e)</span><br><span class="line"><span class="comment"># ValueError invalid literal for int() with base 10: &#x27;duanduan&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.通用异常类 Exception</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    s = <span class="string">&#x27;duanduan&#x27;</span></span><br><span class="line">    res = s[<span class="number">10</span>]</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Exception&#x27;</span>, e)</span><br><span class="line"><span class="comment"># Exception string index out of range</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.多分支异常类+通用异常类</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    s = <span class="string">&#x27;duanduan&#x27;</span></span><br><span class="line">    res = <span class="built_in">int</span>(s)</span><br><span class="line"><span class="keyword">except</span> KeyError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;KeyError&#x27;</span>, e)</span><br><span class="line"><span class="keyword">except</span> IndexError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;IndexError&#x27;</span>, e)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Exception&#x27;</span>, e)</span><br><span class="line"><span class="comment"># Exception invalid literal for int() with base 10: &#x27;duanduan&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.try except else</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    s = <span class="string">&#x27;duandaun&#x27;</span></span><br><span class="line">    res = <span class="built_in">str</span>(s)</span><br><span class="line"><span class="keyword">except</span> KeyError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;KeyError&#x27;</span>, e)</span><br><span class="line"><span class="keyword">except</span> IndexError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;IndexError&#x27;</span>, e)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Exception&#x27;</span>, e)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;try中没有错误&#x27;</span>)</span><br><span class="line"><span class="comment"># try中没有错误</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 6.try except else finally</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    s = <span class="string">&#x27;duandaun&#x27;</span></span><br><span class="line">    res = <span class="built_in">str</span>(s)</span><br><span class="line"><span class="keyword">except</span> KeyError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;KeyError&#x27;</span>, e)</span><br><span class="line"><span class="keyword">except</span> IndexError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;IndexError&#x27;</span>, e)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Exception&#x27;</span>, e)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;try中没有错误&#x27;</span>)</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;代码执行完毕，这句肯定输出&#x27;</span>)</span><br><span class="line"><span class="comment"># try中没有错误</span></span><br><span class="line"><span class="comment"># 代码执行完毕，这句肯定输出</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 7. 主动抛出异常 raise</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">raise</span> Exception()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Exception&#x27;</span>, e)</span><br><span class="line"><span class="comment"># Exception</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 8. assert 断言 后面的表达式正确什么耶不做 错误的话 抛出异常</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">assert</span> <span class="number">1</span> == <span class="number">2</span></span><br><span class="line"><span class="keyword">except</span> AssertionError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;AssertionError&#x27;</span>, e)</span><br><span class="line"><span class="comment"># AssertionError</span></span><br></pre></td></tr></table></figure><h2 id="自定义异常类"><a href="#自定义异常类" class="headerlink" title="自定义异常类"></a>自定义异常类</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">InvalidInputArgument</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,*args</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__(args)</span><br></pre></td></tr></table></figure><p>当异常出现时，对异常信息写入日志</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">在出现异常后，对异常进行处理，并且把异常信息写入日志</span></span><br><span class="line"><span class="string">日志的基本格式：</span></span><br><span class="line"><span class="string">    日期时间 异常的级别</span></span><br><span class="line"><span class="string">    异常信息：引发的异常类，异常的信息，文件及行号</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> traceback</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Myexception</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># logging 基本配置</span></span><br><span class="line">        logging.basicConfig(</span><br><span class="line">            filename=<span class="string">&#x27;./error.log&#x27;</span>, <span class="comment"># 日志存储的文件目录</span></span><br><span class="line">            <span class="built_in">format</span>=<span class="string">&#x27;%(asctime)s %(levelname)s \n %(message)s&#x27;</span>,</span><br><span class="line">            datefmt=<span class="string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 写入日志</span></span><br><span class="line">        logging.error(traceback.format_exc())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    res = <span class="built_in">int</span>(<span class="string">&#x27;duanduan&#x27;</span>)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    Myexception()</span><br></pre></td></tr></table></figure><h1 id="模块与包"><a href="#模块与包" class="headerlink" title="模块与包"></a>模块与包</h1><p>定义的一个 python 文件，<a href="http://后缀名为.py/">后缀名为.py</a> 这个文件被称为模块 模块中通常会定义一些相似的类，函数等代码内容，提供给别的程序引入后使用</p><ul><li>系统模块<ul><li>系统模块就是一个 python 的程序脚本，专门提供给我们自己的程序使用。</li><li>它们是安装好 python 环境的时候，就已经存在的，需要的时候可以使用 import 导入到程序中使用</li><li>import logging, json, math, time</li></ul></li><li>自定义模块<ul><li>就是自己创建的一个 python 脚本，定义一些类或方法，供别的脚本导入后使用</li></ul></li></ul><h2 id="自定义模块的使用"><a href="#自定义模块的使用" class="headerlink" title="自定义模块的使用"></a>自定义模块的使用</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用方式之一</span></span><br><span class="line"><span class="keyword">import</span> Exception</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    res = <span class="built_in">int</span>(<span class="string">&#x27;duanduan&#x27;</span>)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    Exception.MyException()</span><br><span class="line">    Exception.output()</span><br><span class="line">    <span class="built_in">print</span>(Exception.var)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用方式之二</span></span><br><span class="line"><span class="keyword">from</span> Exception <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    res = <span class="built_in">int</span>(<span class="string">&#x27;duanduan&#x27;</span>)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    MyException()</span><br><span class="line">    output()</span><br><span class="line">    <span class="built_in">print</span>(var)</span><br></pre></td></tr></table></figure><h2 id="自定义包和使用"><a href="#自定义包和使用" class="headerlink" title="自定义包和使用"></a>自定义包和使用</h2><p>包可以理解为是一个文件夹，里面包含了多个 python 文件</p><ul><li>包的结构</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">└── package_fa</span><br><span class="line">    ├── __init__.py   <span class="comment"># 包的标志性文件（可以有内容，也可以没有）</span></span><br><span class="line">    ├── a.py         <span class="comment"># a模块（文件）</span></span><br><span class="line">    ├── b.py         <span class="comment"># b模块（文件）</span></span><br><span class="line">    └── package_son</span><br><span class="line">        ├── __init__.py</span><br><span class="line">        ├── c.py</span><br><span class="line">        └── d.py</span><br></pre></td></tr></table></figure><p>实际上，*<strong>*init</strong>.py 可以实现一个功能在导入包的时候，想要使用<strong>from package_fa import <strong>*的时候</strong>需要在 package_fa</strong>下的*<strong>*init</strong>.py<strong>下写入：**<strong>all</strong> &#x3D; [‘module1’,’module2’,…]<strong>这里的</strong>module1，2 指的就是在 package_fa</strong>下的模块名称**</p><p>来做一个测试叭，首先在当前项目文件夹下创建一个类似上述的目录结构 之后编写代码进行测试</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用1：导入指定的包中的模块</span></span><br><span class="line"><span class="keyword">from</span> package_fa <span class="keyword">import</span> a</span><br><span class="line"></span><br><span class="line">a.funca()  <span class="comment"># funca</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用2：从指定包的指定模块导入指定的内容</span></span><br><span class="line"><span class="keyword">from</span> package_fa.b <span class="keyword">import</span> funcb</span><br><span class="line"></span><br><span class="line">funcb()  <span class="comment"># funcb</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用3：从指定包的子包中导入模块</span></span><br><span class="line"><span class="keyword">from</span> package_fa.package_son <span class="keyword">import</span> c</span><br><span class="line"></span><br><span class="line">c.funcc()  <span class="comment"># funcc</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用4：从指定包的子包的指定模块导入指定内容</span></span><br><span class="line"><span class="keyword">from</span> package_fa.package_son.d <span class="keyword">import</span> funcd</span><br><span class="line"></span><br><span class="line">funcd()  <span class="comment"># funcd</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用5: 需要在package_fa 中的__init__.py写入模块列表</span></span><br><span class="line"><span class="comment"># 格式为: __init__.py ===&gt;  __all__ = [&#x27;a&#x27;,&#x27;b&#x27;]</span></span><br><span class="line"><span class="keyword">from</span> package_fa <span class="keyword">import</span> *</span><br><span class="line">a.funca()</span><br></pre></td></tr></table></figure><p>可以讲一下：<strong>name</strong> &#x3D; <strong>main</strong>,</p><h2 id="导入方式的分类"><a href="#导入方式的分类" class="headerlink" title="导入方式的分类"></a>导入方式的分类</h2><h3 id="绝对导入"><a href="#绝对导入" class="headerlink" title="绝对导入"></a>绝对导入</h3><ul><li>会使用[搜索路径]去查找和导入指定的包或模块 import module import package import package.module from module import content from package import module from package.module import content</li></ul><h3 id="相对导入"><a href="#相对导入" class="headerlink" title="相对导入"></a>相对导入</h3><p>from .package&#x2F;module import module&#x2F;content from ..package&#x2F;module import module&#x2F;content</p><p>. 表示当前目录 .. 表示上一级目录</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">funcc</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;funcc&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 假设在c.py中需要d.py 可以使用相对导入，但是不要直接运行c.py</span></span><br><span class="line"><span class="keyword">from</span> .d <span class="keyword">import</span> funcd</span><br><span class="line">funcd()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 假设想要在c中使用上一级的a</span></span><br><span class="line"><span class="keyword">from</span> .. <span class="keyword">import</span> a</span><br><span class="line">a.funca()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> package_fa.package_son <span class="keyword">import</span> c</span><br><span class="line"><span class="comment"># funcd</span></span><br><span class="line"><span class="comment"># funca</span></span><br></pre></td></tr></table></figure><h2 id="单入口程序"><a href="#单入口程序" class="headerlink" title="单入口程序"></a>单入口程序</h2><p>单入口程序指的是整个程序都是经过一个主程序文件在运行，其他程序都封装成了包或模块</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">ATM</span><br><span class="line">└── main.py   <span class="comment"># 当前程序的主入口文件，单入口文件，唯一直接运行的文件</span></span><br><span class="line">├── package/   <span class="comment"># 主要程序模块包</span></span><br><span class="line">    ├── __init__.py     <span class="comment"># 包的初始化文件</span></span><br><span class="line">    ├── View.py         <span class="comment"># 视图函数模块</span></span><br><span class="line">    ├── Controller.py    <span class="comment"># 控制器模块</span></span><br><span class="line">    ├── Card.py         <span class="comment"># 银行卡模块</span></span><br><span class="line">    └── User.py         <span class="comment"># 用户模块</span></span><br><span class="line">└── databases/  <span class="comment"># 数据存储文件夹</span></span><br><span class="line">    ├── user.txt</span><br><span class="line">    └── user_id_card.txt</span><br></pre></td></tr></table></figure><h1 id="Python-中的第三方库的管理-pip"><a href="#Python-中的第三方库的管理-pip" class="headerlink" title="Python 中的第三方库的管理 pip"></a>Python 中的第三方库的管理 pip</h1><p>第三方库的管理网站<a href="https://pypi.org/">https://pypi.org/</a></p><p>pip 的使用</p><ul><li>查看 pip 版本 <code>pip -V</code></li><li>安装 <code>pip install -i &lt;仓库镜像的地址&gt; 包名(库名)</code><ul><li><code>pip3 install -i [http://mirrors.aliyun.com/pypi/simple/](http://mirrors.aliyun.com/pypi/simple/) --trusted-host mirrors.aliyun.com mysqlclient==2.1.1</code></li></ul></li><li>常用镜像地址<ul><li>阿里云 <code>http://mirrors.aliyun.com/pypi/simple/</code></li><li>豆瓣 <code>http://pypi.douban.com/simple/</code></li><li>清华大学 <code>https://pypi.tuna.tsinghua.edu.cn/simple/</code></li><li>中国科学技术大学 <code>http://pypi.mirrors.ustc.edu.cn/simple/</code></li><li>华中科技大学 <code>http://pypi.hustunique.com/</code></li></ul></li><li>安装指定版本的包 <code>pip install &lt;package&gt;==&lt;版本&gt;</code></li><li>查看已经安装的 package <code>pip list</code></li><li>检查 package 是否已经过期 <code>pip list outdated</code></li><li>卸载 package <code>pip uninstall &lt;包名&gt;</code></li><li>查看 package 的依赖 <code>pip show &lt;包名&gt;</code></li></ul><h1 id="Python-中的虚拟环境-venv"><a href="#Python-中的虚拟环境-venv" class="headerlink" title="Python 中的虚拟环境 venv"></a>Python 中的虚拟环境 venv</h1><p>虚拟环境就是在当前的系统环境中，去配置另外一个 python 的运行环境，是可以创建多个不同的虚拟环境 python 的虚拟环境相互独立，互不影响</p><ul><li>虚拟环境中可以在没有权限的情况下安装库（Linux 系统中可能会出现的问题）</li><li>不同的应用可以使用不同的库或者不同的版本</li><li>虚拟环境中的库升级也不影响其他环境</li><li>虚拟环境可以作为一个项目的专有环境，在需要部署的时候，可以一键导出项目所需要的包</li><li>如何创建一个虚拟环境<ul><li>使用 pycharm 创建</li><li>自己安装独立的虚拟环境<ul><li>安装虚拟环境工具 <code>pip install virtualenv</code></li><li>创建虚拟环境 <code>python3 -m venv &lt;虚拟环境名称&gt;</code></li><li>激活虚拟环境 <code>source &lt;虚拟环境名称&gt;/bin/activate</code></li><li>退出虚拟环境 <code>deactivate</code></li><li>导出当前环境项目包 <code>pip freeze &gt; ./requirements.txt</code></li><li>通过 requirement 安装依赖包 <code>pip install -r requirement.txt</code></li></ul></li></ul></li></ul><blockquote><p>更新: 2024-01-27 22:21:03<br>原文: <a href="https://www.yuque.com/zacharyblock/cx2om6/ql4zdyscp3ffck91">https://www.yuque.com/zacharyblock/cx2om6/ql4zdyscp3ffck91</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Python面向对象 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python面向对象-面向对象高阶</title>
      <link href="/2022/12/31/Python%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E9%AB%98%E9%98%B6/"/>
      <url>/2022/12/31/Python%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E9%AB%98%E9%98%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="面向对象高阶"><a href="#面向对象高阶" class="headerlink" title="面向对象高阶"></a>面向对象高阶</h1><h1 id="内置成员"><a href="#内置成员" class="headerlink" title="内置成员"></a>内置成员</h1><ul><li>获取当前类\对象的所属成员，返回一个字典包含类或对象的成员<ul><li>类名.<strong>dict</strong></li><li>对象名.<strong>dict</strong></li></ul></li><li>获取类的文档信息，就是定义类后对类的一个说明<ul><li>类名.<strong>doc</strong></li><li>对象名.<strong>doc</strong></li></ul></li><li>获取类名称，结果返回字符串<ul><li>类名.<strong>name</strong></li></ul></li><li>获取类所在的文件名称，如果是当前文件就会返回<strong>main</strong><ul><li>类名.<strong>module</strong></li></ul></li><li>获取当前类的父类或者父类列表列表<ul><li>类名.<strong>base</strong></li><li>类名.<strong>bases</strong></li></ul></li><li>获取类的继承关系<ul><li>类名.<strong>mro</strong></li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span>():</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">B</span>():</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Demo</span>(A, B):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    这是类的说明文档</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    name = <span class="literal">None</span></span><br><span class="line">    age = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">func</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;这是一个方法&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">res = Demo.__dict__</span><br><span class="line"><span class="built_in">print</span>(</span><br><span class="line">    res)  <span class="comment"># &#123;&#x27;__module__&#x27;: &#x27;__main__&#x27;, &#x27;__doc__&#x27;: &#x27;\n    这是类的说明文档\n    &#x27;, &#x27;name&#x27;: None, &#x27;age&#x27;: None, &#x27;func&#x27;: &lt;function Demo.func at 0x10076b560&gt;, &#x27;__dict__&#x27;: &lt;attribute &#x27;__dict__&#x27; of &#x27;Demo&#x27; objects&gt;, &#x27;__weakref__&#x27;: &lt;attribute &#x27;__weakref__&#x27; of &#x27;Demo&#x27; objects&gt;&#125;</span></span><br><span class="line"></span><br><span class="line">d = Demo()</span><br><span class="line">res = d.__dict__</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># &#123;&#125;</span></span><br><span class="line"></span><br><span class="line">res = Demo.__doc__</span><br><span class="line"><span class="built_in">print</span>(res)</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#    这是类的说明文档</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">res = d.__doc__</span><br><span class="line"><span class="built_in">print</span>(res)</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#    这是类的说明文档</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line">res = Demo.__name__</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># Demo</span></span><br><span class="line"></span><br><span class="line">res = Demo.__module__</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># __main__</span></span><br><span class="line"></span><br><span class="line">res = Demo.__base__</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># &lt;class &#x27;__main__.A&#x27;&gt;</span></span><br><span class="line">res = Demo.__bases__</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># (&lt;class &#x27;__main__.A&#x27;&gt;, &lt;class &#x27;__main__.B&#x27;&gt;)</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(Demo.mro())  <span class="comment"># [&lt;class &#x27;__main__.Demo&#x27;&gt;, &lt;class &#x27;__main__.A&#x27;&gt;, &lt;class &#x27;__main__.B&#x27;&gt;, &lt;class &#x27;object&#x27;&gt;]</span></span><br><span class="line"><span class="built_in">print</span>(Demo.__mro__)  <span class="comment"># (&lt;class &#x27;__main__.Demo&#x27;&gt;, &lt;class &#x27;__main__.A&#x27;&gt;, &lt;class &#x27;__main__.B&#x27;&gt;, &lt;class &#x27;object&#x27;&gt;)</span></span><br></pre></td></tr></table></figure><h1 id="方法的分类"><a href="#方法的分类" class="headerlink" title="方法的分类"></a>方法的分类</h1><h2 id="对象方法"><a href="#对象方法" class="headerlink" title="对象方法"></a>对象方法</h2><p>在类中定义的方法，含有 self 参数 含有 self 的方法，只能使用对象进行调用 该方法会把调用的对象传递进来</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 对象方法</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Demo</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">fun</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="variable language_">self</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;this is func&#x27;</span>)</span><br><span class="line"></span><br><span class="line">d = Demo()</span><br><span class="line">d.fun()</span><br><span class="line"><span class="comment"># &lt;__main__.Demo object at 0x10cc92150&gt;</span></span><br><span class="line"><span class="comment"># this is object method</span></span><br></pre></td></tr></table></figure><h2 id="类方法"><a href="#类方法" class="headerlink" title="类方法"></a>类方法</h2><p>在类中定义的方法，使用了装饰器@classmethod 进行装饰的类 方法中有 cls 这个形参，不需要实例化对象就可以直接用类调用的方法 会把调用这个方法的类传递进来</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 类方法</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cdemo</span>():</span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">fun</span>(<span class="params">cls</span>):</span><br><span class="line">        <span class="built_in">print</span>(cls)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;this is class method&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Cdemo.fun()</span><br><span class="line"><span class="comment"># &lt;class &#x27;__main__.Cdemo&#x27;&gt;</span></span><br><span class="line"><span class="comment"># this is class method</span></span><br></pre></td></tr></table></figure><h2 id="绑定类方法"><a href="#绑定类方法" class="headerlink" title="绑定类方法"></a>绑定类方法</h2><p>绑定类方法就是在类中，不带有形参 self 的一个方法 调用的时候直接使用类调用，无法使用对象调用 不会传递任何参数进来</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 绑定类方法</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Bdemo</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">func</span>():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;this is bind class func&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Bdemo.func()</span><br><span class="line"><span class="comment"># this is bind class func</span></span><br></pre></td></tr></table></figure><h2 id="静态方法"><a href="#静态方法" class="headerlink" title="静态方法"></a>静态方法</h2><p>在类中定义的方法，使用了装饰器@staticmethod 进行装饰的类 类中，不带有形参 self 的一个方法,也没有其他参数 可以使用类或者对象直接调用 不会传递任何参数</p><p>静态方法只是定义在类范围内的一个函数而已</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 静态方法</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Sdemo</span>():</span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">func</span>():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;this is a static method&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">s = Sdemo()</span><br><span class="line">s.func()  <span class="comment"># this is a static method</span></span><br><span class="line">Sdemo.func()  <span class="comment"># this is a static method</span></span><br></pre></td></tr></table></figure><h1 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h1><ul><li>检测一个类是否为另一个类的子类<ul><li>issubclass(son,fa)</li></ul></li><li>检测一个对象是否是一个类的实例化<ul><li>isinstance(obj,cls)</li></ul></li><li>检测一个类&#x2F;对象是否具有一个成员属性<ul><li>hasattr(obj&#x2F;cls,attr)</li></ul></li><li>获取类&#x2F;对象成员的值<ul><li>getattr(obj&#x2F;cls,attr)</li></ul></li><li>设置类&#x2F;对象成员的值<ul><li>setattr(obj&#x2F;cls,attr,value)</li></ul></li><li>删除类&#x2F;对象的成员属性<ul><li>delattr(obj&#x2F;cls,attr)</li></ul></li><li>dir() 获取当前对象所可以访问的成员列表</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">hello</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;hello&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">B</span>(<span class="title class_ inherited__">A</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">C</span>(<span class="title class_ inherited__">A</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">D</span>(B, C):</span><br><span class="line">    name = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_hello</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;hello&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">issubclass</span>(D, B))  <span class="comment"># True</span></span><br><span class="line"></span><br><span class="line">d = D()</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">isinstance</span>(d, D))  <span class="comment"># True</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">isinstance</span>(d, B))  <span class="comment"># True</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hasattr</span>(d, <span class="string">&#x27;hello&#x27;</span>))  <span class="comment"># True</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hasattr</span>(d, <span class="string">&#x27;get_hello&#x27;</span>))  <span class="comment"># True</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hasattr</span>(d, <span class="string">&#x27;name&#x27;</span>))  <span class="comment"># True</span></span><br><span class="line"></span><br><span class="line">res = <span class="built_in">getattr</span>(d, <span class="string">&#x27;name&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># None</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">setattr</span>(d, <span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;zachary&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(d.name)  <span class="comment"># zachary</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">delattr</span>(d,<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(d.name) <span class="comment"># None</span></span><br><span class="line"></span><br><span class="line">res = <span class="built_in">dir</span>(d)</span><br><span class="line"><span class="built_in">print</span>(res)</span><br></pre></td></tr></table></figure><h1 id="魔术方法"><a href="#魔术方法" class="headerlink" title="魔术方法"></a>魔术方法</h1><p>魔术方法就是不需要手动调用就可以自动执行的方法</p><h2 id="init-初始化方法"><a href="#init-初始化方法" class="headerlink" title="init 初始化方法"></a><strong>init</strong> 初始化方法</h2><ul><li>触发机制：当实例化对象之后就会立即触发的方法</li><li>作用：为当前创建的对象完成一些初始化的操作，比如：成员属性的赋值，方法的调用，打开或创建一些资源</li><li>参数：一个 self，接受当前对象，其他参数根据需求进行定义即可</li><li>返回值：无</li><li>注意事项：无</li></ul><h2 id="new-构造方法"><a href="#new-构造方法" class="headerlink" title="new 构造方法"></a><strong>new</strong> 构造方法</h2><p>构造一个对象的过程是：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">person = Person(<span class="string">&quot;Jack&quot;</span>)</span><br><span class="line">实际上做了两件事情</span><br><span class="line"><span class="number">1.</span> person = <span class="built_in">object</span>.__new__(Person, <span class="string">&quot;Jack&quot;</span>)</span><br><span class="line"><span class="number">2.</span> person.__init__(<span class="string">&quot;Jack&quot;</span>)</span><br></pre></td></tr></table></figure><ul><li>触发机制：实例化对象时自动触发（在<strong>init</strong>之前触发）</li><li>作用：管理控制对象创建的过程</li><li>参数：一个 cls 接受当前类，其他参数根据初始化方法的参数进行决定</li><li>返回值：必须返回 object.<strong>new</strong>(cls)进行对象的创建，如果没有返回值，则实例化的对象的结果为 None</li><li>注意事项：<ul><li><strong>new</strong>方法的参数和<strong>init</strong>方法的参数要保持一致，除了第一个参数</li><li>必须返回 object.<strong>new</strong>(cls)进行对象的创建，如果没有返回值，则实例化对象的结果为 None</li><li>通常情况下，定义了<strong>new</strong>，就不用再定义<strong>init</strong>方法了</li></ul></li><li>应用场景：设计模式中的单例设计模式</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Square</span>(<span class="title class_ inherited__">int</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__new__</span>(<span class="params">cls,value:<span class="built_in">int</span></span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>().__new__(cls,value**<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">num = Square(<span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(num)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(num))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">isinstance</span>(num, <span class="built_in">int</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__new__</span>(<span class="params">cls,name,gender</span>):</span><br><span class="line">        obj = <span class="built_in">super</span>().__new__(cls)</span><br><span class="line">        obj.name = name</span><br><span class="line">        obj.gender = gender</span><br><span class="line">        <span class="keyword">return</span> obj</span><br><span class="line"></span><br><span class="line">student = Student(<span class="string">&quot;zachary&quot;</span>,<span class="string">&quot;male&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(student.name)</span><br><span class="line"><span class="built_in">print</span>(student.gender)</span><br></pre></td></tr></table></figure><h2 id="del-析构方法"><a href="#del-析构方法" class="headerlink" title="del 析构方法"></a><strong>del</strong> 析构方法</h2><ul><li>触发机制：当该类对象被销毁时，自动触发</li><li>作用：关闭或释放对象创建时打开或创建的一些资源</li><li>参数：一个 self，接受当前对象</li><li>返回值：无</li><li>注意事项：无</li></ul><h2 id="call"><a href="#call" class="headerlink" title="call"></a><strong>call</strong></h2><ul><li>触发机制：把对象当做函数直接调用时自动触发</li><li>作用：一般用于归纳类或对象的操作步骤，方便调用</li><li>参数：一个 self 接收当前对象，其他参数根据调用需求确定</li><li>返回值：可有可无</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>():</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 构造方法</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__new__</span>(<span class="params">cls, *args, **kwargs</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;触发了构造方法&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(args)</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">object</span>.__new__(cls)</span><br><span class="line">        <span class="comment"># 必须要有这一句才能返回object对象,才能触发init</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 初始化方法</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, age, gender</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;触发了初始化方法&#x27;</span>)</span><br><span class="line">        <span class="variable language_">self</span>.name = name</span><br><span class="line">        <span class="variable language_">self</span>.age = age</span><br><span class="line">        <span class="variable language_">self</span>.gender = gender</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__call__</span>(<span class="params">self, *args, **kwargs</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;你把对象当成了函数进行调用&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 析构方法</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__del__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;触发了析构方法&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 实例化对象</span></span><br><span class="line">duanduan = Person(<span class="string">&#x27;duandaun&#x27;</span>, <span class="number">23</span>, <span class="string">&#x27;female&#x27;</span>)</span><br><span class="line">duanduan()</span><br><span class="line"><span class="comment"># 触发了构造方法</span></span><br><span class="line"><span class="comment"># (&#x27;duandaun&#x27;, 23, &#x27;female&#x27;)</span></span><br><span class="line"><span class="comment"># 触发了初始化方法</span></span><br><span class="line"><span class="comment"># 你把对象当成了函数进行调用</span></span><br><span class="line"><span class="comment"># 触发了析构方法</span></span><br></pre></td></tr></table></figure><h2 id="len"><a href="#len" class="headerlink" title="len"></a><strong>len</strong></h2><p>可以代替对象使用 len 函数，并返回一个指定的整型</p><ul><li>触发机制：当使用 len 函数去检测当前对象的时候自动触发</li><li>作用：可以使用 len 函数检测当前对象中某个数据的信息</li><li>参数：一个 self 接收当前对象</li><li>返回值：必须有，并且必须是一个整数</li><li>注意事项：len 要获取什么属性的值，就在返回值中返回那个属性的长度即可</li></ul><h2 id="str"><a href="#str" class="headerlink" title="str"></a><strong>str</strong></h2><p>可以代替对象进行 str 或者 print 的字符串信息返回</p><ul><li>触发机制：当使用 str 或者 print 函数对对象进行操作时自动触发</li><li>作用：代码对象进行字符串的返回，可以自定义打印的信息；该描述面向用户</li><li>参数：一个 self，接受当前对象</li><li>返回值：必须有，而且必须是字符串类型的值</li></ul><h2 id="repr"><a href="#repr" class="headerlink" title="repr"></a><strong>repr</strong></h2><ul><li>触发机制：在使用 repr 方法对当前对象进行转换时自动触发，某种情况 print 也可以触发</li><li>作用：可以设置 repr 函数操作对象的结果；该描述的主要目标是机器或者开发者</li><li>参数：一个 self 接受当前对象</li><li>返回值：必须有，而且必须是字符串类型的值</li><li>注意：正常情况下，如果没有<strong>str</strong>这个魔术方法，<strong>repr</strong>方法就会代替<strong>str</strong>魔术方法，可以使用 print 进行触发</li></ul><h2 id="bool"><a href="#bool" class="headerlink" title="bool"></a><strong>bool</strong></h2><ul><li>触发机制：当使用 bool 函数转换当前对象时，自动触发</li><li>作用：可以代替对象进行布尔类型的转换，可以转换任何数据</li><li>参数：一个 self 接收对象</li><li>返回值：必须是一个布尔类型的返回值，如果没有实现<strong>bool</strong>方法，会去掉用<strong>len</strong>的结果求解 bool 值</li></ul><h2 id="eq"><a href="#eq" class="headerlink" title="eq"></a><strong>eq</strong></h2><ul><li>触发机制：当使用<code>==</code>比较两个对象的内容是否相同的时候</li><li>作用：对比两个对象是否相等的逻辑</li><li>参数：一个 self 接收对象，other 接收另一个对象</li><li>返回值：必须有 Bool 类型</li></ul><h2 id="hash"><a href="#hash" class="headerlink" title="hash"></a><strong>hash</strong></h2><ul><li>触发机制：使用<code>hash()</code>方法 或者 将该对象加入到 set、dict 等需要调用 hash()方法的时候会调用</li><li>作用：根据对象生成 hash 值的逻辑</li><li>参数：一个 self 接收对象</li><li>返回值：hash 值</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Demo</span>():</span><br><span class="line">    listurl = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__len__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">len</span>(<span class="variable language_">self</span>.listurl)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;这是当前脚本中的一个对象&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__repr__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;这是一个对象&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">obj = Demo()</span><br><span class="line">res = <span class="built_in">len</span>(obj)</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># 0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用__str__</span></span><br><span class="line"><span class="built_in">print</span>(obj)  <span class="comment"># 这是当前脚本中的一个对象</span></span><br><span class="line">res = <span class="built_in">str</span>(obj)</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># 这是当前脚本中的一个对象</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 注释掉__str__, 只使用__repr__</span></span><br><span class="line"><span class="built_in">print</span>(obj)  <span class="comment"># 这是一个对象</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 不用注释掉__str__, 使用__repr__</span></span><br><span class="line">res = <span class="built_in">repr</span>(obj)</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># 这是一个对象</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用bool without __bool__</span></span><br><span class="line">res = <span class="built_in">bool</span>(obj)</span><br><span class="line"><span class="built_in">print</span>(res) <span class="comment"># False  因为listurl是空的，若listurl有值，则为True</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyDate</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,year,month,day</span>):</span><br><span class="line">        <span class="variable language_">self</span>.year = year</span><br><span class="line">        <span class="variable language_">self</span>.month = month</span><br><span class="line">        <span class="variable language_">self</span>.day = day</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__eq__</span>(<span class="params">self,other</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(other,MyDate):</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">self</span>.year == other.year <span class="keyword">and</span> <span class="variable language_">self</span>.month == other.month <span class="keyword">and</span> <span class="variable language_">self</span>.day == other.day</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__hash__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;__hash__被调用了&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">hash</span>(<span class="variable language_">self</span>.year + <span class="variable language_">self</span>.month * <span class="number">41</span> + <span class="variable language_">self</span>.day * <span class="number">41</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># eq</span></span><br><span class="line">mydate1 = MyDate(<span class="number">2023</span>,<span class="number">1</span>,<span class="number">4</span>)</span><br><span class="line">mydate2 = MyDate(<span class="number">2023</span>,<span class="number">1</span>,<span class="number">4</span>)</span><br><span class="line">mydate3 = mydate1</span><br><span class="line"><span class="built_in">print</span>(mydate1 <span class="keyword">is</span> mydate2)</span><br><span class="line"><span class="built_in">print</span>(mydate1 <span class="keyword">is</span> mydate3)</span><br><span class="line"><span class="built_in">print</span>(mydate1 == mydate2)</span><br><span class="line"><span class="built_in">print</span>(mydate1 == mydate3)</span><br><span class="line"></span><br><span class="line"><span class="comment"># hash</span></span><br><span class="line">test_set = <span class="built_in">set</span>()</span><br><span class="line">test_set.add(mydate1)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hash</span>(mydate2))</span><br></pre></td></tr></table></figure><h2 id="str-与-repr"><a href="#str-与-repr" class="headerlink" title="str 与 repr"></a>str 与 repr</h2><p>str 和 repr 函数都能够把其他类型的数据转化为字符串类型 str 函数会把对象 转为 更适合人类阅读的形式 repr 函数会把对象 转为 更适合解释器读取的形式 如果数据对象并没有明显的区别的话，str 和 repr 结果是一样的</p><h1 id="成员相关魔术方法"><a href="#成员相关魔术方法" class="headerlink" title="成员相关魔术方法"></a>成员相关魔术方法</h1><ol><li><strong>getattribute</strong>(self, item)</li></ol><ul><li>触发机制：当访问对象成员时，自动触发，无论当前成员是否存在，也无论当前成员是否有值</li><li>作用：可以在获取对象成员时，对数据进行一些处理</li><li>返回值：可有可无，返回的值就是访问的结果</li><li>注意事项：<ul><li>在当前的魔术方法中，禁止使用 对象.成员 的方式进行成员访问，会触发递归</li><li>如果想要在当前魔术方法中访问对象的成员必须使用 object 来进行访问<ul><li>格式：</li><li>object.<strong>getattribute</strong>(self, item)</li></ul></li></ul></li></ul><ol start="2"><li><strong>getattr</strong></li></ol><ul><li>触发机制：当访问对象中不存在的成员时，自动触发</li><li>作用：防止访问不存在的成员时报错，也可以为不存在的成员进行赋值操作</li><li>参数：一个 self 接收当前对象，一个 item 接收当前访问的成员名称</li><li>返回值：可有可无</li><li>注意事项：<ul><li>如果有<strong>getattribute</strong>存在，就会无法使用<strong>getattr</strong>，会直接调用到<strong>getattribute</strong></li><li>也要注意，不要在当前的方法中再次去访问这个不存在的成员，会触发递归操作</li></ul></li></ul><ol start="3"><li><strong>setattr</strong></li></ol><ul><li>触发机制：当给对象的成员进行赋值操作时会自动触发（包括添加、修改）</li><li>作用：可以限制或管理对象成员的添加和修改操作</li><li>参数：1.self 接收当前对象 2.设置的成员名 3.设置的成员值</li><li>返回值：无</li><li>注意事项：<ul><li>在当前的魔术方法中禁止给当前对象的成员直接进行赋值操作，会触发递归操作，</li><li>如果想要给当前对象的成员进行赋值，需要借助 object<ul><li>格式：object.<strong>setattr</strong>(self,key,value)</li></ul></li><li>该方法中如果没有给对象成员进行赋值，那么对象成员赋值失败</li></ul></li></ul><ol start="4"><li><strong>delattr</strong></li></ol><ul><li>触发机制：当删除对象成员时自动触发</li><li>作用：可以去限制对象成员的删除，还可以删除不存在成员时的报错</li><li>参数：1.self 接收当前对象 2.item 删除的成员名称</li><li>返回值：无</li><li>注意事项：<ul><li>在当前魔术方法中禁止直接删除对象的成员，会触发递归操作</li><li>如果想要删除当前对象的成员，那么需要借助 object<ul><li>格式：object.<strong>delattr</strong>(self,item)</li></ul></li></ul></li></ul><h2 id="访问一个成员的顺序"><a href="#访问一个成员的顺序" class="headerlink" title="访问一个成员的顺序"></a>访问一个成员的顺序</h2><ol><li>调用 <strong>getattribute</strong>魔术方法</li><li>调用数据描述符</li><li>调用当前对象的成员属性</li><li>调用当前类的成员</li><li>调用非数据描述符</li><li>调用父类的成员</li><li>调用<strong>getattr</strong>魔术方法</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>():</span><br><span class="line">    name = <span class="string">&#x27;名字&#x27;</span></span><br><span class="line">    age = <span class="string">&#x27;年龄&#x27;</span></span><br><span class="line">    gender = <span class="string">&#x27;性别&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, age, gender</span>):</span><br><span class="line">        <span class="variable language_">self</span>.name = name</span><br><span class="line">        <span class="variable language_">self</span>.age = age</span><br><span class="line">        <span class="variable language_">self</span>.gender = gender</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">say</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;聊一聊，倾诉一下&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">sing</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;庄先生，高歌一曲&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取成员对象时候 自动触发</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__getattribute__</span>(<span class="params">self, item</span>):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="comment"># 在方法中只能使用object获取属性值</span></span><br><span class="line">            res = <span class="built_in">object</span>.__getattribute__(<span class="variable language_">self</span>, item)</span><br><span class="line">            <span class="keyword">return</span> res[<span class="number">0</span>] + <span class="string">&#x27;*&#x27;</span> + res[-<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__getattr__</span>(<span class="params">self, item</span>):</span><br><span class="line">        <span class="built_in">print</span>(item)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__setattr__</span>(<span class="params">self, key, value</span>):</span><br><span class="line">        <span class="built_in">object</span>.__setattr__(<span class="variable language_">self</span>, key, value)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__delattr__</span>(<span class="params">self, item</span>):</span><br><span class="line">        <span class="built_in">object</span>.__delattr__(<span class="variable language_">self</span>, item)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">duan = Person(<span class="string">&#x27;duanduan&#x27;</span>, <span class="number">23</span>, <span class="string">&#x27;female&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(duan.name)  <span class="comment"># d*n</span></span><br><span class="line"><span class="built_in">print</span>(duan.salary)  <span class="comment"># False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 把 __getattribute__ 注释掉</span></span><br><span class="line"><span class="built_in">print</span>(duan.name)  <span class="comment"># duanduan</span></span><br><span class="line"><span class="built_in">print</span>(duan.salary)</span><br><span class="line"><span class="comment"># salary</span></span><br><span class="line"><span class="comment"># False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 把 __getattribute__ 注释掉</span></span><br><span class="line">duan.salary = <span class="number">10000</span></span><br><span class="line"><span class="built_in">print</span>(duan.salary)  <span class="comment"># 10000</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 把 __getattribute__ 注释掉</span></span><br><span class="line"><span class="keyword">del</span> duan.salary</span><br><span class="line"><span class="built_in">print</span>(duan.salary)  <span class="comment"># salary</span></span><br><span class="line"><span class="keyword">del</span> duan.name</span><br><span class="line"><span class="built_in">print</span>(duan.name)</span><br><span class="line"><span class="comment"># False</span></span><br><span class="line"><span class="comment"># 名字</span></span><br></pre></td></tr></table></figure><h1 id="描述符与-property"><a href="#描述符与-property" class="headerlink" title="描述符与 property"></a>描述符与 property</h1><p>当一个类中，包含了三个魔术方法（<strong>get</strong>,<strong>set</strong>,<strong>delete</strong>）之一，或者全部，那么这个类就被称为描述符类</p><h2 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h2><p>描述符的作用：</p><ul><li>描述符的作用就是对一个类中的某个成员进行一个详细的管理操作（获取、赋值、删除）</li><li>描述符就是代理了一个类中的成员的操作，描述符属于类，只能定义为类的属性</li></ul><p>一个类中的成员的值是另一个描述符类的对象() 那么当对这个类中的成员进行操作时，可以理解为就是对另一个对象的操作 使用格式：把当前的描述符类赋值给一个需要代理的类中的成员属性</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">PersonName</span>():</span><br><span class="line">    __name = <span class="string">&#x27;duanduan&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__get__</span>(<span class="params">self, instance, owner</span>):</span><br><span class="line">        <span class="comment"># print(self,instance,owner)</span></span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.__name</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__set__</span>(<span class="params">self, instance, value</span>):</span><br><span class="line">        <span class="comment"># print(self,instance,value)</span></span><br><span class="line">        <span class="variable language_">self</span>.__name = value</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__delete__</span>(<span class="params">self, instance</span>):</span><br><span class="line">        <span class="keyword">del</span> <span class="variable language_">self</span>.__name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>():</span><br><span class="line">    <span class="comment"># 把类中的成员属性交给描述符来实现</span></span><br><span class="line">    name = PersonName()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">duan = Person()</span><br><span class="line"><span class="built_in">print</span>(duan.name)  <span class="comment"># duanduan</span></span><br><span class="line">duan.name = <span class="string">&#x27;duanxiaozhu&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(duan.name)  <span class="comment"># duanxiaozhu</span></span><br><span class="line"><span class="keyword">del</span> duan.name</span><br><span class="line"><span class="built_in">print</span>(duan.name)  <span class="comment"># duanduan</span></span><br></pre></td></tr></table></figure><p>实际上真正的用法应该是下面这个例子，还需要额外使用一个</p><p><code>__set_name__(self, owner, name)</code>方法 给属性赋值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">PersonName</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__set_name__</span>(<span class="params">self, owner, name</span>):</span><br><span class="line">        <span class="variable language_">self</span>.__property_name = name</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__set__</span>(<span class="params">self, instance, value</span>):</span><br><span class="line">        <span class="comment"># 做一些校验</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(value, <span class="built_in">str</span>):</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">f&quot;<span class="subst">&#123;self.__property_name&#125;</span> is not a str type&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(value) == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">f&quot;<span class="subst">&#123;self.__property_name&#125;</span> is empty&quot;</span>)</span><br><span class="line">        instance.__dict__[<span class="variable language_">self</span>.__property_name] = value</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__get__</span>(<span class="params">self, instance, owner</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>.__property_name <span class="keyword">in</span> instance.__dict__:</span><br><span class="line">       <span class="keyword">return</span> instance.__dict__[<span class="variable language_">self</span>.__property_name]</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="应用案例"><a href="#应用案例" class="headerlink" title="应用案例"></a>应用案例</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">定义一个学生类，需要记录，学员的id、名字、分数</span></span><br><span class="line"><span class="string">解决方法：</span></span><br><span class="line"><span class="string">    1. 在__init__方法中检测当前分数范围的合法性</span></span><br><span class="line"><span class="string">    但是这个方法只能在初始化的时候有效，之后修改的话就无效了</span></span><br><span class="line"><span class="string">    2. 定义一个__setattr__的魔术方法进行检测</span></span><br><span class="line"><span class="string">    检测给分数进行赋值的时候的一个合法性</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">假如 学员的分数不止一个时怎么办，比如 语文分数、数学分数、英语分数 甚至类中的代码比较多的情况</span></span><br><span class="line"><span class="string">解决方法：</span></span><br><span class="line"><span class="string">    3. 可以使用描述符来代理我们分数这个属性</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment"># 定义一个学生类，需要记录，学员的id、名字、分数</span></span><br><span class="line"><span class="comment"># 解决方法：1. 2.</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,<span class="built_in">id</span>,name,score</span>):</span><br><span class="line">        <span class="variable language_">self</span>.<span class="built_in">id</span> = <span class="built_in">id</span></span><br><span class="line">        <span class="variable language_">self</span>.name = name</span><br><span class="line">        <span class="keyword">if</span> score &gt;= <span class="number">0</span> <span class="keyword">and</span> score &lt;=<span class="number">100</span>:</span><br><span class="line">            <span class="variable language_">self</span>.score = score</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;当前分数出错啦&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">returnShe</span>(<span class="params">self</span>):</span><br><span class="line">        info =  <span class="string">f&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        学号：<span class="subst">&#123;self.<span class="built_in">id</span>&#125;</span></span></span><br><span class="line"><span class="string">        姓名：<span class="subst">&#123;self.name&#125;</span></span></span><br><span class="line"><span class="string">        分数：<span class="subst">&#123;self.score&#125;</span></span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="built_in">print</span>(info)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__setattr__</span>(<span class="params">self, key, value</span>):</span><br><span class="line">        <span class="comment"># 检测是否是给score进行赋值操作</span></span><br><span class="line">        <span class="keyword">if</span> key == <span class="string">&#x27;score&#x27;</span>:</span><br><span class="line">            <span class="keyword">if</span> value &gt;= <span class="number">0</span> <span class="keyword">and</span> value &lt;= <span class="number">100</span>:</span><br><span class="line">                <span class="built_in">object</span>.__setattr__(<span class="variable language_">self</span>,key,value)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;当前分数出错啦&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">object</span>.__setattr__(<span class="variable language_">self</span>,key,value)</span><br><span class="line"></span><br><span class="line">duan = Student(<span class="number">2022</span>,<span class="string">&#x27;duanduan&#x27;</span>,<span class="number">100</span>)</span><br><span class="line">duan.returnShe()</span><br><span class="line">duan.score = <span class="number">1000</span></span><br><span class="line">duan.returnShe()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#解决方法： 3. 使用描述符来代理我们分数这个属性</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义描述符类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Score</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__set__</span>(<span class="params">self, instance, value</span>):</span><br><span class="line">        <span class="keyword">if</span> value &gt;= <span class="number">0</span> <span class="keyword">and</span> value &lt;= <span class="number">100</span>:</span><br><span class="line">            <span class="variable language_">self</span>.__score = value</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;当前分数出错啦&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__get__</span>(<span class="params">self, instance, owner</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.__score</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__delete__</span>(<span class="params">self, instance</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>():</span><br><span class="line">    score = Score()</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,<span class="built_in">id</span>,name,score</span>):</span><br><span class="line">        <span class="variable language_">self</span>.<span class="built_in">id</span> = <span class="built_in">id</span></span><br><span class="line">        <span class="variable language_">self</span>.name = name</span><br><span class="line">        <span class="variable language_">self</span>.score = score</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">returnShe</span>(<span class="params">self</span>):</span><br><span class="line">        info =  <span class="string">f&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        学号：<span class="subst">&#123;self.<span class="built_in">id</span>&#125;</span></span></span><br><span class="line"><span class="string">        姓名：<span class="subst">&#123;self.name&#125;</span></span></span><br><span class="line"><span class="string">        分数：<span class="subst">&#123;self.score&#125;</span></span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="built_in">print</span>(info)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">duan = Student(<span class="number">2022</span>,<span class="string">&#x27;duanduan&#x27;</span>,<span class="number">100</span>)</span><br><span class="line">duan.returnShe()</span><br><span class="line">duan.score = <span class="number">1000</span></span><br><span class="line">duan.returnShe()</span><br></pre></td></tr></table></figure><h2 id="三种定义方式"><a href="#三种定义方式" class="headerlink" title="三种定义方式"></a>三种定义方式</h2><ul><li><strong>数据描述符</strong>(完整)<ul><li>同时具备三个魔术方法的类就是 <strong>数据描述符</strong></li></ul></li><li><strong>非数据描述符</strong> （不完整）<ul><li>没有同时具备三个魔术方法的类就是 <strong>非数据描述符类</strong></li></ul></li></ul><h3 id="第一种"><a href="#第一种" class="headerlink" title="第一种"></a>第一种</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 格式一 通过定义描述符类来实现</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ScoreManage</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__get__</span>(<span class="params">self, instance, owner</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__set__</span>(<span class="params">self, instance, value</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__delete__</span>(<span class="params">self, instance</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>():</span><br><span class="line">    score = ScoreManage()</span><br></pre></td></tr></table></figure><h3 id="第二种"><a href="#第二种" class="headerlink" title="第二种"></a>第二种</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 格式二 使用property函数来实现</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Studebnt</span>():</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">getscore</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;getscore&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">setscore</span>(<span class="params">self, value</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;setscore&#x27;</span>, value)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">deletescore</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;deletescore&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 在property函数中指代对应的三个方法,并且参数要按顺序对应上</span></span><br><span class="line">    <span class="comment"># 1.__get__ 2.__set__ 3.__delete__</span></span><br><span class="line">    score = <span class="built_in">property</span>(getscore, setscore, deletescore)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">xs = Studebnt()</span><br><span class="line"><span class="built_in">print</span>(xs.score)</span><br><span class="line"><span class="comment"># getscore</span></span><br><span class="line"><span class="comment"># None  因为上面的getscore没有返回值</span></span><br><span class="line">xs.score = <span class="number">100</span>  <span class="comment"># setscore 100</span></span><br><span class="line"><span class="built_in">print</span>(xs.score)</span><br><span class="line"><span class="comment"># getscore</span></span><br><span class="line"><span class="comment"># None  因为上面的getscore没有返回值</span></span><br><span class="line"><span class="keyword">del</span> xs.score <span class="comment"># deletescore</span></span><br></pre></td></tr></table></figure><h3 id="第三种"><a href="#第三种" class="headerlink" title="第三种"></a>第三种</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 格式三 使用装饰器 @property 语法来实现</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>():</span><br><span class="line">    __score = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">score</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;get&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.__score</span><br><span class="line"></span><br><span class="line"><span class="meta">    @score.setter</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">score</span>(<span class="params">self, value</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;set&#x27;</span>)</span><br><span class="line">        <span class="variable language_">self</span>.__score = value</span><br><span class="line"></span><br><span class="line"><span class="meta">    @score.deleter</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">score</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;delete&#x27;</span>)</span><br><span class="line">        <span class="keyword">del</span> <span class="variable language_">self</span>.__score</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">xs = Student()</span><br><span class="line"><span class="built_in">print</span>(xs.score)</span><br><span class="line"><span class="comment"># get</span></span><br><span class="line"><span class="comment"># None</span></span><br><span class="line">xs.score = <span class="number">100</span>  <span class="comment"># set</span></span><br><span class="line"><span class="built_in">print</span>(xs.score)</span><br><span class="line"><span class="comment"># get</span></span><br><span class="line"><span class="comment"># 100</span></span><br><span class="line"><span class="keyword">del</span> xs.score  <span class="comment"># delete</span></span><br></pre></td></tr></table></figure><h1 id="设计模式"><a href="#设计模式" class="headerlink" title="设计模式"></a>设计模式</h1><p>设计模式是前人为了完成某个功能或需求，根据经验和总结，对实现的代码步骤和代码设计进行了总结和归纳。成为了实现某种需求的经典模式 设计模式并不是固定的，而是一种面向对象编程的设计</p><h2 id="单例-单态-设计模式"><a href="#单例-单态-设计模式" class="headerlink" title="单例(单态)设计模式"></a>单例(单态)设计模式</h2><p>在当前脚本中，同一个类只能创建出一个对象去使用，这种情况就称为单例(单态)</p><ul><li>数据库连接对象</li><li>共享对象</li><li></li></ul><p>Python 中的单例模式设计思路，</p><ul><li>1、需要有一个方法，可以去控制当前对象的创建<ul><li>构造方法 <strong>new</strong></li></ul></li><li>2、需要有一个标识来存储和表示是否有对象<ul><li>创建一个属性，进行存储，默认值为 None</li></ul></li><li>3、在创建对象的方法中去检测和判断是否有对象？<ul><li>如果没有对象，则创建对象，并且把对象存储起来</li><li>如果存储的是对象，则直接返回对象，就不需要创建新的对象了</li></ul></li></ul><h3 id="这个代码很重要"><a href="#这个代码很重要" class="headerlink" title="这个代码很重要"></a>这个代码很重要</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Demo</span>():</span><br><span class="line">    <span class="comment"># 2.定义私有属性存储对象，默认值为None</span></span><br><span class="line">    __obj = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 1.定义构造方法</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__new__</span>(<span class="params">cls, *args, **kwargs</span>):</span><br><span class="line">        <span class="comment"># 3.在创建对象的过程中,判断是否有对象</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> cls.__obj:</span><br><span class="line">            cls.__obj = <span class="built_in">object</span>.__new__(cls)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> cls.__obj</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a = Demo()</span><br><span class="line">b = Demo()</span><br><span class="line"><span class="built_in">print</span>(a)  <span class="comment"># &lt;__main__.Demo object at 0x10344e1d0&gt;</span></span><br><span class="line"><span class="built_in">print</span>(b)  <span class="comment"># &lt;__main__.Demo object at 0x10344e1d0&gt;</span></span><br></pre></td></tr></table></figure><p>使用装饰器来实现的话</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">singleton</span>(<span class="params">cls</span>):</span><br><span class="line">    _obj = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">inner</span>(<span class="params">*args, **kwargs</span>):</span><br><span class="line">        <span class="keyword">if</span> cls <span class="keyword">in</span> _obj:</span><br><span class="line">            <span class="keyword">return</span> _obj[cls]</span><br><span class="line"></span><br><span class="line">        obj = cls(*args, **kwargs)</span><br><span class="line">        _obj[cls] = obj</span><br><span class="line">        <span class="keyword">return</span> obj</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> inner</span><br><span class="line"></span><br><span class="line"><span class="meta">@singleton</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Demo</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">a = Demo()</span><br><span class="line">b = Demo()</span><br><span class="line"><span class="built_in">print</span>(a <span class="keyword">is</span> b)</span><br></pre></td></tr></table></figure><p>装饰器模式-2</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">singleton</span>(<span class="params">cls</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">inner</span>():</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">hasattr</span>(cls,<span class="string">&quot;__obj&quot;</span>):</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">getattr</span>(cls,<span class="string">&quot;__obj&quot;</span>)</span><br><span class="line"></span><br><span class="line">        obj = cls()</span><br><span class="line">        <span class="built_in">setattr</span>(cls,<span class="string">&quot;__obj&quot;</span>,obj)</span><br><span class="line">        <span class="keyword">return</span> obj</span><br><span class="line"><span class="keyword">return</span> inner</span><br><span class="line"></span><br><span class="line"><span class="meta">@singleton</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Demo</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">a = Demo()</span><br><span class="line">b = Demo()</span><br><span class="line"><span class="built_in">print</span>(a <span class="keyword">is</span> b)</span><br></pre></td></tr></table></figure><p>装饰器模式-3，使用元类来设计</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">SingletonMeta</span>(<span class="title class_ inherited__">type</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__call__</span>(<span class="params">cls, *args, **kwargs</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">hasattr</span>(cls,<span class="string">&quot;__obj&quot;</span>):</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">getattr</span>(cls,<span class="string">&quot;__obj&quot;</span>)</span><br><span class="line"></span><br><span class="line">        obj = <span class="built_in">super</span>().__call__(*args, **kwargs)</span><br><span class="line">        <span class="built_in">setattr</span>(cls,<span class="string">&quot;__obj&quot;</span>,obj)</span><br><span class="line">        <span class="keyword">return</span> obj</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Demo</span>(metaclasss=SingletonMeta):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">a = Demo()</span><br><span class="line">b = Demo()</span><br><span class="line"><span class="built_in">print</span>(a <span class="keyword">is</span> b)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="mixin-混合设计模式"><a href="#mixin-混合设计模式" class="headerlink" title="mixin 混合设计模式"></a>mixin 混合设计模式</h2><p>继承需要一个必要的前提，继承应该是一个‘is-a’的关系 例如：苹果可以去继承水果，因为苹果是一个水果</p><ul><li>Minin 表示混合<ul><li>Minin 必须是表示一种功能，而不是一个对象</li><li>Minin 的功能必须单一，如果有多个功能，那就多定义 Minin 类</li><li>Python 中的 Minin 是通过多继承实现的</li><li>Minin 这个类通常不单独使用,而是混合到其他类中,去增加功能</li><li>Minin 类不依赖子类的实现,即便子类没有继承这个 Minin,子类也能正常运行,就是可能会缺少了一些功能</li></ul></li><li>使用 Minin 混合类的好处<ul><li>在不对类的内容修改的前提下，扩展了类的功能</li><li>Minin 混合类为了提高代码的重用性，使得代码结构更加简单清晰</li><li>可以根据开发需求任意调整功能（创建新的 Minin 类）</li><li>避免设计多层次的复杂继承关系</li></ul></li><li>解决方案使用的还是多继承，但是给飞行器这个类的名称定义成为一个 Minin 混合类</li><li>这样的一个 Minin 混合类，功能单一、并且不会单独使用：只有一个飞行器的功能，在继承的时候不会单一继承这一个，作为一个扩展的功能</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 解决方案使用的还是多继承，但是给飞行器这个类的名称定义成为一个 Minin 混合类</span></span><br><span class="line"><span class="comment"># 这样的一个Minin混合类，功能单一、并且不会单独使用：只有一个飞行器的功能，在继承的时候不会单一继承这一个，作为一个扩展的功能</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 交通工具类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">vehicle</span>():</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">huo</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;运输货物&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">ren</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;搭载乘客&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 飞行器类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">flyingMixin</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">fly</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;可以起飞啦&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义汽车类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">cart</span>(<span class="title class_ inherited__">vehicle</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义飞机类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">airplane</span>(vehicle,flyingMixin):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义直升机</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">helicopter</span>(airplane,flyingMixin):</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>实现一个具体的列子</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">ItemMixin</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__getitem__</span>(<span class="params">self, key</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.__dict__[key]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__setitem__</span>(<span class="params">self, key, value</span>):</span><br><span class="line">        <span class="variable language_">self</span>.__dict__[key] = value</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Car</span>(<span class="title class_ inherited__">ItemMixin</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, origin, auto</span>):</span><br><span class="line">        <span class="variable language_">self</span>.origin = origin</span><br><span class="line">        <span class="variable language_">self</span>.auto = auto</span><br><span class="line"></span><br><span class="line">car = Car(<span class="string">&quot;Germany&quot;</span>, <span class="literal">True</span>)</span><br><span class="line"><span class="built_in">print</span>(car[<span class="string">&quot;origin&quot;</span>])</span><br></pre></td></tr></table></figure><p>练习：把一个对象转换成 dict 和 json 格式，使用 mixin 设计模式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">DictMixin</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">to_dict</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.__dictConvert(<span class="variable language_">self</span>.__dict__)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__dictConvert</span>(<span class="params">self, dicAttrs: <span class="built_in">dict</span></span>):</span><br><span class="line">        resDict = &#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> key, value <span class="keyword">in</span> dicAttrs.items():</span><br><span class="line">            resDict[key] = <span class="variable language_">self</span>.__valueConvert(value)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> resDict</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__valueConvert</span>(<span class="params">self, value</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(value, DictMixin):</span><br><span class="line">            <span class="keyword">return</span> value.to_dict()</span><br><span class="line">        <span class="keyword">elif</span> <span class="built_in">isinstance</span>(value, <span class="built_in">dict</span>):</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">self</span>.__dictConvert(value)</span><br><span class="line">        <span class="keyword">elif</span> <span class="built_in">isinstance</span>(value, <span class="built_in">list</span>):</span><br><span class="line">            <span class="keyword">return</span> [<span class="variable language_">self</span>.__valueConvert(i) fot i <span class="keyword">in</span> <span class="built_in">list</span>]</span><br><span class="line">        <span class="keyword">elif</span> <span class="built_in">hasattr</span>(value,<span class="string">&#x27;__dict__):</span></span><br><span class="line"><span class="string">            return self.__dictConvert(value)</span></span><br><span class="line"><span class="string">else:</span></span><br><span class="line"><span class="string">            return value</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">class JSONMixin:</span></span><br><span class="line"><span class="string">    def to_json(self):</span></span><br><span class="line"><span class="string">        return json.dumps(self.to_dict())</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">class Car(DictMixin, JSONMixin):</span></span><br><span class="line"><span class="string">    def __init__(self, origin, auto):</span></span><br><span class="line"><span class="string">        self.origin = origin</span></span><br><span class="line"><span class="string">        self.auto = auto</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">car = Car(&quot;Germany&quot;,True)</span></span><br><span class="line"><span class="string">print(car.to_dict())</span></span><br><span class="line"><span class="string">print(car.to_json())</span></span><br></pre></td></tr></table></figure><h2 id="抽象类"><a href="#抽象类" class="headerlink" title="抽象类"></a>抽象类</h2><ul><li>抽象类是一个特殊的类<ul><li>抽象类不能用，不能直接实例化成为一个对象</li><li>抽象类中包含了抽象方法，抽象方法就是没有实现的代码的方法</li><li>抽象类需要子类继承，并重写父类的抽象方法，才可以使用</li></ul></li><li>如果要定义一个抽象类，需要继承<code>metaclass=abc.ABCMeta</code>类 或者 <code>ABC</code></li><li>如果要定义一个抽象方法，需要使用装饰器进行装饰<code>@abc.abstractmethod</code></li><li>抽象类不能直接实例化</li><li>想要实现一个抽象类，需要定义一个子类去继承抽象类，然后实现抽象类中的抽象方法</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> abc</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AbsCls</span>(metaclass=abc.ABCMeta):</span><br><span class="line"></span><br><span class="line"><span class="meta">    @abc.abstractmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">absmethod</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">othermethod</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;这是一个实现了的方法&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">sonclass</span>(<span class="title class_ inherited__">AbsCls</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">absmethod</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;son实现了抽象类的抽象方法&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">daughterclass</span>(<span class="title class_ inherited__">AbsCls</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">absmethod</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;daughter实现了抽象类的抽象方法&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">method_call</span>(<span class="params">abscls: AbsCls</span>):</span><br><span class="line">    abscls.absmethod()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">obj = sonclass()</span><br><span class="line">obj.absmethod()</span><br><span class="line">obj.othermethod()</span><br><span class="line"><span class="comment"># 实现了抽象类的抽象方法</span></span><br><span class="line"><span class="comment"># 这是一个实现了的方法</span></span><br><span class="line"></span><br><span class="line">son = sonclass()</span><br><span class="line">daughter = daughterclass()</span><br><span class="line">method_call(son)</span><br><span class="line">method_call(daughter)</span><br></pre></td></tr></table></figure><h1 id="枚举"><a href="#枚举" class="headerlink" title="枚举"></a>枚举</h1><h2 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h2><p>作用：代码中的数值，不便于阅读和查错</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.gender = <span class="number">1</span> <span class="comment"># male 1 female 0</span></span><br></pre></td></tr></table></figure><p>定义枚举类：通过继承 <code>enum.Enum</code>实现一个枚举类</p><ul><li>可以通过字符串 用[]获取到对应的枚举类型</li><li>可通过整数类型转换 用()获取到对应的枚举类型</li><li>枚举类本身是可以迭代的（比如 下拉列表，需要获取全部选项）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> enum <span class="keyword">import</span> Enum</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Gender</span>(<span class="title class_ inherited__">Enum</span>):</span><br><span class="line">    MALE = <span class="number">1</span></span><br><span class="line">    FEMALE = <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.gender = Gender.MALE</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(Gender.MALE.name)</span><br><span class="line"><span class="built_in">print</span>(Gender.MALE.value)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以通过字符串 用[]获取到对应的枚举类型</span></span><br><span class="line">gender_str = <span class="string">&quot;MALE&quot;</span></span><br><span class="line">student = Student()</span><br><span class="line">student.gender = Gender[gender_str]</span><br><span class="line"><span class="built_in">print</span>(student.gender)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 也可通过整数类型转换 用()获取到对应的枚举类型</span></span><br><span class="line">gender_int = <span class="number">2</span></span><br><span class="line">student.gender = Gender(gender_int)</span><br><span class="line"><span class="built_in">print</span>(student.gender)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 遍历枚举成员</span></span><br><span class="line"><span class="keyword">for</span> gender <span class="keyword">in</span> Gender:</span><br><span class="line">    <span class="built_in">print</span>(gender)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="枚举成员的别名"><a href="#枚举成员的别名" class="headerlink" title="枚举成员的别名"></a>枚举成员的别名</h2><ul><li>枚举类中的多个成员具有同一个 value 时，只有一个能成为主要成员，其余是别名</li><li>可以通过<code>__members__</code>获取枚举类的所有成员</li><li>唯一枚举装饰器 <code>@enum.unique</code>（为了避免 不允许重复 value 的情况下出错，比如有时候复制粘贴会写出两个相同 value 的枚举 然后忘记修改的情况，可以使用唯一枚举装饰器进行处理）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">ResStatus</span>(<span class="title class_ inherited__">Enum</span>):</span><br><span class="line">    SUCCESS = <span class="number">1</span></span><br><span class="line">    OK = <span class="number">1</span></span><br><span class="line">    FAIL = <span class="number">2</span></span><br><span class="line">    NO = <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> rs <span class="keyword">in</span> ResStatus:</span><br><span class="line">    <span class="built_in">print</span>(rs.name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#获取枚举类所有成员</span></span><br><span class="line"><span class="built_in">print</span>(ResStatus.__members__)</span><br><span class="line"><span class="built_in">print</span>(ResStatus.SUCCESS == ResStatus.OK)</span><br><span class="line"><span class="built_in">print</span>(ResStatus.SUCCESS <span class="keyword">is</span> ResStatus.OK)</span><br><span class="line"></span><br><span class="line"><span class="meta">@num.unique</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Status</span>(<span class="title class_ inherited__">Enum</span>):</span><br><span class="line">    SUCCESS = <span class="number">1</span></span><br><span class="line">    OK = <span class="number">1</span></span><br><span class="line">    FAIL = <span class="number">2</span></span><br><span class="line">    NO = <span class="number">2</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="枚举的扩展"><a href="#枚举的扩展" class="headerlink" title="枚举的扩展"></a>枚举的扩展</h2><ol><li><code>__str__</code></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">ResStatus</span>(<span class="title class_ inherited__">Enum</span>):</span><br><span class="line">    SUCCESS = <span class="number">1</span></span><br><span class="line">    OK = <span class="number">1</span></span><br><span class="line">    FAIL = <span class="number">2</span></span><br><span class="line">    NO = <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;self.name&#125;</span>(<span class="subst">&#123;self.value&#125;</span>)&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(ResStatus.OK)</span><br></pre></td></tr></table></figure><ol start="2"><li><code>__eq__</code></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">ResStatus</span>(<span class="title class_ inherited__">Enum</span>):</span><br><span class="line">    SUCCESS = <span class="number">1</span></span><br><span class="line">    OK = <span class="number">1</span></span><br><span class="line">    FAIL = <span class="number">2</span></span><br><span class="line">    NO = <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__eq__</span>(<span class="params">self,other</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(other,<span class="built_in">int</span>):</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">self</span>.value == other</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(other,<span class="built_in">str</span>):</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">self</span>.name == other.upper()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">isinstance</span>(other,ResStatus):</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">self</span> <span class="keyword">is</span> other</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(ResStatus.OK == <span class="number">1</span>)</span><br></pre></td></tr></table></figure><ol start="3"><li><code>__lt__</code></li></ol><p>需要使用<code>@total_ordering</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@total_ordering</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">OrderOfProcess</span>(<span class="title class_ inherited__">Enum</span>):</span><br><span class="line">    START = <span class="number">1</span></span><br><span class="line">    PROCESSING = <span class="number">2</span></span><br><span class="line">    TEST = <span class="number">3</span></span><br><span class="line">    END = <span class="number">4</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__lt__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(other,<span class="built_in">int</span>):</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">self</span>.value &lt; other</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">isinstance</span>(other,OrderOfProcess):</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">self</span>.value &lt; other.value</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(OrderOfProcess.PROCESSING &lt; <span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(OrderOfProcess.END &lt; OrderOfProcess.TEST)</span><br></pre></td></tr></table></figure><ol start="4"><li><code>auto()</code></li></ol><p>按顺序给枚举成员赋值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">ResStatus</span>(<span class="title class_ inherited__">Enum</span>):</span><br><span class="line">    SUCCESS = auto()</span><br><span class="line">    FAIL = auto()</span><br></pre></td></tr></table></figure><blockquote><p>更新: 2024-01-11 22:37:47<br>原文: <a href="https://www.yuque.com/zacharyblock/cx2om6/yke47fm8vxrh2w6g">https://www.yuque.com/zacharyblock/cx2om6/yke47fm8vxrh2w6g</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Python面向对象 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python面向对象-面向对象基础</title>
      <link href="/2022/12/31/Python%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80/"/>
      <url>/2022/12/31/Python%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="面向对象基础"><a href="#面向对象基础" class="headerlink" title="面向对象基础"></a>面向对象基础</h1><h1 id="课程介绍"><a href="#课程介绍" class="headerlink" title="课程介绍"></a>课程介绍</h1><ul><li>面向对象基础</li><li>面向对象高阶</li><li>异常</li><li>模块与包</li><li>项目（ATM&#x2F;Library）</li></ul><h1 id="面向对象是什么"><a href="#面向对象是什么" class="headerlink" title="面向对象是什么"></a>面向对象是什么</h1><p>面向对象编程 ——（Object Oriented Programming，简称 OOP），是一种以对象为中心的程序设计思想</p><p>面向过程编程 ——（Procedure Oriented Programming，简称 POP），是一种以过程为中心的程序设计思想</p><h1 id="面向对象的总结和类与对象"><a href="#面向对象的总结和类与对象" class="headerlink" title="面向对象的总结和类与对象"></a>面向对象的总结和类与对象</h1><h2 id="面向过程"><a href="#面向过程" class="headerlink" title="面向过程"></a>面向过程</h2><p>面向过程的核心是<strong>过程</strong>，过程就是只解决问题的步骤</p><ul><li>优缺点<ul><li>优点：将负责的问题流程化，进而实现简单化</li><li>缺点：扩展性差（更新、维护、迭代）</li></ul></li></ul><p>总结：再去完成一些简单的程序时，可以使用面向过程去解决，但是如果有复杂的程序或任务，而且需要不断的进行迭代和维护，那么肯定是优先选择面向对象的编程思想</p><h2 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h2><p>面向对象的核心是对象，是一个特征和功能的综合体</p><ul><li>优缺点<ul><li>优点：可扩展性高</li><li>缺点：变成复杂度相对面向过程高一些，指的是在计算机在执行面向对象的程序时的性能表现</li></ul></li></ul><h3 id="面向对象中的一些名称-术语"><a href="#面向对象中的一些名称-术语" class="headerlink" title="面向对象中的一些名称(术语)"></a>面向对象中的一些名称(术语)</h3><ul><li>类：类是对象的一个抽象的概念</li><li>对象：对象是类创建的一个实例</li><li>类和对象的关系就是：模具和铸件<ul><li>类是由对象总结而来的，总结的这个过程叫做抽象</li><li>对象是由类具体实施出来的，这个过程叫做实例化</li></ul></li></ul><h1 id="面向对象-基本实现"><a href="#面向对象-基本实现" class="headerlink" title="面向对象-基本实现"></a>面向对象-基本实现</h1><p>如果需要实例一个对象，那么需要先抽象一个类</p><ul><li>类名的书写规范：使用驼峰命名法<ul><li>大驼峰：MyCar、XiaoMi</li><li>小驼峰：myCar、xiaoMi</li></ul></li></ul><p>例如需要创建一个汽车对象，先要创建一个汽车类</p><ul><li>使用 class 定义一个类</li><li>一个类中有属性和方法<ul><li>属性：就是特征，即变量，类中称为属性；分为类属性和实例属性</li><li>方法：就是功能，即函数，在类中称为方法；分为类方法和实例方法</li></ul></li><li>类中的属性一般定义在方法前面</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Cart</span>():</span><br><span class="line">    <span class="comment"># 属性</span></span><br><span class="line">    color = <span class="string">&#x27;白色&#x27;</span></span><br><span class="line">    brand = <span class="string">&#x27;Audi&#x27;</span></span><br><span class="line">    pailiang = <span class="number">2.4</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 方法</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">lahuo</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;self.color&#125;</span>的<span class="subst">&#123;self.brand&#125;</span>能拉货&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">doufeng</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;排量<span class="subst">&#123;self.pailiang&#125;</span>能兜风&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mycar = Cart()</span><br><span class="line"><span class="built_in">print</span>(mycar, <span class="built_in">type</span>(mycar))  <span class="comment"># &lt;__main__.Cart object at 0x100b338d0&gt; &lt;class &#x27;__main__.Cart&#x27;&gt;</span></span><br><span class="line"><span class="built_in">print</span>(mycar.brand)  <span class="comment"># Audi</span></span><br><span class="line">mycar.lahuo()  <span class="comment"># 白色的Audi能拉货</span></span><br><span class="line">mycar.doufeng()  <span class="comment"># 排量2.4能兜风</span></span><br></pre></td></tr></table></figure><h1 id="对象成员的操作"><a href="#对象成员的操作" class="headerlink" title="对象成员的操作"></a>对象成员的操作</h1><p>什么是对象的成员？ 一个对象通过实例化之后，在类中定义的属性和方法，可以使用实例化的对象进行操作 类中定义的属性就是成员属性，类中定义的方法就是成员方法</p><h2 id="对象的成员操作："><a href="#对象的成员操作：" class="headerlink" title="对象的成员操作："></a>对象的成员操作：</h2><ul><li>在类的外部，使用对象操作成员<ul><li>通过对象访问类中的属性<ul><li>先访问对象自己的属性</li><li>若对象自己没有这个属性，就去访问对象的类的属性</li></ul></li><li>修改对象访问的类的属性<ul><li>实际上修改的并不是对象的类的属性</li><li>而是创建了一个对象自己的属性并赋值</li></ul></li><li>给对象添加属性<ul><li>这是给对象创建了自己的属性 不是对象的类的属性</li></ul></li><li>删除属性<ul><li>只能删除对象属性，不能删除对象访问的类属性</li></ul></li></ul></li><li>在类的外部 通过对象，访问类中的方法<ul><li>访问对象的方法<ul><li>先访问对象自己的方法</li><li>若对象自己没有这个方法，则访问对象的类的方法</li></ul></li><li>修改对象的方法<ul><li>实际上修改的并不是对象的类方法</li><li>而是创建了一个对象的方法并调用</li></ul></li><li>给对象添加方法<ul><li>这创建的是对象的新方法，并没有给对象的类创建方法</li></ul></li><li>删除对象的方法<ul><li>同样只能删除对象的方法，对象的类的方法无法删除</li></ul></li></ul></li><li>总结：一个类定义类成员属性和成员方法，那么通过这个类实例化的对象，也具备这些方法和属性嘛？<ul><li>实际上，在创建对象的时候，并不会把类中的属性和方法也复制一份给对象，实际上是在对象中引用类的方法，所以不同对象调用同一个属性或方法，是相通的。</li><li>因此在访问对象的属性时，会先去寻找对象自己的属性，如果没有去找类的属性和方法</li><li>而如果给对象的属性或方法进行修改或者添加的时候，等于给对象创建了一个自己的属性和方法，并不调用类的，而且删除的时候也只能删除对象本身的添加或修改的那个属性和方法。</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Cart</span>():</span><br><span class="line">    <span class="comment"># 属性</span></span><br><span class="line">    color = <span class="string">&#x27;白色&#x27;</span></span><br><span class="line">    brand = <span class="string">&#x27;Audi&#x27;</span></span><br><span class="line">    pailiang = <span class="number">2.4</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 方法</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">lahuo</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;self.color&#125;</span>的<span class="subst">&#123;self.brand&#125;</span>能拉货&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">doufeng</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;排量<span class="subst">&#123;self.pailiang&#125;</span>能兜风&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a = Cart()</span><br><span class="line">b = Cart()</span><br><span class="line"><span class="built_in">print</span>(a)  <span class="comment"># &lt;__main__.Cart object at 0x104e27250&gt;</span></span><br><span class="line"><span class="built_in">print</span>(b)  <span class="comment"># &lt;__main__.Cart object at 0x104e31450&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过对象访问类中的属性</span></span><br><span class="line">res = a.color</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># 白色</span></span><br><span class="line">res = b.color</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># 白色</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改对象的属性</span></span><br><span class="line">a.color = <span class="string">&#x27;黑色&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(a.color)  <span class="comment"># 黑色</span></span><br><span class="line"><span class="built_in">print</span>(b.color)  <span class="comment"># 白色</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 给对象添加属性</span></span><br><span class="line">a.name = <span class="string">&#x27;A6L&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(a.name)  <span class="comment"># A6L</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="built_in">print</span>(b.name)  <span class="comment"># b不存在</span></span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;b不存在&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除属性，只能删除对象属性，不能删除对象访问的类属性</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">del</span> a.name</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;成功&#x27;</span>)  <span class="comment"># 成功</span></span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;不成功&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">del</span> a.brand  <span class="comment"># 不能删除对象的类属性</span></span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;不能删除对象的类属性&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 访问对象的方法</span></span><br><span class="line">a.doufeng()  <span class="comment"># 排量2.4能兜风</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改对象的方法</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">newfunc</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;这是一个新的方法&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a.doufeng = newfunc</span><br><span class="line">a.doufeng()  <span class="comment"># 这是一个新的方法</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 给对象添加方法</span></span><br><span class="line">a.xiuche = newfunc</span><br><span class="line">a.xiuche()  <span class="comment"># 这是一个新的方法</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除对象的方法</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">del</span> a.brand  <span class="comment"># 不能删除类方法</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;可以删除类方法&#x27;</span>)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;不能删除类方法&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">del</span> a.xiuche  <span class="comment"># 可以删除对象的方法</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;可以删除对象的方法&#x27;</span>)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;不能删除对象的方法&#x27;</span>)</span><br></pre></td></tr></table></figure><h1 id="类成员的操作"><a href="#类成员的操作" class="headerlink" title="类成员的操作"></a>类成员的操作</h1><ul><li>访问类成员属性、方法<ul><li>使用类名.类属性进行访问</li><li>使用 <code>getattr()</code>方法</li><li>使用类名.类方法(类名)进行访问</li></ul></li><li>修改类成员属性、方法<ul><li>使用类名.类属性&#x3D;新值进行修改</li><li>使用 <code>setattr()</code>方法</li><li>使用类名.类方法&#x3D;新方法()进行修改</li><li>修改后的类成员属性、方法就会彻底更新，创建一个新的对象调用类属性、方法，属性、方法会更新</li></ul></li><li>添加类成员属性、方法<ul><li>使用类名.新类属性&#x3D;新值进行新增</li><li>使用 <code>setattr()</code>方法</li><li>使用类名.新类方法&#x3D;新方法()进行新增</li><li>新增的类属性、类方法，可以被创建的对象访问到</li></ul></li><li>删除类成员属性、方法<ul><li>使用 del 类名.类属性删除类成员属性</li><li>使用 <code>delattr()</code>方法</li><li>使用 del 类名.类方法删除类成员方法</li><li>删除之后再使用对象访问类属性、方法会访问不到</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Cart</span>():</span><br><span class="line">    <span class="comment"># 属性</span></span><br><span class="line">    color = <span class="string">&#x27;白色&#x27;</span></span><br><span class="line">    brand = <span class="string">&#x27;Audi&#x27;</span></span><br><span class="line">    pailiang = <span class="number">2.4</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 方法</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">lahuo</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;self.color&#125;</span>的<span class="subst">&#123;self.brand&#125;</span>能拉货&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">doufeng</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;排量<span class="subst">&#123;self.pailiang&#125;</span>能兜风&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 访问类成员属性</span></span><br><span class="line"><span class="built_in">print</span>(Cart.brand)  <span class="comment"># Audi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改类成员属性</span></span><br><span class="line">Cart.brand = <span class="string">&#x27;宝马&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(Cart.brand)  <span class="comment"># 宝马</span></span><br><span class="line">opp = Cart()</span><br><span class="line"><span class="built_in">print</span>(opp.brand)  <span class="comment"># 宝马</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加类成员属性</span></span><br><span class="line">Cart.name = <span class="string">&#x27;A7&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(Cart.name)  <span class="comment"># A7</span></span><br><span class="line">opp = Cart()</span><br><span class="line"><span class="built_in">print</span>(opp.name)  <span class="comment"># A7</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除类成员属性</span></span><br><span class="line"><span class="keyword">del</span> Cart.brand</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    opp = Cart()</span><br><span class="line">    <span class="built_in">print</span>(opp.brand)  <span class="comment"># opp没有brand</span></span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;opp没有brand&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 访问类成员方法</span></span><br><span class="line">Cart.doufeng(Cart)  <span class="comment"># 排量2.4能兜风</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改类成员方法</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">newm</span>(<span class="params">self</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;这是一个新的方法&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Cart.doufeng = newm</span><br><span class="line">Cart.doufeng(Cart)  <span class="comment"># 这是一个新的方法</span></span><br><span class="line">opp = Cart()</span><br><span class="line">opp.doufeng()  <span class="comment"># 这是一个新的方法</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加类成员方法</span></span><br><span class="line">Cart.xinfangfa = newm</span><br><span class="line">Cart.xinfangfa(Cart)  <span class="comment"># 这是一个新的方法</span></span><br><span class="line">opp = Cart()</span><br><span class="line">opp.xinfangfa()  <span class="comment"># 这是一个新的方法</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除类成员方法</span></span><br><span class="line"><span class="keyword">del</span> Cart.doufeng</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    Cart.doufeng()  <span class="comment"># 类的成员对象已删除</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;类的成员对象&#x27;</span>)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;类的成员对象已删除&#x27;</span>)</span><br><span class="line"></span><br><span class="line">opp = Cart()</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    opp.doufeng()  <span class="comment"># 对象没有doufeng</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;对象还有doufeng&#x27;</span>)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;对象没有doufeng&#x27;</span>)</span><br></pre></td></tr></table></figure><h1 id="类与对象的总结"><a href="#类与对象的总结" class="headerlink" title="类与对象的总结"></a>类与对象的总结</h1><ul><li>一个类可以实例化出多个对象，每个对象在内存中都独立存在</li><li>当通过类实例化对象时，并不会把类中的成员复制一份给对象，而去给对象了一个引用</li><li>访问对象成员的时候，如果对象自己没有这个成员，对象会向实例化它的类去查找</li><li>对象成员的添加和修改，都只会影响当前对象自己，不会影响类和其他对象</li><li>删除对象的成员时，必须是该对象自己具备的成员才可以</li><li>对类的成员操作，会影响通过这个类创建的对象，包括之前创建的</li></ul><h1 id="self-详解"><a href="#self-详解" class="headerlink" title="self 详解"></a>self 详解</h1><ul><li>self 在方法中只是一个形参，并不是关键字</li><li>self 在方法中代表的是当前这个对象自身</li><li>self 在方法中代表对象可以去操作成员，可以使用 self 在类的内部访问成员</li><li>只要是对象能完成的事情，self 都可以</li><li>在类中定义的方法，都需要有一个形参 self，<ul><li>这样的方法称为非绑定类方法</li><li>可以使用对象和类去访问</li></ul></li><li>否则，类中的方法没有形参 self，对象将无法调用这个方法，但是可以使用类去调用<ul><li>这样的方法称为绑定类方法</li><li>只能使用类去访问</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>():</span><br><span class="line">    name = <span class="string">&#x27;xiaoduan&#x27;</span></span><br><span class="line">    age = <span class="number">23</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 非绑定类方法</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">introduce</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;i am <span class="subst">&#123;self.name&#125;</span> <span class="subst">&#123;self.age&#125;</span> years old&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 绑定类方法</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">func</span>():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;这是一个绑定类方法&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">duan = Person()</span><br><span class="line">duan.introduce()  <span class="comment"># i am xiaoduan 23 years old</span></span><br><span class="line">Person.func()  <span class="comment"># 这是一个绑定类方法</span></span><br></pre></td></tr></table></figure><h1 id="初始化方法-魔术方法"><a href="#初始化方法-魔术方法" class="headerlink" title="初始化方法_魔术方法"></a>初始化方法_魔术方法</h1><p>魔术方法：</p><p>魔术方法也和普通方法一样都是类中定义的成员方法 就是不需要去手动调用的，会在某种情况下自动触发（自动执行） 特殊点：多数的魔术方法 前后都有两个连续的下划线 魔术方法不是我们自己定义的，是系统定义好的，我们使用</p><ul><li><strong>init</strong> 初始化方法<ul><li>通过类实例化对象之后，自动触发的一个方法</li><li>作用：可以在对象实例化之后完成对象的初始化（属性的赋值，方法的调用）</li><li>应用场景：文件的打开，数据的获取</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>():</span><br><span class="line">    name = <span class="string">&#x27;xiaoduan&#x27;</span></span><br><span class="line">    age = <span class="number">23</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;这是一个初始化方法&#x27;</span>)</span><br><span class="line">        <span class="variable language_">self</span>.introduce()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">introduce</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;i am <span class="subst">&#123;self.name&#125;</span> <span class="subst">&#123;self.age&#125;</span> years old&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person2</span>():</span><br><span class="line">    name = <span class="literal">None</span></span><br><span class="line">    age = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, age</span>):</span><br><span class="line">        <span class="variable language_">self</span>.name = name</span><br><span class="line">        <span class="variable language_">self</span>.age = age</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;i am <span class="subst">&#123;self.name&#125;</span> <span class="subst">&#123;self.age&#125;</span> years old&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">duan = Person()  <span class="comment"># 这是一个初始化方法</span></span><br><span class="line"><span class="comment"># i am xiaoduan 23 years old</span></span><br><span class="line">huang = Person2(<span class="string">&#x27;huang&#x27;</span>, <span class="number">24</span>)  <span class="comment"># i am huang 24 years old</span></span><br></pre></td></tr></table></figure><h1 id="析构方法"><a href="#析构方法" class="headerlink" title="析构方法"></a>析构方法</h1><ul><li><strong>del</strong> 析构方法<ul><li>当前类实例化的对象被销毁时，自动触发</li><li>作用：可以在析构方法中完成一些特殊任务，关闭一些打开的资源，比如在初始化方法中打开的文件，可以在析构方法中关闭</li><li>注意：对象被销毁时，触发了这个方法，而不是这个方法销毁了对象</li><li>对象在哪些情况会被销毁：<ul><li>当程序执行完毕，内存中所有的资源都会被销毁</li><li>使用 del 删除对象</li><li>对象不再被引用时，会自动销毁</li></ul></li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">writeLog</span>():</span><br><span class="line">    <span class="comment"># 成员属性</span></span><br><span class="line">    <span class="comment"># 文件的路径</span></span><br><span class="line">    fileurl = <span class="string">&#x27;./&#x27;</span></span><br><span class="line">    <span class="comment"># 文件的名称</span></span><br><span class="line">    filename = <span class="string">&#x27;2022-3-9&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;写入日志初始化方法&#x27;</span>)</span><br><span class="line">        <span class="variable language_">self</span>.fileobj = <span class="built_in">open</span>(<span class="variable language_">self</span>.fileurl+<span class="variable language_">self</span>.filename,<span class="string">&#x27;a+&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">log</span>(<span class="params">self,s</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;日志内容为：<span class="subst">&#123;s&#125;</span>&#x27;</span>)</span><br><span class="line">        <span class="variable language_">self</span>.fileobj.write(s)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__del__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;析构方法触发&#x27;</span>)</span><br><span class="line">        <span class="variable language_">self</span>.fileobj.close()</span><br><span class="line"></span><br><span class="line">obj = writeLog()</span><br><span class="line">obj.log(<span class="string">&#x27;今天温度适宜出行&#x27;</span>)</span><br></pre></td></tr></table></figure><h1 id="日志类的封装"><a href="#日志类的封装" class="headerlink" title="日志类的封装"></a>日志类的封装</h1><ul><li>日志类<ul><li>class Mylog</li><li>功能：能够随时写入一个日志信息</li></ul></li><li>分析<ul><li>日志文件在什么地方？ 默认在当前目录</li><li>日志文件名是什么？ 当前日期 2022-03-11.log</li><li>日志的格式是什么样的？ 2022-03-11 12:12:12 错误信息</li><li>属性：成员属性的作用就是存储信息，供成员方法来使用<ul><li>fileurl 日志文件的地址</li><li>filename 日志文件的名称</li><li>fileobj 打开的文件对象</li></ul></li><li>方法：具体完成的一个功能的过程<ul><li><strong>init</strong>() &#x3D;&#x3D;&gt; 初始化方法，完成对象的初始化，并打开文件</li><li>wlog() &#x3D;&#x3D;&gt; 负责接受用户给的日志信息，并写入到日志文件中</li><li><strong>del</strong>() &#x3D;&#x3D;&gt; 析构方法，在对象被销毁时，关闭打开的文件</li></ul></li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Mylog</span>():</span><br><span class="line">    fileurl = <span class="string">&#x27;./&#x27;</span></span><br><span class="line">    filename = <span class="built_in">str</span>(time.strftime(<span class="string">&#x27;%Y-%m-%d&#x27;</span>)) + <span class="string">&#x27;.log&#x27;</span></span><br><span class="line">    fileobj = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># 打开文件</span></span><br><span class="line">        <span class="variable language_">self</span>.fileobj = <span class="built_in">open</span>(<span class="variable language_">self</span>.fileurl+<span class="variable language_">self</span>.filename,<span class="string">&#x27;a+&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">wlog</span>(<span class="params">self,s</span>):</span><br><span class="line">        date = time.strftime(<span class="string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span>)</span><br><span class="line">        msg = date+<span class="string">&#x27; &#x27;</span>+s+<span class="string">&#x27;\n&#x27;</span></span><br><span class="line">        <span class="variable language_">self</span>.fileobj.write(msg)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__del__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># 关闭打开的文件</span></span><br><span class="line">        <span class="variable language_">self</span>.fileobj.close()</span><br><span class="line"></span><br><span class="line">log = Mylog()</span><br><span class="line">log.wlog(<span class="string">&#x27;变量赋值错误&#x27;</span>)</span><br></pre></td></tr></table></figure><h1 id="面向对象的三大特性：封装、继承、多态"><a href="#面向对象的三大特性：封装、继承、多态" class="headerlink" title="面向对象的三大特性：封装、继承、多态"></a>面向对象的三大特性：封装、继承、多态</h1><h2 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h2><p>封装就是使用特殊的语法,对成员属性和成员方法进行包装，达到保护和隐藏的目的 但是封装是为了限制一些访问和操作，但是不能全部都限制（不能不让使用） 被封装的成员只是限制了访问权限，并不是不让访问 通常情况下，被封装的成员主要是供内部使用</p><h3 id="封装的级别"><a href="#封装的级别" class="headerlink" title="封装的级别"></a>封装的级别</h3><ul><li>公有的 public<ul><li>就是类中普通的成员属性</li></ul></li><li>受保护的 protected<ul><li>在类中的成员属性前 加一个 _ 受保护的成员</li></ul></li><li>私有的 private<ul><li>在类中的成员属性前 加两个 __ 私有的成员</li></ul></li></ul><table><thead><tr><th>封装的级别</th><th>公有的 public</th><th>受保护的 protected</th><th>私有的 private</th></tr></thead><tbody><tr><td>在类的内部</td><td>OK</td><td>OK</td><td>OK</td></tr><tr><td>在类的外部</td><td>OK</td><td>NO(Python 可以)</td><td>NO</td></tr></tbody></table><p>实际上私有是这么实现的 对于<strong>成员属性 &#x3D;&#x3D;&#x3D;&gt; _类名</strong>成员属性 进行了改写</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Resume</span>():</span><br><span class="line">    <span class="comment"># 成员属性</span></span><br><span class="line">    name = <span class="literal">None</span></span><br><span class="line">    _age = <span class="literal">None</span></span><br><span class="line">    __gender = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, age, gender</span>):</span><br><span class="line">        <span class="variable language_">self</span>.name = name</span><br><span class="line">        <span class="variable language_">self</span>._age = age</span><br><span class="line">        <span class="variable language_">self</span>.__gender = gender</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 成员方法</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">introduce</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;This is <span class="subst">&#123;self.name&#125;</span>&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="variable language_">self</span>.__gender)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_experience</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;I am <span class="subst">&#123;self._age&#125;</span> years old&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__superior</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;I am a <span class="subst">&#123;self.__gender&#125;</span>&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 实例化对象</span></span><br><span class="line">duanduan = Resume(<span class="string">&#x27;duanduan&#x27;</span>, <span class="number">23</span>, <span class="string">&#x27;female&#x27;</span>)</span><br><span class="line"><span class="comment"># 查看对象的所有属性</span></span><br><span class="line"><span class="built_in">print</span>(duanduan.__dict__)</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="built_in">print</span>(duanduan.name)</span><br><span class="line">    <span class="built_in">print</span>(duanduan._age)</span><br><span class="line">    <span class="comment"># print(duanduan.__gender) # 在类的外部不能操作私有成员</span></span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;NO&#x27;</span>)</span><br><span class="line"></span><br><span class="line">duanduan._experience()  <span class="comment"># I am 23 years old</span></span><br><span class="line"><span class="comment"># duanduan.__superior()  # 在类的外部不能操作私有成员</span></span><br><span class="line">duanduan.introduce()</span><br><span class="line"><span class="comment"># This is duanduan</span></span><br><span class="line"><span class="comment"># female</span></span><br></pre></td></tr></table></figure><h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><h3 id="单继承"><a href="#单继承" class="headerlink" title="单继承"></a>单继承</h3><p>什么是继承？ 在面向对象中，一个类去继承父类，这个类就拥有了父类的所有成员(除了私有成员)</p><p>概念</p><ul><li>被其他类继承的类，这个类称为父类 也叫做基类 或者 超类</li><li>继承其他类的类，这个类称为子类 也叫做派生类</li><li>子类可以有自己独立的成员，也可以没有</li><li>在不指定继承的父类时，所有类都继承自 object 类（系统提供）</li><li>子类继承了父类之后，就拥有了父类中所有的成员包括魔术方法（除了私有成员）</li><li>子类继承父类后，重新定义了父类中的方法，这种情况称为对父类方法的重写<ul><li>在子类中可以直接调用父类中定义的方法<code>super().父类方法名()</code></li></ul></li><li>子类继承父类后，定义了父类中没有的方法，这种情况称为对父类的扩展</li><li>一个父类可以被多个子类继承</li><li>子类调用父类方法时，如果该方法有参数要求，也需要传递参数</li></ul><p>继承的意义 提高代码的重用性，建立新的类与类的关系，方便其他逻辑的操作</p><p>继承语法格式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">父类</span>():</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">子类</span>(<span class="title class_ inherited__">父类</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">maoke</span>():</span><br><span class="line">    <span class="comment"># 属性</span></span><br><span class="line">    maose = <span class="string">&#x27;猫纹&#x27;</span></span><br><span class="line">    sex = <span class="string">&#x27;m&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 方法</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">pao</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;走猫步&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">pa</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;能上树&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义猫类 继承 猫科</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">mao</span>(<span class="title class_ inherited__">maoke</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">zhua</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;喜欢抓老鼠&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">pa</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>().pa()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;可以上树很快&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">bao</span>(<span class="title class_ inherited__">maoke</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">h = mao()</span><br><span class="line"><span class="built_in">print</span>(h.__dict__)  <span class="comment"># &#123;&#125;</span></span><br><span class="line"><span class="built_in">print</span>(h.maose)  <span class="comment"># 猫纹</span></span><br><span class="line">h.zhua()  <span class="comment"># 喜欢抓老鼠</span></span><br><span class="line">h.pa()</span><br><span class="line"><span class="comment"># 能上树</span></span><br><span class="line"><span class="comment"># 可以上树很快</span></span><br><span class="line"></span><br><span class="line">b = bao()</span><br><span class="line">b.pa()  <span class="comment"># 能上树</span></span><br></pre></td></tr></table></figure><h3 id="多继承"><a href="#多继承" class="headerlink" title="多继承"></a>多继承</h3><ul><li>单继承<ul><li>一个类只能继承一个父类</li></ul></li><li>多继承<ul><li>一个类可以去继承多个父类</li></ul></li></ul><p>多继承语法格式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">父亲</span>():</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">母亲</span>():</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">子类</span>(父亲,母亲):</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><ul><li>如果在多继承的时候使用了<code>super()</code>，这个时候继承的方法优先是是第一个父类的，若第一个父类没有，寻找下一个父类</li><li>同时，在多继承时，若想指定某个父类的方法，使用<code>父类.方法名(self)</code></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 父亲类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">F</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">eat</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;魁梧、强壮&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;F hello&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 母亲类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">M</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">eat</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;温文、尔雅&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;M hello&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 子类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">C</span>(F, M):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">eat</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>().eat()  <span class="comment"># 魁梧、强壮</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;挑食、闹腾&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># 指定使用父类的hello方法</span></span><br><span class="line">        F.hello(<span class="variable language_">self</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;C hello&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">c = C()</span><br><span class="line">c.eat()  <span class="comment"># 挑食、闹腾</span></span><br><span class="line">c.hello()</span><br></pre></td></tr></table></figure><h3 id="菱形继承（钻石继承）"><a href="#菱形继承（钻石继承）" class="headerlink" title="菱形继承（钻石继承）"></a>菱形继承（钻石继承）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">A</span><br><span class="line">B   C</span><br><span class="line">  D</span><br></pre></td></tr></table></figure><ul><li>可以使用 mro 方法获取 MRO 列表，就是类的继承关系<ul><li>使用 super 去调用父级的方法时，实际上是在用 super 调用 MRO 列表中的上一级中的方法</li><li>使用 super 去访问父级的属性时，实际上是在用 super 访问 MRO 列表中的上一级中的属性</li></ul></li><li>super()本身调用父级方法时，传递的 self 对象，就是这个方法中的那个 self 对象自己</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 人类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Human</span>():</span><br><span class="line">    num = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">eat</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="variable language_">self</span>.num)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;最最年长&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 父亲类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">F</span>(<span class="title class_ inherited__">Human</span>):</span><br><span class="line">    num = <span class="number">2</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">eat</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>().eat()</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">super</span>().num)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;魁梧、强壮&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 母亲类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">M</span>(<span class="title class_ inherited__">Human</span>):</span><br><span class="line">    num = <span class="number">3</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">eat</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>().eat()</span><br><span class="line">        <span class="comment"># print(super().num)</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;温文、尔雅&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 子类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">C</span>(F,M):</span><br><span class="line">    num = <span class="number">4</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">eat</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>().eat()  <span class="comment"># 魁梧、强壮</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">super</span>().num)  <span class="comment"># 2</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;挑食、闹腾&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">c = C()</span><br><span class="line">c.eat()</span><br><span class="line"><span class="comment"># 4</span></span><br><span class="line"><span class="comment"># 最最年长</span></span><br><span class="line"><span class="comment"># 温文、尔雅</span></span><br><span class="line"><span class="comment"># 3</span></span><br><span class="line"><span class="comment"># 魁梧、强壮</span></span><br><span class="line"><span class="comment"># 2</span></span><br><span class="line"><span class="comment"># 挑食、闹腾</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(C.mro()) <span class="comment">#[&lt;class &#x27;__main__.C&#x27;&gt;, &lt;class &#x27;__main__.F&#x27;&gt;, &lt;class &#x27;__main__.M&#x27;&gt;, &lt;class &#x27;__main__.Human&#x27;&gt;, &lt;class &#x27;object&#x27;&gt;]</span></span><br></pre></td></tr></table></figure><h3 id="继承关系检测"><a href="#继承关系检测" class="headerlink" title="继承关系检测"></a>继承关系检测</h3><p>在实现继承的语法之后，程序会自动生成一个继承的列表(MRO（Method Realtion Order) 方法关系列表</p><ul><li>MRO 列表生成原则：</li></ul><ol><li>子类永远在父类前</li><li>同一等级的类，按照子类中的继承顺序摆放</li><li>先子类，后父类的顺序原则，最终的类是系统提供的 object 类</li></ol><p>[&lt;class ‘**main**.C’&gt;, &lt;class ‘**main**.F’&gt;, &lt;class ‘**main**.M’&gt;, &lt;class ‘**main**.Human’&gt;, &lt;class ‘object’&gt;]</p><p>super()在调用的时候，并不是查找父类，而是去 MRO 列表上找上一个类 super()方法在调用时，会自动把当前 self 传入到上一级的类的方法中</p><p>类关系检测 issubclass() issubclass() 是一个类是否是另一个类的子类</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 沿用之前的类</span></span><br><span class="line"><span class="built_in">print</span>(</span><br><span class="line">    C.mro())  <span class="comment"># [&lt;class &#x27;__main__.C&#x27;&gt;, &lt;class &#x27;__main__.F&#x27;&gt;, &lt;class &#x27;__main__.M&#x27;&gt;, &lt;class &#x27;__main__.Human&#x27;&gt;, &lt;class &#x27;object&#x27;&gt;]</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">issubclass</span>(C, (F, M)))  <span class="comment"># True</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">issubclass</span>(F, M))  <span class="comment"># False</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">issubclass</span>(C, Human))  <span class="comment"># True</span></span><br></pre></td></tr></table></figure><h2 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h2><p>对于同一个方法，由于调用的对象不同，产生了不同形态的结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Computer</span>():</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">usb</span>(<span class="params">self, obj</span>):</span><br><span class="line">        obj.start()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Mouse</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">start</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;鼠标启动成功&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">KeyBoard</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">start</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;键盘启动成功&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Udisk</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">start</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;U盘启动了&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">c = Computer()</span><br><span class="line">m = Mouse()</span><br><span class="line">k = KeyBoard()</span><br><span class="line">u = Udisk()</span><br><span class="line"></span><br><span class="line">c.usb(m)  <span class="comment"># 鼠标启动成功</span></span><br><span class="line">c.usb(k)  <span class="comment"># 键盘启动成功</span></span><br><span class="line">c.usb(u)  <span class="comment"># U盘启动了</span></span><br></pre></td></tr></table></figure><h3 id="多态——继承版"><a href="#多态——继承版" class="headerlink" title="多态——继承版"></a>多态——继承版</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">USB</span>():</span><br><span class="line">    <span class="comment"># 在USB类中定义一个规范的接口方法，但是不实现任何功能</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">start</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Mouse</span>(<span class="title class_ inherited__">USB</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">start</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;鼠标启动成功&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">KeyBoard</span>(<span class="title class_ inherited__">USB</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">start</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;键盘启动成功&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Udisk</span>(<span class="title class_ inherited__">USB</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">start</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;U盘启动了&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">m = Mouse()</span><br><span class="line">k = KeyBoard()</span><br><span class="line">u = Udisk()</span><br><span class="line"></span><br><span class="line">m.start()  <span class="comment"># 鼠标启动成功</span></span><br><span class="line">k.start()  <span class="comment"># 键盘启动成功</span></span><br><span class="line">u.start()  <span class="comment"># U盘启动了</span></span><br></pre></td></tr></table></figure><blockquote><p>更新: 2024-01-23 06:42:42<br>原文: <a href="https://www.yuque.com/zacharyblock/cx2om6/vak1xgsu38h6xhbv">https://www.yuque.com/zacharyblock/cx2om6/vak1xgsu38h6xhbv</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Python面向对象 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python基础-内置模块</title>
      <link href="/2022/12/31/Python%E5%9F%BA%E7%A1%80/%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/"/>
      <url>/2022/12/31/Python%E5%9F%BA%E7%A1%80/%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/</url>
      
        <content type="html"><![CDATA[<h1 id="内置模块"><a href="#内置模块" class="headerlink" title="内置模块"></a>内置模块</h1><p>系统内置模块就是安装 Python 解释器之后，系统给提供的模块，在需要的时候可以导入使用</p><h2 id="序列化模块"><a href="#序列化模块" class="headerlink" title="序列化模块"></a>序列化模块</h2><p>序列化模块指的是可以把 Python 中的数据，以文本或二进制的方式进行转换，并且还能反序列化为原来的数据 为什么需要序列化：一般来说数据在程序与网络中进行传输和存储时，需要以更加方便的形式进行存储和传输，因此需要对数据进行序列化</p><ul><li>文本序列化模块 json</li><li>二进制序列化模块 pickle</li></ul><h3 id="pickle-序列化"><a href="#pickle-序列化" class="headerlink" title="pickle 序列化"></a>pickle 序列化</h3><ul><li>pickle 模块提供的函数<ul><li>dumps() 序列化，返回一个序列化后的结果，可以把一个 Python 的任意对象序列化成为一个二进制</li><li>loads() 反序列化，返回一个反序列化后的 Python 对象，可以把一个序列化后的二进制数据反序列化为 Python 对象</li><li>dump(var,fp) 序列化，把一个数据对象进行序列化并写入到文件中<ul><li>参数 1 var 需要序列化的数据对象</li><li>参数 2 fp 写入的文件对象</li></ul></li><li>load(fp) 反序列化，在一个文件中读取序列化的数据，并且完成一个反序列化<ul><li>fp 带读取的文件对象</li></ul></li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"></span><br><span class="line">var = <span class="string">&#x27;I miss you&#x27;</span></span><br><span class="line">res1 = pickle.dumps(var)</span><br><span class="line"><span class="built_in">print</span>(res1, <span class="built_in">type</span>(res1))  <span class="comment"># b&#x27;\x80\x03X\n\x00\x00\x00I miss youq\x00.&#x27; &lt;class &#x27;bytes&#x27;&gt;</span></span><br><span class="line"></span><br><span class="line">var = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">res2 = pickle.dumps(var)</span><br><span class="line"><span class="built_in">print</span>(res2)  <span class="comment"># b&#x27;\x80\x03]q\x00(K\x01K\x02K\x03K\x04e.&#x27;</span></span><br><span class="line"></span><br><span class="line">res1 = pickle.loads(res1)</span><br><span class="line">res2 = pickle.loads(res2)</span><br><span class="line"><span class="built_in">print</span>(res1)  <span class="comment"># I miss you</span></span><br><span class="line"><span class="built_in">print</span>(res2)  <span class="comment"># [1, 2, 3, 4]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 把一个Python数据进行序列化后写入文件</span></span><br><span class="line"><span class="comment"># 使用普通的dumps方法完成</span></span><br><span class="line">var = &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;duanduan&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">24</span>, <span class="string">&#x27;boyfriend&#x27;</span>: <span class="string">&#x27;huanghuang&#x27;</span>&#125;</span><br><span class="line">res = pickle.dumps(var)</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;./data.txt&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">    fp.write(res)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取一个反序列化的二进制文件读取处理，并完成反序列化</span></span><br><span class="line"><span class="comment"># 使用普通的loads方法完成</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;./data.txt&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">    res = fp.read()</span><br><span class="line">    res = pickle.loads(res)</span><br><span class="line">    <span class="built_in">print</span>(res)  <span class="comment"># &#123;&#x27;name&#x27;: &#x27;duanduan&#x27;, &#x27;age&#x27;: 24, &#x27;boyfriend&#x27;: &#x27;huanghuang&#x27;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 把一个Python数据进行序列化后写入文件</span></span><br><span class="line"><span class="comment"># 使用dump方法完成</span></span><br><span class="line">var = &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;duanduan&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">24</span>, <span class="string">&#x27;boyfriend&#x27;</span>: <span class="string">&#x27;huanghuang&#x27;</span>&#125;</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;./data2.txt&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">    pickle.dump(var, fp)</span><br><span class="line"><span class="comment"># 使用load方法读取</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;./data2.txt&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">    newdict = pickle.load(fp)</span><br><span class="line"><span class="built_in">print</span>(newdict)  <span class="comment"># &#123;&#x27;name&#x27;: &#x27;duanduan&#x27;, &#x27;age&#x27;: 24, &#x27;boyfriend&#x27;: &#x27;huanghuang&#x27;&#125;</span></span><br></pre></td></tr></table></figure><h3 id="json-序列化"><a href="#json-序列化" class="headerlink" title="json 序列化"></a>json 序列化</h3><p>JSON(JavaScript Object Notation) 是一个轻量级数据交换格式 JSON 在 JavaScript 中是一个对象的表示方法，和 Python 中的字典的定义规则和语法都很像 在互联网中是一种通用的数据交换、数据传输、数据定义的一种数据格式</p><ul><li>Python 中提供 json 模块，可以把一些符合转换的 python 数据对象，转换为 json 格式的数据<ul><li>json.dumps() 将一个 Python 数据序列化为 json 格式</li><li>json.loads() 将一个序列化后的 json 对象反序列化为 Python 格式</li><li>json.dump() 将一个 Python 数据序列化为 json 格式并写入文件</li><li>json.load() 将一个 json 序列化后的文件反序列化回 Python 的格式</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">vardict = &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;duanduan&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">24</span>, <span class="string">&#x27;boyfriend&#x27;</span>: <span class="string">&#x27;huanghuang&#x27;</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(vardict, <span class="built_in">type</span>(vardict))  <span class="comment"># &#123;&#x27;name&#x27;: &#x27;duanduan&#x27;, &#x27;age&#x27;: 24, &#x27;boyfriend&#x27;: &#x27;huanghuang&#x27;&#125; &lt;class &#x27;dict&#x27;&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># json序列化</span></span><br><span class="line">res = json.dumps(vardict)</span><br><span class="line"><span class="built_in">print</span>(res, <span class="built_in">type</span>(res))  <span class="comment"># &#123;&quot;name&quot;: &quot;duanduan&quot;, &quot;age&quot;: 24, &quot;boyfriend&quot;: &quot;huanghuang&quot;&#125; &lt;class &#x27;str&#x27;&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># json反序列化</span></span><br><span class="line">res = json.loads(res)</span><br><span class="line"><span class="built_in">print</span>(res, <span class="built_in">type</span>(res))  <span class="comment"># &#123;&#x27;name&#x27;: &#x27;duanduan&#x27;, &#x27;age&#x27;: 24, &#x27;boyfriend&#x27;: &#x27;huanghuang&#x27;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用json写文件</span></span><br><span class="line">vardict = [&#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;duanduan&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">24</span>, <span class="string">&#x27;boyfriend&#x27;</span>: <span class="string">&#x27;huanghuang&#x27;</span>&#125;,</span><br><span class="line">           &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;duanduan&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">24</span>, <span class="string">&#x27;boyfriend&#x27;</span>: <span class="string">&#x27;huanghuang&#x27;</span>&#125;]</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;./data3.json&#x27;</span>, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">    json.dump(vardict, fp)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;./data3.json&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">    newdict = json.load(fp)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(</span><br><span class="line">    newdict)  <span class="comment"># [&#123;&#x27;name&#x27;: &#x27;duanduan&#x27;, &#x27;age&#x27;: 24, &#x27;boyfriend&#x27;: &#x27;huanghuang&#x27;&#125;, &#123;&#x27;name&#x27;: &#x27;duanduan&#x27;, &#x27;age&#x27;: 24, &#x27;boyfriend&#x27;: &#x27;huanghuang&#x27;&#125;]</span></span><br></pre></td></tr></table></figure><h2 id="数学模块-math"><a href="#数学模块-math" class="headerlink" title="数学模块-math"></a>数学模块-math</h2><ul><li>math 模块下的一些函数<ul><li>math.ceil() 向上取整 内置函数中的 round() 是四舍五入</li><li>math.floor() 向下取整</li><li>math.pow() 计算数值的 n 次方，结果是浮点</li><li>math.sqrt() 开平方运算，结果是浮点</li><li>math.fabs() 计算绝对值，结果是浮点</li><li>math.modf() 把一个数值拆分成小数和整数组成的元组</li><li>math.copysign() 将第二个参数的正负号，赋值给第一个参数</li><li>math.fsum() 对一个容器类型数据进行求和，结果是浮点数</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line">r1 = math.ceil(<span class="number">2.25</span>)</span><br><span class="line">r2 = <span class="built_in">round</span>(<span class="number">2.25</span>)</span><br><span class="line"><span class="built_in">print</span>(r1, r2)  <span class="comment"># 3 2</span></span><br><span class="line"></span><br><span class="line">r1 = math.floor(<span class="number">2.25</span>)</span><br><span class="line"><span class="built_in">print</span>(r1, r2)  <span class="comment"># 2 2</span></span><br><span class="line"></span><br><span class="line">res = math.<span class="built_in">pow</span>(<span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># 8.0</span></span><br><span class="line"></span><br><span class="line">res = math.sqrt(<span class="number">16</span>)</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># 4.0</span></span><br><span class="line"></span><br><span class="line">res = math.fabs(-<span class="number">3.14</span>)</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># 3.14</span></span><br><span class="line"></span><br><span class="line">res = math.modf(<span class="number">3.14</span>)</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># (0.14000000000000012, 3.0)</span></span><br><span class="line"></span><br><span class="line">res = math.copysign(<span class="number">3.14</span>, -<span class="number">9.9</span>)</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># -3.14</span></span><br><span class="line"></span><br><span class="line">res = math.fsum([<span class="number">1.14</span>, <span class="number">2.35</span>, <span class="number">3.46</span>, <span class="number">4</span>, <span class="number">5</span>])</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># 15.95</span></span><br></pre></td></tr></table></figure><h2 id="随机模块-random"><a href="#随机模块-random" class="headerlink" title="随机模块-random"></a>随机模块-random</h2><p>导入 random 模块之后</p><ul><li>random.random() 返回 0-1（左闭右开） 之间的随机小数</li><li>random.randrange(开始值,结束值[,步进值]) 随机获取指定范围内的整数</li><li>random.randint() 随机产生指定范围内的随机整数</li><li>random.uniform() 随机产生指定范围内的随机小数</li><li>random.choice() 随机获取容器类型中的值</li><li>random.shuffle() 随机打乱一个容器的值，无返回值</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">res = random.random()</span><br><span class="line"><span class="built_in">print</span>(res)</span><br><span class="line"></span><br><span class="line">res = random.randrange(<span class="number">5</span>)</span><br><span class="line"><span class="built_in">print</span>(res)</span><br><span class="line">res = random.randrange(<span class="number">5</span>,<span class="number">10</span>)</span><br><span class="line"><span class="built_in">print</span>(res)</span><br><span class="line">res = random.randrange(<span class="number">5</span>,<span class="number">10</span>,<span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(res)</span><br><span class="line"></span><br><span class="line">res = random.randint(<span class="number">2</span>,<span class="number">8</span>)</span><br><span class="line"><span class="built_in">print</span>(res)</span><br><span class="line"></span><br><span class="line">res = random.uniform(<span class="number">3</span>,<span class="number">9</span>)</span><br><span class="line"><span class="built_in">print</span>(res)</span><br><span class="line"></span><br><span class="line">varlist = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>]</span><br><span class="line">res = random.choice(varlist)</span><br><span class="line"><span class="built_in">print</span>(res)</span><br><span class="line"></span><br><span class="line">random.shuffle(varlist)</span><br><span class="line"><span class="built_in">print</span>(varlist)</span><br></pre></td></tr></table></figure><h2 id="系统接口模块-os"><a href="#系统接口模块-os" class="headerlink" title="系统接口模块-os"></a>系统接口模块-os</h2><ul><li>os.getcwd() 返回当前文件工作目录&#x2F;路径</li><li>os.chdir() 修改当前工作目录，类似于 linux 的 cd 命令</li><li>os.listdir() 查看指定目录下所有文件 类似于 ls 命令，不指定目录时候，即当前目录下的</li><li>os.mkdir(path,mode&#x3D;0o777,dir_fd&#x3D;None) 在指定位置创建一个文件夹，只能一个，若不指定位置，则在当前目录下创建一个文件夹<ul><li>path:为所要创建的文件夹名称，默认在当前工作目录下，但也可以先使用 os.chdir()，修改工作目录，可以是直接在 name 处写入要新建文件夹的位置路径带上新建文件夹名称</li><li>mode&#x3D;0o777:这个是一个系统权限，分别代表着文件所有人（user）、文件所属组（group）、其他人（other），所有数字加起来就是 777，参数必须带上 0o</li><li>但是这里有问题，无法真的给到权限 777，因为 python 无法传讲一个比自己这个进程权限还要高的文件</li><li>可以使用 linux 命令 sudo chmod -R 777 文件名</li></ul></li><li>os.makedirs(name,mode)<ul><li>name：所要创建的文件路径 这次可以递归创建啦，就算存在没有的文件夹，也可以迭代创建好</li><li>mode：同样是权限</li></ul></li><li>os.rmdir() 删除空文件夹，不能递归调用，否则报错</li><li>os.removedirs() 递归删除空文件夹，若叶子目录被删除掉，会尝试删除父目录，若父目录也是空的目录，则会删除，直到该目录不是空的<ul><li>但是！！ 因为 mac 系统下创建一个文件夹后会在该目录下创建一个.DS_Store 隐藏文件，因此这个文件夹不再是空文件夹了</li></ul></li><li>os.remove() 删除文件</li><li>os.rename() 修改文件或文件夹的名字<ul><li>os.rename(‘.&#x2F;a’,’.&#x2F;AAA’)</li></ul></li><li>os.system() 可以执行系统命令比如 linux 下的 ls cd 命令等等</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">res = os.getcwd()</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># /Users/zachary/PycharmProjects/Python教程阶段1/code</span></span><br><span class="line"></span><br><span class="line">os.chdir(<span class="string">&#x27;/Users/zachary&#x27;</span>)</span><br><span class="line">res = os.getcwd()</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># /Users/zachary</span></span><br><span class="line"></span><br><span class="line">res = os.listdir()</span><br><span class="line"><span class="built_in">print</span>(res)</span><br><span class="line">res = os.listdir(path=<span class="string">&#x27;/Users/zachary/PycharmProjects/Python教程阶段1/code&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(res)</span><br><span class="line"></span><br><span class="line">os.mkdir(path=<span class="string">&#x27;/Users/zachary/PycharmProjects/Python教程阶段1/code/newdir&#x27;</span>,mode=<span class="number">0o777</span>)</span><br><span class="line"></span><br><span class="line">os.makedirs(<span class="string">&#x27;/Users/zachary/PycharmProjects/Python教程阶段1/code/newdir/a/b/c&#x27;</span>)</span><br><span class="line"></span><br><span class="line">os.system(<span class="string">&#x27;ls&#x27;</span>)</span><br></pre></td></tr></table></figure><p>关于系统中的权限 -rw-r–r– 1 zachary staff 120 2 28 21:24 data3.txt drwxr-xr-x 5 zachary staff 160 2 28 15:22 file 第一位 d 代表这个是一个文件夹&#x2F;目录，如果是-代表是一个文件 前三位代表文件所有人（user） 中间三位代表文件所属组（group） 最后三位代表其他人（other） 其中 r w x 代表不同的操作权限 r 表示可读 &#x3D;&#x3D;&#x3D;&#x3D; 4 w 表示可写 &#x3D;&#x3D;&#x3D;&#x3D; 2 x 表示可执行 &#x3D;&#x3D;&#x3D; 1</p><h2 id="系统接口模块-os-path"><a href="#系统接口模块-os-path" class="headerlink" title="系统接口模块-os.path"></a>系统接口模块-os.path</h2><ul><li>os.path 是系统模块中的路径<ul><li>os.path.abspath() 该方法可以把一个相对路径转换成一个绝对路径</li><li>os.path.basename() 返回路径中的最后一个部分</li><li>os.path.dirname() 获取路径中的路径部分 返回路径中最后一个部分之前的部分</li><li>os.path.join() 链接多个路径、组成一个新的路径</li><li>os.path.split() 将一个路径拆分成主体和最后两个部分，以元组返回</li><li>os.path.splitext() 将一个路径拆分成主体和后缀两部分，后缀为文件后缀</li><li>os.path.getsize() 将返回路径所在文件的文件大小，返回值为字节</li><li>os.path.isdir() 检测文件夹是否存在</li><li>os.path.isfile() 检测文件是否存在</li><li>os.path.exists() 检测文件或者路径是否存在</li><li>os.path.samefile() 检测两个文件路径是否指向同一个目标位置(两个路径必须真实)</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">res = os.path.abspath(<span class="string">&#x27;./&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># /Users/zachary/PycharmProjects/Python教程阶段1/code</span></span><br><span class="line"></span><br><span class="line">res = os.path.basename(<span class="string">&#x27;/Users/zachary/PycharmProjects/Python教程阶段1/code&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># code</span></span><br><span class="line"></span><br><span class="line">res = os.path.dirname(<span class="string">&#x27;/Users/zachary/PycharmProjects/Python教程阶段1/code&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># /Users/zachary/PycharmProjects/Python教程阶段1</span></span><br><span class="line"></span><br><span class="line">res = os.path.join(<span class="string">&#x27;./newdir/a/&#x27;</span>, <span class="string">&#x27;2.jpg&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># ./newdir/a/2.jpg</span></span><br><span class="line"></span><br><span class="line">res = os.path.split(<span class="string">&#x27;./newdir/a/b/c&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># (&#x27;./newdir/a/b&#x27;, &#x27;c&#x27;)</span></span><br><span class="line"></span><br><span class="line">res = os.path.splitext(<span class="string">&#x27;./newdir/a/2.jpg&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># (&#x27;./newdir/a/2&#x27;, &#x27;.jpg&#x27;)</span></span><br><span class="line"></span><br><span class="line">res = os.path.getsize(<span class="string">&#x27;./83系统接口模块-os.py&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># 534</span></span><br><span class="line"></span><br><span class="line">res = os.path.isdir(<span class="string">&#x27;./newdir/a/b/c&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># True</span></span><br><span class="line"></span><br><span class="line">res = os.path.isfile(<span class="string">&#x27;./83系统接口模块-os.py&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># True</span></span><br><span class="line"></span><br><span class="line">res = os.path.exists(<span class="string">&#x27;./newdir/a/b/c&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># True</span></span><br><span class="line"></span><br><span class="line">a = <span class="string">&#x27;./newdir/a/b/c&#x27;</span></span><br><span class="line">b = <span class="string">&#x27;./newdir/a/../a/b/c&#x27;</span></span><br><span class="line">res = os.path.samefile(a, b)</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># True</span></span><br></pre></td></tr></table></figure><h2 id="高级文件操作模块-shutil"><a href="#高级文件操作模块-shutil" class="headerlink" title="高级文件操作模块-shutil"></a>高级文件操作模块-shutil</h2><ul><li>shutil.copy(A,B) 将路径 A 下的文件 copy 到路径 B 下的文件，在 B 下可以重命名</li><li>shutil.copy2(A,B) 与 copy 方法相似，但是会将原文件的信息(操作时间和权限等)一并复制</li><li>shutil.copyfile(A,B) 功能类似上述方法，但是 过程是打开文件 A，读取 A 中内容，并且写入到新的文件 B 中</li><li>shutil.copytree(A,B) 将整个 A 的目录结构和文件，拷贝到 B 去，B 必须不存在</li><li>shutil.rmtree() 删除整个文件夹</li><li>shutil.move(A,B) 将整个 A 移动到 B 去</li><li>shutil.make_archive(A,B,C)<ul><li>A: 创建的压缩文件名称</li><li>B: 指定压缩格式（zip、tar）</li><li>C: 要压缩的文件或者文件夹路径</li><li>例子: shutil.make_archive(‘a’,’zip’,’.&#x2F;‘)</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">shutil.copy(<span class="string">&#x27;./data3.json&#x27;</span>,<span class="string">&#x27;./newdir/a/data3_copy.json&#x27;</span>)</span><br><span class="line"></span><br><span class="line">shutil.copy2(<span class="string">&#x27;./data3.json&#x27;</span>,<span class="string">&#x27;./newdir/a/b/data3_same.json&#x27;</span>)</span><br><span class="line"></span><br><span class="line">res = shutil.copyfile(<span class="string">&#x27;./data3.json&#x27;</span>,<span class="string">&#x27;./newdir/a/b/data3_same.json&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(res)</span><br></pre></td></tr></table></figure><h2 id="压缩模块-zipfile"><a href="#压缩模块-zipfile" class="headerlink" title="压缩模块-zipfile"></a>压缩模块-zipfile</h2><ul><li>zipfile.ZipFile(路径包名，模式，压缩或打包)<ul><li>压缩的使用格式<ul><li>zipfile.ZipFile(‘data.zip’,’w’,zipfile.ZIP_DEFLATED)</li></ul></li><li>解压缩的使用格式<ul><li>zipfile.ZipFile(‘data.zip’,’r’)</li></ul></li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 压缩文件</span></span><br><span class="line"><span class="keyword">with</span> zipfile.ZipFile(<span class="string">&#x27;data.zip&#x27;</span>,<span class="string">&#x27;w&#x27;</span>,zipfile.ZIP_DEFLATED) <span class="keyword">as</span> myzip:</span><br><span class="line">    myzip.write(<span class="string">&#x27;data.txt&#x27;</span>)</span><br><span class="line">    myzip.write(<span class="string">&#x27;data2.txt&#x27;</span>)</span><br><span class="line">    myzip.write(<span class="string">&#x27;data3.json&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压缩文件</span></span><br><span class="line"><span class="keyword">with</span> zipfile.ZipFile(<span class="string">&#x27;data.zip&#x27;</span>,<span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> myzip:</span><br><span class="line">    myzip.extractall(<span class="string">&#x27;./&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 压缩文件夹下全部文件</span></span><br><span class="line"><span class="keyword">with</span> zipfile.ZipFile(<span class="string">&#x27;data.zip&#x27;</span>,<span class="string">&#x27;w&#x27;</span>,zipfile.ZIP_DEFLATED) <span class="keyword">as</span> myzip:</span><br><span class="line">    arr = os.listdir(<span class="string">&#x27;./&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> arr:</span><br><span class="line">        myzip.write(i)</span><br></pre></td></tr></table></figure><h2 id="时间模块-time"><a href="#时间模块-time" class="headerlink" title="时间模块-time"></a>时间模块-time</h2><ul><li>time.time() 时间戳，返回从 1970 年 1 月 1 日至此时此刻的秒数,可以加参数给定时间戳，返回对应时间</li><li>time.ctime() 返回系统时间，字符串,可以加参数给定时间戳，返回对应时间</li><li>time.localtime() 返回系统时间，元组,可以加参数给定时间戳，返回对应时间</li><li>time.strftime() 格式化输出时间</li><li>time.sleep(s) 可以暂停当前线程的执行</li><li>time.perf_counter() 计算一个程序的执行时间</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">res = time.time()</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># 1646289842.415093</span></span><br><span class="line"></span><br><span class="line">res = time.ctime()</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># Thu Mar  3 14:46:59 2022</span></span><br><span class="line"></span><br><span class="line">res = time.localtime()</span><br><span class="line"><span class="built_in">print</span>(</span><br><span class="line">    res)  <span class="comment"># time.struct_time(tm_year=2022, tm_mon=3, tm_mday=3, tm_hour=14, tm_min=49, tm_sec=29, tm_wday=3, tm_yday=62, tm_isdst=0)</span></span><br><span class="line"></span><br><span class="line">t = <span class="number">1640000009.7300968</span></span><br><span class="line">res = time.ctime(t)</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># Mon Dec 20 19:33:29 2021</span></span><br><span class="line">res = time.localtime(t)</span><br><span class="line"><span class="built_in">print</span>(</span><br><span class="line">    res)  <span class="comment"># time.struct_time(tm_year=2021, tm_mon=12, tm_mday=20, tm_hour=19, tm_min=33, tm_sec=29, tm_wday=0, tm_yday=354, tm_isdst=0)</span></span><br><span class="line"></span><br><span class="line">res = time.strftime(<span class="string">&#x27;%Y-%m-%d %H:%M:%S %w&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># 2022-03-03 15:02:04 4</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;start&#x27;</span>)</span><br><span class="line">time.sleep(<span class="number">5</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;over&#x27;</span>)</span><br><span class="line"></span><br><span class="line">count = <span class="number">0</span></span><br><span class="line">start = time.perf_counter()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10000000</span>):</span><br><span class="line">    count += <span class="number">1</span></span><br><span class="line">end = time.perf_counter()</span><br><span class="line"><span class="built_in">print</span>(end - start)  <span class="comment"># 0.9241935030000006</span></span><br></pre></td></tr></table></figure><h2 id="日历模块-calendar"><a href="#日历模块-calendar" class="headerlink" title="日历模块-calendar"></a>日历模块-calendar</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> calendar</span><br><span class="line"></span><br><span class="line"><span class="comment"># 返回指定年月的数据 月份的第一天是周几，和月份的总天数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">calendar_my</span>(<span class="params">year,month</span>):</span><br><span class="line">    res = calendar.monthrange(year, month)</span><br><span class="line">    <span class="built_in">print</span>(res)  <span class="comment"># (1,31)</span></span><br><span class="line"></span><br><span class="line">    week = res[<span class="number">0</span>] + <span class="number">1</span></span><br><span class="line">    days = res[<span class="number">1</span>]</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;一\t二\t三\t四\t五\t六\t日&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    d = <span class="number">1</span></span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> count &lt; week - <span class="number">1</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;\t&#x27;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        count += <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> d &lt;= days:</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">8</span>):</span><br><span class="line">            <span class="keyword">if</span> d &gt; days:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;\t&#x27;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">print</span>(d, end=<span class="string">&#x27;\t&#x27;</span>)</span><br><span class="line">                count += <span class="number">1</span></span><br><span class="line">            d += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> count % <span class="number">7</span> == <span class="number">0</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">calendar_my(<span class="number">2022</span>,<span class="number">3</span>)</span><br></pre></td></tr></table></figure><blockquote><p>更新: 2023-12-31 17:28:38<br>原文: <a href="https://www.yuque.com/zacharyblock/cx2om6/zo1eq941xoagbnig">https://www.yuque.com/zacharyblock/cx2om6/zo1eq941xoagbnig</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Python基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python基础-文件</title>
      <link href="/2022/12/31/Python%E5%9F%BA%E7%A1%80/%E6%96%87%E4%BB%B6/"/>
      <url>/2022/12/31/Python%E5%9F%BA%E7%A1%80/%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h1><h2 id="基础操作-文件写入、文件打开的模式详解"><a href="#基础操作-文件写入、文件打开的模式详解" class="headerlink" title="基础操作-文件写入、文件打开的模式详解"></a>基础操作-文件写入、文件打开的模式详解</h2><p>针对磁盘中的文件的读写。文件 I&#x2F;O I-input O-output</p><p>文件操作步骤 1.打开文件 2.读写文件 3.关闭文件</p><ul><li>写入文件的操作<ul><li>1.打开文件 open()</li><li>2.写入内容 write()</li><li>3.关闭文件 close()</li></ul></li><li>读取文件的操作<ul><li>1.打开文件 open()</li><li>2.读取内容 read()</li><li>3.关闭文件 close()</li></ul></li></ul><h3 id="open-打开文件"><a href="#open-打开文件" class="headerlink" title="open()打开文件"></a>open()打开文件</h3><p>格式：open(文件的路径，打开的方式，[字符集])</p><p>参数</p><ul><li>文件路径：<ul><li>路径 url 统一资源定位符</li><li>相对路径：相当于给别人指路的时候，在那条街对面<ul><li>针对文件的相对路径表示，从当前目录开始计算<ul><li>1.txt &#x3D;&#x3D;&#x3D;&gt; 没有具体指明的话与.&#x2F;1.txt 是一个位置</li><li>.&#x2F;1.txt &#x3D;&#x3D;&#x3D;&gt; .&#x2F;代表当前目录中的 1.txt</li><li>..&#x2F;1.txt &#x3D;&#x3D;&#x3D;&gt; ..&#x2F;代表当前目录中的上一级目录下的 1.txt</li></ul></li></ul></li><li>绝对路径：类似于地址，具体到某个省市区街道小区门牌号<ul><li>windows: c:&#x2F;users&#x2F;appdata&#x2F;1.txt</li><li>linux: &#x2F;user&#x2F;home&#x2F;1.txt</li></ul></li></ul></li><li>打开方式：<ul><li>基础模式： w r x a<ul><li><strong>w</strong> w 模式 write 写入<ul><li>文件如果不存在，则创建这个文件</li><li>文件如果存在，则打开这个文件，并清空里面的东西</li><li>文件打开后，文件的指针在文件的最前面</li></ul></li><li><strong>r</strong> r 模式 read 读取<ul><li>文件如果不存在，则报错</li><li>文件如果存在，则打开文件</li><li>文件指针在文件的最前面</li></ul></li><li><strong>x</strong> x 模式 xor 异或模式<ul><li>文件如果不存在，则创建这个文件</li><li>文件如果存在，则报错（防止覆盖）</li><li>文件指针在文件的最前面</li></ul></li><li><strong>a</strong> a 模式 append 追加模式<ul><li>文件如果不存在，则创建文件</li><li>文件如果存在，则打开文件</li><li>文件指针在文件的最后</li></ul></li></ul></li><li>扩展模式： b<ul><li><strong>b</strong> b 模式 bytes 二进制</li><li><strong>+</strong> +模式 plus 增强模式（可读可写）</li></ul></li><li>文件操作模式的组合<ul><li>w,r,a,x</li><li>wb,rb,ab,xb</li><li>w+,r+,a+,x+</li><li>wb+,rb+,ab+,xb+</li></ul></li></ul></li><li>可选参数：字符集 encoding 设置文件的字符集<ul><li>如果是一个二进制的文件，不需要设置字符集</li><li>encoding&#x3D;’utf-8’</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">fp = <span class="built_in">open</span>(<span class="string">&#x27;./1.txt&#x27;</span>,<span class="string">&#x27;w&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(fp,<span class="built_in">type</span>(fp)) <span class="comment"># &lt;_io.TextIOWrapper name=&#x27;./1.txt&#x27; mode=&#x27;w&#x27; encoding=&#x27;utf-8&#x27;&gt; &lt;class &#x27;_io.TextIOWrapper&#x27;&gt;</span></span><br><span class="line"></span><br><span class="line">fp.write(<span class="string">&quot;Hello Python file&quot;</span>)</span><br><span class="line">fp.close()</span><br></pre></td></tr></table></figure><p>结果会在当前目录下出现一个 1.txt 的文件，内容就是有一行 Hello Python file</p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/38881094/1704014832612-814d27c0-a70f-44ca-95ca-a07ce558a397.png"></p><h2 id="打开模式的演示操作"><a href="#打开模式的演示操作" class="headerlink" title="打开模式的演示操作"></a>打开模式的演示操作</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 写入文件操作</span></span><br><span class="line">fp = <span class="built_in">open</span>(<span class="string">&#x27;./1.txt&#x27;</span>,<span class="string">&#x27;a&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">fp.write(<span class="string">&#x27;\n你好&#x27;</span>)</span><br><span class="line">fp.close()</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/38881094/1704014832611-9f858891-5a4a-4a52-ac96-229ec96c9e47.png"></p><p><strong>文件操作的高级写法</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">with open(文件路径，打开方式) as 变量:</span><br><span class="line">    变量.操作</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;./1.txt&#x27;</span>,<span class="string">&#x27;r+&#x27;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">    res = fp.read()</span><br><span class="line">    <span class="built_in">print</span>(res)</span><br><span class="line">    fp.write(res)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/38881094/1704014832613-6814e397-e4b8-488a-af66-8e6d3a346ee9.png"></p><p>设置指针的位置 seek(0) 设置在最开始的位置</p><h2 id="文件操作的相关函数"><a href="#文件操作的相关函数" class="headerlink" title="文件操作的相关函数"></a>文件操作的相关函数</h2><h4 id="write-写入文件"><a href="#write-写入文件" class="headerlink" title="write() 写入文件"></a>write() 写入文件</h4><p>格式：文件对象.write(内容)</p><ul><li>write() 写入文件<ul><li>内容必须是字符串类型</li></ul></li><li>writeline() 写入文件<ul><li>内容是一个容器,容器中的数据类型也必须是字符串</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">varlist = [<span class="string">&#x27;hello&#x27;</span>,<span class="string">&#x27;this&#x27;</span>,<span class="string">&#x27;is&#x27;</span>,<span class="string">&#x27;content&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;./file/1.txt&#x27;</span>,<span class="string">&#x27;w&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">    fp.writelines(varlist)</span><br></pre></td></tr></table></figure><h4 id="read-读取文件"><a href="#read-读取文件" class="headerlink" title="read() 读取文件"></a>read() 读取文件</h4><ul><li>read()<ul><li>格式：文件对象.read() 从当前指针位置读取到最后</li><li>格式：文件对象.read(读取的字节数) 可以读取指定长度的字符</li></ul></li><li>readline() 读取一行<ul><li>格式：文件对象.readline() 一次读取一行</li><li>格式：文件对象.readline(读取的字节数) 可以读取一行指定的字符个数</li></ul></li><li>readlines() 读取多行后，保存成一个列表返回</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;./file/2.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">    res1 = fp.read()</span><br><span class="line">    fp.seek(<span class="number">3</span>)</span><br><span class="line">    res2 = fp.read()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(res1)  <span class="comment"># newmessage</span></span><br><span class="line"><span class="built_in">print</span>(res2)  <span class="comment"># message</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;./file/3.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">    res = fp.readline()</span><br><span class="line">    <span class="built_in">print</span>(res)  <span class="comment"># Pycharm是一款开发Python常用</span></span><br><span class="line">    res = fp.readline(<span class="number">3</span>)</span><br><span class="line">    <span class="built_in">print</span>(res)  <span class="comment"># 并且十</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;./file/3.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">    res = fp.readlines()</span><br><span class="line">    <span class="built_in">print</span>(res)  <span class="comment"># [&#x27;Pycharm是一款开发Python常用\n&#x27;, &#x27;并且十分便捷的集成开发环境\n&#x27;]</span></span><br></pre></td></tr></table></figure><h4 id="seek-文件指针"><a href="#seek-文件指针" class="headerlink" title="seek() 文件指针"></a>seek() 文件指针</h4><ul><li>可以使用文件指针 seek 设置指针位置<ul><li>seek(0)：在开头位置</li><li>seek(0,2)：在末尾位置</li><li>seek(num)：在 num 位置</li></ul></li></ul><h4 id="truncate-截断文件内容"><a href="#truncate-截断文件内容" class="headerlink" title="truncate() 截断文件内容"></a>truncate() 截断文件内容</h4><ul><li>按照所需要的数据，截断文件的内容</li></ul><h4 id="close-关闭文件"><a href="#close-关闭文件" class="headerlink" title="close() 关闭文件"></a>close() 关闭文件</h4><p>格式：文件对象.close() 关闭打开的文件</p><h2 id="访问文件夹"><a href="#访问文件夹" class="headerlink" title="访问文件夹"></a>访问文件夹</h2><ul><li>获取当前路径 <code>os.getcwd()</code></li><li>改变当前路径 <code>os.chdir()</code></li><li>创建新文件夹 <code>os.mkdir()</code></li><li>修改文件夹名称 <code>os.rename()</code></li><li>删除文件夹 <code>os.rmdir()</code></li><li>遍历文件夹 <code>os.walk()</code></li><li></li></ul><h2 id="练习题-注册和登录功能"><a href="#练习题-注册和登录功能" class="headerlink" title="练习题-注册和登录功能"></a>练习题-注册和登录功能</h2><ul><li>注册功能<ul><li>需要用户名和密码以及确认密码</li><li>注册时如果用户名已经存在，则不能再次注册</li></ul></li><li>登录功能<ul><li>需要使用已经注册的用户信息登录</li><li>密码输入错误 3 次后，锁定账户信息（不能再使用该账户进行操作）</li></ul></li></ul><h3 id="注册功能"><a href="#注册功能" class="headerlink" title="注册功能"></a>注册功能</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">userlist = []</span><br><span class="line">pwdlist = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;./user.txt&#x27;</span>,<span class="string">&#x27;a+&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">    fp.seek(<span class="number">0</span>)</span><br><span class="line">    res = fp.readlines()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> res:</span><br><span class="line">        r = i.strip()  <span class="comment"># 去掉了左右两侧的多余空格和换行</span></span><br><span class="line">        arr = r.split(<span class="string">&#x27;:&#x27;</span>)</span><br><span class="line">        userlist.append(arr[<span class="number">0</span>])</span><br><span class="line">        pwdlist.append(arr[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">register</span>():</span><br><span class="line">    <span class="comment"># 输入用户名</span></span><br><span class="line">    flag = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">while</span> flag:</span><br><span class="line">        username = <span class="built_in">input</span>(<span class="string">&#x27;欢迎注册，请输入要注册的用户名：&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> username <span class="keyword">in</span> userlist:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;用户已存在，请登录或重新输入用户名&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment"># 输入密码</span></span><br><span class="line">            <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                pwd = <span class="built_in">input</span>(<span class="string">&#x27;请设置用户名密码：&#x27;</span>)</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">len</span>(pwd) &gt;= <span class="number">3</span>:</span><br><span class="line">                    repwd = <span class="built_in">input</span>(<span class="string">&#x27;请确认密码：&#x27;</span>)</span><br><span class="line">                    <span class="keyword">if</span> pwd == repwd:</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&#x27;注册成功&#x27;</span>)</span><br><span class="line">                        flag = <span class="literal">False</span></span><br><span class="line">                        <span class="built_in">print</span>(username, pwd, repwd)</span><br><span class="line">                        <span class="comment"># 打开文件写入数据</span></span><br><span class="line">                        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;./user.txt&#x27;</span>,<span class="string">&#x27;a+&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">                            fp.write(<span class="string">f&#x27;<span class="subst">&#123;username&#125;</span>:<span class="subst">&#123;pwd&#125;</span>\n&#x27;</span>)</span><br><span class="line">                        <span class="keyword">break</span></span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&#x27;两次密码不一致，请重新输入&#x27;</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&#x27;密码长度过短，请重新输入&#x27;</span>)</span><br><span class="line"></span><br><span class="line">register()</span><br></pre></td></tr></table></figure><h3 id="登录功能"><a href="#登录功能" class="headerlink" title="登录功能"></a>登录功能</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">blacklist = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;./black.txt&#x27;</span>, <span class="string">&#x27;a+&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">    fp.seek(<span class="number">0</span>)</span><br><span class="line">    result = fp.readlines()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> result:</span><br><span class="line">        r = i.strip()  <span class="comment"># 去掉了左右两侧的多余空格和换行</span></span><br><span class="line">        blacklist.append(r)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login</span>():</span><br><span class="line">    flag = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">while</span> flag:</span><br><span class="line">        username = <span class="built_in">input</span>(<span class="string">&#x27;欢迎登录，请输入要登录的用户名：&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> username <span class="keyword">in</span> blacklist:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;您的账号已被锁定请联系管理员&#x27;</span>)</span><br><span class="line">            flag = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">elif</span> username <span class="keyword">in</span> userlist:</span><br><span class="line">            i = userlist.index(username)</span><br><span class="line">            count = <span class="number">3</span></span><br><span class="line">            <span class="keyword">while</span> count:</span><br><span class="line">                pwd = <span class="built_in">input</span>(<span class="string">&#x27;请输入密码：&#x27;</span>)</span><br><span class="line">                <span class="keyword">if</span> pwd == pwdlist[i]:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&#x27;登录成功！&#x27;</span>)</span><br><span class="line">                    flag = <span class="literal">False</span></span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    count -= <span class="number">1</span></span><br><span class="line">                    <span class="keyword">if</span> count == <span class="number">2</span>:</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&#x27;密码输入错误，还有2次重新输入机会&#x27;</span>)</span><br><span class="line">                    <span class="keyword">elif</span> count == <span class="number">1</span>:</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&#x27;粗心大意咯，只剩1次输入密码的机会啦&#x27;</span>)</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&#x27;登录失败啦，账号被你锁定啦&#x27;</span>)</span><br><span class="line">                        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;./black.txt&#x27;</span>,<span class="string">&#x27;a+&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">                            fp.write(<span class="string">f&#x27;<span class="subst">&#123;username&#125;</span>\n&#x27;</span>)</span><br><span class="line">                        flag = <span class="literal">False</span></span><br><span class="line">                        <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;用户名输入错误，请重新输入&#x27;</span>)</span><br><span class="line"></span><br><span class="line">login()</span><br></pre></td></tr></table></figure><h3 id="登录与注册功能的合并"><a href="#登录与注册功能的合并" class="headerlink" title="登录与注册功能的合并"></a>登录与注册功能的合并</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">register</span>():</span><br><span class="line">    <span class="comment"># 输入用户名</span></span><br><span class="line">    flag = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">while</span> flag:</span><br><span class="line">        username = <span class="built_in">input</span>(<span class="string">&#x27;欢迎注册，请输入要注册的用户名：&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> username <span class="keyword">in</span> userlist:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;用户已存在，请登录或重新输入用户名&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment"># 输入密码</span></span><br><span class="line">            <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                pwd = <span class="built_in">input</span>(<span class="string">&#x27;请设置用户名密码：&#x27;</span>)</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">len</span>(pwd) &gt;= <span class="number">3</span>:</span><br><span class="line">                    repwd = <span class="built_in">input</span>(<span class="string">&#x27;请确认密码：&#x27;</span>)</span><br><span class="line">                    <span class="keyword">if</span> pwd == repwd:</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&#x27;注册成功&#x27;</span>)</span><br><span class="line">                        flag = <span class="literal">False</span></span><br><span class="line">                        <span class="built_in">print</span>(username, pwd, repwd)</span><br><span class="line">                        <span class="comment"># 打开文件写入数据</span></span><br><span class="line">                        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;./user.txt&#x27;</span>,<span class="string">&#x27;a+&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">                            fp.write(<span class="string">f&#x27;<span class="subst">&#123;username&#125;</span>:<span class="subst">&#123;pwd&#125;</span>\n&#x27;</span>)</span><br><span class="line">                        <span class="keyword">break</span></span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&#x27;两次密码不一致，请重新输入&#x27;</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&#x27;密码长度过短，请重新输入&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login</span>():</span><br><span class="line">    flag = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">while</span> flag:</span><br><span class="line">        username = <span class="built_in">input</span>(<span class="string">&#x27;欢迎登录，请输入要登录的用户名：&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> username <span class="keyword">in</span> blacklist:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;您的账号已被锁定请联系管理员&#x27;</span>)</span><br><span class="line">            flag = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">elif</span> username <span class="keyword">in</span> userlist:</span><br><span class="line">            i = userlist.index(username)</span><br><span class="line">            count = <span class="number">3</span></span><br><span class="line">            <span class="keyword">while</span> count:</span><br><span class="line">                pwd = <span class="built_in">input</span>(<span class="string">&#x27;请输入密码：&#x27;</span>)</span><br><span class="line">                <span class="keyword">if</span> pwd == pwdlist[i]:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&#x27;登录成功！&#x27;</span>)</span><br><span class="line">                    flag = <span class="literal">False</span></span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    count -= <span class="number">1</span></span><br><span class="line">                    <span class="keyword">if</span> count == <span class="number">2</span>:</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&#x27;密码输入错误，还有2次重新输入机会&#x27;</span>)</span><br><span class="line">                    <span class="keyword">elif</span> count == <span class="number">1</span>:</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&#x27;粗心大意咯，只剩1次输入密码的机会啦&#x27;</span>)</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&#x27;登录失败啦，账号被你锁定啦&#x27;</span>)</span><br><span class="line">                        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;./black.txt&#x27;</span>,<span class="string">&#x27;a+&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">                            fp.write(<span class="string">f&#x27;<span class="subst">&#123;username&#125;</span>\n&#x27;</span>)</span><br><span class="line">                        flag = <span class="literal">False</span></span><br><span class="line">                        <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;用户名输入错误，请重新输入&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        userlist = []</span><br><span class="line">        pwdlist = []</span><br><span class="line">        blacklist = []</span><br><span class="line"></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;./user.txt&#x27;</span>, <span class="string">&#x27;a+&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">            fp.seek(<span class="number">0</span>)</span><br><span class="line">            res = fp.readlines()</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> res:</span><br><span class="line">                r = i.strip()  <span class="comment"># 去掉了左右两侧的多余空格和换行</span></span><br><span class="line">                arr = r.split(<span class="string">&#x27;:&#x27;</span>)</span><br><span class="line">                userlist.append(arr[<span class="number">0</span>])</span><br><span class="line">                pwdlist.append(arr[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;./black.txt&#x27;</span>, <span class="string">&#x27;a+&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">            fp.seek(<span class="number">0</span>)</span><br><span class="line">            result = fp.readlines()</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> result:</span><br><span class="line">                r = i.strip()  <span class="comment"># 去掉了左右两侧的多余空格和换行</span></span><br><span class="line">                blacklist.append(r)</span><br><span class="line">        choice = <span class="built_in">input</span>(<span class="string">&#x27;欢迎来到我的网站，请输入你的要进行的功能\n1.注册\n2.登录\n3.退出\n&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> choice == <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">            register()</span><br><span class="line">        <span class="keyword">elif</span> choice == <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">            login()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><blockquote><p>更新: 2024-01-03 23:56:04<br>原文: <a href="https://www.yuque.com/zacharyblock/cx2om6/gbqyc0puv2x9dims">https://www.yuque.com/zacharyblock/cx2om6/gbqyc0puv2x9dims</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Python基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python基础-函数</title>
      <link href="/2022/12/31/Python%E5%9F%BA%E7%A1%80/%E5%87%BD%E6%95%B0/"/>
      <url>/2022/12/31/Python%E5%9F%BA%E7%A1%80/%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><h1 id="认识函数"><a href="#认识函数" class="headerlink" title="认识函数"></a>认识函数</h1><p>模块化编程指的是把程序进行封装（函数封装、面向对象、文件）</p><ul><li>函数 函数是具有特定功能的代码块 function 函数就是把代码进行封装、以提高代码的重用性、提高开发效率、降低了后期的维护成本</li><li>函数的定义和使用</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">函数名</span>(<span class="params">参数列表</span>):</span><br><span class="line">    具体功能代码</span><br><span class="line"></span><br><span class="line"><span class="comment"># 函数的调用</span></span><br><span class="line">函数名()</span><br></pre></td></tr></table></figure><p>函数封装并不会执行，只是把函数定义了而已 如果想使用定义的函数，就用语法来进行函数调用 函数定义后，不调用不执行 不能在函数定义前调用函数 函数的调用不受次数影响 函数的命名要遵守命名规范</p><h1 id="函数的参数"><a href="#函数的参数" class="headerlink" title="函数的参数"></a>函数的参数</h1><ul><li>函数在定义时，可以在参数列表的位置定义 形式参数（形参）</li><li>如果函数有形参，那么在调用的时候必须传递参数 实际参数（实参）</li><li>实参将数值传递给形参的过程，就是变量的赋值操作</li><li>函数定义了几个参数，调用的时候就要按指定顺序进行参数的传递</li></ul><h2 id="普通参数、默认参数"><a href="#普通参数、默认参数" class="headerlink" title="普通参数、默认参数"></a>普通参数、默认参数</h2><ul><li>即<strong>位置参数</strong>，也叫顺序参数，也是必须传递的参数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">cook</span>(<span class="params">food:<span class="built_in">str</span></span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;今晚吃<span class="subst">&#123;food&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cook(<span class="string">&quot;noodle&quot;</span>)  <span class="comment"># 今晚吃noodle</span></span><br></pre></td></tr></table></figure><ul><li>在有多个参数的时候，靠后的称为默认参数，默认参数可以指定默认值，在调用的时候可以不传实参</li><li>默认参数只能靠后</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">cook</span>(<span class="params">food, dirnk=<span class="string">&quot;wine&quot;</span>, snack=<span class="string">&quot;chips&quot;</span></span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;今晚吃<span class="subst">&#123;food&#125;</span>，今晚喝<span class="subst">&#123;dirnk&#125;</span>，饭后甜点是<span class="subst">&#123;snack&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cook(<span class="string">&quot;rice&quot;</span> )  <span class="comment"># 今晚吃rice，今晚喝wine，饭后甜点是chips</span></span><br></pre></td></tr></table></figure><h2 id="收集参数"><a href="#收集参数" class="headerlink" title="收集参数"></a>收集参数</h2><p>定义一个形参，专门收集多余的实参，或者说是不确定需要接受多少个实参的情况下，使用一个实参来接收,这个形参用<strong>*args</strong></p><ul><li>args 接收的参数以元组的形式存储</li><li>这个变量不一定非得是 args，可以是 num 等等，但是记得是一个星号</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">calc</span>(<span class="params">x=<span class="string">&#x27;+&#x27;</span>, *args</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">type</span>(args))  <span class="comment"># &lt;class &#x27;tuple&#x27;&gt;</span></span><br><span class="line">    res = <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> x == <span class="string">&#x27;+&#x27;</span>:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> args:</span><br><span class="line">            res += i</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;args&#125;</span>求和得<span class="subst">&#123;res&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">elif</span> x == <span class="string">&#x27;-&#x27;</span>:</span><br><span class="line">        res = <span class="number">2</span> * args[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> args:</span><br><span class="line">            res -= i</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;args&#125;</span>求差得<span class="subst">&#123;res&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;符号错误&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">calc(<span class="string">&quot;+&quot;</span>, <span class="number">200</span>, <span class="number">100</span>, <span class="number">300</span>)  <span class="comment"># (200, 100, 300)求和得600</span></span><br><span class="line">calc(<span class="string">&quot;-&quot;</span>, <span class="number">200</span>, <span class="number">100</span>, <span class="number">300</span>)  <span class="comment"># (200, 100, 300)求差得-200</span></span><br></pre></td></tr></table></figure><h2 id="命名关键字参数"><a href="#命名关键字参数" class="headerlink" title="命名关键字参数"></a>命名关键字参数</h2><ul><li>命名关键字参数，定义在<strong>收集参数</strong>后面</li><li>关键字参数必须通过形参的名字来传递</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">cook</span>(<span class="params">food, *other, time</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;we are going to eat <span class="subst">&#123;food&#125;</span> and <span class="subst">&#123;other&#125;</span> at <span class="subst">&#123;time&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cook(<span class="string">&quot;rice&quot;</span>, <span class="string">&quot;wine&quot;</span>, <span class="string">&quot;snack&quot;</span>, time=<span class="string">&quot;dinner&quot;</span>)  <span class="comment"># we are going to eat rice and (&#x27;wine&#x27;, &#x27;snack&#x27;) at dinner</span></span><br><span class="line">cook(<span class="string">&quot;rice&quot;</span>, <span class="string">&quot;wine&quot;</span>, <span class="string">&quot;snack&quot;</span>, <span class="string">&quot;dinner&quot;</span>)  <span class="comment"># TypeError: cook() missing 1 required keyword-only argument: &#x27;time&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="关键词收集参数"><a href="#关键词收集参数" class="headerlink" title="关键词收集参数"></a>关键词收集参数</h2><ul><li>普通收集参数*args 会把接收到的参数收集成为 元组</li><li>关键词收集参数**kwargs 会将接收到的关键字参数收集成为 字典</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">cook</span>(<span class="params">food, *other, time, **kwargs</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;we are going to eat <span class="subst">&#123;food&#125;</span> and <span class="subst">&#123;other&#125;</span> at <span class="subst">&#123;time&#125;</span> with <span class="subst">&#123;kwargs&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cook(<span class="string">&quot;rice&quot;</span>, <span class="string">&quot;wine&quot;</span>, <span class="string">&quot;snack&quot;</span>, time=<span class="string">&quot;dinner&quot;</span>, data=<span class="string">&#x27;2.2&#x27;</span>, year=<span class="string">&#x27;2022&#x27;</span>)</span><br><span class="line"><span class="comment"># we are going to eat rice and (&#x27;wine&#x27;, &#x27;snack&#x27;) at dinner with &#123;&#x27;data&#x27;: &#x27;2.2&#x27;, &#x27;year&#x27;: &#x27;2022&#x27;&#125;</span></span><br></pre></td></tr></table></figure><p>形参声明的位置 <strong><font style="background-color:#FBDE28;">普通参数、默认参数、收集参数、关键字参数、关键字收集参数</font></strong></p><h1 id="函数的返回值"><a href="#函数的返回值" class="headerlink" title="函数的返回值"></a>函数的返回值</h1><p>一个函数除了可以完成一定功能外，还可以按需要返回一定内容 函数中使用 return 关键字来指定返回数据，可以返回任何类型的数据 函数的返回值，会把数据返回到调用的位置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">calc_plus</span>(<span class="params">*args</span>):</span><br><span class="line">    res = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> args:</span><br><span class="line">        res += i</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">result = calc_plus(<span class="number">123</span>, <span class="number">234</span>, <span class="number">345</span>, <span class="number">456</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;所有数值计算结果是：<span class="subst">&#123;result&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><ul><li>函数中可以使用 return 返回数据或任意内容</li><li>return 意味着函数的结束，return 之后的代码不再执行</li><li>函数的返回值可以有，可以没有，当没有返回值的时候，返回的是 None</li></ul><h1 id="变量的作用域"><a href="#变量的作用域" class="headerlink" title="变量的作用域"></a>变量的作用域</h1><p>作用域就是当前起作用、可用的范围区域 变量的有效范围</p><ul><li><strong>全局变量</strong>：在函数内外都可以使用的变量</li><li><strong>局部变量</strong>：在函数内部可以使用的变量</li></ul><p><strong>在函数内部可以获取函数外部的变量(即全局变量)中的不可变数据类型，仅能访问，不能修改</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">num = <span class="number">10</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func</span>():</span><br><span class="line">    <span class="built_in">print</span>(num)</span><br><span class="line">func()   <span class="comment"># 10</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">num = <span class="number">10</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func</span>():</span><br><span class="line">    num += <span class="number">20</span></span><br><span class="line">    <span class="built_in">print</span>(num)</span><br><span class="line">func()   <span class="comment"># UnboundLocalError: local variable &#x27;num&#x27; referenced before assignment</span></span><br></pre></td></tr></table></figure><p><strong>在函数内部可以对全局变量的可变数据类型(列表、字典)，进行修改和访问</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">varl = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func</span>():</span><br><span class="line">    <span class="built_in">print</span>(varl)  <span class="comment"># [1, 2, 3]</span></span><br><span class="line"></span><br><span class="line">    varl.append(<span class="number">4</span>)</span><br><span class="line">    <span class="built_in">print</span>(varl)  <span class="comment"># [1, 2, 3, 4]</span></span><br><span class="line"></span><br><span class="line">    varl[<span class="number">2</span>] = <span class="string">&#x27;a&#x27;</span></span><br><span class="line">    <span class="built_in">print</span>(varl)  <span class="comment"># [1, 2, &#x27;a&#x27;, 4]</span></span><br><span class="line">func()  <span class="comment"># 30</span></span><br><span class="line"><span class="built_in">print</span>(varl)  <span class="comment"># [1, 2, &#x27;a&#x27;, 4]</span></span><br></pre></td></tr></table></figure><p><strong>在函数内部定义的变量，只能在函数内部使用，可获取，可修改，函数外部无法访问</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">func</span>():</span><br><span class="line">    res = <span class="number">20</span></span><br><span class="line">    res += <span class="number">10</span></span><br><span class="line">    <span class="built_in">print</span>(res)</span><br><span class="line">func()  <span class="comment"># 30</span></span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># NameError: name &#x27;res&#x27; is not defined</span></span><br></pre></td></tr></table></figure><p><strong>在函数内部使用</strong><em><strong>global</strong></em><strong>声明的变量，可将其改为全局变量</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">func</span>():</span><br><span class="line">    <span class="keyword">global</span> res</span><br><span class="line">    res = <span class="number">20</span></span><br><span class="line">    res += <span class="number">10</span></span><br><span class="line">    <span class="built_in">print</span>(res)</span><br><span class="line">func()  <span class="comment"># 30</span></span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># 30</span></span><br></pre></td></tr></table></figure><p><strong>在函数外部定义的变量，想要在函数内部修改，可以在函数内部将其声明为全局变量</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">num = <span class="number">10</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func</span>():</span><br><span class="line">    <span class="keyword">global</span> num</span><br><span class="line">    num += <span class="number">20</span></span><br><span class="line">    <span class="built_in">print</span>(num)</span><br><span class="line">func()   <span class="comment"># 30</span></span><br></pre></td></tr></table></figure><ul><li><strong>两个函数</strong><ul><li><code>globals()</code>：获取全局数据</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">outer</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;This is a outer function...&quot;</span>)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">inner</span>():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;This is a inner function...&quot;</span>)</span><br><span class="line">    inner()</span><br><span class="line"></span><br><span class="line">outer()</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">globals</span>())</span><br><span class="line"><span class="comment"># &#123;&#x27;__name__&#x27;: &#x27;__main__&#x27;, &#x27;__doc__&#x27;: None, &#x27;__package__&#x27;: None, &#x27;__loader__&#x27;: &lt;_frozen_importlib_external.SourceFileLoader object at 0x108786550&gt;, &#x27;__spec__&#x27;: None, &#x27;__annotations__&#x27;: &#123;&#125;, &#x27;__builtins__&#x27;: &lt;module &#x27;builtins&#x27; (built-in)&gt;, &#x27;__file__&#x27;: &#x27;/Users/zachary/PycharmProjects/Python教程阶段1/code/30变量的作用域.py&#x27;, &#x27;__cached__&#x27;: None, &#x27;outer&#x27;: &lt;function outer at 0x1087f9710&gt;&#125;</span></span><br></pre></td></tr></table></figure><pre><code>- `locals()`：获取局部数据</code></pre><ul><li><strong>局部函数：在函数内部定义的函数，称为局部函数</strong></li><li><strong>全局函数：相对于局部函数的外部函数</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">outer</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;This is a outer function...&quot;</span>)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">inner</span>():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;This is a inner function...&quot;</span>)</span><br><span class="line">    inner()</span><br><span class="line"></span><br><span class="line">outer()</span><br><span class="line"><span class="comment"># This is a outer function...</span></span><br><span class="line"><span class="comment"># This is a inner function...</span></span><br></pre></td></tr></table></figure><ul><li>关于函数的文档 以上述的 globals()为例</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="string">&#x27;__name__&#x27;</span>: <span class="string">&#x27;__main__&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;__doc__&#x27;</span>: <span class="literal">None</span>,</span><br><span class="line"><span class="string">&#x27;__package__&#x27;</span>: <span class="literal">None</span>,</span><br><span class="line"><span class="string">&#x27;__loader__&#x27;</span>: &lt;_frozen_importlib_external.SourceFileLoader <span class="built_in">object</span> at <span class="number">0x108786550</span>&gt;,</span><br><span class="line"><span class="string">&#x27;__spec__&#x27;</span>: <span class="literal">None</span>,</span><br><span class="line"><span class="string">&#x27;__annotations__&#x27;</span>: &#123;&#125;,</span><br><span class="line"><span class="string">&#x27;__builtins__&#x27;</span>: &lt;module <span class="string">&#x27;builtins&#x27;</span> (built-<span class="keyword">in</span>)&gt;,</span><br><span class="line"><span class="string">&#x27;__file__&#x27;</span>: <span class="string">&#x27;/Users/zachary/PycharmProjects/Python教程阶段1/code/30变量的作用域.py&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;__cached__&#x27;</span>: <span class="literal">None</span>, <span class="string">&#x27;outer&#x27;</span>: &lt;function outer at <span class="number">0x1087f9710</span>&gt;&#125;</span><br></pre></td></tr></table></figure><p><strong>main</strong>：当前脚本如果作为主程序，那么值是<strong>main</strong>，如果是当做一个模块，在另外一个脚本中引用去使用模块的名字。</p><p><strong>doc</strong>：当前脚本的文档说明 在当前脚本当中的第一个三引号’’’’’’注释的就是当前脚本的说明文档</p><h1 id="nonlocal-关键字"><a href="#nonlocal-关键字" class="headerlink" title="nonlocal 关键字"></a>nonlocal 关键字</h1><ul><li>在内函数中，使用上一层函数中的局部变量，可以在内函数中，使用 nonlocal 声明一下变量，即可以在内函数中使用外函数的局部变量</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">outer</span>():</span><br><span class="line">    num = <span class="number">10</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;This is a outer function...&quot;</span>)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">inner</span>():</span><br><span class="line">        <span class="keyword">nonlocal</span> num</span><br><span class="line">        num += <span class="number">10</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;This is a inner function...&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(num)</span><br><span class="line"></span><br><span class="line">    inner()</span><br><span class="line"></span><br><span class="line">outer()</span><br><span class="line"><span class="comment"># This is a outer function...</span></span><br><span class="line"><span class="comment"># This is a inner function...</span></span><br><span class="line"><span class="comment"># 20</span></span><br></pre></td></tr></table></figure><h1 id="函数封装的练习题"><a href="#函数封装的练习题" class="headerlink" title="函数封装的练习题"></a>函数封装的练习题</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 封装九九乘法表</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">jiujiu</span>(<span class="params">n=<span class="number">0</span></span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    打印九九乘法表</span></span><br><span class="line"><span class="string">    :param n: 控制打印输出顺序，n默认为0时，正向输出；否则，逆向输出</span></span><br><span class="line"><span class="string">    :return: 无返回值</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">0</span>:</span><br><span class="line">        r = <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">10</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        r = <span class="built_in">range</span>(<span class="number">9</span>,<span class="number">0</span>,-<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> r:</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,i+<span class="number">1</span>):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;j&#125;</span>×<span class="subst">&#123;i&#125;</span>=<span class="subst">&#123;i*j&#125;</span>\t&quot;</span>,end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>()</span><br><span class="line">    <span class="built_in">print</span>()</span><br><span class="line"></span><br><span class="line">jiujiu()</span><br><span class="line">jiujiu(-<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>练习二</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 封装打印矩形</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">juxing</span>(<span class="params">n=<span class="number">0</span>, x=<span class="number">10</span>, y=<span class="number">10</span></span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    :param n: 当n为默认值0时候。打印实心矩形，否则打印空心的矩形</span></span><br><span class="line"><span class="string">    :param x: 控制矩形行数</span></span><br><span class="line"><span class="string">    :param y: 控制矩形列数</span></span><br><span class="line"><span class="string">    :return: 无返回值</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(x):</span><br><span class="line">        <span class="keyword">if</span> i == <span class="number">0</span> <span class="keyword">or</span> i == x - <span class="number">1</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;# &quot;</span> * y)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> n == <span class="number">0</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;# &quot;</span> * y)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;# &quot;</span> + <span class="string">&quot;  &quot;</span> * (y - <span class="number">2</span>) + <span class="string">&quot;#&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">juxing(x=<span class="number">9</span>, y=<span class="number">16</span>)</span><br><span class="line">juxing(n=-<span class="number">1</span>,x=<span class="number">10</span>,y=<span class="number">10</span>)</span><br></pre></td></tr></table></figure><h1 id="递归函数"><a href="#递归函数" class="headerlink" title="递归函数"></a>递归函数</h1><p>递归函数就是定义了一个函数，这个函数内部自己调用函数本身 递归函数内必须要有结束条件，否则会一直调用直至栈溢出 递归函数会一层一层进入，再一层一层返回</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">jiecheng</span>(<span class="params">n</span>):</span><br><span class="line">    <span class="built_in">print</span>(n)</span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    jiecheng(n-<span class="number">1</span>)</span><br><span class="line">    <span class="built_in">print</span>(n)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">jiecheng(<span class="number">5</span>)</span><br></pre></td></tr></table></figure><h2 id="实现阶乘"><a href="#实现阶乘" class="headerlink" title="实现阶乘"></a>实现阶乘</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 实现阶乘</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">jiecheng</span>(<span class="params">n</span>):</span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">int</span>(n) * jiecheng(n-<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">res = jiecheng(<span class="number">10</span>)</span><br><span class="line"><span class="built_in">print</span>(res)**</span><br></pre></td></tr></table></figure><h2 id="实现斐波那契数列"><a href="#实现斐波那契数列" class="headerlink" title="实现斐波那契数列"></a>实现斐波那契数列</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">fibo</span>(<span class="params">n</span>):</span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">elif</span> n == <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> fibo(n - <span class="number">1</span>) + fibo(n - <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(fibo(<span class="number">5</span>))  <span class="comment"># 3</span></span><br><span class="line"></span><br><span class="line">res = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">    res += fibo(i + <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># 7</span></span><br></pre></td></tr></table></figure><h1 id="回调函数"><a href="#回调函数" class="headerlink" title="回调函数"></a>回调函数</h1><p>如果一个函数中要求传递的参数是一个函数，并且在函数中使用了传递进来的函数，那么这个被调用的函数就是回调函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 带有回调函数的函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func</span>(<span class="params">f</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;func这是调用了回调函数的函数&quot;</span>)</span><br><span class="line">    f()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 回调函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">cal</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;cal这是一个回调函数&quot;</span>)</span><br><span class="line"></span><br><span class="line">func(cal)</span><br><span class="line"><span class="comment"># func这是调用了回调函数的函数</span></span><br><span class="line"><span class="comment"># cal这是一个回调函数</span></span><br></pre></td></tr></table></figure><p>再来一个例子</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">fun</span>(<span class="params">x,y,f</span>):</span><br><span class="line">    <span class="built_in">print</span>(f(x,y))</span><br><span class="line"></span><br><span class="line">fun(<span class="number">2</span>,<span class="number">3</span>,<span class="built_in">pow</span>) <span class="comment"># 8</span></span><br></pre></td></tr></table></figure><h1 id="闭包函数"><a href="#闭包函数" class="headerlink" title="闭包函数"></a>闭包函数</h1><p>如果在一个函数中，返回了一个函数。并且这个函数是内函数，该内函数使用了外函数中的局部变量<strong>（这意味着需要使用 nonlocal）</strong>，这就是闭包函数 保护了外函数中的局部变量，既可以使用，也不会被破坏 可以使用<strong>closure</strong>魔术方法查看是否闭包函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">person</span>():</span><br><span class="line">    money = <span class="number">0</span> <span class="comment"># 函数中定义了一个局部变量</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 工作 在外函数中定义内函数</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">work</span>():</span><br><span class="line">        <span class="keyword">nonlocal</span> money</span><br><span class="line">        money += <span class="number">100</span></span><br><span class="line">        <span class="built_in">print</span>(money)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 在外函数中返回了内函数，这个内函数就是闭包函数</span></span><br><span class="line">    <span class="keyword">return</span> work</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">res = person()  <span class="comment"># 这里的res 就等同于work</span></span><br><span class="line">res()  <span class="comment"># 100</span></span><br><span class="line">res()  <span class="comment"># 200</span></span><br><span class="line">res()  <span class="comment"># 300</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(res.__closure__)  <span class="comment"># (&lt;cell at 0x1058d0250: int object at 0x1058afdd0&gt;,)</span></span><br><span class="line"><span class="built_in">print</span>(person.__closure__)  <span class="comment"># None</span></span><br></pre></td></tr></table></figure><h1 id="匿名函数——lambda-表达式"><a href="#匿名函数——lambda-表达式" class="headerlink" title="匿名函数——lambda 表达式"></a>匿名函数——lambda 表达式</h1><p>匿名函数即，可以不使用 def 定义，并且这个函数也没有名字 在 Python 中使用 lambda 表达式来定义匿名函数 lambda 仅仅是一个表达式，不是一个代码块 lambda 表达式也有形参，并且不能访问除了自己的形参以外的任何变量（包括全局变量） 功能相对单一，不能写太复杂的形式 lambda [参数列表]:返回值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">res = <span class="keyword">lambda</span> x, y: x + y</span><br><span class="line"><span class="built_in">print</span>(res(<span class="number">4</span>, <span class="number">4</span>))  <span class="comment"># 8</span></span><br></pre></td></tr></table></figure><p>同样的，lambda 表达式也可以用于封装带有分支结构的函数，很便捷</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">func</span>(<span class="params">gender</span>):</span><br><span class="line">    <span class="keyword">if</span> gender == <span class="string">&#x27;male&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;男性&#x27;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;女性&#x27;</span></span><br><span class="line"></span><br><span class="line">res = func(<span class="string">&quot;female&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(res)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 以下代码等同于上述代码</span></span><br><span class="line">res = <span class="keyword">lambda</span> gender:<span class="string">&#x27;男性&#x27;</span> <span class="keyword">if</span> gender==<span class="string">&#x27;male&#x27;</span> <span class="keyword">else</span> <span class="string">&#x27;女性&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(res(<span class="string">&quot;female&quot;</span>))</span><br></pre></td></tr></table></figure><h1 id="迭代器"><a href="#迭代器" class="headerlink" title="迭代器"></a>迭代器</h1><p>迭代器是 Python 中的特色功能，用于访问元素的一种方式 迭代器是一个可以记住访问遍历的位置的对象 从集合的第一个元素开始访问，直到集合中的所有元素被访问完毕 迭代器只能从前往后一个一个遍历的，不能后退 迭代器是一个能被<strong>next()函数</strong>调用，并不断返回下一个值的对象称为迭代器(Iterator)对象</p><ul><li><strong>Iter()函数</strong></li></ul><p>功能：把可迭代对象，转为一个迭代器对象 参数：可迭代的对象(str、list、tuple、dict、set、range…) 返回值：迭代器对象 注意：迭代器对象一定是可迭代对象，但是可迭代对象不一定是迭代器对象</p><hr><ul><li>通过使用<strong>next()方法</strong>获取迭代器内部数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">player = [<span class="string">&#x27;Curry&#x27;</span>, <span class="string">&#x27;Kobe&#x27;</span>, <span class="string">&#x27;James&#x27;</span>, <span class="string">&#x27;Irving&#x27;</span>]</span><br><span class="line">res = <span class="built_in">iter</span>(player)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用next()函数获取数据</span></span><br><span class="line">p = <span class="built_in">next</span>(res)</span><br><span class="line"><span class="built_in">print</span>(p)  <span class="comment"># Curry</span></span><br><span class="line">p = <span class="built_in">next</span>(res)</span><br><span class="line"><span class="built_in">print</span>(p)  <span class="comment"># Kobe</span></span><br><span class="line">p = <span class="built_in">next</span>(res)</span><br><span class="line"><span class="built_in">print</span>(p)  <span class="comment"># James</span></span><br><span class="line">p = <span class="built_in">next</span>(res)</span><br><span class="line"><span class="built_in">print</span>(p)  <span class="comment"># Irving</span></span><br><span class="line">p = <span class="built_in">next</span>(res)</span><br><span class="line"><span class="built_in">print</span>(p)  <span class="comment"># StopIteration 超出了可迭代范围</span></span><br></pre></td></tr></table></figure><ul><li>通过使用 list()方法直接取出迭代器中的所有数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">player = [<span class="string">&#x27;Curry&#x27;</span>, <span class="string">&#x27;Kobe&#x27;</span>, <span class="string">&#x27;James&#x27;</span>, <span class="string">&#x27;Irving&#x27;</span>]</span><br><span class="line">res = <span class="built_in">iter</span>(player)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用list()取值</span></span><br><span class="line">li = <span class="built_in">list</span>(res)</span><br><span class="line"><span class="built_in">print</span>(li)  <span class="comment"># [&#x27;Curry&#x27;, &#x27;Kobe&#x27;, &#x27;James&#x27;, &#x27;Irving&#x27;]</span></span><br></pre></td></tr></table></figure><ul><li>通过 for 循环进行数据的遍历</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">player = [<span class="string">&#x27;Curry&#x27;</span>, <span class="string">&#x27;Kobe&#x27;</span>, <span class="string">&#x27;James&#x27;</span>, <span class="string">&#x27;Irving&#x27;</span>]</span><br><span class="line">res = <span class="built_in">iter</span>(player)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用for循环进行遍历</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> res:</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br></pre></td></tr></table></figure><ul><li>迭代器有一个特点，无论是使用上述三种方法哪一种取，取过一次数据后，数据就丢失去了,想要再次使用就不行了</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">player = [<span class="string">&#x27;Curry&#x27;</span>, <span class="string">&#x27;Kobe&#x27;</span>, <span class="string">&#x27;James&#x27;</span>, <span class="string">&#x27;Irving&#x27;</span>]</span><br><span class="line">res = <span class="built_in">iter</span>(player)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用for循环进行遍历</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> res:</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line"></span><br><span class="line"><span class="comment">#第二次打印就失效了</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> res:</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line"><span class="comment"># Curry</span></span><br><span class="line"><span class="comment"># Kobe</span></span><br><span class="line"><span class="comment"># James</span></span><br><span class="line"><span class="comment"># Irving</span></span><br></pre></td></tr></table></figure><hr><ul><li>判断一个对象是否是可迭代的或者是否迭代器对象，需要使用 from collections.abc import Iterable，Iterator</li><li>当需要判断一个对象类型的时候,可以使用 type()</li><li>当需要判断一个对象是否某一类型的时候可以使用 isinstance()</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections.abc <span class="keyword">import</span> Iterable, Iterator</span><br><span class="line"></span><br><span class="line">s = <span class="string">&quot;abdef&quot;</span></span><br><span class="line">r1 = <span class="built_in">isinstance</span>(s, <span class="built_in">int</span>)</span><br><span class="line">r2 = <span class="built_in">isinstance</span>(s, <span class="built_in">str</span>)</span><br><span class="line"><span class="built_in">print</span>(r1, r2)  <span class="comment"># False True</span></span><br><span class="line"></span><br><span class="line">player = [<span class="string">&#x27;Curry&#x27;</span>, <span class="string">&#x27;Kobe&#x27;</span>, <span class="string">&#x27;James&#x27;</span>, <span class="string">&#x27;Irving&#x27;</span>]</span><br><span class="line">i = <span class="built_in">iter</span>(player)</span><br><span class="line">r1 = <span class="built_in">isinstance</span>(s, Iterator) <span class="comment"># 字符串不是迭代器</span></span><br><span class="line">r2 = <span class="built_in">isinstance</span>(s, Iterable) <span class="comment"># 字符串是可迭代对象</span></span><br><span class="line">r3 = <span class="built_in">isinstance</span>(i, Iterator) <span class="comment"># 迭代器对象是迭代器</span></span><br><span class="line">r4 = <span class="built_in">isinstance</span>(i, Iterable) <span class="comment"># 迭代器对象是可迭代对象</span></span><br><span class="line"><span class="built_in">print</span>(r1, r2, r3, r4)  <span class="comment"># False True True True</span></span><br></pre></td></tr></table></figure><h1 id="生成器"><a href="#生成器" class="headerlink" title="生成器"></a>生成器</h1><h2 id="yield-关键字"><a href="#yield-关键字" class="headerlink" title="yield 关键字"></a>yield 关键字</h2><p>使用了<code>yield</code>关键字的函数——生成器函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">output</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;res 1&quot;</span>)</span><br><span class="line">    <span class="keyword">yield</span> <span class="number">1</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;res 2&quot;</span>)</span><br><span class="line">    <span class="keyword">yield</span> <span class="number">2</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;res 3&quot;</span>)</span><br><span class="line">    <span class="keyword">yield</span> <span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#生成器对象</span></span><br><span class="line">o = output()</span><br><span class="line">res = <span class="built_in">next</span>(o)</span><br><span class="line"><span class="built_in">print</span>(res)</span><br><span class="line">res = <span class="built_in">next</span>(o)</span><br><span class="line"><span class="built_in">print</span>(res)</span><br><span class="line">res = <span class="built_in">next</span>(o)</span><br><span class="line"><span class="built_in">print</span>(res)</span><br><span class="line"></span><br><span class="line"><span class="comment">#可以使用for遍历</span></span><br><span class="line"><span class="keyword">for</span> res <span class="keyword">in</span> o:</span><br><span class="line">    <span class="built_in">print</span>(res)</span><br></pre></td></tr></table></figure><p>可以将该函数理解为一个 可迭代对象</p><ul><li><strong>yield</strong>关键字使用在 生成器函数中<ul><li>yield 和函数中的 return 相似</li><li>共同点：都会返回结果</li><li>不同点：<ul><li>return 会返回结果，并结束当前函数的调用，后面的代码不再执行</li><li>yield 会返回结果，并记住当前代码的执行位置，下一次调用的时候会从上一次离开的位置继续向下执行</li><li>调用函数后结果是一个生成器，需要使用收集迭代器的方法进行数据收集</li></ul></li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># return在函数中</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Hello sen1&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Hello sen2&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span></span><br><span class="line"></span><br><span class="line">res = hello()  <span class="comment"># Hello sen1</span></span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># 1</span></span><br><span class="line">res = hello()  <span class="comment"># Hello sen1</span></span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># 1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># yield在函数中</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello_y</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Hello sen1&#x27;</span>)</span><br><span class="line">    <span class="keyword">yield</span> <span class="number">1</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Hello sen2&#x27;</span>)</span><br><span class="line">    <span class="keyword">yield</span> <span class="number">2</span></span><br><span class="line">res = hello_y()</span><br><span class="line"><span class="built_in">print</span>(res)</span><br><span class="line">temp = <span class="built_in">next</span>(res)  <span class="comment"># Hello sen1</span></span><br><span class="line"><span class="built_in">print</span>(temp) <span class="comment"># 1</span></span><br><span class="line">temp = <span class="built_in">next</span>(res)  <span class="comment"># Hello sen2</span></span><br><span class="line"><span class="built_in">print</span>(temp) <span class="comment"># 2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 也可以使用list类似函数收集起来 或者用 for</span></span><br><span class="line">res = hello_y()</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(res)) <span class="comment"># [1, 2]</span></span><br><span class="line"></span><br><span class="line">res = hello_y()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> res:</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line"><span class="comment"># Hello sen1</span></span><br><span class="line"><span class="comment"># 1</span></span><br><span class="line"><span class="comment"># Hello sen2</span></span><br><span class="line"><span class="comment"># 2</span></span><br></pre></td></tr></table></figure><h2 id="yield-from"><a href="#yield-from" class="headerlink" title="yield from"></a>yield from</h2><ul><li>在生成器中 yield 另一个生成器的内容</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">yield_func</span>(<span class="params">num: <span class="built_in">int</span></span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(num):</span><br><span class="line">        <span class="keyword">yield</span> square(i+<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">call_yield_func</span>():</span><br><span class="line">    <span class="keyword">yield</span> <span class="keyword">from</span> yield_func(<span class="number">3</span>)</span><br><span class="line">    <span class="keyword">yield</span> <span class="keyword">from</span> yield_func(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> call_yield_func():</span><br><span class="line">    <span class="built_in">print</span>(item)</span><br></pre></td></tr></table></figure><ul><li>生成器 send 相当于使用 next，并将数据送回给生成器(有种协程的感觉)</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">yield_send_func</span>():</span><br><span class="line">    number = <span class="keyword">yield</span> <span class="string">&quot;welcome a square function&quot;</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        number = <span class="keyword">yield</span> square(number)</span><br><span class="line">        <span class="keyword">if</span> number <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">generator = yield_send_func()</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">next</span>(generator))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">11</span>):</span><br><span class="line">    <span class="keyword">if</span> i == <span class="number">10</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            generator.send(<span class="literal">None</span>)</span><br><span class="line">        <span class="keyword">except</span> StopIteration:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="built_in">print</span>(generator.send(i))</span><br></pre></td></tr></table></figure><ul><li>yield from 结合 send</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">yield_square_func</span>():</span><br><span class="line">    number = <span class="keyword">yield</span> <span class="string">&quot;welcome a square function&quot;</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        number = <span class="keyword">yield</span> square(number)</span><br><span class="line">        <span class="keyword">if</span> number <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">yield_cube_func</span>():</span><br><span class="line">    number = <span class="keyword">yield</span> <span class="string">&quot;welcome a cube function&quot;</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        number = <span class="keyword">yield</span> number ** <span class="number">3</span></span><br><span class="line">        <span class="keyword">if</span> number <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">choose_func</span>():</span><br><span class="line">    item = <span class="keyword">yield</span> <span class="string">&quot;please choose 1 for square or 2 for cube&quot;</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">if</span> item == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">yield</span> <span class="keyword">from</span> yield_square_func()</span><br><span class="line">        <span class="keyword">elif</span> item == <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">yield</span> <span class="keyword">from</span> yield_cube_func()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">generator = choose_func()</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">next</span>(generator))</span><br><span class="line"><span class="built_in">print</span>(generator.send(<span class="built_in">int</span>(<span class="built_in">input</span>())))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">11</span>):</span><br><span class="line">    <span class="keyword">if</span> i == <span class="number">10</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            generator.send(<span class="literal">None</span>)</span><br><span class="line">        <span class="keyword">except</span> StopIteration:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(generator.send(i))</span><br></pre></td></tr></table></figure><h2 id="练习题"><a href="#练习题" class="headerlink" title="练习题"></a>练习题</h2><p>使用生成器改写斐波那契数列</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">fibo</span>(<span class="params">x</span>):</span><br><span class="line">    a, b = <span class="number">0</span>, <span class="number">1</span></span><br><span class="line">    <span class="keyword">yield</span> a</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(x - <span class="number">1</span>):</span><br><span class="line">        <span class="keyword">yield</span> b</span><br><span class="line">        a, b = b, a + b</span><br><span class="line"></span><br><span class="line">i = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入一个整数：&quot;</span>))</span><br><span class="line">res = fibo(i)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> res:</span><br><span class="line">    <span class="built_in">print</span>(i,end=<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 请输入一个整数：8</span></span><br><span class="line"><span class="comment"># 0,1,1,2,3,5,8,13,</span></span><br></pre></td></tr></table></figure><h1 id="内置函数"><a href="#内置函数" class="headerlink" title="内置函数"></a>内置函数</h1><p>内置函数就是在系统安装完 Python 解释器时，由解释器提供好的函数</p><h2 id="range-函数"><a href="#range-函数" class="headerlink" title="range 函数"></a>range 函数</h2><p>range 函数功能：能够生成一个指定的数字序列 参数：[start,stop,(step)] start：开始的值，默认为 0 stop：结束的值，对于[start,stop)是一个左闭右开区间，stop 选不到的 step：默认为 1，负数为倒着步进 返回值：可迭代对象，数字序列</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections.abc <span class="keyword">import</span> Iterable</span><br><span class="line"><span class="keyword">from</span> collections.abc <span class="keyword">import</span> Iterator</span><br><span class="line"></span><br><span class="line">res = <span class="built_in">range</span>(<span class="number">10</span>)</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># range(0, 10)</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">isinstance</span>(res, Iterable))  <span class="comment"># True 可迭代对象</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">isinstance</span>(res,Iterator))  <span class="comment"># False 不是迭代器，故不能使用next直接访问</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出</span></span><br><span class="line"><span class="comment"># 转化为list</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(res))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用for</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> res:</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">it = <span class="built_in">iter</span>(res)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">next</span>(it)) <span class="comment"># 0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> it:</span><br><span class="line">    <span class="built_in">print</span>(i) <span class="comment"># 1 2 3 4 5 6 7 8 9</span></span><br></pre></td></tr></table></figure><h2 id="zip-函数"><a href="#zip-函数" class="headerlink" title="zip()函数"></a>zip()函数</h2><p>zip()函数功能：可以接收多个可迭代对象，然后把每个可迭代对象中第 i 个元素组合在一起，形成一个新的迭代器（元组），当输入的可迭代对象中，最短的一个被耗尽时，迭代器将停止迭代。 参数：*iterables，任意个的可迭代对象 返回值：返回一个元组的迭代器 既然使用 zip 生成的结果是一个迭代器，那么获取数据的时候就可以使用 next、for、list 等方法获取，依旧是使用一次 少一次</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">var1 = <span class="string">&quot;1234&quot;</span></span><br><span class="line">var2 = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>]</span><br><span class="line">var3 = (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>)</span><br><span class="line"></span><br><span class="line">res = <span class="built_in">zip</span>(var1, var2, var3)</span><br><span class="line"><span class="built_in">print</span>(res, <span class="built_in">type</span>(res))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取数据的方法1</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">next</span>(res)) <span class="comment"># (&#x27;1&#x27;, &#x27;a&#x27;, &#x27;A&#x27;)</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">next</span>(res)) <span class="comment"># (&#x27;2&#x27;, &#x27;b&#x27;, &#x27;B&#x27;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取数据的方法2</span></span><br><span class="line">res = <span class="built_in">zip</span>(var1, var2, var3)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> res:</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">(&#x27;1&#x27;, &#x27;a&#x27;, &#x27;A&#x27;)</span></span><br><span class="line"><span class="string">(&#x27;2&#x27;, &#x27;b&#x27;, &#x27;B&#x27;)</span></span><br><span class="line"><span class="string">(&#x27;3&#x27;, &#x27;c&#x27;, &#x27;C&#x27;)</span></span><br><span class="line"><span class="string">(&#x27;4&#x27;, &#x27;d&#x27;, &#x27;D&#x27;)</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取数据的方法3</span></span><br><span class="line">res = <span class="built_in">zip</span>(var1, var2, var3)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(res))  <span class="comment"># [(&#x27;1&#x27;, &#x27;a&#x27;, &#x27;A&#x27;), (&#x27;2&#x27;, &#x27;b&#x27;, &#x27;B&#x27;), (&#x27;3&#x27;, &#x27;c&#x27;, &#x27;C&#x27;), (&#x27;4&#x27;, &#x27;d&#x27;, &#x27;D&#x27;)]</span></span><br></pre></td></tr></table></figure><p>可以使用 zip(*zip)执行一个反向操作</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># zip与*zip</span></span><br><span class="line">x = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">y = [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</span><br><span class="line">zipped = <span class="built_in">zip</span>(x, y)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(zipped))  <span class="comment"># [(1, 4), (2, 5), (3, 6)]</span></span><br><span class="line">x2, y2 = <span class="built_in">zip</span>(*<span class="built_in">zip</span>(x, y))</span><br><span class="line"><span class="built_in">print</span>(x2, y2)  <span class="comment"># (1, 2, 3) (4, 5, 6)</span></span><br></pre></td></tr></table></figure><h2 id="其他内置函数"><a href="#其他内置函数" class="headerlink" title="其他内置函数"></a>其他内置函数</h2><h3 id="数据类型转换相关内置函数"><a href="#数据类型转换相关内置函数" class="headerlink" title="数据类型转换相关内置函数"></a>数据类型转换相关内置函数</h3><ul><li>int() 将其他数据类型转为整型</li><li>float() 转为浮点类型</li><li>bool() 转为布尔类型</li><li>complex() 转为复数</li><li>str() 转为字符串类型</li><li>list() 转为列表类型</li><li>tuple() 转为元组类型</li><li>dict() 转为字典类型</li><li>set() 转为集合类型</li></ul><h3 id="变量相关函数"><a href="#变量相关函数" class="headerlink" title="变量相关函数"></a>变量相关函数</h3><ul><li>id() 获取当前数据的 ID 标识</li><li>type() 获取当前数据的类型字符串</li><li>print() 数据的打印</li><li>input() 获取输入的数据</li><li>isinstance() 检测是否为指定的数据类型</li></ul><h3 id="数学相关函数"><a href="#数学相关函数" class="headerlink" title="数学相关函数"></a>数学相关函数</h3><ul><li>abs() 返回一个数的绝对值，如果是复数，返回模</li><li>sum() 从左向右对一个 iterable 对象中的项求和并返回，开始值不允许为字符串</li><li>max() 获取最大值</li><li>min() 获取最小值</li><li>pow() 次幂运算</li><li>round() 四舍五入</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="built_in">abs</span>(-<span class="number">99.99</span>))  <span class="comment"># 99.99</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">sum</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]))  <span class="comment"># 6</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">max</span>(<span class="number">9</span>, <span class="number">90</span>, <span class="number">999</span>))  <span class="comment"># 999</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">min</span>(<span class="number">9</span>, <span class="number">90</span>, -<span class="number">99</span>))  <span class="comment"># -99</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">pow</span>(<span class="number">2</span>, <span class="number">3</span>))  <span class="comment"># 8</span></span><br><span class="line"></span><br><span class="line">r = <span class="number">3.1415926</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">round</span>(r))  <span class="comment"># 3</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">round</span>(r, <span class="number">4</span>))  <span class="comment"># 3.1416</span></span><br></pre></td></tr></table></figure><h2 id="进制相关函数及字符集"><a href="#进制相关函数及字符集" class="headerlink" title="进制相关函数及字符集"></a>进制相关函数及字符集</h2><p>进制转换</p><ul><li>bin() 将数值类型转换为二进制</li><li>int() 将二进制转换为整型</li><li>oct() 将数值类型转换为八进制</li><li>hex() 将数值类型转为十六进制</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="built_in">bin</span>(<span class="number">123</span>))  <span class="comment"># 0b1111011</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">int</span>(<span class="number">0b1111011</span>))  <span class="comment"># 123</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">oct</span>(<span class="number">123</span>))  <span class="comment"># 0o173</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">int</span>(<span class="number">0o173</span>))  <span class="comment"># 123</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hex</span>(<span class="number">123</span>))  <span class="comment"># 0x7b</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">int</span>(<span class="number">0x7b</span>))  <span class="comment"># 123</span></span><br></pre></td></tr></table></figure><p>Ascii 码是 基于拉丁字母的一套电脑编码系统，主要用于显示现代英语和其他西欧语言，共计 128 个字符 常用的包括：GB2312-80、GBK、GBK18030、Unicode（UTF-8） ascii 字符转换 A-Z：65-90 a-z：97-122 0-9：48-57</p><ul><li>将字符转为 ASCII：ord()</li><li>将 ASCII 转为字符：chr()</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="built_in">ord</span>(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(a)  <span class="comment"># 97</span></span><br><span class="line"></span><br><span class="line">c = <span class="built_in">chr</span>(<span class="number">97</span>)</span><br><span class="line"><span class="built_in">print</span>(c)  <span class="comment"># a</span></span><br></pre></td></tr></table></figure><h2 id="高阶函数——sorted"><a href="#高阶函数——sorted" class="headerlink" title="高阶函数——sorted()"></a>高阶函数——sorted()</h2><ul><li><strong>sorted(iterable,[reverse,key])</strong><ul><li>运行原理：把可迭代数据里面的元素，一个一个取出来，放到 key 这个函数中进行处理，并按照函数中 return 的结果进行排序，返回一个新的列表</li></ul></li><li>功能：排序</li><li>参数：<ul><li>iterable 可迭代的数据（容器类型数据，range 数据序列，迭代器）</li><li>reverse 可选，是否反转，默认为 False，不反转，True 反转</li><li>key 可选，函数，可以是自定义函数，也可以是内置函数</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">arr = [<span class="number">3</span>, <span class="number">7</span>, <span class="number">1</span>, -<span class="number">9</span>, <span class="number">20</span>, <span class="number">10</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">sorted</span>(arr))  <span class="comment"># [-9, 1, 3, 7, 10, 20]</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">sorted</span>(arr, reverse=<span class="literal">True</span>))  <span class="comment"># [20, 10, 7, 3, 1, -9]</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">sorted</span>(arr, key=<span class="built_in">abs</span>))  <span class="comment"># [1, 3, 7, -9, 10, 20]</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 自定义函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func</span>(<span class="params">num</span>):</span><br><span class="line">    <span class="keyword">return</span> num % <span class="number">2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">arr = [<span class="number">3</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>]</span><br><span class="line">res = <span class="built_in">sorted</span>(arr, key=func)</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># [2, 4, 6, 3, 5, 7, 9]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 优化版</span></span><br><span class="line">res = <span class="built_in">sorted</span>(arr, key=<span class="keyword">lambda</span> x: x % <span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(res)</span><br></pre></td></tr></table></figure><h2 id="高阶函数——map"><a href="#高阶函数——map" class="headerlink" title="高阶函数——map()"></a>高阶函数——map()</h2><ul><li>*<em>map(func, __iterables)</em></li><li>功能：对传入的可迭代数据中的每个元素进行处理，返回一个新的迭代器</li><li>参数：<ul><li>func 函数：自定义函数|内置函数</li><li>iterables：可迭代的数据</li></ul></li><li>返回值：迭代器</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 实现一个将 [&#x27;1&#x27;,&#x27;2&#x27;,&#x27;3&#x27;,&#x27;4&#x27;] 转换为===&gt; [1,2,3,4] 的功能</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法一</span></span><br><span class="line">arrlist = [<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;4&#x27;</span>]</span><br><span class="line">newlist = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> arrlist:</span><br><span class="line">    newlist.append(<span class="built_in">int</span>(i))</span><br><span class="line"><span class="built_in">print</span>(newlist)  <span class="comment"># [1, 2, 3, 4]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法二</span></span><br><span class="line">res = <span class="built_in">map</span>(<span class="built_in">int</span>, arrlist)  <span class="comment"># 这里的res是一个可迭代对象</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(res))  <span class="comment"># [1, 2, 3, 4]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 实现一个将 [1,2,3,4] 转换为===&gt; [1,4,9,16] 的功能</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法一</span></span><br><span class="line">arrlist = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">newlist = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> arrlist:</span><br><span class="line">    newlist.append(i ** <span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(newlist)  <span class="comment"># [1, 4, 9, 16]</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法二</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">power</span>(<span class="params">num</span>):</span><br><span class="line">    <span class="keyword">return</span> num ** <span class="number">2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">arrlist = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">res = <span class="built_in">map</span>(power, arrlist)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(res))  <span class="comment"># [1, 4, 9, 16]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法三 优化版</span></span><br><span class="line">arrlist = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">res = <span class="built_in">map</span>(<span class="keyword">lambda</span> x: x ** <span class="number">2</span>, arrlist)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(res))  <span class="comment"># [1, 4, 9, 16]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 实现 [&#x27;a&#x27;,&#x27;b&#x27;,&#x27;c&#x27;,&#x27;d&#x27;] ===&gt; [65,66,67,68]</span></span><br><span class="line">arrlist = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>]</span><br><span class="line">res = <span class="built_in">map</span>(<span class="keyword">lambda</span> x: <span class="built_in">ord</span>(x.upper()), arrlist)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(res))  <span class="comment"># [65, 66, 67, 68]</span></span><br></pre></td></tr></table></figure><h2 id="高阶函数——reduce"><a href="#高阶函数——reduce" class="headerlink" title="高阶函数——reduce()"></a>高阶函数——reduce()</h2><ul><li><strong>reduce(function, sequence[, initial])</strong><ul><li>使用需要导入 from functools import reduce</li></ul></li><li>功能：每一次从 sequence 即一个 iterable 拿出两个元素，放入到 func 函数中进行处理，得出一个计算结果，然后把这个计算结果和 iterable 中的第三个元素，继续放到 func 函数中国进行运算，以此类推，直到所有元素都参与了运算</li><li>参数<ul><li>function 函数：内置函数|自定义函数</li><li>sequence：是一个 iterable，可迭代数据</li></ul></li><li>返回值：最终的运算处理结果</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> reduce</span><br><span class="line"></span><br><span class="line"><span class="comment"># 实现一个对数组内的数字进行求和的功能</span></span><br><span class="line">numlist = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line">res = reduce(<span class="keyword">lambda</span> x, y: x + y, numlist)</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># 15</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 实现这样一个功能，给了数组[5,2,1,1]  ===&gt; 5211</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法一</span></span><br><span class="line">numlist = [<span class="number">5</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>]</span><br><span class="line">num = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> numlist:</span><br><span class="line">    num += <span class="built_in">str</span>(i)</span><br><span class="line">res = <span class="built_in">int</span>(num)</span><br><span class="line"><span class="built_in">print</span>(res, <span class="built_in">type</span>(res))  <span class="comment"># 5211 &lt;class &#x27;int&#x27;&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法二</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func</span>(<span class="params">x, y</span>):</span><br><span class="line">    <span class="keyword">return</span> x * <span class="number">10</span> + y</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">res = reduce(func, numlist)</span><br><span class="line"><span class="built_in">print</span>(res, <span class="built_in">type</span>(res))  <span class="comment"># 5211 &lt;class &#x27;int&#x27;&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法三</span></span><br><span class="line">res = reduce(<span class="keyword">lambda</span> x, y: x * <span class="number">10</span> + y, numlist)</span><br><span class="line"><span class="built_in">print</span>(res, <span class="built_in">type</span>(res))  <span class="comment"># 5211 &lt;class &#x27;int&#x27;&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 把字符串&#x27;456&#x27; ===&gt; 456, 不能使用int</span></span><br><span class="line">num = <span class="string">&#x27;456&#x27;</span></span><br><span class="line">strdict = &#123;<span class="string">&#x27;0&#x27;</span>: <span class="number">0</span>, <span class="string">&#x27;1&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;2&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;3&#x27;</span>: <span class="number">3</span>, <span class="string">&#x27;4&#x27;</span>: <span class="number">4</span>, <span class="string">&#x27;5&#x27;</span>: <span class="number">5</span>, <span class="string">&#x27;6&#x27;</span>: <span class="number">6</span>, <span class="string">&#x27;7&#x27;</span>: <span class="number">7</span>, <span class="string">&#x27;8&#x27;</span>: <span class="number">8</span>, <span class="string">&#x27;9&#x27;</span>: <span class="number">9</span>&#125;</span><br><span class="line">res1 = <span class="built_in">map</span>(<span class="keyword">lambda</span> x: strdict[x], num)</span><br><span class="line">res2 = reduce(<span class="keyword">lambda</span> x, y: x * <span class="number">10</span> + y, res1)</span><br><span class="line"><span class="built_in">print</span>(res2)  <span class="comment"># 456</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 简化版本</span></span><br><span class="line">num = <span class="string">&#x27;456&#x27;</span></span><br><span class="line">strdict = &#123;<span class="string">&#x27;0&#x27;</span>: <span class="number">0</span>, <span class="string">&#x27;1&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;2&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;3&#x27;</span>: <span class="number">3</span>, <span class="string">&#x27;4&#x27;</span>: <span class="number">4</span>, <span class="string">&#x27;5&#x27;</span>: <span class="number">5</span>, <span class="string">&#x27;6&#x27;</span>: <span class="number">6</span>, <span class="string">&#x27;7&#x27;</span>: <span class="number">7</span>, <span class="string">&#x27;8&#x27;</span>: <span class="number">8</span>, <span class="string">&#x27;9&#x27;</span>: <span class="number">9</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(reduce(<span class="keyword">lambda</span> x, y: x * <span class="number">10</span> + y, <span class="built_in">map</span>(<span class="keyword">lambda</span> x: strdict[x], num)))  <span class="comment"># 456</span></span><br></pre></td></tr></table></figure><h2 id="高阶函数——filter"><a href="#高阶函数——filter" class="headerlink" title="高阶函数——filter()"></a>高阶函数——filter()</h2><ul><li><strong>filter(func,iterable)</strong></li><li>功能：过滤数据，将 iterable 中的每个元素拿到 fun 函数中进行处理，如果函数返回 True 则保留这个数据，返回 False 则，丢弃这个数据</li><li>参数<ul><li>func 函数：自定义函数|内置函数</li><li>iterable：可迭代的数据</li></ul></li><li>返回值：保留下来的迭代器数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 实现 保留所有偶数，丢弃所有奇数的功能</span></span><br><span class="line">numlist = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]</span><br><span class="line">res = <span class="built_in">filter</span>(<span class="keyword">lambda</span> x: <span class="literal">True</span> <span class="keyword">if</span> x % <span class="number">2</span> == <span class="number">0</span> <span class="keyword">else</span> <span class="literal">False</span>, numlist)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(res))</span><br></pre></td></tr></table></figure><blockquote><p>更新: 2024-01-16 03:26:11<br>原文: <a href="https://www.yuque.com/zacharyblock/cx2om6/iygqmxqyo52f37yc">https://www.yuque.com/zacharyblock/cx2om6/iygqmxqyo52f37yc</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Python基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python基础-容器</title>
      <link href="/2022/12/31/Python%E5%9F%BA%E7%A1%80/%E5%AE%B9%E5%99%A8/"/>
      <url>/2022/12/31/Python%E5%9F%BA%E7%A1%80/%E5%AE%B9%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="容器"><a href="#容器" class="headerlink" title="容器"></a>容器</h1><h1 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h1><ul><li>回顾字符串的定义方式</li><li>了解转义字符</li><li>字符串相关的运算</li><li>字符串相关函数</li><li>字符串格式化的方法</li></ul><h2 id="详解字符串-转义字符"><a href="#详解字符串-转义字符" class="headerlink" title="详解字符串-转义字符"></a>详解字符串-转义字符</h2><h3 id="字符串的定义方式"><a href="#字符串的定义方式" class="headerlink" title="字符串的定义方式"></a>字符串的定义方式</h3><ol><li>单引号’’</li><li>双引号定义字符串””</li><li>三引号定义字符串’’’’’’或者””””””</li><li>字符串定义时，引号可以互相嵌套</li></ol><h3 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h3><p>一个普通的字符出现在转义符\后面时候，实现了另一种意义</p><ul><li>\ 转义符，续行符。<ul><li>作为转义符时，在\后面出现的字符可能会实现另外一种意义</li><li>作为续行符时，在行尾使用了\后，可以继续换行书写内容</li></ul></li><li>\n 代表换行</li><li>\r \r 代表光标的位置，从\r 出现的位置作为光标的起点</li><li>\t 水平制表符</li><li>\b 退格符</li><li>\ 就是打出一个单独的\</li><li>r 在字符串前＋ r 可以取消转义符的效果，原文字输出</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># \ 作为续行符</span></span><br><span class="line">var = <span class="string">&quot;123&quot;</span> \</span><br><span class="line">      <span class="string">&quot;456&quot;</span> \</span><br><span class="line">      <span class="string">&quot;789&quot;</span></span><br><span class="line"><span class="built_in">print</span>(var)  <span class="comment"># 123456789  打印结果仍旧是一行</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># \ 作为转义符</span></span><br><span class="line">var = <span class="string">&quot;你要多耐心一点，美好的事物通常来的都慢一些&quot;</span></span><br><span class="line"><span class="built_in">print</span>(var)  <span class="comment"># 你要多耐心一点，美好的事物通常来的都慢一些</span></span><br><span class="line"></span><br><span class="line">var = <span class="string">&quot;你要多耐心一点，\n美好的事物通常来的都慢一些&quot;</span></span><br><span class="line"><span class="built_in">print</span>(var)</span><br><span class="line"><span class="comment"># 你要多耐心一点，</span></span><br><span class="line"><span class="comment"># 美好的事物通常来的都慢一些</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">var = <span class="string">&quot;你要多耐心一点，\r美好的事物通常来的都慢一些&quot;</span></span><br><span class="line"><span class="built_in">print</span>(var)  <span class="comment"># 美好的事物通常来的都慢一些</span></span><br><span class="line"></span><br><span class="line">var = <span class="string">&quot;你要多耐心一点，\t美好的事物通常来的都慢一些&quot;</span></span><br><span class="line"><span class="built_in">print</span>(var)  <span class="comment"># 你要多耐心一点，  美好的事物通常来的都慢一些</span></span><br><span class="line"></span><br><span class="line">var = <span class="string">&quot;你要多耐心一点，\b美好的事物通常来的都慢一些&quot;</span></span><br><span class="line"><span class="built_in">print</span>(var)  <span class="comment"># 你要多耐心一点美好的事物通常来的都慢一些</span></span><br><span class="line"></span><br><span class="line">var = <span class="string">&quot;abcde\\nabcde&quot;</span></span><br><span class="line"><span class="built_in">print</span>(var)  <span class="comment"># abcde\nabcde</span></span><br><span class="line"></span><br><span class="line">var = <span class="string">r&quot;abcde\nabcde&quot;</span></span><br><span class="line"><span class="built_in">print</span>(var)  <span class="comment"># abcde\nabcde</span></span><br></pre></td></tr></table></figure><h2 id="字符串相关操作"><a href="#字符串相关操作" class="headerlink" title="字符串相关操作"></a>字符串相关操作</h2><ul><li>字符串 +操作： 加法在字符串之间起到拼接作用</li><li>字符串 *操作：乘法与字符串使用，会重复指定倍数的字符串</li><li>字符串 []切片操作：只能使用[]下标的方式访问，但是不能修改</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 加法在字符串之间起到拼接作用</span></span><br><span class="line">vara = <span class="string">&quot;你要稍微等一等,&quot;</span></span><br><span class="line">varb = <span class="string">&quot;美好的事物都来得慢一些&quot;</span></span><br><span class="line">res = vara + varb</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># 你要稍微等一等,美好的事物都来得慢一些</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 乘法操作</span></span><br><span class="line">var = <span class="string">&quot;虎年大吉，&quot;</span> * <span class="number">3</span></span><br><span class="line"><span class="built_in">print</span>(var)  <span class="comment"># 虎年大吉，虎年大吉，虎年大吉，</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 切片操作</span></span><br><span class="line"><span class="built_in">print</span>(res[<span class="number">4</span>:<span class="number">7</span>])  <span class="comment"># 等一等</span></span><br><span class="line"><span class="built_in">print</span>(res[<span class="number">8</span>:<span class="number">10</span>])  <span class="comment"># 美好</span></span><br><span class="line"><span class="built_in">print</span>(res[::<span class="number">2</span>])  <span class="comment"># 你稍等等美的物来慢些</span></span><br><span class="line"><span class="built_in">print</span>(res[::-<span class="number">1</span>])  <span class="comment"># 些一慢得来都物事的好美,等一等微稍要你</span></span><br></pre></td></tr></table></figure><h2 id="字符串格式化"><a href="#字符串格式化" class="headerlink" title="字符串格式化"></a>字符串格式化</h2><p>format() 格式化字符串 f 方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 普通方式</span></span><br><span class="line">name = <span class="string">&quot;duanduan&quot;</span></span><br><span class="line">money = <span class="number">10</span></span><br><span class="line">sen = <span class="string">&quot;今天&#123;&#125;花了&#123;&#125;块钱💰&quot;</span>.<span class="built_in">format</span>(name, money)</span><br><span class="line"><span class="built_in">print</span>(sen)  <span class="comment"># 今天duanduan花了10块钱💰</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过索引的方法</span></span><br><span class="line">sen = <span class="string">&quot;今天&#123;1&#125;花了&#123;2&#125;块钱💰&quot;</span>.<span class="built_in">format</span>(<span class="literal">None</span>, name, money)</span><br><span class="line"><span class="built_in">print</span>(sen)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关键字传参</span></span><br><span class="line">sen = <span class="string">&quot;今天&#123;who&#125;花了&#123;how&#125;块钱💰&quot;</span>.<span class="built_in">format</span>(who=name, how=money)</span><br><span class="line"><span class="built_in">print</span>(sen)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 容器类型数据传参</span></span><br><span class="line">d = <span class="string">&quot;duanduan:&#123;&#125;,huanghuang:&#123;&#125;,tutu:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="string">&quot;小猪&quot;</span>, <span class="string">&quot;大猪&quot;</span>, <span class="string">&quot;小懒猪&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(d)  <span class="comment"># duanduan:小猪,huanghuang:大猪,tutu:小懒猪</span></span><br><span class="line"></span><br><span class="line">d = <span class="string">&quot;duanduan:&#123;&#125;,huanghuang:&#123;&#125;,tutu:&#123;&#125;&quot;</span>.<span class="built_in">format</span>([<span class="string">&quot;小猪&quot;</span>], [<span class="string">&quot;大猪&quot;</span>], [<span class="string">&quot;小懒猪&quot;</span>])</span><br><span class="line"><span class="built_in">print</span>(d)  <span class="comment"># duanduan:[&#x27;小猪&#x27;],huanghuang:[&#x27;大猪&#x27;],tutu:[&#x27;小懒猪&#x27;]</span></span><br><span class="line"></span><br><span class="line">d = <span class="string">&quot;duanduan:&#123;0[0]&#125;,huanghuang:&#123;0[1]&#125;,tutu:&#123;0[2]&#125;&quot;</span>.<span class="built_in">format</span>([<span class="string">&quot;小猪&quot;</span>, <span class="string">&quot;大猪&quot;</span>, <span class="string">&quot;小懒猪&quot;</span>])</span><br><span class="line"><span class="built_in">print</span>(d)  <span class="comment"># duanduan:小猪,huanghuang:大猪,tutu:小懒猪</span></span><br><span class="line"></span><br><span class="line">data = &#123;<span class="string">&quot;who&quot;</span>: <span class="string">&quot;duanduan&quot;</span>, <span class="string">&quot;how&quot;</span>: <span class="string">&quot;10&quot;</span>&#125;</span><br><span class="line">sen = <span class="string">&quot;今天&#123;who&#125;花了&#123;how&#125;块钱💰&quot;</span>.<span class="built_in">format</span>(**data)</span><br><span class="line"><span class="built_in">print</span>(sen)  <span class="comment"># 今天duanduan花了10块钱💰</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 新增的格式化方法 f 方法</span></span><br><span class="line">sen = <span class="string">f&quot;今天<span class="subst">&#123;name&#125;</span>花了<span class="subst">&#123;money&#125;</span>块钱💰&quot;</span></span><br><span class="line"><span class="built_in">print</span>(sen)  <span class="comment"># 今天duanduan花了10块钱💰</span></span><br><span class="line"></span><br><span class="line">sen = <span class="string">f&#x27;今天<span class="subst">&#123;data[<span class="string">&quot;who&quot;</span>]&#125;</span>花了<span class="subst">&#123;data[<span class="string">&quot;how&quot;</span>]&#125;</span>块钱💰&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(sen)  <span class="comment"># 今天duanduan花了10块钱💰</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 限定小数位数</span></span><br><span class="line">pi = <span class="number">3.1415926</span></span><br><span class="line">var = <span class="string">f&quot;圆周率是多少：<span class="subst">&#123;pi:<span class="number">.5</span>f&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">print</span>(var) <span class="comment"># 圆周率是多少：3.14159</span></span><br></pre></td></tr></table></figure><h2 id="英文字符与字符检测相关函数"><a href="#英文字符与字符检测相关函数" class="headerlink" title="英文字符与字符检测相关函数"></a>英文字符与字符检测相关函数</h2><ul><li>大小写转换<ul><li>str.capitalize() 返回原字符串的副本，首个字符大写，其余为小写</li><li>str.title() 返回原字符串的副本，每一个英文单词的首个字符大写，其余为小写</li><li>str.upper() 将字符串中的英文全部转化为大写</li><li>str.lower() 将字符串中的英文全部转化为小写</li><li>str.swapcase() 将字符串中的英文大小写互换</li></ul></li><li>字符检测<ul><li>str.isupper() 检查字符串是否都是大写</li><li>str.islower() 检查字符串是否都是小写</li><li>str.istitle() 检查字符串是否符合 title</li><li>str.isalnum() 检测当前字符串是否由字符(中文、英文、数字)组成。</li><li>str.isalpha() 检测当前字符串是否由字符(中文、英文)组成，不包含数字。</li><li>str.isdigit() 检测当前字符串是否纯数字</li><li>str.isspace() 检测当前字符串是否纯空格</li><li>str.startswith() 检测当前字符串是否由指定字符开头，可以指定开始和结束的位置</li><li>str.endswith() 检测当前字符串是否由指定字符结尾，可以指定开始和结束的位置</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 大小写转换</span></span><br><span class="line">sen = <span class="string">&quot;duanDuan is a liTTle pig&quot;</span></span><br><span class="line"><span class="built_in">print</span>(sen.capitalize())  <span class="comment"># Duanduan is a little pig</span></span><br><span class="line"><span class="built_in">print</span>(sen.title())  <span class="comment"># Duanduan Is A Little Pig</span></span><br><span class="line"><span class="built_in">print</span>(sen.upper())  <span class="comment"># DUANDUAN IS A LITTLE PIG</span></span><br><span class="line"><span class="built_in">print</span>(sen.lower())  <span class="comment"># duanduan is a little pig</span></span><br><span class="line"><span class="built_in">print</span>(sen.swapcase())  <span class="comment"># DUANdUAN IS A LIttLE PIG</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 字符检测</span></span><br><span class="line">up = <span class="string">&quot;DUANDUAN&quot;</span></span><br><span class="line">lo = <span class="string">&quot;duanduan&quot;</span></span><br><span class="line">nu = <span class="string">&quot;123&quot;</span></span><br><span class="line">mix = <span class="string">&quot;word123&quot;</span></span><br><span class="line"><span class="built_in">print</span>(sen.isupper())  <span class="comment"># False</span></span><br><span class="line"><span class="built_in">print</span>(up.isupper())  <span class="comment"># True</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(sen.islower())  <span class="comment"># False</span></span><br><span class="line"><span class="built_in">print</span>(lo.islower())  <span class="comment"># True</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(sen.istitle())  <span class="comment"># False</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(sen.isalnum())  <span class="comment"># False</span></span><br><span class="line"><span class="built_in">print</span>(up.isalnum())  <span class="comment"># True</span></span><br><span class="line"><span class="built_in">print</span>(lo.isalnum())  <span class="comment"># True</span></span><br><span class="line"><span class="built_in">print</span>(nu.isalnum())  <span class="comment"># True</span></span><br><span class="line"><span class="built_in">print</span>(mix.isalnum())  <span class="comment"># True</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(sen.isalpha())  <span class="comment"># False</span></span><br><span class="line"><span class="built_in">print</span>(up.isalpha())  <span class="comment"># True</span></span><br><span class="line"><span class="built_in">print</span>(lo.isalpha())  <span class="comment"># True</span></span><br><span class="line"><span class="built_in">print</span>(nu.isalpha())  <span class="comment"># False</span></span><br><span class="line"><span class="built_in">print</span>(mix.isalpha())  <span class="comment"># False</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(sen.isdigit())  <span class="comment"># False</span></span><br><span class="line"><span class="built_in">print</span>(up.isdigit())  <span class="comment"># False</span></span><br><span class="line"><span class="built_in">print</span>(lo.isdigit())  <span class="comment"># False</span></span><br><span class="line"><span class="built_in">print</span>(nu.isdigit())  <span class="comment"># True</span></span><br><span class="line"><span class="built_in">print</span>(mix.isdigit())  <span class="comment"># False</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(sen.isspace())  <span class="comment"># False</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot; &quot;</span>.isspace())  <span class="comment"># True</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(sen.startswith(<span class="string">&quot;d&quot;</span>))  <span class="comment"># True</span></span><br><span class="line"><span class="built_in">print</span>(sen.startswith(<span class="string">&quot;D&quot;</span>))  <span class="comment"># False</span></span><br><span class="line"><span class="built_in">print</span>(sen.startswith(<span class="string">&quot;n&quot;</span>, <span class="number">3</span>))  <span class="comment"># True</span></span><br><span class="line"><span class="built_in">print</span>(sen.startswith(<span class="string">&quot;n&quot;</span>, <span class="number">3</span>, <span class="number">8</span>))  <span class="comment"># True</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(sen.endswith(<span class="string">&quot;u&quot;</span>))  <span class="comment"># False</span></span><br><span class="line"><span class="built_in">print</span>(sen.endswith(<span class="string">&quot;g&quot;</span>))  <span class="comment"># True</span></span><br><span class="line"><span class="built_in">print</span>(sen.endswith(<span class="string">&quot;pig&quot;</span>))  <span class="comment"># True</span></span><br><span class="line"><span class="built_in">print</span>(sen.endswith(<span class="string">&quot;pig&quot;</span>, <span class="number">3</span>, <span class="number">24</span>))  <span class="comment"># True</span></span><br></pre></td></tr></table></figure><h2 id="字符串查找相关函数"><a href="#字符串查找相关函数" class="headerlink" title="字符串查找相关函数"></a>字符串查找相关函数</h2><ul><li>str.find(sub[,start[,end]]) 从左向右获取指定字符在字符串中的索引位置，未找到则返回-1</li><li>str.rfind(sub[,start[,end]]) 从右向左获取指定字符在字符串中的索引位置，未找到则返回-1</li><li>str.index() 和 find 方法一样，只不过如果没有找到则报错</li><li>str.rindex() 从右往左找，如果没有找到则报错</li><li>str.count() 计算一个字符串出现的次数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">sen = <span class="string">&quot;duanduanispig,littlepig&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(sen.find(<span class="string">&quot;pig&quot;</span>))  <span class="comment"># 10</span></span><br><span class="line"><span class="built_in">print</span>(sen.find(<span class="string">&quot;pig&quot;</span>, <span class="number">14</span>, <span class="number">23</span>))  <span class="comment"># 20</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(sen.rfind(<span class="string">&quot;pig&quot;</span>))  <span class="comment"># 20</span></span><br><span class="line"><span class="built_in">print</span>(sen.rfind(<span class="string">&quot;pig&quot;</span>, <span class="number">0</span>, <span class="number">14</span>))  <span class="comment"># 10</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(sen.index(<span class="string">&quot;pig&quot;</span>))  <span class="comment"># 10</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="built_in">print</span>(sen.index(<span class="string">&quot;help&quot;</span>))  <span class="comment"># ValueError: substring not found</span></span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;ValueError: substring not found&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(sen.rindex(<span class="string">&quot;pig&quot;</span>))  <span class="comment"># 20</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="built_in">print</span>(sen.rindex(<span class="string">&quot;help&quot;</span>))  <span class="comment"># ValueError: substring not found</span></span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;ValueError: substring not found&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(sen.count(<span class="string">&quot;duan&quot;</span>))  <span class="comment"># 2</span></span><br><span class="line"><span class="built_in">print</span>(sen.count(<span class="string">&quot;u&quot;</span>))  <span class="comment"># 2</span></span><br><span class="line"><span class="built_in">print</span>(sen.count(<span class="string">&quot;i&quot;</span>))  <span class="comment"># 4</span></span><br></pre></td></tr></table></figure><h2 id="字符串操作相关函数"><a href="#字符串操作相关函数" class="headerlink" title="字符串操作相关函数"></a>字符串操作相关函数</h2><ul><li>str.split() 按照指定的字符进行分隔，把一个字符串分隔成一个列表，可以指定分隔的次数</li><li>str.rsplit() 按照指定的字符进行分隔，把一个字符串分隔成一个列表，同样可以指定分割的次数</li><li>str.join() 按照指定的字符 str，把容器类型中的数据连接成一个字符串</li><li>str.strip() 去除字符串左右两侧的指定字符</li><li>str.lstrip() 去除字符串左侧的指定字符</li><li>str.rstrip() 去除字符串右侧的指定字符</li><li>str.replace(new,old) 用 new 替换掉 str 中的 old,可以指定替换的次数</li><li>str.center() 给 str 的左右增加指定字符</li><li>str.ljust() 字符串按照指定位数向左对齐，右侧不够的补充指定字符</li><li>str.rjust() 同上，向右对齐</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">sen = <span class="string">&quot;duanduanisalittlepig&quot;</span></span><br><span class="line"><span class="built_in">print</span>(sen.split(<span class="string">&quot;i&quot;</span>))  <span class="comment"># [&#x27;duanduan&#x27;, &#x27;sal&#x27;, &#x27;ttlep&#x27;, &#x27;g&#x27;]</span></span><br><span class="line"></span><br><span class="line">word = <span class="string">&quot;duanduan_is_a_little_piggy&quot;</span></span><br><span class="line"><span class="built_in">print</span>(word.split(<span class="string">&quot;_&quot;</span>))  <span class="comment"># [&#x27;duanduan&#x27;, &#x27;is&#x27;, &#x27;a&#x27;, &#x27;little&#x27;, &#x27;piggy&#x27;]</span></span><br><span class="line"><span class="built_in">print</span>(word.split(<span class="string">&quot;_&quot;</span>, <span class="number">2</span>))  <span class="comment"># [&#x27;duanduan&#x27;, &#x27;is&#x27;, &#x27;a_little_piggy&#x27;]</span></span><br><span class="line"><span class="built_in">print</span>(word.rsplit(<span class="string">&quot;_&quot;</span>))  <span class="comment"># [&#x27;duanduan&#x27;, &#x27;is&#x27;, &#x27;a&#x27;, &#x27;little&#x27;, &#x27;piggy&#x27;]</span></span><br><span class="line"><span class="built_in">print</span>(word.rsplit(<span class="string">&quot;_&quot;</span>, <span class="number">2</span>))  <span class="comment"># [&#x27;duanduan_is_a&#x27;, &#x27;little&#x27;, &#x27;piggy&#x27;]</span></span><br><span class="line"></span><br><span class="line">li = [<span class="string">&#x27;user&#x27;</span>, <span class="string">&#x27;duan&#x27;</span>, <span class="string">&#x27;pet&#x27;</span>, <span class="string">&#x27;tu&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;_&quot;</span>.join(li))  <span class="comment"># user_duan_pet_tu</span></span><br><span class="line"></span><br><span class="line">word = <span class="string">&quot;      Hello piggy this is tutu     &quot;</span></span><br><span class="line"><span class="built_in">print</span>(word.strip())  <span class="comment"># Hello piggy this is tutu</span></span><br><span class="line"></span><br><span class="line">old = <span class="string">&quot;新年快乐&quot;</span></span><br><span class="line">new = old.replace(<span class="string">&quot;快乐&quot;</span>, <span class="string">&quot;大吉&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(new)  <span class="comment"># 新年大吉</span></span><br><span class="line"></span><br><span class="line">word = <span class="string">&quot;piggy&quot;</span></span><br><span class="line"><span class="built_in">print</span>(word.center(<span class="number">10</span>))  <span class="comment">#   piggy</span></span><br><span class="line"><span class="built_in">print</span>(word.center(<span class="number">10</span>, <span class="string">&quot;*&quot;</span>))  <span class="comment"># **piggy***</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(word.ljust(<span class="number">10</span>, <span class="string">&#x27;*&#x27;</span>))  <span class="comment"># piggy*****</span></span><br><span class="line"><span class="built_in">print</span>(word.rjust(<span class="number">10</span>, <span class="string">&#x27;*&#x27;</span>))  <span class="comment"># *****piggy</span></span><br></pre></td></tr></table></figure><h1 id="列表详解"><a href="#列表详解" class="headerlink" title="列表详解"></a>列表详解</h1><p>列表就是一组有序的数据组合，列表中的数据可以被修改</p><h2 id="列表定义与基本操作"><a href="#列表定义与基本操作" class="headerlink" title="列表定义与基本操作"></a>列表定义与基本操作</h2><h3 id="列表的定义"><a href="#列表的定义" class="headerlink" title="列表的定义"></a>列表的定义</h3><ul><li>可以使用中括号定义 []</li><li>可以使用 list 函数定义</li><li>在定义列表中的元素时，需要在每个元素之间使用逗号，进行分割。</li><li>列表中的元素可以是任意类型，通常存放同类型的</li></ul><h3 id="列表的基本操作"><a href="#列表的基本操作" class="headerlink" title="列表的基本操作"></a>列表的基本操作</h3><ul><li>使用+可以对两个列表进行拼接</li><li>使用*实现列表元素的重复</li><li>使用 in 判断列表中是否存在某元素</li><li>列表的索引操作<ul><li>通过下标获取指定的元素</li><li>通过下标修改元素</li><li>不能通过下标添加元素</li></ul></li><li>append()：可以用于向列表中追加元素</li><li>len()：获取列表的长度</li><li>列表元素的删除<ul><li>del 可以用于通过指定下标删除元素</li><li>pop()：可以使用 pop 方法出栈来删除最后一个元素</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">varlist1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">varlist2 = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>]</span><br><span class="line"></span><br><span class="line">res = varlist1 + varlist2</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># [1, 2, 3, 4, &#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;, &#x27;d&#x27;]</span></span><br><span class="line"></span><br><span class="line">res = varlist1 * <span class="number">3</span></span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># [1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4]</span></span><br><span class="line"></span><br><span class="line">res = <span class="number">1</span> <span class="keyword">in</span> varlist1</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># True</span></span><br><span class="line"></span><br><span class="line">varlist1.append(<span class="number">5</span>)</span><br><span class="line"><span class="built_in">print</span>(varlist1)  <span class="comment"># [1, 2, 3, 4, 5]</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(varlist1)  <span class="comment"># [1, 2, 3, 4, 5]</span></span><br><span class="line"><span class="keyword">del</span> varlist1[<span class="number">3</span>]</span><br><span class="line"><span class="built_in">print</span>(varlist1)  <span class="comment"># [1, 2, 3, 5]</span></span><br><span class="line">res = varlist1.pop()</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># 5</span></span><br><span class="line"><span class="built_in">print</span>(varlist1)  <span class="comment"># [1, 2, 3]</span></span><br></pre></td></tr></table></figure><h2 id="列表切片操作"><a href="#列表切片操作" class="headerlink" title="列表切片操作"></a>列表切片操作</h2><p>列表[开始索引:结束索引:步进值]</p><ul><li>列表[开始索引:] 从开始索引到列表的最后</li><li>列表[:结束索引] 从开始到结束索引的前一个</li><li>列表[开始索引:结束索引] 从开始索引到结束索引的前一个</li><li>列表[开始索引:结束索引:步进值] 带有步进值的从开始到结束前一个</li><li>列表[:] 列表全部数据</li><li>列表[::] 列表全部数据</li><li>列表[::-1] 列表逆序输出</li></ul><p>使用切片的方法进行列表的数据更新和删除</p><ul><li>从指定下标开始到指定下标结束前，替换为想要的对应的<strong>容器类型</strong></li><li>使用 del 进行切片删除</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">varlist = [<span class="string">&#x27;Kobe&#x27;</span>, <span class="string">&#x27;James&#x27;</span>, <span class="string">&#x27;Curry&#x27;</span>, <span class="string">&#x27;Tony&#x27;</span>, <span class="string">&#x27;Irving&#x27;</span>, <span class="string">&#x27;Thompson&#x27;</span>, <span class="string">&#x27;Harden&#x27;</span>]</span><br><span class="line"></span><br><span class="line">res = varlist[<span class="number">2</span>:]</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># [&#x27;Curry&#x27;, &#x27;Tony&#x27;, &#x27;Irving&#x27;, &#x27;Thompson&#x27;, &#x27;Harden&#x27;]</span></span><br><span class="line"></span><br><span class="line">res = varlist[:<span class="number">2</span>]</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># [&#x27;Kobe&#x27;, &#x27;James&#x27;]</span></span><br><span class="line"></span><br><span class="line">res = varlist[<span class="number">2</span>:<span class="number">6</span>]</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># [&#x27;Curry&#x27;, &#x27;Tony&#x27;, &#x27;Irving&#x27;, &#x27;Thompson&#x27;]</span></span><br><span class="line"></span><br><span class="line">res = varlist[<span class="number">2</span>:<span class="number">6</span>:<span class="number">2</span>]</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># [&#x27;Curry&#x27;, &#x27;Irving&#x27;]</span></span><br><span class="line"></span><br><span class="line">varlist[<span class="number">3</span>:<span class="number">6</span>] = [<span class="string">&#x27;All star&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(varlist)  <span class="comment"># [&#x27;Kobe&#x27;, &#x27;James&#x27;, &#x27;Curry&#x27;, &#x27;All star&#x27;, &#x27;Harden&#x27;]</span></span><br></pre></td></tr></table></figure><h2 id="列表的相关函数"><a href="#列表的相关函数" class="headerlink" title="列表的相关函数"></a>列表的相关函数</h2><ul><li>len() ：使用 len 方法可以计算出列表的长度</li><li>count() ：count 方法可以检测具体某个元素出现了多少次</li><li>append() ：append 方法可以在列表尾部追加元素</li><li>insert(i,x) ：在 i 索引位置，插入 x</li><li>pop() ：默认出栈一个最末尾的元素,也可以指定索引进行出栈</li><li>remove() ：可以指定列表中的<strong>元素</strong>进行删除，如果<strong>元素</strong>不存在会报错</li><li>index() ：可以查找列表中元素第一次出现的索引</li><li>extend() ：可以将另一个列表扩展到原来的列表上，类似于+</li><li>clear() ：清空列表中的元素</li><li>reverse() ：逆序列表</li><li>sort() ：对列表排序，默认由小到大排序<ul><li>若 reverse&#x3D;True，则按照由大到小排序</li><li>若 key&#x3D;func，则按照函数处理结果进行排序</li></ul></li><li>copy() ：可以拷贝一个列表,但是如果执行修改操作，del 会对多维列表同时修改</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">varlist = [<span class="string">&#x27;Kobe&#x27;</span>, <span class="string">&#x27;James&#x27;</span>, <span class="string">&#x27;Curry&#x27;</span>, <span class="string">&#x27;Tony&#x27;</span>, <span class="string">&#x27;Irving&#x27;</span>, <span class="string">&#x27;Thompson&#x27;</span>, <span class="string">&#x27;Harden&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(varlist))  <span class="comment"># 7</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(varlist.count(<span class="string">&#x27;Curry&#x27;</span>))  <span class="comment"># 1</span></span><br><span class="line"></span><br><span class="line">varlist.append(<span class="string">&#x27;new star&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(varlist)  <span class="comment"># [&#x27;Kobe&#x27;, &#x27;James&#x27;, &#x27;Curry&#x27;, &#x27;Tony&#x27;, &#x27;Irving&#x27;, &#x27;Thompson&#x27;, &#x27;Harden&#x27;, &#x27;new star&#x27;]</span></span><br><span class="line"></span><br><span class="line">varlist.insert(<span class="number">1</span>, <span class="string">&#x27;Pony&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(varlist)  <span class="comment"># [&#x27;Kobe&#x27;, &#x27;Pony&#x27;, &#x27;James&#x27;, &#x27;Curry&#x27;, &#x27;Tony&#x27;, &#x27;Irving&#x27;, &#x27;Thompson&#x27;, &#x27;Harden&#x27;, &#x27;new star&#x27;]</span></span><br><span class="line"></span><br><span class="line">res = varlist.pop()</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># new star</span></span><br><span class="line"><span class="built_in">print</span>(varlist)  <span class="comment"># [&#x27;Kobe&#x27;, &#x27;Pony&#x27;, &#x27;James&#x27;, &#x27;Curry&#x27;, &#x27;Tony&#x27;, &#x27;Irving&#x27;, &#x27;Thompson&#x27;, &#x27;Harden&#x27;]</span></span><br><span class="line"></span><br><span class="line">varlist.remove(<span class="string">&#x27;Tony&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(varlist)  <span class="comment"># [&#x27;Kobe&#x27;, &#x27;Pony&#x27;, &#x27;James&#x27;, &#x27;Curry&#x27;, &#x27;Irving&#x27;, &#x27;Thompson&#x27;, &#x27;Harden&#x27;]</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(varlist.index(<span class="string">&#x27;Curry&#x27;</span>))  <span class="comment"># 3</span></span><br><span class="line"></span><br><span class="line">temp = [<span class="string">&#x27;nobody&#x27;</span>, <span class="string">&#x27;somebody&#x27;</span>]</span><br><span class="line">varlist.extend(temp)</span><br><span class="line"><span class="built_in">print</span>(varlist)  <span class="comment"># [&#x27;Kobe&#x27;, &#x27;Pony&#x27;, &#x27;James&#x27;, &#x27;Curry&#x27;, &#x27;Irving&#x27;, &#x27;Thompson&#x27;, &#x27;Harden&#x27;, &#x27;nobody&#x27;, &#x27;somebody&#x27;]</span></span><br><span class="line"></span><br><span class="line">varlist.clear()</span><br><span class="line"><span class="built_in">print</span>(varlist)  <span class="comment"># []</span></span><br><span class="line"></span><br><span class="line">varlist = [<span class="string">&#x27;Kobe&#x27;</span>, <span class="string">&#x27;James&#x27;</span>, <span class="string">&#x27;Curry&#x27;</span>, <span class="string">&#x27;Tony&#x27;</span>, <span class="string">&#x27;Irving&#x27;</span>, <span class="string">&#x27;Thompson&#x27;</span>, <span class="string">&#x27;Harden&#x27;</span>]</span><br><span class="line">varlist.reverse()</span><br><span class="line"><span class="built_in">print</span>(varlist)  <span class="comment"># [&#x27;Harden&#x27;, &#x27;Thompson&#x27;, &#x27;Irving&#x27;, &#x27;Tony&#x27;, &#x27;Curry&#x27;, &#x27;James&#x27;, &#x27;Kobe&#x27;]</span></span><br><span class="line"></span><br><span class="line">varlist.sort()</span><br><span class="line"><span class="built_in">print</span>(varlist)  <span class="comment"># [&#x27;Curry&#x27;, &#x27;Harden&#x27;, &#x27;Irving&#x27;, &#x27;James&#x27;, &#x27;Kobe&#x27;, &#x27;Thompson&#x27;, &#x27;Tony&#x27;]\</span></span><br><span class="line">var = [<span class="number">6</span>, <span class="number">8</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">7</span>]</span><br><span class="line">var.sort()</span><br><span class="line"><span class="built_in">print</span>(var)  <span class="comment"># [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]</span></span><br><span class="line"></span><br><span class="line">var = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line">var_val = var.copy()</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">id</span>(var), <span class="built_in">id</span>(var_val))  <span class="comment"># 4494320416 4493079008</span></span><br><span class="line"><span class="keyword">del</span> var[<span class="number">4</span>]</span><br><span class="line"><span class="built_in">print</span>(var)  <span class="comment"># [1, 2, 3, 4]</span></span><br><span class="line"><span class="built_in">print</span>(var_val)  <span class="comment"># [1, 2, 3, 4, 5]</span></span><br><span class="line"></span><br><span class="line">var = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, [<span class="number">4</span>, <span class="number">5</span>]]</span><br><span class="line">var_val = var.copy()</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">id</span>(var), <span class="built_in">id</span>(var_val))  <span class="comment"># 4559934480 4558631712</span></span><br><span class="line"><span class="keyword">del</span> var[<span class="number">3</span>][<span class="number">1</span>]</span><br><span class="line"><span class="built_in">print</span>(var)  <span class="comment"># [1, 2, 3, [4]]</span></span><br><span class="line"><span class="built_in">print</span>(var_val)  <span class="comment"># [1, 2, 3, [4]]</span></span><br></pre></td></tr></table></figure><h2 id="深拷贝与浅拷贝"><a href="#深拷贝与浅拷贝" class="headerlink" title="深拷贝与浅拷贝"></a>深拷贝与浅拷贝</h2><ul><li>浅拷贝<ul><li>使用的是 copy()方法</li><li>对一维列表拷贝后，与原来的列表是不同的，单独做出修改不会影响另一列表</li><li>但是如果是多维列表，使用浅拷贝之后，对多维部分进行修改，所有的都会改变</li></ul></li><li>深拷贝<ul><li>使用的是 copy 模块下的 deepcopy()</li><li>深拷贝下的拷贝列表，是完全独立的</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> copy</span><br><span class="line"></span><br><span class="line">varlist = [<span class="number">1</span>, <span class="number">2</span>, [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]]</span><br><span class="line">newlist = varlist.copy()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(varlist)  <span class="comment"># [1, 2, [3, 4, 5]]</span></span><br><span class="line"><span class="built_in">print</span>(newlist)  <span class="comment"># [1, 2, [3, 4, 5]]</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">id</span>(varlist) == <span class="built_in">id</span>(newlist))  <span class="comment"># False</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">id</span>(varlist[<span class="number">2</span>]) == <span class="built_in">id</span>(newlist[<span class="number">2</span>]))  <span class="comment"># True</span></span><br><span class="line"><span class="keyword">del</span> varlist[<span class="number">2</span>][<span class="number">0</span>]</span><br><span class="line"><span class="built_in">print</span>(varlist)  <span class="comment"># [1, 2, [4, 5]]</span></span><br><span class="line"><span class="built_in">print</span>(newlist)  <span class="comment"># [1, 2, [4, 5]]</span></span><br><span class="line"></span><br><span class="line">varlist = [<span class="number">1</span>, <span class="number">2</span>, [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]]</span><br><span class="line">newlist = copy.deepcopy(varlist)</span><br><span class="line"><span class="built_in">print</span>(varlist)  <span class="comment"># [1, 2, [3, 4, 5]]</span></span><br><span class="line"><span class="built_in">print</span>(newlist)  <span class="comment"># [1, 2, [3, 4, 5]]</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">id</span>(varlist) == <span class="built_in">id</span>(newlist))  <span class="comment"># False</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">id</span>(varlist[<span class="number">2</span>]) == <span class="built_in">id</span>(newlist[<span class="number">2</span>]))  <span class="comment"># False</span></span><br><span class="line"><span class="keyword">del</span> varlist[<span class="number">2</span>][<span class="number">0</span>]</span><br><span class="line"><span class="built_in">print</span>(varlist)  <span class="comment"># [1, 2, [4, 5]]</span></span><br><span class="line"><span class="built_in">print</span>(newlist)  <span class="comment"># [1, 2, [3, 4, 5]]</span></span><br></pre></td></tr></table></figure><h2 id="列表推导式"><a href="#列表推导式" class="headerlink" title="列表推导式"></a>列表推导式</h2><p>列表推导式提供了一个更简单的创建列表的方法。常见的用法是把某种操作应用于序列或者可迭代对象的每个元素上，然后使用其结果来创建列表，或者通过满足某些特定条件元素来创造子序列</p><ul><li>常用方法</li><li>list &#x3D; [想要的处理方式 for i in 容器类型数据 条件表达式]</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建0-9的平方列表</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 普通方法</span></span><br><span class="line">varlist = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">    varlist.append(i ** <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(varlist)  <span class="comment"># [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># lambda表达式+map</span></span><br><span class="line">varlist = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x: x ** <span class="number">2</span>, <span class="built_in">range</span>(<span class="number">10</span>)))</span><br><span class="line"><span class="built_in">print</span>(varlist)  <span class="comment"># [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 列表推导式</span></span><br><span class="line">varlist = [i ** <span class="number">2</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>)]</span><br><span class="line"><span class="built_in">print</span>(varlist)  <span class="comment"># [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2 实现一个字符串&#x27;1234&#x27; ===&gt; [2，4，6，8]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 普通方法</span></span><br><span class="line">varstr = <span class="string">&#x27;1234&#x27;</span></span><br><span class="line">varlist = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> varstr:</span><br><span class="line">    varlist.append(<span class="built_in">int</span>(i) * <span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(varlist)  <span class="comment"># [2, 4, 6, 8]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># lambda+map</span></span><br><span class="line">varlist = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x: <span class="built_in">int</span>(x) * <span class="number">2</span>, varstr))</span><br><span class="line"><span class="built_in">print</span>(varlist)  <span class="comment"># [2, 4, 6, 8]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 列表推导式</span></span><br><span class="line">varlist = [<span class="built_in">int</span>(i) * <span class="number">2</span> <span class="keyword">for</span> i <span class="keyword">in</span> varstr]</span><br><span class="line"><span class="built_in">print</span>(varlist)  <span class="comment"># [2, 4, 6, 8]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3 实现0-9的偶数列表 ===&gt; [0,2,4,6,8]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 普通方法</span></span><br><span class="line">varlist = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">    <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">        varlist.append(i)</span><br><span class="line"><span class="built_in">print</span>(varlist)  <span class="comment"># [0, 2, 4, 6, 8]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># lambda+fliter</span></span><br><span class="line">varlist = <span class="built_in">list</span>(<span class="built_in">filter</span>(<span class="keyword">lambda</span> x: <span class="literal">True</span> <span class="keyword">if</span> x % <span class="number">2</span> == <span class="number">0</span> <span class="keyword">else</span> <span class="literal">False</span>, <span class="built_in">range</span>(<span class="number">10</span>)))</span><br><span class="line"><span class="built_in">print</span>(varlist)  <span class="comment"># [0, 2, 4, 6, 8]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 列表推导式</span></span><br><span class="line">varlist = [i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>) <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span>]</span><br><span class="line"><span class="built_in">print</span>(varlist)  <span class="comment"># [0, 2, 4, 6, 8]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4 实现多循环的列表推导式</span></span><br><span class="line"><span class="comment"># 实现 [1,2,3],[3,1,4]  ===&gt; 列表中的元素两两组合，要求组合元素不能重复</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 普通方法</span></span><br><span class="line">varlist = []</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]:</span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> [<span class="number">3</span>, <span class="number">1</span>, <span class="number">4</span>]:</span><br><span class="line">        <span class="keyword">if</span> x != y:</span><br><span class="line">            varlist.append((x, y))</span><br><span class="line"><span class="built_in">print</span>(varlist)  <span class="comment"># [(1, 3), (1, 4), (2, 3), (2, 1), (2, 4), (3, 1), (3, 4)]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 列表推导式</span></span><br><span class="line">varlist = [(x, y) <span class="keyword">for</span> x <span class="keyword">in</span> [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>] <span class="keyword">for</span> y <span class="keyword">in</span> [<span class="number">3</span>, <span class="number">1</span>, <span class="number">4</span>] <span class="keyword">if</span> x != y]</span><br><span class="line"><span class="built_in">print</span>(varlist)  <span class="comment"># [(1, 3), (1, 4), (2, 3), (2, 1), (2, 4), (3, 1), (3, 4)]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 5 实现矩阵的转换</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 普通方法</span></span><br><span class="line">matrix = [</span><br><span class="line">    [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>],</span><br><span class="line">    [<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>],</span><br><span class="line">    [<span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>],</span><br><span class="line">]</span><br><span class="line">newlist = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(matrix[<span class="number">0</span>])):</span><br><span class="line">    newlist.append([res[i] <span class="keyword">for</span> res <span class="keyword">in</span> matrix])</span><br><span class="line"><span class="built_in">print</span>(newlist)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列表推导式</span></span><br><span class="line">newlist = [[res[i] <span class="keyword">for</span> res <span class="keyword">in</span> matrix] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>)]</span><br><span class="line"><span class="built_in">print</span>(newlist)</span><br></pre></td></tr></table></figure><h2 id="练习题"><a href="#练习题" class="headerlink" title="练习题"></a>练习题</h2><p>使用列表推导式实现乘法表</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 把字典中的键值对转换成 a=b的列表形式</span></span><br><span class="line"><span class="comment"># &#123;&#x27;user&#x27;:&#x27;admin&#x27;,&#x27;age&#x27;:&#x27;20&#x27;,&#x27;phone&#x27;:&#x27;130&#x27;&#125; ===&gt; [&#x27;user=admin&#x27;,&#x27;age=20&#x27;,&#x27;phone=133&#x27;]</span></span><br><span class="line"></span><br><span class="line">vardict = &#123;<span class="string">&#x27;user&#x27;</span>: <span class="string">&#x27;admin&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="string">&#x27;20&#x27;</span>, <span class="string">&#x27;phone&#x27;</span>: <span class="string">&#x27;130&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line">varlist = [i + <span class="string">&#x27;=&#x27;</span> + vardict[i] <span class="keyword">for</span> i <span class="keyword">in</span> vardict]</span><br><span class="line"><span class="built_in">print</span>(varlist)  <span class="comment"># [&#x27;user=admin&#x27;, &#x27;age=20&#x27;, &#x27;phone=130&#x27;]</span></span><br><span class="line">res = <span class="string">&#x27;&amp;&#x27;</span>.join(varlist)</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># user=admin&amp;age=20&amp;phone=130</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 把列表中的所有字符全部转为小写</span></span><br><span class="line"><span class="comment"># [&#x27;AAAAA&#x27;,&#x27;BbbBB&#x27;,&#x27;CCCcc&#x27;] ===&gt; [&#x27;aaaaa&#x27;,&#x27;bbbbb&#x27;,&#x27;ccccc&#x27;]</span></span><br><span class="line">varlist = [<span class="string">&#x27;AAAAA&#x27;</span>, <span class="string">&#x27;BbbBB&#x27;</span>, <span class="string">&#x27;CCCcc&#x27;</span>]</span><br><span class="line">newlist = [i.lower() <span class="keyword">for</span> i <span class="keyword">in</span> varlist]</span><br><span class="line"><span class="built_in">print</span>(newlist)  <span class="comment"># [&#x27;aaaaa&#x27;, &#x27;bbbbb&#x27;, &#x27;ccccc&#x27;]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># x是0-5之间的偶数，y是0-5之间的奇数，把x，y组成一个元组放进一个列表中</span></span><br><span class="line"></span><br><span class="line">newlist = [(x, y) <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">6</span>) <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">6</span>) <span class="keyword">if</span> x % <span class="number">2</span> == <span class="number">0</span> <span class="keyword">if</span> y % <span class="number">2</span> != <span class="number">0</span>]</span><br><span class="line"><span class="built_in">print</span>(newlist)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用列表推导式完成乘法表</span></span><br><span class="line"></span><br><span class="line">newlist = [<span class="string">f&#x27;<span class="subst">&#123;i&#125;</span>×<span class="subst">&#123;j&#125;</span>=<span class="subst">&#123;i * j&#125;</span>&#x27;</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">10</span>) <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, i + <span class="number">1</span>)]</span><br><span class="line"><span class="built_in">print</span>(newlist)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用列表推导式完成M与N的计算 ===&gt; [2,4,6,12,15,18,28,32,36]</span></span><br><span class="line"></span><br><span class="line">M = [</span><br><span class="line">    [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">    [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>],</span><br><span class="line">    [<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>],</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">N = [</span><br><span class="line">    [<span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>],</span><br><span class="line">    [<span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>],</span><br><span class="line">    [<span class="number">4</span>, <span class="number">4</span>, <span class="number">4</span>],</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">newlist = [M[p][q] * N[p][q] <span class="keyword">for</span> p <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>) <span class="keyword">for</span> q <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>)]</span><br><span class="line"><span class="built_in">print</span>(newlist)  <span class="comment"># [2, 4, 6, 12, 15, 18, 28, 32, 36]</span></span><br></pre></td></tr></table></figure><h1 id="元组详解"><a href="#元组详解" class="headerlink" title="元组详解"></a>元组详解</h1><h2 id="基本定义和切片操作"><a href="#基本定义和切片操作" class="headerlink" title="基本定义和切片操作"></a>基本定义和切片操作</h2><p>元组和列表一样都是一组有序的数据组合 元组中的元素一旦定义了就不能修改，因此元组是不可变数据类型</p><h3 id="元组定义"><a href="#元组定义" class="headerlink" title="元组定义"></a>元组定义</h3><ul><li>定义空元祖，变量名&#x3D;() 或者 变量名&#x3D;tuple()</li><li>还可以使用 变量名&#x3D;(1，2，3)的方式定义有数据的元组</li><li>如果只有一个数据，数据后需要加,，如 变量名&#x3D;(1,)</li><li>特例，使用 变量&#x3D;1,2,3 这样的方式也可以定义元组</li></ul><h3 id="元组的相关操作"><a href="#元组的相关操作" class="headerlink" title="元组的相关操作"></a>元组的相关操作</h3><p>由于元组是不可变的数据类型，因此只能使用索引进行访问，不能进行其他操作 元组可以和列表一样使用切片操作</p><ul><li>tuple.count() 统计一个元素出现的次数</li><li>tuple.index() 查找一个元素的索引值</li><li>tuple[] 与列表一样的方式进行切片</li><li>使用 +、* 运算，合并组成新的元组</li><li>in 方法检测一个元素是否在元组中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">vartuple = <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span></span><br><span class="line"><span class="built_in">print</span>(vartuple)  <span class="comment"># (1, 2, 3)</span></span><br><span class="line"></span><br><span class="line">vartuple = (<span class="number">1</span>,)</span><br><span class="line"><span class="built_in">print</span>(vartuple)  <span class="comment"># (1,)</span></span><br><span class="line"></span><br><span class="line">vartuple = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(vartuple))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(vartuple[:])  <span class="comment"># (1, 2, 3, 4, 5)</span></span><br><span class="line"><span class="built_in">print</span>(vartuple[::])  <span class="comment"># (1, 2, 3, 4, 5)</span></span><br><span class="line"><span class="built_in">print</span>(vartuple[<span class="number">1</span>:<span class="number">3</span>])  <span class="comment"># (2, 3)</span></span><br><span class="line"><span class="built_in">print</span>(vartuple[::-<span class="number">1</span>])  <span class="comment"># (5, 4, 3, 2, 1)</span></span><br><span class="line"></span><br><span class="line">vartuple = (<span class="string">&#x27;Kobe&#x27;</span>, <span class="string">&#x27;James&#x27;</span>, <span class="string">&#x27;Curry&#x27;</span>, <span class="string">&#x27;Tony&#x27;</span>, <span class="string">&#x27;Irving&#x27;</span>, <span class="string">&#x27;Thompson&#x27;</span>, <span class="string">&#x27;Harden&#x27;</span>, <span class="string">&#x27;Kobe&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(vartuple.count(<span class="string">&#x27;James&#x27;</span>))  <span class="comment"># 1</span></span><br><span class="line"><span class="built_in">print</span>(vartuple.index(<span class="string">&#x27;Curry&#x27;</span>))  <span class="comment"># 2</span></span><br><span class="line"><span class="built_in">print</span>(vartuple.index(<span class="string">&#x27;Kobe&#x27;</span>))  <span class="comment"># 0</span></span><br><span class="line"><span class="built_in">print</span>(vartuple.index(<span class="string">&#x27;Kobe&#x27;</span>, <span class="number">5</span>, <span class="number">8</span>))  <span class="comment"># 7</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(</span><br><span class="line">    vartuple + vartuple)  <span class="comment"># (&#x27;Kobe&#x27;, &#x27;James&#x27;, &#x27;Curry&#x27;, &#x27;Tony&#x27;, &#x27;Irving&#x27;, &#x27;Thompson&#x27;, &#x27;Harden&#x27;, &#x27;Kobe&#x27;, &#x27;Kobe&#x27;, &#x27;James&#x27;, &#x27;Curry&#x27;, &#x27;Tony&#x27;, &#x27;Irving&#x27;, &#x27;Thompson&#x27;, &#x27;Harden&#x27;, &#x27;Kobe&#x27;)</span></span><br><span class="line"><span class="built_in">print</span>(</span><br><span class="line">    vartuple * <span class="number">2</span>)  <span class="comment"># (&#x27;Kobe&#x27;, &#x27;James&#x27;, &#x27;Curry&#x27;, &#x27;Tony&#x27;, &#x27;Irving&#x27;, &#x27;Thompson&#x27;, &#x27;Harden&#x27;, &#x27;Kobe&#x27;, &#x27;Kobe&#x27;, &#x27;James&#x27;, &#x27;Curry&#x27;, &#x27;Tony&#x27;, &#x27;Irving&#x27;, &#x27;Thompson&#x27;, &#x27;Harden&#x27;, &#x27;Kobe&#x27;)</span></span><br><span class="line"></span><br><span class="line">res = <span class="string">&#x27;Irving&#x27;</span> <span class="keyword">in</span> vartuple</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># True</span></span><br></pre></td></tr></table></figure><h2 id="元组推导式-generator"><a href="#元组推导式-generator" class="headerlink" title="元组推导式 generator"></a>元组推导式 generator</h2><p>元组推导式 generator 也称为生成器，返回的是一个生成器 <strong>生成器</strong>是一个特殊的迭代器，生成器可以自定义，也可以使用元组推导式定义 生成器是按照某种算法去推算下一个数据或结果，只需要往内存中存储一个生成器，节约内存消耗，提升性能 语法： (1) 里面是推导式，外面是一个() 的结果就是一个生成器 (2) 自定义生成器，含有 yidle 关键字的函数就是生成器 含有 yield 关键字的函数，返回的结果就是一个迭代器(生成器函数就是一个返回迭代器的函数)</p><ul><li>如何使用生成器：生成器是迭代器的一种，所以可以使用操作迭代器的方法操作生成器<ul><li>使用 next()函数调用</li><li>使用 list()函数或者 tuple()函数进行操作</li><li>使用 for 语句进行遍历</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">varlist = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line">newtuple = (i ** <span class="number">2</span> <span class="keyword">for</span> i <span class="keyword">in</span> varlist)</span><br><span class="line"><span class="built_in">print</span>(newtuple)  <span class="comment"># &lt;generator object &lt;genexpr&gt; at 0x101dd1f50&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">next</span>(newtuple))  <span class="comment"># 1</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">next</span>(newtuple))  <span class="comment"># 4</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2</span></span><br><span class="line">newtuple = (i ** <span class="number">2</span> <span class="keyword">for</span> i <span class="keyword">in</span> varlist)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(newtuple))  <span class="comment"># [1, 4, 9, 16, 25]</span></span><br><span class="line"></span><br><span class="line">newtuple = (i ** <span class="number">2</span> <span class="keyword">for</span> i <span class="keyword">in</span> varlist)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">tuple</span>(newtuple))  <span class="comment"># (1, 4, 9, 16, 25)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3</span></span><br><span class="line">newtuple = (i ** <span class="number">2</span> <span class="keyword">for</span> i <span class="keyword">in</span> varlist)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> newtuple:</span><br><span class="line">    <span class="built_in">print</span>(i)  <span class="comment"># 1 4 9 16 25</span></span><br></pre></td></tr></table></figure><h1 id="字典详解"><a href="#字典详解" class="headerlink" title="字典详解"></a>字典详解</h1><h2 id="定义和基本操作"><a href="#定义和基本操作" class="headerlink" title="定义和基本操作"></a>定义和基本操作</h2><p>字典也是一种数据的集合，由键值对组成的数据集合，字典中的键不能重复 字典中的键必须是不可变的数据类型，常用的键主要是：字符串，整型</p><h3 id="字典的定义"><a href="#字典的定义" class="headerlink" title="字典的定义"></a>字典的定义</h3><ul><li>字典可以通过大括号括起来的 键:值对 进行创建</li><li>也可以使用 dict 构造器来创建</li><li>数据类型的转换：可以将其他的二级容器类型（列表、元组）转换为 dict</li><li>可以使用 zip()函数，将两个 list 组合成一个 dict</li></ul><h3 id="字典的操作"><a href="#字典的操作" class="headerlink" title="字典的操作"></a>字典的操作</h3><ul><li>获取，通过索引键的方式可以获取到值</li><li>修改，索引到的话可以修改值</li><li>删除，使用 del 进行删除</li><li>添加，使用一个新的键，进行赋值，若键存在，则会覆盖</li><li>成员检测，可以使用 in 进行成员检测，但是只能检测键</li><li>长度，可以用 len()，来检测有多少个键值对</li><li>dict.keys()：可以查询所有键</li><li>dict.values()：可以查询所有值</li><li>dict.items()：获取当前字典中所有的键值对</li><li>字典的遍历：可以使用 for</li><li>字典合并：new_dict &#x3D; {**dict1, **dict2}</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">vardict = &#123;<span class="string">&#x27;a&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;b&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;c&#x27;</span>: <span class="number">3</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(vardict, <span class="built_in">type</span>(vardict))  <span class="comment"># &#123;&#x27;a&#x27;: 1, &#x27;b&#x27;: 2, &#x27;c&#x27;: 3&#125; &lt;class &#x27;dict&#x27;&gt;</span></span><br><span class="line"></span><br><span class="line">vardict = <span class="built_in">dict</span>(a=<span class="number">1</span>, b=<span class="number">2</span>, c=<span class="number">3</span>)</span><br><span class="line"><span class="built_in">print</span>(vardict)  <span class="comment"># &#123;&#x27;a&#x27;: 1, &#x27;b&#x27;: 2, &#x27;c&#x27;: 3&#125;</span></span><br><span class="line"></span><br><span class="line">vardict = <span class="built_in">dict</span>([[<span class="string">&#x27;a&#x27;</span>, <span class="number">1</span>], [<span class="string">&#x27;b&#x27;</span>, <span class="number">2</span>], [<span class="string">&#x27;c&#x27;</span>, <span class="number">3</span>]])</span><br><span class="line"><span class="built_in">print</span>(vardict)  <span class="comment"># &#123;&#x27;a&#x27;: 1, &#x27;b&#x27;: 2, &#x27;c&#x27;: 3&#125;</span></span><br><span class="line"></span><br><span class="line">var1 = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>]</span><br><span class="line">var2 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">dict</span>(<span class="built_in">zip</span>(var1, var2)))  <span class="comment"># &#123;&#x27;a&#x27;: 1, &#x27;b&#x27;: 2, &#x27;c&#x27;: 3&#125;</span></span><br><span class="line"></span><br><span class="line">res = vardict[<span class="string">&#x27;a&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># 1</span></span><br><span class="line"></span><br><span class="line">vardict[<span class="string">&#x27;a&#x27;</span>] = <span class="string">&#x27;A&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(vardict)  <span class="comment"># &#123;&#x27;a&#x27;: &#x27;A&#x27;, &#x27;b&#x27;: 2, &#x27;c&#x27;: 3&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">del</span> vardict[<span class="string">&#x27;a&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(vardict)  <span class="comment"># &#123;&#x27;b&#x27;: 2, &#x27;c&#x27;: 3&#125;</span></span><br><span class="line"></span><br><span class="line">vardict[<span class="string">&#x27;d&#x27;</span>] = <span class="number">4</span></span><br><span class="line"><span class="built_in">print</span>(vardict)  <span class="comment"># &#123;&#x27;b&#x27;: 2, &#x27;c&#x27;: 3, &#x27;d&#x27;: 4&#125;</span></span><br><span class="line"></span><br><span class="line">res = <span class="string">&#x27;d&#x27;</span> <span class="keyword">in</span> vardict</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># True</span></span><br><span class="line">res = <span class="string">&#x27;a&#x27;</span> <span class="keyword">in</span> vardict</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># False</span></span><br><span class="line"></span><br><span class="line">res = <span class="built_in">len</span>(vardict)</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># 3</span></span><br><span class="line"></span><br><span class="line">res = vardict.keys()</span><br><span class="line"><span class="built_in">print</span>(res) <span class="comment">#dict_keys([&#x27;b&#x27;, &#x27;c&#x27;, &#x27;d&#x27;])</span></span><br><span class="line">res = vardict.values()</span><br><span class="line"><span class="built_in">print</span>(res) <span class="comment"># dict_values([2, 3, 4])</span></span><br><span class="line">res = vardict.items()</span><br><span class="line"><span class="built_in">print</span>(res) <span class="comment"># dict_items([(&#x27;b&#x27;, 2), (&#x27;c&#x27;, 3), (&#x27;d&#x27;, 4)])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 字典的遍历</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> vardict:</span><br><span class="line">    <span class="built_in">print</span>(i,vardict[i])</span><br><span class="line">    <span class="comment"># b 2</span></span><br><span class="line">    <span class="comment"># c 3</span></span><br><span class="line">    <span class="comment"># d 4</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> k,v <span class="keyword">in</span> vardict.items():</span><br><span class="line">    <span class="built_in">print</span>(k,v)</span><br><span class="line">    <span class="comment"># b 2</span></span><br><span class="line">    <span class="comment"># c 3</span></span><br><span class="line">    <span class="comment"># d 4</span></span><br></pre></td></tr></table></figure><h2 id="相关函数"><a href="#相关函数" class="headerlink" title="相关函数"></a>相关函数</h2><ul><li>len(dict)，来检测有多少个键值对</li><li>dict.keys()：可以查询所有键</li><li>dict.values()：可以查询所有值</li><li>dict.items()：获取当前字典中所有的键值对</li><li>iter(dict)：返回以字典的键为元素的迭代器</li><li>pop(key)：通过键的方式弹出键值对</li><li>popitem()：按照 LIFO 的方式删除键值对</li><li>get()：通过 get 函数获得对应键的值，若键不存在返回 None</li><li>update()：更新字典，在原来的基础上更新</li><li>setdefault()：如果 字典的键存在 则返回对应值；如果键不存在，默认存入值为 None 的键值对，返回值为值，也可以指定传入的值</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">vardict = &#123;<span class="string">&#x27;a&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;b&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;c&#x27;</span>: <span class="number">3</span>&#125;</span><br><span class="line"></span><br><span class="line">res = <span class="built_in">iter</span>(vardict)</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># &lt;dict_keyiterator object at 0x102977950&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> res:</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line">    <span class="comment"># a</span></span><br><span class="line">    <span class="comment"># b</span></span><br><span class="line">    <span class="comment"># c</span></span><br><span class="line"></span><br><span class="line">vardict.pop(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(vardict)  <span class="comment"># # &#123;&#x27;b&#x27;: 2, &#x27;c&#x27;: 3&#125;</span></span><br><span class="line"></span><br><span class="line">vardict.popitem()</span><br><span class="line"><span class="built_in">print</span>(vardict)  <span class="comment"># &#123;&#x27;b&#x27;: 2&#125;</span></span><br><span class="line"></span><br><span class="line">vardict = &#123;<span class="string">&#x27;a&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;b&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;c&#x27;</span>: <span class="number">3</span>&#125;</span><br><span class="line">res = vardict.get(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># 1</span></span><br><span class="line">res = vardict.get(<span class="string">&#x27;d&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># None</span></span><br><span class="line"></span><br><span class="line">vardict.update(a=<span class="number">11</span>, b=<span class="number">22</span>)</span><br><span class="line"><span class="built_in">print</span>(vardict)  <span class="comment"># &#123;&#x27;a&#x27;: 11, &#x27;b&#x27;: 22, &#x27;c&#x27;: 3&#125;</span></span><br><span class="line"></span><br><span class="line">res = vardict.setdefault(<span class="string">&#x27;d&#x27;</span>, <span class="number">4</span>)</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># 4</span></span><br><span class="line"><span class="built_in">print</span>(vardict)  <span class="comment"># &#123;&#x27;a&#x27;: 11, &#x27;b&#x27;: 22, &#x27;c&#x27;: 3, &#x27;d&#x27;: 4&#125;</span></span><br></pre></td></tr></table></figure><h2 id="字典推导式"><a href="#字典推导式" class="headerlink" title="字典推导式"></a>字典推导式</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">vardict = &#123;<span class="string">&#x27;a&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;b&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;c&#x27;</span>: <span class="number">3</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 把字典中的键值对位置交换</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 普通方法</span></span><br><span class="line">newdict = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> k, v <span class="keyword">in</span> vardict.items():</span><br><span class="line">    newdict[v] = k</span><br><span class="line"><span class="built_in">print</span>(newdict)  <span class="comment"># &#123;1: &#x27;a&#x27;, 2: &#x27;b&#x27;, 3: &#x27;c&#x27;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用字典推导式</span></span><br><span class="line">newdict = &#123;v: k <span class="keyword">for</span> k, v <span class="keyword">in</span> vardict.items()&#125;</span><br><span class="line"><span class="built_in">print</span>(newdict)  <span class="comment"># &#123;1: &#x27;a&#x27;, 2: &#x27;b&#x27;, 3: &#x27;c&#x27;&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 只保留值为偶数的键值对 并且键值互换</span></span><br><span class="line"><span class="comment"># 普通方法</span></span><br><span class="line">vardict = &#123;<span class="string">&#x27;a&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;b&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;c&#x27;</span>: <span class="number">3</span>, <span class="string">&#x27;d&#x27;</span>: <span class="number">4</span>&#125;</span><br><span class="line">newdict = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> k,v <span class="keyword">in</span> vardict.items():</span><br><span class="line">    <span class="keyword">if</span> v % <span class="number">2</span> ==<span class="number">0</span>:</span><br><span class="line">        newdict[v] = k</span><br><span class="line"><span class="built_in">print</span>(newdict) <span class="comment"># &#123;2: &#x27;b&#x27;, 4: &#x27;d&#x27;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 列表推导式方法</span></span><br><span class="line">newdict = &#123;v:k <span class="keyword">for</span> k,v <span class="keyword">in</span> vardict.items() <span class="keyword">if</span> v % <span class="number">2</span> == <span class="number">0</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(newdict) <span class="comment"># &#123;2: &#x27;b&#x27;, 4: &#x27;d&#x27;&#125;</span></span><br></pre></td></tr></table></figure><h1 id="集合详解"><a href="#集合详解" class="headerlink" title="集合详解"></a>集合详解</h1><h2 id="集合的基本操作和常规"><a href="#集合的基本操作和常规" class="headerlink" title="集合的基本操作和常规"></a>集合的基本操作和常规</h2><p>确定的一组无序的数据的组合</p><ul><li>确定的：当前集合中元素的值不能重复</li><li>由多个数据组合的复合型数据（容器类型数据）</li><li>集合中的数据没有顺序</li><li>功能：成员检测、从序列中去除重复项以及数学中的集合类计算，列如交集、并集、差集与对称差集等等</li></ul><h3 id="集合的定义"><a href="#集合的定义" class="headerlink" title="集合的定义"></a>集合的定义</h3><ul><li>可以直接使用{}来定义集合，定义空集合必须用 set()方法</li><li>可以使用 set()进行集合的定义和转换</li><li>使用集合推导式完成集合的定义 注意：集合中的元素不能重复，集合中存放的数据：Number、Strings、Tuple、冰冻集合</li></ul><h3 id="集合的基本操作和常规函数"><a href="#集合的基本操作和常规函数" class="headerlink" title="集合的基本操作和常规函数"></a>集合的基本操作和常规函数</h3><ul><li>无序、False 和 0 只会出现一个、True 和 1 只会出现一个、元素值不会重复</li><li>成员检测：使用 in 检测是都存在某个元素</li><li>元素个数：len()检测集合元素个数</li><li>集合遍历：使用 for 方法进行遍历</li><li>追加元素：set.add()可以向集合中追加元素，（为什么不是 append，因为 append 有扩充的思想，从尾部插入，而 add 是没有顺序的）</li><li>删除元素：<ul><li>set.pop()可以删除集合中的元素，随机删除，并返回</li><li>set.remove()指定删除集合中的元素，无返回值,如果不存在则会报错</li><li>set.discard()指定删除集合中的元素，不存在也不会报错</li></ul></li><li>清空集合：set.clear()</li><li>更新集合：set.update()</li><li>集合的拷贝：set.copy()</li><li>冰冻集合：frozenset()</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">varset = &#123;<span class="number">123</span>, <span class="string">&#x27;abc&#x27;</span>, <span class="literal">True</span>, (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>), <span class="number">0</span>, <span class="literal">False</span>, <span class="number">3.1415</span>, <span class="number">123</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(varset)  <span class="comment"># &#123;0, True, 3.1415, &#x27;abc&#x27;, (1, 2, 3), 123&#125;</span></span><br><span class="line"></span><br><span class="line">res = <span class="string">&#x27;abc&#x27;</span> <span class="keyword">in</span> varset</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># True</span></span><br><span class="line"></span><br><span class="line">res = <span class="built_in">len</span>(varset)</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># 6</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> varset:</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line">    <span class="comment"># 0</span></span><br><span class="line">    <span class="comment"># True</span></span><br><span class="line">    <span class="comment"># 3.1415</span></span><br><span class="line">    <span class="comment"># (1, 2, 3)</span></span><br><span class="line">    <span class="comment"># abc</span></span><br><span class="line">    <span class="comment"># 123</span></span><br><span class="line"></span><br><span class="line">varset.add(<span class="string">&#x27;new&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(varset)  <span class="comment"># &#123;0, True, 3.1415, &#x27;new&#x27;, (1, 2, 3), &#x27;abc&#x27;, 123&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># pop是随机的删除</span></span><br><span class="line">r1 = varset.pop()</span><br><span class="line">r2 = varset.pop()</span><br><span class="line">r3 = varset.pop()</span><br><span class="line">r4 = varset.pop()</span><br><span class="line"><span class="built_in">print</span>(r1, r2, r3, r4)  <span class="comment"># 0 True 3.1415 new</span></span><br><span class="line"><span class="built_in">print</span>(varset)  <span class="comment"># &#123;(1, 2, 3), &#x27;abc&#x27;, 123&#125;</span></span><br><span class="line"></span><br><span class="line">varset = &#123;<span class="number">123</span>, <span class="string">&#x27;abc&#x27;</span>, <span class="literal">True</span>, (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>), <span class="number">0</span>, <span class="literal">False</span>, <span class="number">3.1415</span>, <span class="number">123</span>&#125;</span><br><span class="line">varset.remove(<span class="string">&#x27;abc&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(varset)  <span class="comment"># &#123;0, True, 3.1415, (1, 2, 3), 123&#125;</span></span><br><span class="line"></span><br><span class="line">varset.discard(<span class="number">123</span>)</span><br><span class="line"><span class="built_in">print</span>(varset)  <span class="comment"># &#123;0, True, 3.1415, (1, 2, 3)&#125;</span></span><br><span class="line"></span><br><span class="line">varset.clear()</span><br><span class="line"><span class="built_in">print</span>(varset)  <span class="comment"># set()</span></span><br><span class="line"></span><br><span class="line">varset = &#123;<span class="number">123</span>, <span class="string">&#x27;abc&#x27;</span>, <span class="literal">True</span>, (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>), <span class="number">0</span>, <span class="literal">False</span>, <span class="number">3.1415</span>, <span class="number">123</span>&#125;</span><br><span class="line">varset.update(&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;)</span><br><span class="line"><span class="built_in">print</span>(varset)  <span class="comment"># &#123;0, True, 2, 3.1415, 3, 4, 5, (1, 2, 3), 123, &#x27;abc&#x27;&#125;</span></span><br><span class="line"></span><br><span class="line">newset = varset.copy()</span><br><span class="line"><span class="built_in">print</span>(newset)  <span class="comment"># &#123;0, True, 2, 3.1415, 3, 4, 5, (1, 2, 3), &#x27;abc&#x27;, 123&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 冰冻集合</span></span><br><span class="line">v = <span class="built_in">frozenset</span>(&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;)</span><br><span class="line"><span class="built_in">print</span>(v)  <span class="comment"># frozenset(&#123;1, 2, 3&#125;)</span></span><br></pre></td></tr></table></figure><h2 id="冰冻集合"><a href="#冰冻集合" class="headerlink" title="冰冻集合"></a>冰冻集合</h2><ul><li>定义冰冻集合 只能使用 frozenset()函数进行冰冻集合的定义<ul><li>冰冻集合一旦定义 就不能修改</li><li>冰冻集合只能做集合相关的运算：求并交补差集</li><li>本身就是一个强制类型转换的函数，可以把其他任何容器类型的数据转换为冰冻集合</li></ul></li><li>冰冻集合可以遍历：使用 for 进行遍历</li><li>冰冻集合的推导式</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">vars</span> = <span class="built_in">frozenset</span>(&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">vars</span>) <span class="comment"># frozenset(&#123;1, 2, 3&#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">vars</span>:</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line">    <span class="comment"># 1</span></span><br><span class="line">    <span class="comment"># 2</span></span><br><span class="line">    <span class="comment"># 3</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 冰冻集合推导式</span></span><br><span class="line">res = <span class="built_in">frozenset</span>(&#123;i&lt;&lt;<span class="number">1</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">6</span>)&#125;)</span><br><span class="line"><span class="built_in">print</span>(res) <span class="comment"># frozenset(&#123;0, 2, 4, 6, 8, 10&#125;)</span></span><br></pre></td></tr></table></figure><h2 id="集合推导式"><a href="#集合推导式" class="headerlink" title="集合推导式"></a>集合推导式</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 普通推导式</span></span><br><span class="line">varset = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;</span><br><span class="line"></span><br><span class="line">newset = &#123;i &lt;&lt; <span class="number">1</span> <span class="keyword">for</span> i <span class="keyword">in</span> varset&#125;</span><br><span class="line"><span class="built_in">print</span>(newset)  <span class="comment"># &#123;8, 2, 4, 6&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 带有条件表达式的推导式</span></span><br><span class="line">newset = &#123;i &lt;&lt; <span class="number">1</span> <span class="keyword">for</span> i <span class="keyword">in</span> varset <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(newset)  <span class="comment"># &#123;8, 4&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 多循环的集合推导式</span></span><br><span class="line"><span class="comment"># 普通方法</span></span><br><span class="line">vars1 = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line">vars2 = &#123;<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>&#125;</span><br><span class="line">newset = <span class="built_in">set</span>()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> vars1:</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> vars2:</span><br><span class="line">        <span class="built_in">print</span>(i, j)</span><br><span class="line">        newset.add(i + j)</span><br><span class="line"><span class="built_in">print</span>(newset)  <span class="comment"># &#123;5, 6, 7, 8, 9&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 列表推导式</span></span><br><span class="line">newset = &#123;i + j <span class="keyword">for</span> i <span class="keyword">in</span> vars1 <span class="keyword">for</span> j <span class="keyword">in</span> vars2&#125;</span><br><span class="line"><span class="built_in">print</span>(newset)  <span class="comment"># &#123;5, 6, 7, 8, 9&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 待条件表达式的多循环的集合推导式</span></span><br><span class="line">newset = &#123;i + j <span class="keyword">for</span> i <span class="keyword">in</span> vars1 <span class="keyword">for</span> j <span class="keyword">in</span> vars2 <span class="keyword">if</span> (i + j) % <span class="number">2</span> == <span class="number">0</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(newset)  <span class="comment"># &#123;8, 6&#125;</span></span><br></pre></td></tr></table></figure><h2 id="集合运算"><a href="#集合运算" class="headerlink" title="集合运算"></a>集合运算</h2><ul><li>集合的主要运算<ul><li>交集<ul><li>&amp;</li><li>set.intersection() 有返回值，不对原集合更新；还可以对可迭代对象进行合并</li><li>set.intersection_update() 无返回值，对原集合会更新</li></ul></li><li>并集<ul><li>| 更推荐这种，对两种数据要求高 不能太灵活</li><li>set.union() 有返回值，不对原集合更新 ；还可以对可迭代对象进行合并</li><li>set.update() 无返回值，对调用的集合更新</li></ul></li><li>差集 (去掉集合中 另一集合有的部分)<ul><li><ul><li></li></ul></li><li>set.difference() 有返回值，不对原集合更新</li><li>set.difference_update() 无返回值，对原集合更新</li></ul></li><li>对称差集 (去掉各自集合中 相同的部分)<ul><li>^</li><li>set.symmetric_difference() 有返回值，不对原集合更新</li><li>set.symmetric_difference_update() 无返回值，对原集合更新</li></ul></li></ul></li><li>检测超集和子集<ul><li>set1.issuperset(set2) 返回值为 True、False，意义为 set1 是否为 set2 的超集，也可以用 <code>&gt;=</code></li><li>set1.issubset(set2) 检测 set1 是否为 set2 的子集，也可以使用 <code>&lt;=</code></li></ul></li><li>检测是否不相交<ul><li>set1.isdisjoint(set2) 有返回值，不相交返回 True、相交返回 False</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">vars1 = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>&#125;</span><br><span class="line">vars2 = &#123;<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 交集</span></span><br><span class="line"><span class="built_in">print</span>(vars1 &amp; vars2)  <span class="comment"># &#123;4, 5, 6, 7&#125;</span></span><br><span class="line">res = vars1.intersection(vars2)</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># &#123;4, 5, 6, 7&#125;</span></span><br><span class="line"><span class="built_in">print</span>(vars1)  <span class="comment"># &#123;1, 2, 3, 4, 5, 6, 7&#125;</span></span><br><span class="line"></span><br><span class="line">res = vars1.intersection_update(vars2)</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># None</span></span><br><span class="line"><span class="built_in">print</span>(vars1)  <span class="comment"># &#123;4, 5, 6, 7&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 并集</span></span><br><span class="line">vars1 = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>&#125;</span><br><span class="line">vars2 = &#123;<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(vars1 | vars2)  <span class="comment"># &#123;1, 2, 3, 4, 5, 6, 7, 8, 9, 10&#125;</span></span><br><span class="line">res = vars1.union(vars2)</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># &#123;1, 2, 3, 4, 5, 6, 7, 8, 9, 10&#125;</span></span><br><span class="line">vars1.update(vars2)</span><br><span class="line"><span class="built_in">print</span>(vars1)  <span class="comment"># &#123;1, 2, 3, 4, 5, 6, 7, 8, 9, 10&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 差集</span></span><br><span class="line">vars1 = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>&#125;</span><br><span class="line">vars2 = &#123;<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(vars1 - vars2)  <span class="comment"># &#123;1, 2, 3&#125;</span></span><br><span class="line"><span class="built_in">print</span>(vars2 - vars1)  <span class="comment"># &#123;8, 9, 10&#125;</span></span><br><span class="line">res = vars1.difference(vars2)</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># &#123;1, 2, 3&#125;</span></span><br><span class="line">vars1.difference_update(vars2)</span><br><span class="line"><span class="built_in">print</span>(vars1)  <span class="comment"># &#123;1, 2, 3&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 对称差集</span></span><br><span class="line">vars1 = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>&#125;</span><br><span class="line">vars2 = &#123;<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(vars1 ^ vars2)  <span class="comment"># &#123;1, 2, 3, 8, 9, 10&#125;</span></span><br><span class="line">res = vars1.symmetric_difference(vars2)</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># &#123;1, 2, 3, 8, 9, 10&#125;</span></span><br><span class="line">vars1.symmetric_difference_update(vars2)</span><br><span class="line"><span class="built_in">print</span>(vars1)  <span class="comment"># &#123;1, 2, 3, 8, 9, 10&#125;</span></span><br><span class="line"></span><br><span class="line">vars1 = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;</span><br><span class="line">vars2 = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>&#125;</span><br><span class="line">res = vars2.issuperset(vars1)</span><br><span class="line"><span class="built_in">print</span>(res) <span class="comment"># True</span></span><br><span class="line"></span><br><span class="line">res = vars1.issubset(vars2)</span><br><span class="line"><span class="built_in">print</span>(res) <span class="comment"># True</span></span><br><span class="line"></span><br><span class="line">res = vars1.isdisjoint(vars2)</span><br><span class="line"><span class="built_in">print</span>(res) <span class="comment"># False</span></span><br></pre></td></tr></table></figure><blockquote><p>更新: 2024-01-10 22:17:18<br>原文: <a href="https://www.yuque.com/zacharyblock/cx2om6/an7fvuvt1unusq1w">https://www.yuque.com/zacharyblock/cx2om6/an7fvuvt1unusq1w</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Python基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python基础-语法</title>
      <link href="/2022/12/31/Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95/"/>
      <url>/2022/12/31/Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h1><h1 id="课程介绍"><a href="#课程介绍" class="headerlink" title="课程介绍"></a>课程介绍</h1><ul><li>语法</li><li>函数</li><li>容器</li><li>文件</li><li>内置模块</li></ul><h1 id="Python-环境安装"><a href="#Python-环境安装" class="headerlink" title="Python 环境安装"></a>Python 环境安装</h1><p>包括了 Python、Pycharm、typora、语雀</p><p><a href="https://www.python.org/">https://www.python.org/</a></p><p><a href="https://www.jetbrains.com/pycharm/">https://www.jetbrains.com/pycharm/</a></p><p><a href="https://typoraio.cn/">https://typoraio.cn/</a></p><p><a href="https://www.yuque.com/">https://www.yuque.com/</a></p><h1 id="初识-Python-脚本"><a href="#初识-Python-脚本" class="headerlink" title="初识 Python 脚本"></a>初识 Python 脚本</h1><h2 id="输出语句-print"><a href="#输出语句-print" class="headerlink" title="输出语句 print"></a>输出语句 print</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Hellozachary&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="空格与缩进"><a href="#空格与缩进" class="headerlink" title="空格与缩进"></a>空格与缩进</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Hello zachary&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Welcome to Python&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p>Python 的注释就是用一个 # 注释的一行话，除了# 还可以用’’’ ‘’’，和””” “””</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这是一个单行注释</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">这是一个多行注释</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">这也是一个多行注释</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><h2 id="语句跨行"><a href="#语句跨行" class="headerlink" title="语句跨行"></a>语句跨行</h2><p>使用反斜杠是语句分行编写</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> \</span><br><span class="line"><span class="built_in">range</span>(<span class="number">9</span>):</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br></pre></td></tr></table></figure><h2 id="变量（标识符：变量名、函数名、类名、模块名）"><a href="#变量（标识符：变量名、函数名、类名、模块名）" class="headerlink" title="变量（标识符：变量名、函数名、类名、模块名）"></a>变量（标识符：变量名、函数名、类名、模块名）</h2><p>用于记录可变化的数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">num=<span class="number">10</span></span><br><span class="line"><span class="built_in">print</span>(num)</span><br></pre></td></tr></table></figure><p>变量的命名规范</p><ul><li>变量名可以使用字母、数字、下划线，</li><li>但是不能以数字开头</li><li>要严格区分大小写</li><li>不要使用中文</li><li>不要使用关键字</li></ul><blockquote><p>关键字包括不限于：</p></blockquote><p><img src="https://cdn.nlark.com/yuque/0/2023/png/38881094/1704017762791-c886296e-42d5-4b1c-8f7e-e9641cdbb8bc.png"></p><h1 id="变量定义及数据交换"><a href="#变量定义及数据交换" class="headerlink" title="变量定义及数据交换"></a>变量定义及数据交换</h1><p><strong>变量的定义方式</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#第一种</span></span><br><span class="line">a=<span class="number">10</span></span><br><span class="line">b=<span class="number">20</span></span><br><span class="line"><span class="built_in">print</span>(a,b)</span><br><span class="line"></span><br><span class="line"><span class="comment">#第二种</span></span><br><span class="line">a,b=<span class="number">10</span>,<span class="number">20</span></span><br><span class="line"><span class="built_in">print</span>(a,b)</span><br></pre></td></tr></table></figure><p><strong>交换变量的数据</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#普通方式交换数据</span></span><br><span class="line">a=<span class="number">10</span></span><br><span class="line">b=<span class="number">20</span></span><br><span class="line"></span><br><span class="line">t=a</span><br><span class="line">a=b</span><br><span class="line">b=t</span><br><span class="line"><span class="built_in">print</span>(a,b)</span><br><span class="line"></span><br><span class="line"><span class="comment">#python独有的方法进行数据交换</span></span><br><span class="line">a=<span class="number">10</span></span><br><span class="line">b=<span class="number">20</span></span><br><span class="line">a,b=b,a</span><br><span class="line"><span class="built_in">print</span>(a,b)</span><br></pre></td></tr></table></figure><h1 id="Python-的数据类型"><a href="#Python-的数据类型" class="headerlink" title="Python 的数据类型"></a>Python 的数据类型</h1><p>什么是数据类型——数据的表现形式，常用的包括有数字、字符串，在程序中我们常使用的包括：</p><h2 id="字符串类型"><a href="#字符串类型" class="headerlink" title="字符串类型"></a>字符串类型</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">love=<span class="string">&#x27;Iloveyou&#x27;</span></span><br><span class="line">name=<span class="string">&quot;Zachary&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(love)</span><br><span class="line"><span class="built_in">print</span>(name)</span><br></pre></td></tr></table></figure><p>可以使用<code>type()</code>查看变量的数据类型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#大字符串</span></span><br><span class="line">s=<span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">比如这是一个很长的字符串</span></span><br><span class="line"><span class="string">可以换行的</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(s)</span><br></pre></td></tr></table></figure><p>字符串中使用引号可以嵌套使用，单双引号可以互相嵌套，但是不可以嵌套自己</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s=<span class="string">&quot;I&#x27;mZachary&quot;</span></span><br><span class="line"><span class="built_in">print</span>(s)</span><br></pre></td></tr></table></figure><p>关于转义字符</p><blockquote><p>\t 制表符<br>\r 换行符<br>\n 回车换行符<br>在字符串前面加一个<code>r</code>可以取消转义字符的效果</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#使用了转义字符的</span></span><br><span class="line">s=<span class="string">&quot;这是一段话\n分了两行&quot;</span></span><br><span class="line"><span class="built_in">print</span>(s)</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用r使转义字符失效</span></span><br><span class="line">s=<span class="string">r&quot;这是一段话\n没有分两行&quot;</span></span><br><span class="line"><span class="built_in">print</span>(s)</span><br></pre></td></tr></table></figure><h2 id="数字类型"><a href="#数字类型" class="headerlink" title="数字类型"></a>数字类型</h2><ul><li>整型 int</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var=<span class="number">520</span></span><br><span class="line"><span class="built_in">print</span>(var,<span class="built_in">type</span>(var))</span><br><span class="line">var=-<span class="number">100</span></span><br><span class="line"><span class="built_in">print</span>(var,<span class="built_in">type</span>(var))</span><br></pre></td></tr></table></figure><ul><li>浮点类型 float</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var=<span class="number">3.14</span></span><br><span class="line"><span class="built_in">print</span>(var,<span class="built_in">type</span>(var))</span><br></pre></td></tr></table></figure><ul><li>复数类型 complex</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var=<span class="number">5</span>+<span class="number">6j</span></span><br><span class="line"><span class="built_in">print</span>(var,<span class="built_in">type</span>(var))</span><br></pre></td></tr></table></figure><ul><li>布尔类型 bool(True\False)</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var=<span class="literal">True</span></span><br><span class="line"><span class="built_in">print</span>(var,<span class="built_in">type</span>(var))</span><br><span class="line">var=<span class="literal">False</span></span><br><span class="line"><span class="built_in">print</span>(var,<span class="built_in">type</span>(var))</span><br></pre></td></tr></table></figure><h2 id="list-列表类型"><a href="#list-列表类型" class="headerlink" title="list 列表类型"></a>list 列表类型</h2><p>列表用来表示一系列数据，例如需要记录一组数字或者其他数据，用中括号括起来<code>[]</code>,并且数据之间使用<code>,</code>分隔开</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">varlist=[<span class="number">192</span>,<span class="number">200</span>,<span class="number">43</span>]</span><br><span class="line"><span class="built_in">print</span>(varlist,<span class="built_in">type</span>(varlist))</span><br></pre></td></tr></table></figure><ul><li>列表中存储的数据可以是任意类型</li><li>列表中存储的每一组数据，称为元素</li><li>列表中存储的数据可以通过下标获取，列表的下标从 0 开始，倒着来最后一个是-1</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">varlist=[<span class="number">192</span>,<span class="number">200</span>,<span class="number">43</span>]</span><br><span class="line"><span class="built_in">print</span>(varlist[<span class="number">0</span>])</span><br></pre></td></tr></table></figure><ul><li>列表中元素的值，可以是一个 list，这种叫二维列表</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">varlist=[<span class="number">192</span>,[<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>],<span class="number">43</span>]</span><br><span class="line"><span class="built_in">print</span>(varlist,<span class="built_in">type</span>(varlist))</span><br><span class="line"><span class="built_in">print</span>(varlist[<span class="number">1</span>][<span class="number">0</span>])<span class="comment">#&#x27;a&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="tuple-元组类型"><a href="#tuple-元组类型" class="headerlink" title="tuple 元组类型"></a>tuple 元组类型</h2><p>元组与列表数据类型相似，使用多个数据内容时候也可以使用元组，用括号<code>()</code>括起来，但是区别在于 tuple 的元素不可改变</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vart=(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(vart,<span class="built_in">type</span>(vart))</span><br></pre></td></tr></table></figure><ul><li>注意，在定义元组时候，如果只有一个元素，需要加一个逗号<code>,</code></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vart=(<span class="string">&#x27;abc&#x27;</span>,)</span><br><span class="line"><span class="built_in">print</span>(vart)</span><br></pre></td></tr></table></figure><ul><li>列表使用中括号<code>[]</code>定义，元组使用括号<code>()</code>定义</li><li>列表中的值可以被改变，<strong>元组中的值不可以</strong></li></ul><h2 id="dict-字典类型"><a href="#dict-字典类型" class="headerlink" title="dict 字典类型"></a>dict 字典类型</h2><p>字典也是用于存储一组或多组数据，使用大括号<code>&#123;&#125;</code>括起来，使用的是键-值对的存储方式</p><ul><li>使用键-值对的方式进行定义，{ key:value }</li><li>键和值之间使用冒号<code>:</code>进行分隔，多组键-值对之间用逗号<code>,</code>分隔</li><li>键-必须是字符串或者数字类型，值-可以是任意类型</li><li>键-不可以重复，值-可以重复</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vard=&#123;</span><br><span class="line"><span class="string">&#x27;title&#x27;</span>:<span class="string">&#x27;&lt;&lt;无人生还&gt;&gt;&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;author&#x27;</span>:<span class="string">&#x27;阿加莎·克里斯蒂&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;price&#x27;</span>:<span class="string">&#x27;39.99&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print</span>(vard,<span class="built_in">type</span>(vard))</span><br><span class="line"><span class="comment">#通过索引键名来获得对应值，类似于list的方式</span></span><br><span class="line"><span class="built_in">print</span>(vard[<span class="string">&#x27;title&#x27;</span>])</span><br></pre></td></tr></table></figure><h2 id="set-集合类型"><a href="#set-集合类型" class="headerlink" title="set 集合类型"></a>set 集合类型</h2><p>集合是一种用于存储无重复的数据，使用大括号<code>&#123;&#125;</code>或者 set()方法来定义</p><ul><li>集合是一种无序且无重复的数据类型</li><li>使用 set 方法定义的时候，里面是字符串</li><li>当需要定义一个空集合的时候，只能使用 set 方法，因为<code>&#123;&#125;</code>是一个空字典</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">vars</span>=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">vars</span>,<span class="built_in">type</span>(<span class="built_in">vars</span>))<span class="comment">#&#123;1,2,3,4,&#x27;a&#x27;,&#x27;b&#x27;&#125;&lt;class&#x27;set&#x27;&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">vars</span>=<span class="built_in">set</span>(<span class="string">&quot;123&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">vars</span>)<span class="comment">#&#123;&#x27;1&#x27;,&#x27;3&#x27;,&#x27;2&#x27;&#125;</span></span><br><span class="line"><span class="built_in">vars</span>=<span class="built_in">set</span>()</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">vars</span>,<span class="built_in">type</span>(<span class="built_in">vars</span>))<span class="comment">#set()&lt;class&#x27;set&#x27;&gt;</span></span><br><span class="line">vard=&#123;&#125;</span><br><span class="line"><span class="built_in">print</span>(vard,<span class="built_in">type</span>(vard))<span class="comment">#&#123;&#125;&lt;class&#x27;dict&#x27;&gt;</span></span><br></pre></td></tr></table></figure><ul><li>可以给集合添加元素，使用 add 方法</li><li>可以删除集合中的元素，使用 discard 方法</li><li>也可以用<code>in</code>检查元素是否在集合中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">vars</span>=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;</span><br><span class="line"><span class="built_in">vars</span>.add(<span class="string">&#x27;c&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">vars</span>)<span class="comment">#&#123;1,2,3,4,&#x27;b&#x27;,&#x27;c&#x27;,&#x27;a&#x27;&#125;</span></span><br><span class="line"><span class="built_in">vars</span>.discard(<span class="number">4</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">vars</span>)<span class="comment">#&#123;1,2,3,&#x27;c&#x27;,&#x27;b&#x27;,&#x27;a&#x27;&#125;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="number">1</span>invars)<span class="comment">#True</span></span><br></pre></td></tr></table></figure><ul><li>集合主要用于运算，包括交集、并集、补集，对称集合</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>&#125;</span><br><span class="line">b=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(a&amp;b)<span class="comment">#交集&#123;1,2&#125;</span></span><br><span class="line"><span class="built_in">print</span>(a-b)<span class="comment">#差集&#123;8,9,3,7&#125;</span></span><br><span class="line"><span class="built_in">print</span>(a|b)<span class="comment">#并集&#123;1,2,3,7,8,9,&#x27;a&#x27;,&#x27;b&#x27;&#125;</span></span><br><span class="line"><span class="built_in">print</span>(a^b)<span class="comment">#对称集合&#123;3,&#x27;a&#x27;,7,8,9,&#x27;b&#x27;&#125;</span></span><br></pre></td></tr></table></figure><h1 id="基础数据类型转换"><a href="#基础数据类型转换" class="headerlink" title="基础数据类型转换"></a>基础数据类型转换</h1><p>数据类型总结<br>字符串 str<br>数字类型</p><ul><li>整型 int</li><li>浮点 float</li><li>复数 complex</li><li>布尔 bool</li></ul><p>列表 list<br>元组 tuple<br>字典 dict<br>集合 set</p><blockquote><p>可变数据类型：列表(append)、字典([‘key’])、集合(add)<br>不可变数据类型：字符串、数字、元组</p></blockquote><blockquote><p>容器类型数据：字符串、列表、元组、集合、字典<br>非容器类型数据：数字、布尔类型</p></blockquote><p>数据类型转换：把一个数据类型转化为另一个类型<br>为什么要进行数据类型转换：因为不同数据类型之间不能进行运算<br>数据转换的类型：</p><ul><li>自动类型转换<br>当两个不同类型的值进行运算时，结果会向更高的精度进行计算<br>True &#x3D;&#x3D;&#x3D;&gt; 整型 &#x3D;&#x3D;&#x3D;&gt; 浮点 &#x3D;&#x3D;&#x3D;&gt; 复数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#自动类型转换</span></span><br><span class="line">a=<span class="number">123</span></span><br><span class="line">b=<span class="literal">True</span></span><br><span class="line"><span class="built_in">print</span>(a+b)<span class="comment">#124</span></span><br><span class="line"><span class="built_in">print</span>(<span class="number">12.5</span>+<span class="number">22</span>)<span class="comment">#34.5</span></span><br><span class="line"><span class="built_in">print</span>(<span class="literal">True</span>+<span class="number">3.14</span>)<span class="comment">#4.140000000000001</span></span><br></pre></td></tr></table></figure><ul><li>强制类型转换<br>分别有：str()、int()、float()、bool()、list()、tuple()、dict()、set()</li></ul><ol><li>可以将所有类型转换为 str</li><li>字符串如果是纯数字可以转化为 int，其他类型容器不行</li><li>float 与 int 类似</li><li>bool 的强制转化，只要有非 0 值、非空值的内容、容器，结果都是 True</li></ol><h1 id="容器类型数据转换"><a href="#容器类型数据转换" class="headerlink" title="容器类型数据转换"></a>容器类型数据转换</h1><p>容器类型转换为</p><ul><li>list 列表</li></ul><blockquote><p>数字不能转换，因为 int 和 float 都是不可迭代的，非容器类型<br>字符串可以转换，会把字符串中的每一个字符当做一个元素<br>集合、元组、字典都可以转换，字典会只保留键</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#list列表</span></span><br><span class="line">n=<span class="string">&#x27;123&#x27;</span></span><br><span class="line">res=<span class="built_in">list</span>(n)</span><br><span class="line"><span class="built_in">print</span>(n,<span class="built_in">type</span>(n))<span class="comment">#123&lt;class&#x27;str&#x27;&gt;</span></span><br><span class="line"><span class="built_in">print</span>(res,<span class="built_in">type</span>(res))<span class="comment">#[&#x27;1&#x27;,&#x27;2&#x27;,&#x27;3&#x27;]&lt;class&#x27;list&#x27;&gt;</span></span><br><span class="line">n=&#123;<span class="string">&#x27;a&#x27;</span>:<span class="number">1</span>,<span class="string">&#x27;b&#x27;</span>:<span class="number">2</span>&#125;</span><br><span class="line">res=<span class="built_in">list</span>(n)</span><br><span class="line"><span class="built_in">print</span>(res)<span class="comment">#[&#x27;a&#x27;,&#x27;b&#x27;]</span></span><br></pre></td></tr></table></figure><ul><li>tuple 元组</li></ul><blockquote><p>数字不能转换，因为 int 和 float 都是不可迭代的，非容器类型<br>字符串可以转换，会把字符串中的每一个字符当做一个元素<br>集合、列表、字典也都可以转换，同上只保留键</p></blockquote><ul><li>set 集合</li></ul><blockquote><p>数字不能转换，因为 int 和 float 都是不可迭代的，非容器类型<br>字符串可以转换，会把字符串中的每一个字符当做一个元素，并且是无序的<br>列表、元组、字典也都可以转换，字典只保留键</p></blockquote><ul><li>dict 字典</li></ul><blockquote><p>数字不能转换，因为 int 和 float 都是不可迭代的，非容器类型<br>字符串不可以转换<br>列表转化的时候必须是嵌套的形式才可以，二级列表,并且每个元素是一个二元素的列表<br>元组转化的时候，同列表必须是二级元组，每一个元素是一个二元素的元组<br>集合不可以转为字典</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列表转化为字典</span></span><br><span class="line">n = [[<span class="string">&#x27;a&#x27;</span>, <span class="number">1</span>], [<span class="string">&#x27;b&#x27;</span>, <span class="number">2</span>]]</span><br><span class="line">res = <span class="built_in">dict</span>(n)</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># &#123;&#x27;a&#x27;: 1, &#x27;b&#x27;: 2&#125;</span></span><br><span class="line"><span class="comment"># 元组转化为字典</span></span><br><span class="line">n = ((<span class="string">&#x27;a&#x27;</span>, <span class="number">1</span>), (<span class="string">&#x27;b&#x27;</span>, <span class="number">2</span>))</span><br><span class="line">res = <span class="built_in">dict</span>(n)</span><br><span class="line"><span class="built_in">print</span>(res)  <span class="comment"># &#123;&#x27;a&#x27;: 1, &#x27;b&#x27;: 2&#125;</span></span><br></pre></td></tr></table></figure><h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><h2 id="算数运算符"><a href="#算数运算符" class="headerlink" title="算数运算符"></a>算数运算符</h2><ul><li><ul><li>加</li></ul></li><li><ul><li>减</li></ul></li><li><ul><li>乘</li></ul></li><li>&#x2F;   除</li><li>%   取余（取模）</li><li>&#x2F;&#x2F; 取整</li><li>** 乘方</li></ul><h2 id="字符运算符"><a href="#字符运算符" class="headerlink" title="字符运算符"></a>字符运算符</h2><ul><li>字符串与数字不能直接进行运算</li><li>字符串与字符串可以使用 <code>+</code> 进行拼接</li><li>字符串如果和数字使用 <code>*</code> 那就是重复数字次的字符串</li><li>在字符串中如果出现变量，可以使用<code>&#123;&#125;</code> 将变量括起来，然后再字符串前面加上<code>f</code></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">l = <span class="string">&quot;love&quot;</span></span><br><span class="line"><span class="built_in">print</span>(l * <span class="number">3</span>)  <span class="comment"># lovelovelove</span></span><br><span class="line"></span><br><span class="line">s = <span class="string">f&quot;I <span class="subst">&#123;l&#125;</span> you&quot;</span></span><br><span class="line"><span class="built_in">print</span>(s)  <span class="comment"># I love you</span></span><br></pre></td></tr></table></figure><h2 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h2><ul><li>&#x3D;   简单的赋值运算符</li><li>+&#x3D;   加法赋值运算符</li><li>-&#x3D;   减法赋值运算符</li><li>*&#x3D; 乘法赋值运算符</li><li>&#x2F;&#x3D;   除法赋值运算符</li><li>%&#x3D;   取余赋值运算符</li><li>**&#x3D; 乘方赋值运算符</li><li>&#x2F;&#x2F;&#x3D; 取整赋值运算符</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">12</span></span><br><span class="line">a += <span class="number">12</span></span><br><span class="line"><span class="built_in">print</span>(a) <span class="comment"># 24</span></span><br></pre></td></tr></table></figure><h2 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h2><ul><li>&#x3D;&#x3D; 比较两个值是否相等，返回 True、False</li><li>!&#x3D; 比较两个值是否不相等</li><li><blockquote><p>大于，返回 True，否则 False</p></blockquote></li><li>&lt;   小于，返回 True，否则 False</li><li><blockquote><p>&#x3D; 大于等于，返回 True，否则 False</p></blockquote></li><li>&lt;&#x3D; 小于等于，返回 True，否则 False</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">b = <span class="number">12</span></span><br><span class="line"><span class="built_in">print</span>(a != b) <span class="comment"># True</span></span><br></pre></td></tr></table></figure><h2 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h2><ul><li>and   与</li><li>or   或</li><li>not   非</li></ul><p>有一个贪心原则，当 and 的时候前一个是 False，后一个就不计算了，直接返回 False，当 or 的时候，如果前一个是 True 则返回 True，否则返回后一个的情况</p><h2 id="位运算"><a href="#位运算" class="headerlink" title="位运算"></a>位运算</h2><p>位运算是在二进制上使用的，可以使用 bin()方法将其他进制转换成二进制</p><ul><li>&amp; 按位与运算</li><li>| 按位或运算</li><li>^ 按位异或运算</li><li>~ 按位取反运算</li><li>&lt;&lt; 左移运算</li><li><blockquote><blockquote><p>右移运算</p></blockquote></blockquote></li></ul><h2 id="其他运算符"><a href="#其他运算符" class="headerlink" title="其他运算符"></a>其他运算符</h2><ul><li>成员运算符</li></ul><blockquote><p>in     该成员是否在该数据中<br>not in   该成员是否不在该数据中</p></blockquote><ul><li>身份运算符</li></ul><blockquote><p>is 检测两个标识符是否引自同一个对象<br>not is 两个标识符不是引自同一个对象</p></blockquote><p>id()可以用于获取对象地址</p><h1 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h1><p>流程控制有顺序、分支、循环等</p><h2 id="分支结构"><a href="#分支结构" class="headerlink" title="分支结构"></a>分支结构</h2><ul><li>在分支中常使用的是 if-else 语句</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> 条件<span class="number">1</span>:</span><br><span class="line">    code1</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    code2</span><br></pre></td></tr></table></figure><ul><li>该分支可以嵌套，重复等等叠加使用</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> 条件<span class="number">1</span>:</span><br><span class="line">    code1</span><br><span class="line"><span class="keyword">elif</span> 条件<span class="number">2</span>:</span><br><span class="line">    code2</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    code3</span><br></pre></td></tr></table></figure><ul><li>三元运算符</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">code1 <span class="keyword">if</span> 条件<span class="number">1</span> <span class="keyword">else</span> code2</span><br></pre></td></tr></table></figure><h2 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h2><h3 id="while-循环"><a href="#while-循环" class="headerlink" title="while 循环"></a>while 循环</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">num = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> num &lt; <span class="number">10</span>:</span><br><span class="line">    <span class="built_in">print</span>(num)</span><br><span class="line">    num += <span class="number">1</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;循环结束啦&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="for-循环"><a href="#for-循环" class="headerlink" title="for 循环"></a>for 循环</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br></pre></td></tr></table></figure><ul><li>break 语句</li></ul><blockquote><p>跳出循环</p></blockquote><ul><li>continue 语句</li></ul><blockquote><p>跳出当前循环，执行下一次循环</p></blockquote><ul><li>pass 语句</li></ul><blockquote><p>什么也不做</p></blockquote><ul><li>exit()和 quit()用于结束程序的，结束的是解释器的程序</li></ul><h1 id="打印矩形"><a href="#打印矩形" class="headerlink" title="打印矩形"></a>打印矩形</h1><p>打印出十行十列的符号</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;✨✨✨✨✨✨✨✨✨✨&quot;</span>)</span><br></pre></td></tr></table></figure><p>隔一行换一个颜色</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">    <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;❤ ❤ ❤ ❤ ❤ ❤ ❤ ❤ ❤ ❤&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;◇ ◇ ◇ ◇ ◇ ◇ ◇ ◇ ◇ ◇&quot;</span>)</span><br></pre></td></tr></table></figure><h1 id="打印乘法表"><a href="#打印乘法表" class="headerlink" title="打印乘法表"></a>打印乘法表</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">10</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,i+<span class="number">1</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;j&#125;</span>✖<span class="subst">&#123;i&#125;</span>=<span class="subst">&#123;i*j&#125;</span>&quot;</span>,end=<span class="string">&quot;\t&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>()</span><br></pre></td></tr></table></figure><h1 id="打印斐波那契数列"><a href="#打印斐波那契数列" class="headerlink" title="打印斐波那契数列"></a>打印斐波那契数列</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">num = <span class="number">10</span></span><br><span class="line"></span><br><span class="line">res_list = [<span class="number">0</span>, <span class="number">1</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(num-<span class="number">2</span>):</span><br><span class="line">    res_list.append(res_list[-<span class="number">1</span>]+res_list[-<span class="number">2</span>])</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(res_list)</span><br></pre></td></tr></table></figure><h1 id="百元买百鸡"><a href="#百元买百鸡" class="headerlink" title="百元买百鸡"></a>百元买百鸡</h1><p>一共有 100 元，买 100 只鸡<br>公鸡&#x3D;3 元<br>母鸡&#x3D;1 元<br>小鸡&#x3D;&#x3D;&#x3D;0.5 元<br>罗列出所有方案</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 公鸡 3</span></span><br><span class="line"><span class="comment"># 母鸡 1</span></span><br><span class="line"><span class="comment"># 小鸡 0.5</span></span><br><span class="line"></span><br><span class="line">money = <span class="number">100</span></span><br><span class="line">cock_price = <span class="number">3</span></span><br><span class="line">hen_price = <span class="number">1</span></span><br><span class="line">chick_price = <span class="number">0.5</span></span><br><span class="line">count = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">cock_max = money // cock_price</span><br><span class="line">hen_max = money // hen_price</span><br><span class="line">chick_max = <span class="built_in">int</span>(money // chick_price)</span><br><span class="line"><span class="built_in">print</span>(cock_max, hen_max, chick_max)  <span class="comment"># 33 100 200</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> cock_num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, cock_max + <span class="number">1</span>):</span><br><span class="line">    <span class="keyword">for</span> hen_num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, hen_max + <span class="number">1</span>):</span><br><span class="line">        money_res = money - cock_num * cock_price - hen_num * hen_price</span><br><span class="line">        <span class="keyword">if</span> money_res &lt;=<span class="number">0</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            chick_num = <span class="built_in">int</span>(money_res // chick_price)</span><br><span class="line">            <span class="keyword">if</span> cock_num+hen_num+chick_num == <span class="number">100</span>:</span><br><span class="line">                count += <span class="number">1</span></span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;方案<span class="subst">&#123;count&#125;</span>————100元可以购买:<span class="subst">&#123;cock_num&#125;</span>只公鸡，<span class="subst">&#123;hen_num&#125;</span>只母鸡，<span class="subst">&#123;chick_num&#125;</span>只小鸡&quot;</span>)</span><br></pre></td></tr></table></figure><h1 id="求-1000-以内的水仙花数"><a href="#求-1000-以内的水仙花数" class="headerlink" title="求 1000 以内的水仙花数"></a>求 1000 以内的水仙花数</h1><p>打印 1000 以内所有满足水仙花的数，“水仙花数”是指一个三位数其各位数字的立方和等于该数本身，例如 153 是“水仙花数”，因为：153 &#x3D; 1^3 + 5^3 + 3^3</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>, <span class="number">1000</span>):</span><br><span class="line">    a = num // <span class="number">100</span></span><br><span class="line">    b = num % <span class="number">100</span> // <span class="number">10</span></span><br><span class="line">    c = num % <span class="number">100</span> % <span class="number">10</span></span><br><span class="line">    <span class="keyword">if</span> a*a*a+b*b*b+c*c*c == num:</span><br><span class="line">        <span class="built_in">print</span>(num)</span><br></pre></td></tr></table></figure><h1 id="青蛙跳台阶问题"><a href="#青蛙跳台阶问题" class="headerlink" title="青蛙跳台阶问题"></a>青蛙跳台阶问题</h1><p>困难：一共有 n 个台阶，一只青蛙每次只能跳一阶或是两阶，那么一共有多少种跳到顶端的方案？例如 n&#x3D;2，那么一共有两种方案，一次性跳两阶或是每次跳一阶。</p><p>动态规划：其实，就是利用，上次得到的结果，给下一次作参考，下一次就能利用上次的结果快速得到结果，依次类推</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 方法一</span></span><br><span class="line">n = <span class="number">10</span></span><br><span class="line">a = <span class="number">1</span></span><br><span class="line">b = <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n-<span class="number">2</span>):</span><br><span class="line">    t = a</span><br><span class="line">    a = b</span><br><span class="line">    b += t</span><br><span class="line"><span class="built_in">print</span>(b)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法二</span></span><br><span class="line">num = <span class="number">10</span></span><br><span class="line"></span><br><span class="line">res_list = [<span class="number">1</span>, <span class="number">2</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(num-<span class="number">2</span>):</span><br><span class="line">    res_list.append(res_list[-<span class="number">1</span>]+res_list[-<span class="number">2</span>])</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(res_list[-<span class="number">1</span>])</span><br></pre></td></tr></table></figure><hr><blockquote><p>更新: 2024-08-01 16:25:27<br>原文: <a href="https://www.yuque.com/zacharyblock/cx2om6/slzd0tdgv6rm1nk1">https://www.yuque.com/zacharyblock/cx2om6/slzd0tdgv6rm1nk1</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Python基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
